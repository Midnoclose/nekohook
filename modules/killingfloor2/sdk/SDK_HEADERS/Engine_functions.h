/*
#############################################################################################
# Killing Floor 2 (1.8787) SDK
# Generated with TheFeckless UE3 SDK Generator v1.4_Beta-Rev.51
#
=========================================================================================
# # File: Engine_functions.h #
=========================================================================================
# # Credits: uNrEaL, Tamimego, SystemFiles, R00T88, _silencer, the1domo, K@N@VEL
# Thanks: HOOAH07, lowHertz
# Forums: www.uc-forum.com, www.gamedeception.net
#############################################################################################
*/

#ifdef _MSC_VER
#pragma pack(push, 0x4)
#endif

/*
#
=========================================================================================
# # Functions #
=========================================================================================
#
*/

// Function Engine.Actor.ActorTimeSince
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ActorTimeSince() {
    static UFunction* pFnActorTimeSince = NULL;

    if (!pFnActorTimeSince)
        pFnActorTimeSince = (UFunction*)UObject::GObjObjects()->Data[6193];

    AActor_execActorTimeSince_Parms ActorTimeSince_Parms;

    pFnActorTimeSince->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActorTimeSince, &ActorTimeSince_Parms, NULL);

    pFnActorTimeSince->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetActorTimeSeconds
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetActorTimeSeconds() {
    static UFunction* pFnGetActorTimeSeconds = NULL;

    if (!pFnGetActorTimeSeconds)
        pFnGetActorTimeSeconds = (UFunction*)UObject::GObjObjects()->Data[6191];

    AActor_execGetActorTimeSeconds_Parms GetActorTimeSeconds_Parms;

    pFnGetActorTimeSeconds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetActorTimeSeconds, &GetActorTimeSeconds_Parms,
                       NULL);

    pFnGetActorTimeSeconds->FunctionFlags |= 0x400;
};

// Function Engine.Actor.OnAnimNotifyParticleSystemSpawned
// [0x00020100]
// Parameters infos:

void AActor::OnAnimNotifyParticleSystemSpawned() {
    static UFunction* pFnOnAnimNotifyParticleSystemSpawned = NULL;

    if (!pFnOnAnimNotifyParticleSystemSpawned)
        pFnOnAnimNotifyParticleSystemSpawned =
            (UFunction*)UObject::GObjObjects()->Data[6188];

    AActor_execOnAnimNotifyParticleSystemSpawned_Parms
        OnAnimNotifyParticleSystemSpawned_Parms;

    this->ProcessEvent(pFnOnAnimNotifyParticleSystemSpawned,
                       &OnAnimNotifyParticleSystemSpawned_Parms, NULL);
};

// Function Engine.Actor.AdjustRadiusDamage
// [0x00420000]
// Parameters infos:

void AActor::AdjustRadiusDamage() {
    static UFunction* pFnAdjustRadiusDamage = NULL;

    if (!pFnAdjustRadiusDamage)
        pFnAdjustRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[6184];

    AActor_execAdjustRadiusDamage_Parms AdjustRadiusDamage_Parms;

    this->ProcessEvent(pFnAdjustRadiusDamage, &AdjustRadiusDamage_Parms, NULL);
};

// Function Engine.Actor.GetActorSpriteComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::GetActorSpriteComponent() {
    static UFunction* pFnGetActorSpriteComponent = NULL;

    if (!pFnGetActorSpriteComponent)
        pFnGetActorSpriteComponent =
            (UFunction*)UObject::GObjObjects()->Data[6182];

    AActor_execGetActorSpriteComponent_Parms GetActorSpriteComponent_Parms;

    pFnGetActorSpriteComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetActorSpriteComponent,
                       &GetActorSpriteComponent_Parms, NULL);

    pFnGetActorSpriteComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetActorMetrics
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::GetActorMetrics() {
    static UFunction* pFnGetActorMetrics = NULL;

    if (!pFnGetActorMetrics)
        pFnGetActorMetrics = (UFunction*)UObject::GObjObjects()->Data[6179];

    AActor_execGetActorMetrics_Parms GetActorMetrics_Parms;

    pFnGetActorMetrics->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetActorMetrics, &GetActorMetrics_Parms, NULL);

    pFnGetActorMetrics->FunctionFlags |= 0x400;
};

// Function Engine.Actor.OnMobileTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnMobileTouch() {
    static UFunction* pFnOnMobileTouch = NULL;

    if (!pFnOnMobileTouch)
        pFnOnMobileTouch = (UFunction*)UObject::GObjObjects()->Data[6175];

    AActor_eventOnMobileTouch_Parms OnMobileTouch_Parms;

    this->ProcessEvent(pFnOnMobileTouch, &OnMobileTouch_Parms, NULL);
};

// Function Engine.Actor.IsMobileTouchEnabled
// [0x00020002]
// Parameters infos:

void AActor::IsMobileTouchEnabled() {
    static UFunction* pFnIsMobileTouchEnabled = NULL;

    if (!pFnIsMobileTouchEnabled)
        pFnIsMobileTouchEnabled =
            (UFunction*)UObject::GObjObjects()->Data[6173];

    AActor_execIsMobileTouchEnabled_Parms IsMobileTouchEnabled_Parms;

    this->ProcessEvent(pFnIsMobileTouchEnabled, &IsMobileTouchEnabled_Parms,
                       NULL);
};

// Function Engine.Actor.ShouldBeHiddenBySHOW_NavigationNodes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::ShouldBeHiddenBySHOW_NavigationNodes() {
    static UFunction* pFnShouldBeHiddenBySHOW_NavigationNodes = NULL;

    if (!pFnShouldBeHiddenBySHOW_NavigationNodes)
        pFnShouldBeHiddenBySHOW_NavigationNodes =
            (UFunction*)UObject::GObjObjects()->Data[6171];

    AActor_execShouldBeHiddenBySHOW_NavigationNodes_Parms
        ShouldBeHiddenBySHOW_NavigationNodes_Parms;

    pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldBeHiddenBySHOW_NavigationNodes,
                       &ShouldBeHiddenBySHOW_NavigationNodes_Parms, NULL);

    pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= 0x400;
};

// Function Engine.Actor.WillOverlap
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::WillOverlap() {
    static UFunction* pFnWillOverlap = NULL;

    if (!pFnWillOverlap)
        pFnWillOverlap = (UFunction*)UObject::GObjObjects()->Data[6162];

    AActor_execWillOverlap_Parms WillOverlap_Parms;

    pFnWillOverlap->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWillOverlap, &WillOverlap_Parms, NULL);

    pFnWillOverlap->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetAvoidanceVector
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetAvoidanceVector() {
    static UFunction* pFnGetAvoidanceVector = NULL;

    if (!pFnGetAvoidanceVector)
        pFnGetAvoidanceVector = (UFunction*)UObject::GObjObjects()->Data[6152];

    AActor_execGetAvoidanceVector_Parms GetAvoidanceVector_Parms;

    pFnGetAvoidanceVector->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAvoidanceVector, &GetAvoidanceVector_Parms, NULL);

    pFnGetAvoidanceVector->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ReplicationEnded
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventReplicationEnded() {
    static UFunction* pFnReplicationEnded = NULL;

    if (!pFnReplicationEnded)
        pFnReplicationEnded = (UFunction*)UObject::GObjObjects()->Data[6151];

    AActor_eventReplicationEnded_Parms ReplicationEnded_Parms;

    this->ProcessEvent(pFnReplicationEnded, &ReplicationEnded_Parms, NULL);
};

// Function Engine.Actor.PostDemoRewind
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventPostDemoRewind() {
    static UFunction* pFnPostDemoRewind = NULL;

    if (!pFnPostDemoRewind)
        pFnPostDemoRewind = (UFunction*)UObject::GObjObjects()->Data[6150];

    AActor_eventPostDemoRewind_Parms PostDemoRewind_Parms;

    this->ProcessEvent(pFnPostDemoRewind, &PostDemoRewind_Parms, NULL);
};

// Function Engine.Actor.AnimTreeUpdated
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventAnimTreeUpdated() {
    static UFunction* pFnAnimTreeUpdated = NULL;

    if (!pFnAnimTreeUpdated)
        pFnAnimTreeUpdated = (UFunction*)UObject::GObjObjects()->Data[6148];

    AActor_eventAnimTreeUpdated_Parms AnimTreeUpdated_Parms;

    this->ProcessEvent(pFnAnimTreeUpdated, &AnimTreeUpdated_Parms, NULL);
};

// Function Engine.Actor.SupportsKismetModification
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SupportsKismetModification() {
    static UFunction* pFnSupportsKismetModification = NULL;

    if (!pFnSupportsKismetModification)
        pFnSupportsKismetModification =
            (UFunction*)UObject::GObjObjects()->Data[6144];

    AActor_execSupportsKismetModification_Parms
        SupportsKismetModification_Parms;

    pFnSupportsKismetModification->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSupportsKismetModification,
                       &SupportsKismetModification_Parms, NULL);

    pFnSupportsKismetModification->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetAnimTrailParticleSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::GetAnimTrailParticleSystem() {
    static UFunction* pFnGetAnimTrailParticleSystem = NULL;

    if (!pFnGetAnimTrailParticleSystem)
        pFnGetAnimTrailParticleSystem =
            (UFunction*)UObject::GObjObjects()->Data[6141];

    AActor_execGetAnimTrailParticleSystem_Parms
        GetAnimTrailParticleSystem_Parms;

    pFnGetAnimTrailParticleSystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAnimTrailParticleSystem,
                       &GetAnimTrailParticleSystem_Parms, NULL);

    pFnGetAnimTrailParticleSystem->FunctionFlags |= 0x400;
};

// Function Engine.Actor.TrailsNotifyEnd
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTrailsNotifyEnd() {
    static UFunction* pFnTrailsNotifyEnd = NULL;

    if (!pFnTrailsNotifyEnd)
        pFnTrailsNotifyEnd = (UFunction*)UObject::GObjObjects()->Data[6139];

    AActor_eventTrailsNotifyEnd_Parms TrailsNotifyEnd_Parms;

    this->ProcessEvent(pFnTrailsNotifyEnd, &TrailsNotifyEnd_Parms, NULL);
};

// Function Engine.Actor.TrailsNotifyTick
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTrailsNotifyTick() {
    static UFunction* pFnTrailsNotifyTick = NULL;

    if (!pFnTrailsNotifyTick)
        pFnTrailsNotifyTick = (UFunction*)UObject::GObjObjects()->Data[6137];

    AActor_eventTrailsNotifyTick_Parms TrailsNotifyTick_Parms;

    this->ProcessEvent(pFnTrailsNotifyTick, &TrailsNotifyTick_Parms, NULL);
};

// Function Engine.Actor.TrailsNotify
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTrailsNotify() {
    static UFunction* pFnTrailsNotify = NULL;

    if (!pFnTrailsNotify)
        pFnTrailsNotify = (UFunction*)UObject::GObjObjects()->Data[6135];

    AActor_eventTrailsNotify_Parms TrailsNotify_Parms;

    this->ProcessEvent(pFnTrailsNotify, &TrailsNotify_Parms, NULL);
};

// Function Engine.Actor.CreateForceField
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AActor::eventCreateForceField() {
    static UFunction* pFnCreateForceField = NULL;

    if (!pFnCreateForceField)
        pFnCreateForceField = (UFunction*)UObject::GObjObjects()->Data[6132];

    AActor_eventCreateForceField_Parms CreateForceField_Parms;

    this->ProcessEvent(pFnCreateForceField, &CreateForceField_Parms, NULL);
};

// Function Engine.Actor.PlayParticleEffect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AActor::eventPlayParticleEffect() {
    static UFunction* pFnPlayParticleEffect = NULL;

    if (!pFnPlayParticleEffect)
        pFnPlayParticleEffect = (UFunction*)UObject::GObjObjects()->Data[6129];

    AActor_eventPlayParticleEffect_Parms PlayParticleEffect_Parms;

    this->ProcessEvent(pFnPlayParticleEffect, &PlayParticleEffect_Parms, NULL);
};

// Function Engine.Actor.GetAimAdhesionExtent
// [0x00420102]
// Parameters infos:

void AActor::GetAimAdhesionExtent() {
    static UFunction* pFnGetAimAdhesionExtent = NULL;

    if (!pFnGetAimAdhesionExtent)
        pFnGetAimAdhesionExtent =
            (UFunction*)UObject::GObjObjects()->Data[6125];

    AActor_execGetAimAdhesionExtent_Parms GetAimAdhesionExtent_Parms;

    this->ProcessEvent(pFnGetAimAdhesionExtent, &GetAimAdhesionExtent_Parms,
                       NULL);
};

// Function Engine.Actor.GetAimFrictionExtent
// [0x00420102]
// Parameters infos:

void AActor::GetAimFrictionExtent() {
    static UFunction* pFnGetAimFrictionExtent = NULL;

    if (!pFnGetAimFrictionExtent)
        pFnGetAimFrictionExtent =
            (UFunction*)UObject::GObjObjects()->Data[6121];

    AActor_execGetAimFrictionExtent_Parms GetAimFrictionExtent_Parms;

    this->ProcessEvent(pFnGetAimFrictionExtent, &GetAimFrictionExtent_Parms,
                       NULL);
};

// Function Engine.Actor.IsInPersistentLevel
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::IsInPersistentLevel() {
    static UFunction* pFnIsInPersistentLevel = NULL;

    if (!pFnIsInPersistentLevel)
        pFnIsInPersistentLevel = (UFunction*)UObject::GObjObjects()->Data[6118];

    AActor_execIsInPersistentLevel_Parms IsInPersistentLevel_Parms;

    pFnIsInPersistentLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsInPersistentLevel, &IsInPersistentLevel_Parms,
                       NULL);

    pFnIsInPersistentLevel->FunctionFlags |= 0x400;
};

// Function Engine.Actor.OnRigidBodySpringOverextension
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnRigidBodySpringOverextension() {
    static UFunction* pFnOnRigidBodySpringOverextension = NULL;

    if (!pFnOnRigidBodySpringOverextension)
        pFnOnRigidBodySpringOverextension =
            (UFunction*)UObject::GObjObjects()->Data[6116];

    AActor_eventOnRigidBodySpringOverextension_Parms
        OnRigidBodySpringOverextension_Parms;

    this->ProcessEvent(pFnOnRigidBodySpringOverextension,
                       &OnRigidBodySpringOverextension_Parms, NULL);
};

// Function Engine.Actor.GetPackageGuid
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetPackageGuid() {
    static UFunction* pFnGetPackageGuid = NULL;

    if (!pFnGetPackageGuid)
        pFnGetPackageGuid = (UFunction*)UObject::GObjObjects()->Data[6113];

    AActor_execGetPackageGuid_Parms GetPackageGuid_Parms;

    pFnGetPackageGuid->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPackageGuid, &GetPackageGuid_Parms, NULL);

    pFnGetPackageGuid->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PostInitAnimTree
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventPostInitAnimTree() {
    static UFunction* pFnPostInitAnimTree = NULL;

    if (!pFnPostInitAnimTree)
        pFnPostInitAnimTree = (UFunction*)UObject::GObjObjects()->Data[6111];

    AActor_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;

    this->ProcessEvent(pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL);
};

// Function Engine.Actor.RootMotionExtracted
// [0x00420900] ( FUNC_Event )
// Parameters infos:

void AActor::eventRootMotionExtracted() {
    static UFunction* pFnRootMotionExtracted = NULL;

    if (!pFnRootMotionExtracted)
        pFnRootMotionExtracted = (UFunction*)UObject::GObjObjects()->Data[6108];

    AActor_eventRootMotionExtracted_Parms RootMotionExtracted_Parms;

    this->ProcessEvent(pFnRootMotionExtracted, &RootMotionExtracted_Parms,
                       NULL);
};

// Function Engine.Actor.RootMotionProcessed
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventRootMotionProcessed() {
    static UFunction* pFnRootMotionProcessed = NULL;

    if (!pFnRootMotionProcessed)
        pFnRootMotionProcessed = (UFunction*)UObject::GObjObjects()->Data[6106];

    AActor_eventRootMotionProcessed_Parms RootMotionProcessed_Parms;

    this->ProcessEvent(pFnRootMotionProcessed, &RootMotionProcessed_Parms,
                       NULL);
};

// Function Engine.Actor.RootMotionModeChanged
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventRootMotionModeChanged() {
    static UFunction* pFnRootMotionModeChanged = NULL;

    if (!pFnRootMotionModeChanged)
        pFnRootMotionModeChanged =
            (UFunction*)UObject::GObjObjects()->Data[6104];

    AActor_eventRootMotionModeChanged_Parms RootMotionModeChanged_Parms;

    this->ProcessEvent(pFnRootMotionModeChanged, &RootMotionModeChanged_Parms,
                       NULL);
};

// Function Engine.Actor.PostRenderFor
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventPostRenderFor() {
    static UFunction* pFnPostRenderFor = NULL;

    if (!pFnPostRenderFor)
        pFnPostRenderFor = (UFunction*)UObject::GObjObjects()->Data[6099];

    AActor_eventPostRenderFor_Parms PostRenderFor_Parms;

    this->ProcessEvent(pFnPostRenderFor, &PostRenderFor_Parms, NULL);
};

// Function Engine.Actor.NativePostRenderFor
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::NativePostRenderFor() {
    static UFunction* pFnNativePostRenderFor = NULL;

    if (!pFnNativePostRenderFor)
        pFnNativePostRenderFor = (UFunction*)UObject::GObjObjects()->Data[6094];

    AActor_execNativePostRenderFor_Parms NativePostRenderFor_Parms;

    pFnNativePostRenderFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnNativePostRenderFor, &NativePostRenderFor_Parms,
                       NULL);

    pFnNativePostRenderFor->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetHUDLocation
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::SetHUDLocation() {
    static UFunction* pFnSetHUDLocation = NULL;

    if (!pFnSetHUDLocation)
        pFnSetHUDLocation = (UFunction*)UObject::GObjObjects()->Data[6092];

    AActor_execSetHUDLocation_Parms SetHUDLocation_Parms;

    pFnSetHUDLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetHUDLocation, &SetHUDLocation_Parms, NULL);

    pFnSetHUDLocation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.OnRanOver
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnRanOver() {
    static UFunction* pFnOnRanOver = NULL;

    if (!pFnOnRanOver)
        pFnOnRanOver = (UFunction*)UObject::GObjObjects()->Data[6088];

    AActor_eventOnRanOver_Parms OnRanOver_Parms;

    this->ProcessEvent(pFnOnRanOver, &OnRanOver_Parms, NULL);
};

// Function Engine.Actor.RigidBodyCollision
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void AActor::eventRigidBodyCollision() {
    static UFunction* pFnRigidBodyCollision = NULL;

    if (!pFnRigidBodyCollision)
        pFnRigidBodyCollision = (UFunction*)UObject::GObjObjects()->Data[6083];

    AActor_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;

    this->ProcessEvent(pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL);
};

// Function Engine.Actor.InterpolationChanged
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventInterpolationChanged() {
    static UFunction* pFnInterpolationChanged = NULL;

    if (!pFnInterpolationChanged)
        pFnInterpolationChanged =
            (UFunction*)UObject::GObjObjects()->Data[6081];

    AActor_eventInterpolationChanged_Parms InterpolationChanged_Parms;

    this->ProcessEvent(pFnInterpolationChanged, &InterpolationChanged_Parms,
                       NULL);
};

// Function Engine.Actor.InterpolationFinished
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventInterpolationFinished() {
    static UFunction* pFnInterpolationFinished = NULL;

    if (!pFnInterpolationFinished)
        pFnInterpolationFinished =
            (UFunction*)UObject::GObjObjects()->Data[6079];

    AActor_eventInterpolationFinished_Parms InterpolationFinished_Parms;

    this->ProcessEvent(pFnInterpolationFinished, &InterpolationFinished_Parms,
                       NULL);
};

// Function Engine.Actor.InterpolationStarted
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventInterpolationStarted() {
    static UFunction* pFnInterpolationStarted = NULL;

    if (!pFnInterpolationStarted)
        pFnInterpolationStarted =
            (UFunction*)UObject::GObjObjects()->Data[6076];

    AActor_eventInterpolationStarted_Parms InterpolationStarted_Parms;

    this->ProcessEvent(pFnInterpolationStarted, &InterpolationStarted_Parms,
                       NULL);
};

// Function Engine.Actor.SpawnedByKismet
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventSpawnedByKismet() {
    static UFunction* pFnSpawnedByKismet = NULL;

    if (!pFnSpawnedByKismet)
        pFnSpawnedByKismet = (UFunction*)UObject::GObjObjects()->Data[6075];

    AActor_eventSpawnedByKismet_Parms SpawnedByKismet_Parms;

    this->ProcessEvent(pFnSpawnedByKismet, &SpawnedByKismet_Parms, NULL);
};

// Function Engine.Actor.GetTargetLocation
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void AActor::GetTargetLocation() {
    static UFunction* pFnGetTargetLocation = NULL;

    if (!pFnGetTargetLocation)
        pFnGetTargetLocation = (UFunction*)UObject::GObjObjects()->Data[6071];

    AActor_execGetTargetLocation_Parms GetTargetLocation_Parms;

    pFnGetTargetLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTargetLocation, &GetTargetLocation_Parms, NULL);

    pFnGetTargetLocation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.FindGoodEndView
// [0x00420102]
// Parameters infos:

void AActor::FindGoodEndView() {
    static UFunction* pFnFindGoodEndView = NULL;

    if (!pFnFindGoodEndView)
        pFnFindGoodEndView = (UFunction*)UObject::GObjObjects()->Data[6068];

    AActor_execFindGoodEndView_Parms FindGoodEndView_Parms;

    this->ProcessEvent(pFnFindGoodEndView, &FindGoodEndView_Parms, NULL);
};

// Function Engine.Actor.NotifyLocalPlayerTeamReceived
// [0x00020100]
// Parameters infos:

void AActor::NotifyLocalPlayerTeamReceived() {
    static UFunction* pFnNotifyLocalPlayerTeamReceived = NULL;

    if (!pFnNotifyLocalPlayerTeamReceived)
        pFnNotifyLocalPlayerTeamReceived =
            (UFunction*)UObject::GObjObjects()->Data[6067];

    AActor_execNotifyLocalPlayerTeamReceived_Parms
        NotifyLocalPlayerTeamReceived_Parms;

    this->ProcessEvent(pFnNotifyLocalPlayerTeamReceived,
                       &NotifyLocalPlayerTeamReceived_Parms, NULL);
};

// Function Engine.Actor.ScriptGetTeamNum
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AActor::eventScriptGetTeamNum() {
    static UFunction* pFnScriptGetTeamNum = NULL;

    if (!pFnScriptGetTeamNum)
        pFnScriptGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[6065];

    AActor_eventScriptGetTeamNum_Parms ScriptGetTeamNum_Parms;

    this->ProcessEvent(pFnScriptGetTeamNum, &ScriptGetTeamNum_Parms, NULL);
};

// Function Engine.Actor.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::GetTeamNum() {
    static UFunction* pFnGetTeamNum = NULL;

    if (!pFnGetTeamNum)
        pFnGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[6063];

    AActor_execGetTeamNum_Parms GetTeamNum_Parms;

    pFnGetTeamNum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTeamNum, &GetTeamNum_Parms, NULL);

    pFnGetTeamNum->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PawnBaseDied
// [0x00020000]
// Parameters infos:

void AActor::PawnBaseDied() {
    static UFunction* pFnPawnBaseDied = NULL;

    if (!pFnPawnBaseDied)
        pFnPawnBaseDied = (UFunction*)UObject::GObjObjects()->Data[6062];

    AActor_execPawnBaseDied_Parms PawnBaseDied_Parms;

    this->ProcessEvent(pFnPawnBaseDied, &PawnBaseDied_Parms, NULL);
};

// Function Engine.Actor.IsPlayerOwned
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::IsPlayerOwned() {
    static UFunction* pFnIsPlayerOwned = NULL;

    if (!pFnIsPlayerOwned)
        pFnIsPlayerOwned = (UFunction*)UObject::GObjObjects()->Data[6060];

    AActor_execIsPlayerOwned_Parms IsPlayerOwned_Parms;

    pFnIsPlayerOwned->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayerOwned, &IsPlayerOwned_Parms, NULL);

    pFnIsPlayerOwned->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetActorEyesViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void AActor::eventGetActorEyesViewPoint() {
    static UFunction* pFnGetActorEyesViewPoint = NULL;

    if (!pFnGetActorEyesViewPoint)
        pFnGetActorEyesViewPoint =
            (UFunction*)UObject::GObjObjects()->Data[6057];

    AActor_eventGetActorEyesViewPoint_Parms GetActorEyesViewPoint_Parms;

    this->ProcessEvent(pFnGetActorEyesViewPoint, &GetActorEyesViewPoint_Parms,
                       NULL);
};

// Function Engine.Actor.IsStationary
// [0x00020002]
// Parameters infos:

void AActor::IsStationary() {
    static UFunction* pFnIsStationary = NULL;

    if (!pFnIsStationary)
        pFnIsStationary = (UFunction*)UObject::GObjObjects()->Data[6055];

    AActor_execIsStationary_Parms IsStationary_Parms;

    this->ProcessEvent(pFnIsStationary, &IsStationary_Parms, NULL);
};

// Function Engine.Actor.GetActorFaceFXAsset
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventGetActorFaceFXAsset() {
    static UFunction* pFnGetActorFaceFXAsset = NULL;

    if (!pFnGetActorFaceFXAsset)
        pFnGetActorFaceFXAsset = (UFunction*)UObject::GObjObjects()->Data[6053];

    AActor_eventGetActorFaceFXAsset_Parms GetActorFaceFXAsset_Parms;

    this->ProcessEvent(pFnGetActorFaceFXAsset, &GetActorFaceFXAsset_Parms,
                       NULL);
};

// Function Engine.Actor.CanActorPlayFaceFXAnim
// [0x00020102]
// Parameters infos:

void AActor::CanActorPlayFaceFXAnim() {
    static UFunction* pFnCanActorPlayFaceFXAnim = NULL;

    if (!pFnCanActorPlayFaceFXAnim)
        pFnCanActorPlayFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[6051];

    AActor_execCanActorPlayFaceFXAnim_Parms CanActorPlayFaceFXAnim_Parms;

    this->ProcessEvent(pFnCanActorPlayFaceFXAnim, &CanActorPlayFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Actor.IsActorPlayingFaceFXAnim
// [0x00020102]
// Parameters infos:

void AActor::IsActorPlayingFaceFXAnim() {
    static UFunction* pFnIsActorPlayingFaceFXAnim = NULL;

    if (!pFnIsActorPlayingFaceFXAnim)
        pFnIsActorPlayingFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[6049];

    AActor_execIsActorPlayingFaceFXAnim_Parms IsActorPlayingFaceFXAnim_Parms;

    this->ProcessEvent(pFnIsActorPlayingFaceFXAnim,
                       &IsActorPlayingFaceFXAnim_Parms, NULL);
};

// Function Engine.Actor.TickSkelControl
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTickSkelControl() {
    static UFunction* pFnTickSkelControl = NULL;

    if (!pFnTickSkelControl)
        pFnTickSkelControl = (UFunction*)UObject::GObjObjects()->Data[6045];

    AActor_eventTickSkelControl_Parms TickSkelControl_Parms;

    this->ProcessEvent(pFnTickSkelControl, &TickSkelControl_Parms, NULL);
};

// Function Engine.Actor.SetSkelControlScale
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventSetSkelControlScale() {
    static UFunction* pFnSetSkelControlScale = NULL;

    if (!pFnSetSkelControlScale)
        pFnSetSkelControlScale = (UFunction*)UObject::GObjObjects()->Data[6042];

    AActor_eventSetSkelControlScale_Parms SetSkelControlScale_Parms;

    this->ProcessEvent(pFnSetSkelControlScale, &SetSkelControlScale_Parms,
                       NULL);
};

// Function Engine.Actor.SetMorphWeight
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventSetMorphWeight() {
    static UFunction* pFnSetMorphWeight = NULL;

    if (!pFnSetMorphWeight)
        pFnSetMorphWeight = (UFunction*)UObject::GObjObjects()->Data[6039];

    AActor_eventSetMorphWeight_Parms SetMorphWeight_Parms;

    this->ProcessEvent(pFnSetMorphWeight, &SetMorphWeight_Parms, NULL);
};

// Function Engine.Actor.StopActorFaceFXAnim
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventStopActorFaceFXAnim() {
    static UFunction* pFnStopActorFaceFXAnim = NULL;

    if (!pFnStopActorFaceFXAnim)
        pFnStopActorFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[6038];

    AActor_eventStopActorFaceFXAnim_Parms StopActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnStopActorFaceFXAnim, &StopActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Actor.PlayActorFaceFXAnim
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventPlayActorFaceFXAnim() {
    static UFunction* pFnPlayActorFaceFXAnim = NULL;

    if (!pFnPlayActorFaceFXAnim)
        pFnPlayActorFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[6031];

    AActor_eventPlayActorFaceFXAnim_Parms PlayActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnPlayActorFaceFXAnim, &PlayActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Actor.FinishAnimControl
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventFinishAnimControl() {
    static UFunction* pFnFinishAnimControl = NULL;

    if (!pFnFinishAnimControl)
        pFnFinishAnimControl = (UFunction*)UObject::GObjObjects()->Data[6029];

    AActor_eventFinishAnimControl_Parms FinishAnimControl_Parms;

    this->ProcessEvent(pFnFinishAnimControl, &FinishAnimControl_Parms, NULL);
};

// Function Engine.Actor.SetAnimPosition
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventSetAnimPosition() {
    static UFunction* pFnSetAnimPosition = NULL;

    if (!pFnSetAnimPosition)
        pFnSetAnimPosition = (UFunction*)UObject::GObjObjects()->Data[6021];

    AActor_eventSetAnimPosition_Parms SetAnimPosition_Parms;

    this->ProcessEvent(pFnSetAnimPosition, &SetAnimPosition_Parms, NULL);
};

// Function Engine.Actor.BeginAnimControl
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventBeginAnimControl() {
    static UFunction* pFnBeginAnimControl = NULL;

    if (!pFnBeginAnimControl)
        pFnBeginAnimControl = (UFunction*)UObject::GObjObjects()->Data[6019];

    AActor_eventBeginAnimControl_Parms BeginAnimControl_Parms;

    this->ProcessEvent(pFnBeginAnimControl, &BeginAnimControl_Parms, NULL);
};

// Function Engine.Actor.OnAnimPlay
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnAnimPlay() {
    static UFunction* pFnOnAnimPlay = NULL;

    if (!pFnOnAnimPlay)
        pFnOnAnimPlay = (UFunction*)UObject::GObjObjects()->Data[6017];

    AActor_eventOnAnimPlay_Parms OnAnimPlay_Parms;

    this->ProcessEvent(pFnOnAnimPlay, &OnAnimPlay_Parms, NULL);
};

// Function Engine.Actor.OnAnimEnd
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnAnimEnd() {
    static UFunction* pFnOnAnimEnd = NULL;

    if (!pFnOnAnimEnd)
        pFnOnAnimEnd = (UFunction*)UObject::GObjObjects()->Data[6013];

    AActor_eventOnAnimEnd_Parms OnAnimEnd_Parms;

    this->ProcessEvent(pFnOnAnimEnd, &OnAnimEnd_Parms, NULL);
};

// Function Engine.Actor.DoKismetAttachment
// [0x00820002]
// Parameters infos:

void AActor::DoKismetAttachment() {
    static UFunction* pFnDoKismetAttachment = NULL;

    if (!pFnDoKismetAttachment)
        pFnDoKismetAttachment = (UFunction*)UObject::GObjObjects()->Data[6005];

    AActor_execDoKismetAttachment_Parms DoKismetAttachment_Parms;

    this->ProcessEvent(pFnDoKismetAttachment, &DoKismetAttachment_Parms, NULL);
};

// Function Engine.Actor.OnAttachToActor
// [0x00020002]
// Parameters infos:

void AActor::OnAttachToActor() {
    static UFunction* pFnOnAttachToActor = NULL;

    if (!pFnOnAttachToActor)
        pFnOnAttachToActor = (UFunction*)UObject::GObjObjects()->Data[5998];

    AActor_execOnAttachToActor_Parms OnAttachToActor_Parms;

    this->ProcessEvent(pFnOnAttachToActor, &OnAttachToActor_Parms, NULL);
};

// Function Engine.Actor.OnToggleHidden
// [0x00020102]
// Parameters infos:

void AActor::OnToggleHidden() {
    static UFunction* pFnOnToggleHidden = NULL;

    if (!pFnOnToggleHidden)
        pFnOnToggleHidden = (UFunction*)UObject::GObjObjects()->Data[5993];

    AActor_execOnToggleHidden_Parms OnToggleHidden_Parms;

    this->ProcessEvent(pFnOnToggleHidden, &OnToggleHidden_Parms, NULL);
};

// Function Engine.Actor.OnChangeCollision
// [0x00020002]
// Parameters infos:

void AActor::OnChangeCollision() {
    static UFunction* pFnOnChangeCollision = NULL;

    if (!pFnOnChangeCollision)
        pFnOnChangeCollision = (UFunction*)UObject::GObjObjects()->Data[5991];

    AActor_execOnChangeCollision_Parms OnChangeCollision_Parms;

    this->ProcessEvent(pFnOnChangeCollision, &OnChangeCollision_Parms, NULL);
};

// Function Engine.Actor.OnSetPhysics
// [0x00020102]
// Parameters infos:

void AActor::OnSetPhysics() {
    static UFunction* pFnOnSetPhysics = NULL;

    if (!pFnOnSetPhysics)
        pFnOnSetPhysics = (UFunction*)UObject::GObjObjects()->Data[5989];

    AActor_execOnSetPhysics_Parms OnSetPhysics_Parms;

    this->ProcessEvent(pFnOnSetPhysics, &OnSetPhysics_Parms, NULL);
};

// Function Engine.Actor.OnSetBlockRigidBody
// [0x00020102]
// Parameters infos:

void AActor::OnSetBlockRigidBody() {
    static UFunction* pFnOnSetBlockRigidBody = NULL;

    if (!pFnOnSetBlockRigidBody)
        pFnOnSetBlockRigidBody = (UFunction*)UObject::GObjObjects()->Data[5987];

    AActor_execOnSetBlockRigidBody_Parms OnSetBlockRigidBody_Parms;

    this->ProcessEvent(pFnOnSetBlockRigidBody, &OnSetBlockRigidBody_Parms,
                       NULL);
};

// Function Engine.Actor.OnSetVelocity
// [0x00820102]
// Parameters infos:

void AActor::OnSetVelocity() {
    static UFunction* pFnOnSetVelocity = NULL;

    if (!pFnOnSetVelocity)
        pFnOnSetVelocity = (UFunction*)UObject::GObjObjects()->Data[5983];

    AActor_execOnSetVelocity_Parms OnSetVelocity_Parms;

    this->ProcessEvent(pFnOnSetVelocity, &OnSetVelocity_Parms, NULL);
};

// Function Engine.Actor.OnTeleport
// [0x00820102]
// Parameters infos:

void AActor::OnTeleport() {
    static UFunction* pFnOnTeleport = NULL;

    if (!pFnOnTeleport)
        pFnOnTeleport = (UFunction*)UObject::GObjObjects()->Data[5969];

    AActor_execOnTeleport_Parms OnTeleport_Parms;

    this->ProcessEvent(pFnOnTeleport, &OnTeleport_Parms, NULL);
};

// Function Engine.Actor.OnModifyHealth
// [0x00020102]
// Parameters infos:

void AActor::OnModifyHealth() {
    static UFunction* pFnOnModifyHealth = NULL;

    if (!pFnOnModifyHealth)
        pFnOnModifyHealth = (UFunction*)UObject::GObjObjects()->Data[5965];

    AActor_execOnModifyHealth_Parms OnModifyHealth_Parms;

    this->ProcessEvent(pFnOnModifyHealth, &OnModifyHealth_Parms, NULL);
};

// Function Engine.Actor.PrestreamTextures
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AActor::PrestreamTextures() {
    static UFunction* pFnPrestreamTextures = NULL;

    if (!pFnPrestreamTextures)
        pFnPrestreamTextures = (UFunction*)UObject::GObjObjects()->Data[5961];

    AActor_execPrestreamTextures_Parms PrestreamTextures_Parms;

    pFnPrestreamTextures->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPrestreamTextures, &PrestreamTextures_Parms, NULL);

    pFnPrestreamTextures->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ShutDown
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AActor::eventShutDown() {
    static UFunction* pFnShutDown = NULL;

    if (!pFnShutDown)
        pFnShutDown = (UFunction*)UObject::GObjObjects()->Data[5960];

    AActor_eventShutDown_Parms ShutDown_Parms;

    this->ProcessEvent(pFnShutDown, &ShutDown_Parms, NULL);
};

// Function Engine.Actor.SetNetUpdateTime
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetNetUpdateTime() {
    static UFunction* pFnSetNetUpdateTime = NULL;

    if (!pFnSetNetUpdateTime)
        pFnSetNetUpdateTime = (UFunction*)UObject::GObjObjects()->Data[5958];

    AActor_execSetNetUpdateTime_Parms SetNetUpdateTime_Parms;

    pFnSetNetUpdateTime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNetUpdateTime, &SetNetUpdateTime_Parms, NULL);

    pFnSetNetUpdateTime->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ForceNetRelevant
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AActor::eventForceNetRelevant() {
    static UFunction* pFnForceNetRelevant = NULL;

    if (!pFnForceNetRelevant)
        pFnForceNetRelevant = (UFunction*)UObject::GObjObjects()->Data[5957];

    AActor_eventForceNetRelevant_Parms ForceNetRelevant_Parms;

    this->ProcessEvent(pFnForceNetRelevant, &ForceNetRelevant_Parms, NULL);
};

// Function Engine.Actor.OnDestroy
// [0x00020102]
// Parameters infos:

void AActor::OnDestroy() {
    static UFunction* pFnOnDestroy = NULL;

    if (!pFnOnDestroy)
        pFnOnDestroy = (UFunction*)UObject::GObjObjects()->Data[5952];

    AActor_execOnDestroy_Parms OnDestroy_Parms;

    this->ProcessEvent(pFnOnDestroy, &OnDestroy_Parms, NULL);
};

// Function Engine.Actor.ClearLatentAction
// [0x00024103] ( FUNC_Final )
// Parameters infos:

void AActor::ClearLatentAction() {
    static UFunction* pFnClearLatentAction = NULL;

    if (!pFnClearLatentAction)
        pFnClearLatentAction = (UFunction*)UObject::GObjObjects()->Data[5947];

    AActor_execClearLatentAction_Parms ClearLatentAction_Parms;

    this->ProcessEvent(pFnClearLatentAction, &ClearLatentAction_Parms, NULL);
};

// Function Engine.Actor.FindEventsOfClass
// [0x00424103] ( FUNC_Final )
// Parameters infos:

void AActor::FindEventsOfClass() {
    static UFunction* pFnFindEventsOfClass = NULL;

    if (!pFnFindEventsOfClass)
        pFnFindEventsOfClass = (UFunction*)UObject::GObjObjects()->Data[5939];

    AActor_execFindEventsOfClass_Parms FindEventsOfClass_Parms;

    this->ProcessEvent(pFnFindEventsOfClass, &FindEventsOfClass_Parms, NULL);
};

// Function Engine.Actor.ActivateEventClass
// [0x00424103] ( FUNC_Final )
// Parameters infos:

void AActor::ActivateEventClass() {
    static UFunction* pFnActivateEventClass = NULL;

    if (!pFnActivateEventClass)
        pFnActivateEventClass = (UFunction*)UObject::GObjObjects()->Data[5927];

    AActor_execActivateEventClass_Parms ActivateEventClass_Parms;

    this->ProcessEvent(pFnActivateEventClass, &ActivateEventClass_Parms, NULL);
};

// Function Engine.Actor.TriggerGlobalEventClass
// [0x00024102]
// Parameters infos:

void AActor::TriggerGlobalEventClass() {
    static UFunction* pFnTriggerGlobalEventClass = NULL;

    if (!pFnTriggerGlobalEventClass)
        pFnTriggerGlobalEventClass =
            (UFunction*)UObject::GObjObjects()->Data[5915];

    AActor_execTriggerGlobalEventClass_Parms TriggerGlobalEventClass_Parms;

    this->ProcessEvent(pFnTriggerGlobalEventClass,
                       &TriggerGlobalEventClass_Parms, NULL);
};

// Function Engine.Actor.ReceivedNewEvent
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventReceivedNewEvent() {
    static UFunction* pFnReceivedNewEvent = NULL;

    if (!pFnReceivedNewEvent)
        pFnReceivedNewEvent = (UFunction*)UObject::GObjObjects()->Data[5913];

    AActor_eventReceivedNewEvent_Parms ReceivedNewEvent_Parms;

    this->ProcessEvent(pFnReceivedNewEvent, &ReceivedNewEvent_Parms, NULL);
};

// Function Engine.Actor.TriggerEventClass
// [0x00424102]
// Parameters infos:

void AActor::TriggerEventClass() {
    static UFunction* pFnTriggerEventClass = NULL;

    if (!pFnTriggerEventClass)
        pFnTriggerEventClass = (UFunction*)UObject::GObjObjects()->Data[5903];

    AActor_execTriggerEventClass_Parms TriggerEventClass_Parms;

    this->ProcessEvent(pFnTriggerEventClass, &TriggerEventClass_Parms, NULL);
};

// Function Engine.Actor.DebugMessagePlayer
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void AActor::eventDebugMessagePlayer() {
    static UFunction* pFnDebugMessagePlayer = NULL;

    if (!pFnDebugMessagePlayer)
        pFnDebugMessagePlayer = (UFunction*)UObject::GObjObjects()->Data[5900];

    AActor_eventDebugMessagePlayer_Parms DebugMessagePlayer_Parms;

    this->ProcessEvent(pFnDebugMessagePlayer, &DebugMessagePlayer_Parms, NULL);
};

// Function Engine.Actor.ImpactEffectIsRelevant
// [0x00824102]
// Parameters infos:

void AActor::ImpactEffectIsRelevant() {
    static UFunction* pFnImpactEffectIsRelevant = NULL;

    if (!pFnImpactEffectIsRelevant)
        pFnImpactEffectIsRelevant =
            (UFunction*)UObject::GObjObjects()->Data[5886];

    AActor_execImpactEffectIsRelevant_Parms ImpactEffectIsRelevant_Parms;

    this->ProcessEvent(pFnImpactEffectIsRelevant, &ImpactEffectIsRelevant_Parms,
                       NULL);
};

// Function Engine.Actor.ActorEffectIsRelevant
// [0x00824102]
// Parameters infos:

void AActor::ActorEffectIsRelevant() {
    static UFunction* pFnActorEffectIsRelevant = NULL;

    if (!pFnActorEffectIsRelevant)
        pFnActorEffectIsRelevant =
            (UFunction*)UObject::GObjObjects()->Data[5876];

    AActor_execActorEffectIsRelevant_Parms ActorEffectIsRelevant_Parms;

    this->ProcessEvent(pFnActorEffectIsRelevant, &ActorEffectIsRelevant_Parms,
                       NULL);
};

// Function Engine.Actor.EffectIsRelevant
// [0x00024102]
// Parameters infos:

void AActor::EffectIsRelevant() {
    static UFunction* pFnEffectIsRelevant = NULL;

    if (!pFnEffectIsRelevant)
        pFnEffectIsRelevant = (UFunction*)UObject::GObjObjects()->Data[5870];

    AActor_execEffectIsRelevant_Parms EffectIsRelevant_Parms;

    this->ProcessEvent(pFnEffectIsRelevant, &EffectIsRelevant_Parms, NULL);
};

// Function Engine.Actor.ApplyFluidSurfaceImpact
// [0x00020102]
// Parameters infos:

void AActor::ApplyFluidSurfaceImpact() {
    static UFunction* pFnApplyFluidSurfaceImpact = NULL;

    if (!pFnApplyFluidSurfaceImpact)
        pFnApplyFluidSurfaceImpact =
            (UFunction*)UObject::GObjObjects()->Data[5864];

    AActor_execApplyFluidSurfaceImpact_Parms ApplyFluidSurfaceImpact_Parms;

    this->ProcessEvent(pFnApplyFluidSurfaceImpact,
                       &ApplyFluidSurfaceImpact_Parms, NULL);
};

// Function Engine.Actor.CanSplash
// [0x00020102]
// Parameters infos:

void AActor::CanSplash() {
    static UFunction* pFnCanSplash = NULL;

    if (!pFnCanSplash)
        pFnCanSplash = (UFunction*)UObject::GObjObjects()->Data[5862];

    AActor_execCanSplash_Parms CanSplash_Parms;

    this->ProcessEvent(pFnCanSplash, &CanSplash_Parms, NULL);
};

// Function Engine.Actor.PlayTeleportEffect
// [0x00020000]
// Parameters infos:

void AActor::PlayTeleportEffect() {
    static UFunction* pFnPlayTeleportEffect = NULL;

    if (!pFnPlayTeleportEffect)
        pFnPlayTeleportEffect = (UFunction*)UObject::GObjObjects()->Data[5859];

    AActor_execPlayTeleportEffect_Parms PlayTeleportEffect_Parms;

    this->ProcessEvent(pFnPlayTeleportEffect, &PlayTeleportEffect_Parms, NULL);
};

// Function Engine.Actor.IsInPain
// [0x00020002]
// Parameters infos:

void AActor::IsInPain() {
    static UFunction* pFnIsInPain = NULL;

    if (!pFnIsInPain)
        pFnIsInPain = (UFunction*)UObject::GObjObjects()->Data[5856];

    AActor_execIsInPain_Parms IsInPain_Parms;

    this->ProcessEvent(pFnIsInPain, &IsInPain_Parms, NULL);
};

// Function Engine.Actor.Reset
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventReset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[5855];

    AActor_eventReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.Actor.GetFaceFXAudioComponent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AActor::eventGetFaceFXAudioComponent() {
    static UFunction* pFnGetFaceFXAudioComponent = NULL;

    if (!pFnGetFaceFXAudioComponent)
        pFnGetFaceFXAudioComponent =
            (UFunction*)UObject::GObjObjects()->Data[5853];

    AActor_eventGetFaceFXAudioComponent_Parms GetFaceFXAudioComponent_Parms;

    this->ProcessEvent(pFnGetFaceFXAudioComponent,
                       &GetFaceFXAudioComponent_Parms, NULL);
};

// Function Engine.Actor.ModifyHearSoundComponent
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventModifyHearSoundComponent() {
    static UFunction* pFnModifyHearSoundComponent = NULL;

    if (!pFnModifyHearSoundComponent)
        pFnModifyHearSoundComponent =
            (UFunction*)UObject::GObjObjects()->Data[5851];

    AActor_eventModifyHearSoundComponent_Parms ModifyHearSoundComponent_Parms;

    this->ProcessEvent(pFnModifyHearSoundComponent,
                       &ModifyHearSoundComponent_Parms, NULL);
};

// Function Engine.Actor.GetPhysicsName
// [0x00020102]
// Parameters infos:

void AActor::GetPhysicsName() {
    static UFunction* pFnGetPhysicsName = NULL;

    if (!pFnGetPhysicsName)
        pFnGetPhysicsName = (UFunction*)UObject::GObjObjects()->Data[5849];

    AActor_execGetPhysicsName_Parms GetPhysicsName_Parms;

    this->ProcessEvent(pFnGetPhysicsName, &GetPhysicsName_Parms, NULL);
};

// Function Engine.Actor.DisplayDebug
// [0x00420102]
// Parameters infos:

void AActor::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[5840];

    AActor_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Actor.GetDebugName
// [0x00020002]
// Parameters infos:

void AActor::GetDebugName() {
    static UFunction* pFnGetDebugName = NULL;

    if (!pFnGetDebugName)
        pFnGetDebugName = (UFunction*)UObject::GObjObjects()->Data[5838];

    AActor_execGetDebugName_Parms GetDebugName_Parms;

    this->ProcessEvent(pFnGetDebugName, &GetDebugName_Parms, NULL);
};

// Function Engine.Actor.MatchStarting
// [0x00020000]
// Parameters infos:

void AActor::MatchStarting() {
    static UFunction* pFnMatchStarting = NULL;

    if (!pFnMatchStarting)
        pFnMatchStarting = (UFunction*)UObject::GObjObjects()->Data[5837];

    AActor_execMatchStarting_Parms MatchStarting_Parms;

    this->ProcessEvent(pFnMatchStarting, &MatchStarting_Parms, NULL);
};

// Function Engine.Actor.GetLocalString
// [0x00026002]
// Parameters infos:

void AActor::GetLocalString() {
    static UFunction* pFnGetLocalString = NULL;

    if (!pFnGetLocalString)
        pFnGetLocalString = (UFunction*)UObject::GObjObjects()->Data[5832];

    AActor_execGetLocalString_Parms GetLocalString_Parms;

    this->ProcessEvent(pFnGetLocalString, &GetLocalString_Parms, NULL);
};

// Function Engine.Actor.ReplaceText
// [0x00422002]
// Parameters infos:

void AActor::ReplaceText() {
    static UFunction* pFnReplaceText = NULL;

    if (!pFnReplaceText)
        pFnReplaceText = (UFunction*)UObject::GObjObjects()->Data[5826];

    AActor_execReplaceText_Parms ReplaceText_Parms;

    this->ProcessEvent(pFnReplaceText, &ReplaceText_Parms, NULL);
};

// Function Engine.Actor.GetHumanReadableName
// [0x00020102]
// Parameters infos:

void AActor::GetHumanReadableName() {
    static UFunction* pFnGetHumanReadableName = NULL;

    if (!pFnGetHumanReadableName)
        pFnGetHumanReadableName =
            (UFunction*)UObject::GObjObjects()->Data[5824];

    AActor_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

    this->ProcessEvent(pFnGetHumanReadableName, &GetHumanReadableName_Parms,
                       NULL);
};

// Function Engine.Actor.GetItemName
// [0x00020102]
// Parameters infos:

void AActor::GetItemName() {
    static UFunction* pFnGetItemName = NULL;

    if (!pFnGetItemName)
        pFnGetItemName = (UFunction*)UObject::GObjObjects()->Data[5820];

    AActor_execGetItemName_Parms GetItemName_Parms;

    this->ProcessEvent(pFnGetItemName, &GetItemName_Parms, NULL);
};

// Function Engine.Actor.CalcCamera
// [0x00C20102]
// Parameters infos:

void AActor::CalcCamera() {
    static UFunction* pFnCalcCamera = NULL;

    if (!pFnCalcCamera)
        pFnCalcCamera = (UFunction*)UObject::GObjObjects()->Data[5811];

    AActor_execCalcCamera_Parms CalcCamera_Parms;

    this->ProcessEvent(pFnCalcCamera, &CalcCamera_Parms, NULL);
};

// Function Engine.Actor.EndViewTarget
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventEndViewTarget() {
    static UFunction* pFnEndViewTarget = NULL;

    if (!pFnEndViewTarget)
        pFnEndViewTarget = (UFunction*)UObject::GObjObjects()->Data[5809];

    AActor_eventEndViewTarget_Parms EndViewTarget_Parms;

    this->ProcessEvent(pFnEndViewTarget, &EndViewTarget_Parms, NULL);
};

// Function Engine.Actor.BecomeViewTarget
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventBecomeViewTarget() {
    static UFunction* pFnBecomeViewTarget = NULL;

    if (!pFnBecomeViewTarget)
        pFnBecomeViewTarget = (UFunction*)UObject::GObjObjects()->Data[5807];

    AActor_eventBecomeViewTarget_Parms BecomeViewTarget_Parms;

    this->ProcessEvent(pFnBecomeViewTarget, &BecomeViewTarget_Parms, NULL);
};

// Function Engine.Actor.CheckForErrors
// [0x00020000]
// Parameters infos:

void AActor::CheckForErrors() {
    static UFunction* pFnCheckForErrors = NULL;

    if (!pFnCheckForErrors)
        pFnCheckForErrors = (UFunction*)UObject::GObjObjects()->Data[5805];

    AActor_execCheckForErrors_Parms CheckForErrors_Parms;

    this->ProcessEvent(pFnCheckForErrors, &CheckForErrors_Parms, NULL);
};

// Function Engine.Actor.DebugFreezeGame
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AActor::eventDebugFreezeGame() {
    static UFunction* pFnDebugFreezeGame = NULL;

    if (!pFnDebugFreezeGame)
        pFnDebugFreezeGame = (UFunction*)UObject::GObjObjects()->Data[5802];

    AActor_eventDebugFreezeGame_Parms DebugFreezeGame_Parms;

    this->ProcessEvent(pFnDebugFreezeGame, &DebugFreezeGame_Parms, NULL);
};

// Function Engine.Actor.GetGravityZ
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::GetGravityZ() {
    static UFunction* pFnGetGravityZ = NULL;

    if (!pFnGetGravityZ)
        pFnGetGravityZ = (UFunction*)UObject::GObjObjects()->Data[5800];

    AActor_execGetGravityZ_Parms GetGravityZ_Parms;

    pFnGetGravityZ->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGravityZ, &GetGravityZ_Parms, NULL);

    pFnGetGravityZ->FunctionFlags |= 0x400;
};

// Function Engine.Actor.CheckHitInfo
// [0x00C20103] ( FUNC_Final )
// Parameters infos:

void AActor::CheckHitInfo() {
    static UFunction* pFnCheckHitInfo = NULL;

    if (!pFnCheckHitInfo)
        pFnCheckHitInfo = (UFunction*)UObject::GObjObjects()->Data[5790];

    AActor_execCheckHitInfo_Parms CheckHitInfo_Parms;

    this->ProcessEvent(pFnCheckHitInfo, &CheckHitInfo_Parms, NULL);
};

// Function Engine.Actor.TakeRadiusDamage
// [0x00824102]
// Parameters infos:

void AActor::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[5774];

    AActor_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);
};

// Function Engine.Actor.HealDamage
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AActor::eventHealDamage() {
    static UFunction* pFnHealDamage = NULL;

    if (!pFnHealDamage)
        pFnHealDamage = (UFunction*)UObject::GObjObjects()->Data[5767];

    AActor_eventHealDamage_Parms HealDamage_Parms;

    this->ProcessEvent(pFnHealDamage, &HealDamage_Parms, NULL);
};

// Function Engine.Actor.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AActor::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[5757];

    AActor_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.Actor.KilledBy
// [0x00020000]
// Parameters infos:

void AActor::KilledBy() {
    static UFunction* pFnKilledBy = NULL;

    if (!pFnKilledBy)
        pFnKilledBy = (UFunction*)UObject::GObjObjects()->Data[5755];

    AActor_execKilledBy_Parms KilledBy_Parms;

    this->ProcessEvent(pFnKilledBy, &KilledBy_Parms, NULL);
};

// Function Engine.Actor.HurtRadius
// [0x00824102]
// Parameters infos:

void AActor::HurtRadius() {
    static UFunction* pFnHurtRadius = NULL;

    if (!pFnHurtRadius)
        pFnHurtRadius = (UFunction*)UObject::GObjObjects()->Data[5740];

    AActor_execHurtRadius_Parms HurtRadius_Parms;

    this->ProcessEvent(pFnHurtRadius, &HurtRadius_Parms, NULL);
};

// Function Engine.Actor.StopsProjectile
// [0x00020102]
// Parameters infos:

void AActor::StopsProjectile() {
    static UFunction* pFnStopsProjectile = NULL;

    if (!pFnStopsProjectile)
        pFnStopsProjectile = (UFunction*)UObject::GObjObjects()->Data[5737];

    AActor_execStopsProjectile_Parms StopsProjectile_Parms;

    this->ProcessEvent(pFnStopsProjectile, &StopsProjectile_Parms, NULL);
};

// Function Engine.Actor.NotifySkelControlBeyondLimit
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventNotifySkelControlBeyondLimit() {
    static UFunction* pFnNotifySkelControlBeyondLimit = NULL;

    if (!pFnNotifySkelControlBeyondLimit)
        pFnNotifySkelControlBeyondLimit =
            (UFunction*)UObject::GObjObjects()->Data[5735];

    AActor_eventNotifySkelControlBeyondLimit_Parms
        NotifySkelControlBeyondLimit_Parms;

    this->ProcessEvent(pFnNotifySkelControlBeyondLimit,
                       &NotifySkelControlBeyondLimit_Parms, NULL);
};

// Function Engine.Actor.ConstraintBrokenNotify
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventConstraintBrokenNotify() {
    static UFunction* pFnConstraintBrokenNotify = NULL;

    if (!pFnConstraintBrokenNotify)
        pFnConstraintBrokenNotify =
            (UFunction*)UObject::GObjObjects()->Data[5731];

    AActor_eventConstraintBrokenNotify_Parms ConstraintBrokenNotify_Parms;

    this->ProcessEvent(pFnConstraintBrokenNotify, &ConstraintBrokenNotify_Parms,
                       NULL);
};

// Function Engine.Actor.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AActor::eventSetInitialState() {
    static UFunction* pFnSetInitialState = NULL;

    if (!pFnSetInitialState)
        pFnSetInitialState = (UFunction*)UObject::GObjObjects()->Data[5730];

    AActor_eventSetInitialState_Parms SetInitialState_Parms;

    this->ProcessEvent(pFnSetInitialState, &SetInitialState_Parms, NULL);
};

// Function Engine.Actor.PostBeginPlay
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[5729];

    AActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Actor.BroadcastLocalizedTeamMessage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AActor::eventBroadcastLocalizedTeamMessage() {
    static UFunction* pFnBroadcastLocalizedTeamMessage = NULL;

    if (!pFnBroadcastLocalizedTeamMessage)
        pFnBroadcastLocalizedTeamMessage =
            (UFunction*)UObject::GObjObjects()->Data[5722];

    AActor_eventBroadcastLocalizedTeamMessage_Parms
        BroadcastLocalizedTeamMessage_Parms;

    this->ProcessEvent(pFnBroadcastLocalizedTeamMessage,
                       &BroadcastLocalizedTeamMessage_Parms, NULL);
};

// Function Engine.Actor.BroadcastLocalizedMessage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AActor::eventBroadcastLocalizedMessage() {
    static UFunction* pFnBroadcastLocalizedMessage = NULL;

    if (!pFnBroadcastLocalizedMessage)
        pFnBroadcastLocalizedMessage =
            (UFunction*)UObject::GObjObjects()->Data[5716];

    AActor_eventBroadcastLocalizedMessage_Parms BroadcastLocalizedMessage_Parms;

    this->ProcessEvent(pFnBroadcastLocalizedMessage,
                       &BroadcastLocalizedMessage_Parms, NULL);
};

// Function Engine.Actor.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AActor::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[5715];

    AActor_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.Actor.GetALocalPlayerController
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetALocalPlayerController() {
    static UFunction* pFnGetALocalPlayerController = NULL;

    if (!pFnGetALocalPlayerController)
        pFnGetALocalPlayerController =
            (UFunction*)UObject::GObjObjects()->Data[5713];

    AActor_execGetALocalPlayerController_Parms GetALocalPlayerController_Parms;

    pFnGetALocalPlayerController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetALocalPlayerController,
                       &GetALocalPlayerController_Parms, NULL);

    pFnGetALocalPlayerController->FunctionFlags |= 0x400;
};

// Function Engine.Actor.LocalPlayerControllers
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::LocalPlayerControllers() {
    static UFunction* pFnLocalPlayerControllers = NULL;

    if (!pFnLocalPlayerControllers)
        pFnLocalPlayerControllers =
            (UFunction*)UObject::GObjObjects()->Data[5710];

    AActor_execLocalPlayerControllers_Parms LocalPlayerControllers_Parms;

    pFnLocalPlayerControllers->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLocalPlayerControllers, &LocalPlayerControllers_Parms,
                       NULL);

    pFnLocalPlayerControllers->FunctionFlags |= 0x400;
};

// Function Engine.Actor.AllOwnedComponents
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::AllOwnedComponents() {
    static UFunction* pFnAllOwnedComponents = NULL;

    if (!pFnAllOwnedComponents)
        pFnAllOwnedComponents = (UFunction*)UObject::GObjObjects()->Data[5707];

    AActor_execAllOwnedComponents_Parms AllOwnedComponents_Parms;

    pFnAllOwnedComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllOwnedComponents, &AllOwnedComponents_Parms, NULL);

    pFnAllOwnedComponents->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ComponentList
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ComponentList() {
    static UFunction* pFnComponentList = NULL;

    if (!pFnComponentList)
        pFnComponentList = (UFunction*)UObject::GObjObjects()->Data[5704];

    AActor_execComponentList_Parms ComponentList_Parms;

    pFnComponentList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnComponentList, &ComponentList_Parms, NULL);

    pFnComponentList->FunctionFlags |= 0x400;
};

// Function Engine.Actor.OverlappingActors
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::OverlappingActors() {
    static UFunction* pFnOverlappingActors = NULL;

    if (!pFnOverlappingActors)
        pFnOverlappingActors = (UFunction*)UObject::GObjObjects()->Data[5698];

    AActor_execOverlappingActors_Parms OverlappingActors_Parms;

    pFnOverlappingActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOverlappingActors, &OverlappingActors_Parms, NULL);

    pFnOverlappingActors->FunctionFlags |= 0x400;
};

// Function Engine.Actor.CollidingActors
// [0x00424405] ( FUNC_Final | FUNC_Native ) iNative [0x0141]
// Parameters infos:

void AActor::CollidingActors() {
    static UFunction* pFnCollidingActors = NULL;

    if (!pFnCollidingActors)
        pFnCollidingActors = (UFunction*)UObject::GObjObjects()->Data[5690];

    AActor_execCollidingActors_Parms CollidingActors_Parms;

    unsigned short NativeIndex = pFnCollidingActors->iNative;
    pFnCollidingActors->iNative = 0;

    pFnCollidingActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCollidingActors, &CollidingActors_Parms, NULL);

    pFnCollidingActors->FunctionFlags |= 0x400;

    pFnCollidingActors->iNative = NativeIndex;
};

// Function Engine.Actor.VisibleCollidingActors
// [0x00424405] ( FUNC_Final | FUNC_Native ) iNative [0x0138]
// Parameters infos:

void AActor::VisibleCollidingActors() {
    static UFunction* pFnVisibleCollidingActors = NULL;

    if (!pFnVisibleCollidingActors)
        pFnVisibleCollidingActors =
            (UFunction*)UObject::GObjObjects()->Data[5680];

    AActor_execVisibleCollidingActors_Parms VisibleCollidingActors_Parms;

    unsigned short NativeIndex = pFnVisibleCollidingActors->iNative;
    pFnVisibleCollidingActors->iNative = 0;

    pFnVisibleCollidingActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnVisibleCollidingActors, &VisibleCollidingActors_Parms,
                       NULL);

    pFnVisibleCollidingActors->FunctionFlags |= 0x400;

    pFnVisibleCollidingActors->iNative = NativeIndex;
};

// Function Engine.Actor.VisibleActors
// [0x00424405] ( FUNC_Final | FUNC_Native ) iNative [0x0137]
// Parameters infos:

void AActor::VisibleActors() {
    static UFunction* pFnVisibleActors = NULL;

    if (!pFnVisibleActors)
        pFnVisibleActors = (UFunction*)UObject::GObjObjects()->Data[5675];

    AActor_execVisibleActors_Parms VisibleActors_Parms;

    unsigned short NativeIndex = pFnVisibleActors->iNative;
    pFnVisibleActors->iNative = 0;

    pFnVisibleActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnVisibleActors, &VisibleActors_Parms, NULL);

    pFnVisibleActors->FunctionFlags |= 0x400;

    pFnVisibleActors->iNative = NativeIndex;
};

// Function Engine.Actor.TraceActors
// [0x00424405] ( FUNC_Final | FUNC_Native ) iNative [0x0135]
// Parameters infos:

void AActor::TraceActors() {
    static UFunction* pFnTraceActors = NULL;

    if (!pFnTraceActors)
        pFnTraceActors = (UFunction*)UObject::GObjObjects()->Data[5665];

    AActor_execTraceActors_Parms TraceActors_Parms;

    unsigned short NativeIndex = pFnTraceActors->iNative;
    pFnTraceActors->iNative = 0;

    pFnTraceActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTraceActors, &TraceActors_Parms, NULL);

    pFnTraceActors->FunctionFlags |= 0x400;

    pFnTraceActors->iNative = NativeIndex;
};

// Function Engine.Actor.TouchingActors
// [0x00420405] ( FUNC_Final | FUNC_Native ) iNative [0x0133]
// Parameters infos:

void AActor::TouchingActors() {
    static UFunction* pFnTouchingActors = NULL;

    if (!pFnTouchingActors)
        pFnTouchingActors = (UFunction*)UObject::GObjObjects()->Data[5662];

    AActor_execTouchingActors_Parms TouchingActors_Parms;

    unsigned short NativeIndex = pFnTouchingActors->iNative;
    pFnTouchingActors->iNative = 0;

    pFnTouchingActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTouchingActors, &TouchingActors_Parms, NULL);

    pFnTouchingActors->FunctionFlags |= 0x400;

    pFnTouchingActors->iNative = NativeIndex;
};

// Function Engine.Actor.BasedActors
// [0x00420405] ( FUNC_Final | FUNC_Native ) iNative [0x0132]
// Parameters infos:

void AActor::BasedActors() {
    static UFunction* pFnBasedActors = NULL;

    if (!pFnBasedActors)
        pFnBasedActors = (UFunction*)UObject::GObjObjects()->Data[5659];

    AActor_execBasedActors_Parms BasedActors_Parms;

    unsigned short NativeIndex = pFnBasedActors->iNative;
    pFnBasedActors->iNative = 0;

    pFnBasedActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBasedActors, &BasedActors_Parms, NULL);

    pFnBasedActors->FunctionFlags |= 0x400;

    pFnBasedActors->iNative = NativeIndex;
};

// Function Engine.Actor.ChildActors
// [0x00420405] ( FUNC_Final | FUNC_Native ) iNative [0x0131]
// Parameters infos:

void AActor::ChildActors() {
    static UFunction* pFnChildActors = NULL;

    if (!pFnChildActors)
        pFnChildActors = (UFunction*)UObject::GObjObjects()->Data[5656];

    AActor_execChildActors_Parms ChildActors_Parms;

    unsigned short NativeIndex = pFnChildActors->iNative;
    pFnChildActors->iNative = 0;

    pFnChildActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnChildActors, &ChildActors_Parms, NULL);

    pFnChildActors->FunctionFlags |= 0x400;

    pFnChildActors->iNative = NativeIndex;
};

// Function Engine.Actor.DynamicActors
// [0x00424405] ( FUNC_Final | FUNC_Native ) iNative [0x0139]
// Parameters infos:

void AActor::DynamicActors() {
    static UFunction* pFnDynamicActors = NULL;

    if (!pFnDynamicActors)
        pFnDynamicActors = (UFunction*)UObject::GObjObjects()->Data[5652];

    AActor_execDynamicActors_Parms DynamicActors_Parms;

    unsigned short NativeIndex = pFnDynamicActors->iNative;
    pFnDynamicActors->iNative = 0;

    pFnDynamicActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDynamicActors, &DynamicActors_Parms, NULL);

    pFnDynamicActors->FunctionFlags |= 0x400;

    pFnDynamicActors->iNative = NativeIndex;
};

// Function Engine.Actor.AllActors
// [0x00424405] ( FUNC_Final | FUNC_Native ) iNative [0x0130]
// Parameters infos:

void AActor::AllActors() {
    static UFunction* pFnAllActors = NULL;

    if (!pFnAllActors)
        pFnAllActors = (UFunction*)UObject::GObjObjects()->Data[5648];

    AActor_execAllActors_Parms AllActors_Parms;

    unsigned short NativeIndex = pFnAllActors->iNative;
    pFnAllActors->iNative = 0;

    pFnAllActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllActors, &AllActors_Parms, NULL);

    pFnAllActors->FunctionFlags |= 0x400;

    pFnAllActors->iNative = NativeIndex;
};

// Function Engine.Actor.GetURLMap
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0223]
// Parameters infos:

void AActor::GetURLMap() {
    static UFunction* pFnGetURLMap = NULL;

    if (!pFnGetURLMap)
        pFnGetURLMap = (UFunction*)UObject::GObjObjects()->Data[5646];

    AActor_execGetURLMap_Parms GetURLMap_Parms;

    unsigned short NativeIndex = pFnGetURLMap->iNative;
    pFnGetURLMap->iNative = 0;

    pFnGetURLMap->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetURLMap, &GetURLMap_Parms, NULL);

    pFnGetURLMap->FunctionFlags |= 0x400;

    pFnGetURLMap->iNative = NativeIndex;
};

// Function Engine.Actor.PostTeleport
// [0x00020000]
// Parameters infos:

void AActor::PostTeleport() {
    static UFunction* pFnPostTeleport = NULL;

    if (!pFnPostTeleport)
        pFnPostTeleport = (UFunction*)UObject::GObjObjects()->Data[5644];

    AActor_execPostTeleport_Parms PostTeleport_Parms;

    this->ProcessEvent(pFnPostTeleport, &PostTeleport_Parms, NULL);
};

// Function Engine.Actor.PreTeleport
// [0x00020000]
// Parameters infos:

void AActor::PreTeleport() {
    static UFunction* pFnPreTeleport = NULL;

    if (!pFnPreTeleport)
        pFnPreTeleport = (UFunction*)UObject::GObjObjects()->Data[5641];

    AActor_execPreTeleport_Parms PreTeleport_Parms;

    this->ProcessEvent(pFnPreTeleport, &PreTeleport_Parms, NULL);
};

// Function Engine.Actor.GetDestination
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetDestination() {
    static UFunction* pFnGetDestination = NULL;

    if (!pFnGetDestination)
        pFnGetDestination = (UFunction*)UObject::GObjObjects()->Data[5638];

    AActor_execGetDestination_Parms GetDestination_Parms;

    pFnGetDestination->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDestination, &GetDestination_Parms, NULL);

    pFnGetDestination->FunctionFlags |= 0x400;
};

// Function Engine.Actor.CalculateMinSpeedTrajectory
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::CalculateMinSpeedTrajectory() {
    static UFunction* pFnCalculateMinSpeedTrajectory = NULL;

    if (!pFnCalculateMinSpeedTrajectory)
        pFnCalculateMinSpeedTrajectory =
            (UFunction*)UObject::GObjObjects()->Data[5627];

    AActor_execCalculateMinSpeedTrajectory_Parms
        CalculateMinSpeedTrajectory_Parms;

    pFnCalculateMinSpeedTrajectory->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCalculateMinSpeedTrajectory,
                       &CalculateMinSpeedTrajectory_Parms, NULL);

    pFnCalculateMinSpeedTrajectory->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SuggestTossVelocity
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SuggestTossVelocity() {
    static UFunction* pFnSuggestTossVelocity = NULL;

    if (!pFnSuggestTossVelocity)
        pFnSuggestTossVelocity = (UFunction*)UObject::GObjObjects()->Data[5615];

    AActor_execSuggestTossVelocity_Parms SuggestTossVelocity_Parms;

    pFnSuggestTossVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSuggestTossVelocity, &SuggestTossVelocity_Parms,
                       NULL);

    pFnSuggestTossVelocity->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PlayerCanSeeMe
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0214]
// Parameters infos:

void AActor::PlayerCanSeeMe() {
    static UFunction* pFnPlayerCanSeeMe = NULL;

    if (!pFnPlayerCanSeeMe)
        pFnPlayerCanSeeMe = (UFunction*)UObject::GObjObjects()->Data[5612];

    AActor_execPlayerCanSeeMe_Parms PlayerCanSeeMe_Parms;

    unsigned short NativeIndex = pFnPlayerCanSeeMe->iNative;
    pFnPlayerCanSeeMe->iNative = 0;

    pFnPlayerCanSeeMe->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayerCanSeeMe, &PlayerCanSeeMe_Parms, NULL);

    pFnPlayerCanSeeMe->FunctionFlags |= 0x400;

    pFnPlayerCanSeeMe->iNative = NativeIndex;
};

// Function Engine.Actor.MakeNoise
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0200]
// Parameters infos:

void AActor::MakeNoise() {
    static UFunction* pFnMakeNoise = NULL;

    if (!pFnMakeNoise)
        pFnMakeNoise = (UFunction*)UObject::GObjObjects()->Data[5609];

    AActor_execMakeNoise_Parms MakeNoise_Parms;

    unsigned short NativeIndex = pFnMakeNoise->iNative;
    pFnMakeNoise->iNative = 0;

    pFnMakeNoise->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMakeNoise, &MakeNoise_Parms, NULL);

    pFnMakeNoise->FunctionFlags |= 0x400;

    pFnMakeNoise->iNative = NativeIndex;
};

// Function Engine.Actor.ActivateOcclusion
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ActivateOcclusion() {
    static UFunction* pFnActivateOcclusion = NULL;

    if (!pFnActivateOcclusion)
        pFnActivateOcclusion = (UFunction*)UObject::GObjObjects()->Data[5607];

    AActor_execActivateOcclusion_Parms ActivateOcclusion_Parms;

    pFnActivateOcclusion->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActivateOcclusion, &ActivateOcclusion_Parms, NULL);

    pFnActivateOcclusion->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PostTrigger
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PostTrigger() {
    static UFunction* pFnPostTrigger = NULL;

    if (!pFnPostTrigger)
        pFnPostTrigger = (UFunction*)UObject::GObjObjects()->Data[5605];

    AActor_execPostTrigger_Parms PostTrigger_Parms;

    pFnPostTrigger->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPostTrigger, &PostTrigger_Parms, NULL);

    pFnPostTrigger->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetSwitch
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetSwitch() {
    static UFunction* pFnSetSwitch = NULL;

    if (!pFnSetSwitch)
        pFnSetSwitch = (UFunction*)UObject::GObjObjects()->Data[5602];

    AActor_execSetSwitch_Parms SetSwitch_Parms;

    pFnSetSwitch->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSwitch, &SetSwitch_Parms, NULL);

    pFnSetSwitch->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetState() {
    static UFunction* pFnSetState = NULL;

    if (!pFnSetState)
        pFnSetState = (UFunction*)UObject::GObjObjects()->Data[5599];

    AActor_execSetState_Parms SetState_Parms;

    pFnSetState->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetState, &SetState_Parms, NULL);

    pFnSetState->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetAKRotation
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::GetAKRotation() {
    static UFunction* pFnGetAKRotation = NULL;

    if (!pFnGetAKRotation)
        pFnGetAKRotation = (UFunction*)UObject::GObjObjects()->Data[5597];

    AActor_execGetAKRotation_Parms GetAKRotation_Parms;

    pFnGetAKRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAKRotation, &GetAKRotation_Parms, NULL);

    pFnGetAKRotation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetRTPCValue
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetRTPCValue() {
    static UFunction* pFnSetRTPCValue = NULL;

    if (!pFnSetRTPCValue)
        pFnSetRTPCValue = (UFunction*)UObject::GObjObjects()->Data[5593];

    AActor_execSetRTPCValue_Parms SetRTPCValue_Parms;

    pFnSetRTPCValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRTPCValue, &SetRTPCValue_Parms, NULL);

    pFnSetRTPCValue->FunctionFlags |= 0x400;
};

// Function Engine.Actor.StopAkEventsOnBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::StopAkEventsOnBone() {
    static UFunction* pFnStopAkEventsOnBone = NULL;

    if (!pFnStopAkEventsOnBone)
        pFnStopAkEventsOnBone = (UFunction*)UObject::GObjObjects()->Data[5591];

    AActor_execStopAkEventsOnBone_Parms StopAkEventsOnBone_Parms;

    pFnStopAkEventsOnBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopAkEventsOnBone, &StopAkEventsOnBone_Parms, NULL);

    pFnStopAkEventsOnBone->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PostAkEventOnBone
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PostAkEventOnBone() {
    static UFunction* pFnPostAkEventOnBone = NULL;

    if (!pFnPostAkEventOnBone)
        pFnPostAkEventOnBone = (UFunction*)UObject::GObjObjects()->Data[5586];

    AActor_execPostAkEventOnBone_Parms PostAkEventOnBone_Parms;

    pFnPostAkEventOnBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPostAkEventOnBone, &PostAkEventOnBone_Parms, NULL);

    pFnPostAkEventOnBone->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PostAkEventAtLocation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PostAkEventAtLocation() {
    static UFunction* pFnPostAkEventAtLocation = NULL;

    if (!pFnPostAkEventAtLocation)
        pFnPostAkEventAtLocation =
            (UFunction*)UObject::GObjObjects()->Data[5582];

    AActor_execPostAkEventAtLocation_Parms PostAkEventAtLocation_Parms;

    pFnPostAkEventAtLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPostAkEventAtLocation, &PostAkEventAtLocation_Parms,
                       NULL);

    pFnPostAkEventAtLocation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PostAkEvent
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PostAkEvent() {
    static UFunction* pFnPostAkEvent = NULL;

    if (!pFnPostAkEvent)
        pFnPostAkEvent = (UFunction*)UObject::GObjObjects()->Data[5577];

    AActor_execPostAkEvent_Parms PostAkEvent_Parms;

    pFnPostAkEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPostAkEvent, &PostAkEvent_Parms, NULL);

    pFnPostAkEvent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PlaySoundBase
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PlaySoundBase() {
    static UFunction* pFnPlaySoundBase = NULL;

    if (!pFnPlaySoundBase)
        pFnPlaySoundBase = (UFunction*)UObject::GObjObjects()->Data[5569];

    AActor_execPlaySoundBase_Parms PlaySoundBase_Parms;

    pFnPlaySoundBase->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlaySoundBase, &PlaySoundBase_Parms, NULL);

    pFnPlaySoundBase->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PlayAkEvent
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PlayAkEvent() {
    static UFunction* pFnPlayAkEvent = NULL;

    if (!pFnPlayAkEvent)
        pFnPlayAkEvent = (UFunction*)UObject::GObjObjects()->Data[5562];

    AActor_execPlayAkEvent_Parms PlayAkEvent_Parms;

    pFnPlayAkEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayAkEvent, &PlayAkEvent_Parms, NULL);

    pFnPlayAkEvent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PlaySound
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PlaySound() {
    static UFunction* pFnPlaySound = NULL;

    if (!pFnPlaySound)
        pFnPlaySound = (UFunction*)UObject::GObjObjects()->Data[5555];

    AActor_execPlaySound_Parms PlaySound_Parms;

    pFnPlaySound->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlaySound, &PlaySound_Parms, NULL);

    pFnPlaySound->FunctionFlags |= 0x400;
};

// Function Engine.Actor.CreateAudioComponent
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::CreateAudioComponent() {
    static UFunction* pFnCreateAudioComponent = NULL;

    if (!pFnCreateAudioComponent)
        pFnCreateAudioComponent =
            (UFunction*)UObject::GObjObjects()->Data[5547];

    AActor_execCreateAudioComponent_Parms CreateAudioComponent_Parms;

    pFnCreateAudioComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreateAudioComponent, &CreateAudioComponent_Parms,
                       NULL);

    pFnCreateAudioComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ResetTimerTimeDilation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ResetTimerTimeDilation() {
    static UFunction* pFnResetTimerTimeDilation = NULL;

    if (!pFnResetTimerTimeDilation)
        pFnResetTimerTimeDilation =
            (UFunction*)UObject::GObjObjects()->Data[5544];

    AActor_execResetTimerTimeDilation_Parms ResetTimerTimeDilation_Parms;

    pFnResetTimerTimeDilation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetTimerTimeDilation, &ResetTimerTimeDilation_Parms,
                       NULL);

    pFnResetTimerTimeDilation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ModifyTimerTimeDilation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ModifyTimerTimeDilation() {
    static UFunction* pFnModifyTimerTimeDilation = NULL;

    if (!pFnModifyTimerTimeDilation)
        pFnModifyTimerTimeDilation =
            (UFunction*)UObject::GObjObjects()->Data[5540];

    AActor_execModifyTimerTimeDilation_Parms ModifyTimerTimeDilation_Parms;

    pFnModifyTimerTimeDilation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnModifyTimerTimeDilation,
                       &ModifyTimerTimeDilation_Parms, NULL);

    pFnModifyTimerTimeDilation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetRemainingTimeForTimer
// [0x00024103] ( FUNC_Final )
// Parameters infos:

void AActor::GetRemainingTimeForTimer() {
    static UFunction* pFnGetRemainingTimeForTimer = NULL;

    if (!pFnGetRemainingTimeForTimer)
        pFnGetRemainingTimeForTimer =
            (UFunction*)UObject::GObjObjects()->Data[5534];

    AActor_execGetRemainingTimeForTimer_Parms GetRemainingTimeForTimer_Parms;

    this->ProcessEvent(pFnGetRemainingTimeForTimer,
                       &GetRemainingTimeForTimer_Parms, NULL);
};

// Function Engine.Actor.GetTimerRate
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetTimerRate() {
    static UFunction* pFnGetTimerRate = NULL;

    if (!pFnGetTimerRate)
        pFnGetTimerRate = (UFunction*)UObject::GObjObjects()->Data[5530];

    AActor_execGetTimerRate_Parms GetTimerRate_Parms;

    pFnGetTimerRate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTimerRate, &GetTimerRate_Parms, NULL);

    pFnGetTimerRate->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetTimerCount
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetTimerCount() {
    static UFunction* pFnGetTimerCount = NULL;

    if (!pFnGetTimerCount)
        pFnGetTimerCount = (UFunction*)UObject::GObjObjects()->Data[5526];

    AActor_execGetTimerCount_Parms GetTimerCount_Parms;

    pFnGetTimerCount->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTimerCount, &GetTimerCount_Parms, NULL);

    pFnGetTimerCount->FunctionFlags |= 0x400;
};

// Function Engine.Actor.IsTimerActive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::IsTimerActive() {
    static UFunction* pFnIsTimerActive = NULL;

    if (!pFnIsTimerActive)
        pFnIsTimerActive = (UFunction*)UObject::GObjObjects()->Data[5522];

    AActor_execIsTimerActive_Parms IsTimerActive_Parms;

    pFnIsTimerActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsTimerActive, &IsTimerActive_Parms, NULL);

    pFnIsTimerActive->FunctionFlags |= 0x400;
};

// Function Engine.Actor.PauseTimer
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PauseTimer() {
    static UFunction* pFnPauseTimer = NULL;

    if (!pFnPauseTimer)
        pFnPauseTimer = (UFunction*)UObject::GObjObjects()->Data[5518];

    AActor_execPauseTimer_Parms PauseTimer_Parms;

    pFnPauseTimer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPauseTimer, &PauseTimer_Parms, NULL);

    pFnPauseTimer->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ClearAllTimers
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ClearAllTimers() {
    static UFunction* pFnClearAllTimers = NULL;

    if (!pFnClearAllTimers)
        pFnClearAllTimers = (UFunction*)UObject::GObjObjects()->Data[5516];

    AActor_execClearAllTimers_Parms ClearAllTimers_Parms;

    pFnClearAllTimers->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearAllTimers, &ClearAllTimers_Parms, NULL);

    pFnClearAllTimers->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ClearTimer
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ClearTimer() {
    static UFunction* pFnClearTimer = NULL;

    if (!pFnClearTimer)
        pFnClearTimer = (UFunction*)UObject::GObjObjects()->Data[5513];

    AActor_execClearTimer_Parms ClearTimer_Parms;

    pFnClearTimer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearTimer, &ClearTimer_Parms, NULL);

    pFnClearTimer->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetTimer
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0118]
// Parameters infos:

void AActor::SetTimer() {
    static UFunction* pFnSetTimer = NULL;

    if (!pFnSetTimer)
        pFnSetTimer = (UFunction*)UObject::GObjObjects()->Data[5508];

    AActor_execSetTimer_Parms SetTimer_Parms;

    unsigned short NativeIndex = pFnSetTimer->iNative;
    pFnSetTimer->iNative = 0;

    pFnSetTimer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTimer, &SetTimer_Parms, NULL);

    pFnSetTimer->FunctionFlags |= 0x400;

    pFnSetTimer->iNative = NativeIndex;
};

// Function Engine.Actor.TornOff
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTornOff() {
    static UFunction* pFnTornOff = NULL;

    if (!pFnTornOff)
        pFnTornOff = (UFunction*)UObject::GObjObjects()->Data[5507];

    AActor_eventTornOff_Parms TornOff_Parms;

    this->ProcessEvent(pFnTornOff, &TornOff_Parms, NULL);
};

// Function Engine.Actor.Destroy
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0117]
// Parameters infos:

void AActor::Destroy() {
    static UFunction* pFnDestroy = NULL;

    if (!pFnDestroy)
        pFnDestroy = (UFunction*)UObject::GObjObjects()->Data[5505];

    AActor_execDestroy_Parms Destroy_Parms;

    unsigned short NativeIndex = pFnDestroy->iNative;
    pFnDestroy->iNative = 0;

    pFnDestroy->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDestroy, &Destroy_Parms, NULL);

    pFnDestroy->FunctionFlags |= 0x400;

    pFnDestroy->iNative = NativeIndex;
};

// Function Engine.Actor.Spawn
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::Spawn() {
    static UFunction* pFnSpawn = NULL;

    if (!pFnSpawn) pFnSpawn = (UFunction*)UObject::GObjObjects()->Data[5496];

    AActor_execSpawn_Parms Spawn_Parms;

    pFnSpawn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawn, &Spawn_Parms, NULL);

    pFnSpawn->FunctionFlags |= 0x400;
};

// Function Engine.Actor.IsBlockedBy
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::IsBlockedBy() {
    static UFunction* pFnIsBlockedBy = NULL;

    if (!pFnIsBlockedBy)
        pFnIsBlockedBy = (UFunction*)UObject::GObjObjects()->Data[5493];

    AActor_execIsBlockedBy_Parms IsBlockedBy_Parms;

    pFnIsBlockedBy->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsBlockedBy, &IsBlockedBy_Parms, NULL);

    pFnIsBlockedBy->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetBoundingCylinder
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AActor::GetBoundingCylinder() {
    static UFunction* pFnGetBoundingCylinder = NULL;

    if (!pFnGetBoundingCylinder)
        pFnGetBoundingCylinder = (UFunction*)UObject::GObjObjects()->Data[5490];

    AActor_execGetBoundingCylinder_Parms GetBoundingCylinder_Parms;

    pFnGetBoundingCylinder->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoundingCylinder, &GetBoundingCylinder_Parms,
                       NULL);

    pFnGetBoundingCylinder->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetComponentsBoundingBox
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetComponentsBoundingBox() {
    static UFunction* pFnGetComponentsBoundingBox = NULL;

    if (!pFnGetComponentsBoundingBox)
        pFnGetComponentsBoundingBox =
            (UFunction*)UObject::GObjObjects()->Data[5488];

    AActor_execGetComponentsBoundingBox_Parms GetComponentsBoundingBox_Parms;

    pFnGetComponentsBoundingBox->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetComponentsBoundingBox,
                       &GetComponentsBoundingBox_Parms, NULL);

    pFnGetComponentsBoundingBox->FunctionFlags |= 0x400;
};

// Function Engine.Actor.IsOverlapping
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::IsOverlapping() {
    static UFunction* pFnIsOverlapping = NULL;

    if (!pFnIsOverlapping)
        pFnIsOverlapping = (UFunction*)UObject::GObjObjects()->Data[5485];

    AActor_execIsOverlapping_Parms IsOverlapping_Parms;

    pFnIsOverlapping->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsOverlapping, &IsOverlapping_Parms, NULL);

    pFnIsOverlapping->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ContainsPoint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ContainsPoint() {
    static UFunction* pFnContainsPoint = NULL;

    if (!pFnContainsPoint)
        pFnContainsPoint = (UFunction*)UObject::GObjObjects()->Data[5482];

    AActor_execContainsPoint_Parms ContainsPoint_Parms;

    pFnContainsPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnContainsPoint, &ContainsPoint_Parms, NULL);

    pFnContainsPoint->FunctionFlags |= 0x400;
};

// Function Engine.Actor.FindSpot
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::FindSpot() {
    static UFunction* pFnFindSpot = NULL;

    if (!pFnFindSpot)
        pFnFindSpot = (UFunction*)UObject::GObjObjects()->Data[5478];

    AActor_execFindSpot_Parms FindSpot_Parms;

    pFnFindSpot->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSpot, &FindSpot_Parms, NULL);

    pFnFindSpot->FunctionFlags |= 0x400;
};

// Function Engine.Actor.TraceAllPhysicsAssetInteractions
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::TraceAllPhysicsAssetInteractions() {
    static UFunction* pFnTraceAllPhysicsAssetInteractions = NULL;

    if (!pFnTraceAllPhysicsAssetInteractions)
        pFnTraceAllPhysicsAssetInteractions =
            (UFunction*)UObject::GObjObjects()->Data[5469];

    AActor_execTraceAllPhysicsAssetInteractions_Parms
        TraceAllPhysicsAssetInteractions_Parms;

    pFnTraceAllPhysicsAssetInteractions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTraceAllPhysicsAssetInteractions,
                       &TraceAllPhysicsAssetInteractions_Parms, NULL);

    pFnTraceAllPhysicsAssetInteractions->FunctionFlags |= 0x400;
};

// Function Engine.Actor.FastTrace
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0224]
// Parameters infos:

void AActor::FastTrace() {
    static UFunction* pFnFastTrace = NULL;

    if (!pFnFastTrace)
        pFnFastTrace = (UFunction*)UObject::GObjObjects()->Data[5463];

    AActor_execFastTrace_Parms FastTrace_Parms;

    unsigned short NativeIndex = pFnFastTrace->iNative;
    pFnFastTrace->iNative = 0;

    pFnFastTrace->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFastTrace, &FastTrace_Parms, NULL);

    pFnFastTrace->FunctionFlags |= 0x400;

    pFnFastTrace->iNative = NativeIndex;
};

// Function Engine.Actor.PointCheckComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::PointCheckComponent() {
    static UFunction* pFnPointCheckComponent = NULL;

    if (!pFnPointCheckComponent)
        pFnPointCheckComponent = (UFunction*)UObject::GObjObjects()->Data[5458];

    AActor_execPointCheckComponent_Parms PointCheckComponent_Parms;

    pFnPointCheckComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPointCheckComponent, &PointCheckComponent_Parms,
                       NULL);

    pFnPointCheckComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.TraceComponent
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::TraceComponent() {
    static UFunction* pFnTraceComponent = NULL;

    if (!pFnTraceComponent)
        pFnTraceComponent = (UFunction*)UObject::GObjObjects()->Data[5448];

    AActor_execTraceComponent_Parms TraceComponent_Parms;

    pFnTraceComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTraceComponent, &TraceComponent_Parms, NULL);

    pFnTraceComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.Trace
// [0x00424401] ( FUNC_Final | FUNC_Native ) iNative [0x0115]
// Parameters infos:

void AActor::Trace() {
    static UFunction* pFnTrace = NULL;

    if (!pFnTrace) pFnTrace = (UFunction*)UObject::GObjObjects()->Data[5438];

    AActor_execTrace_Parms Trace_Parms;

    unsigned short NativeIndex = pFnTrace->iNative;
    pFnTrace->iNative = 0;

    pFnTrace->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTrace, &Trace_Parms, NULL);

    pFnTrace->FunctionFlags |= 0x400;

    pFnTrace->iNative = NativeIndex;
};

// Function Engine.Actor.VolumeBasedDestroy
// [0x00020102]
// Parameters infos:

void AActor::VolumeBasedDestroy() {
    static UFunction* pFnVolumeBasedDestroy = NULL;

    if (!pFnVolumeBasedDestroy)
        pFnVolumeBasedDestroy = (UFunction*)UObject::GObjObjects()->Data[5436];

    AActor_execVolumeBasedDestroy_Parms VolumeBasedDestroy_Parms;

    this->ProcessEvent(pFnVolumeBasedDestroy, &VolumeBasedDestroy_Parms, NULL);
};

// Function Engine.Actor.OutsideWorldBounds
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AActor::eventOutsideWorldBounds() {
    static UFunction* pFnOutsideWorldBounds = NULL;

    if (!pFnOutsideWorldBounds)
        pFnOutsideWorldBounds = (UFunction*)UObject::GObjObjects()->Data[5435];

    AActor_eventOutsideWorldBounds_Parms OutsideWorldBounds_Parms;

    this->ProcessEvent(pFnOutsideWorldBounds, &OutsideWorldBounds_Parms, NULL);
};

// Function Engine.Actor.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AActor::eventFellOutOfWorld() {
    static UFunction* pFnFellOutOfWorld = NULL;

    if (!pFnFellOutOfWorld)
        pFnFellOutOfWorld = (UFunction*)UObject::GObjObjects()->Data[5433];

    AActor_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;

    this->ProcessEvent(pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL);
};

// Function Engine.Actor.UsedBy
// [0x00020002]
// Parameters infos:

void AActor::UsedBy() {
    static UFunction* pFnUsedBy = NULL;

    if (!pFnUsedBy) pFnUsedBy = (UFunction*)UObject::GObjObjects()->Data[5430];

    AActor_execUsedBy_Parms UsedBy_Parms;

    this->ProcessEvent(pFnUsedBy, &UsedBy_Parms, NULL);
};

// Function Engine.Actor.OverRotated
// [0x00420900] ( FUNC_Event )
// Parameters infos:

void AActor::eventOverRotated() {
    static UFunction* pFnOverRotated = NULL;

    if (!pFnOverRotated)
        pFnOverRotated = (UFunction*)UObject::GObjObjects()->Data[5426];

    AActor_eventOverRotated_Parms OverRotated_Parms;

    this->ProcessEvent(pFnOverRotated, &OverRotated_Parms, NULL);
};

// Function Engine.Actor.ClampRotation
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ClampRotation() {
    static UFunction* pFnClampRotation = NULL;

    if (!pFnClampRotation)
        pFnClampRotation = (UFunction*)UObject::GObjObjects()->Data[5420];

    AActor_execClampRotation_Parms ClampRotation_Parms;

    pFnClampRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClampRotation, &ClampRotation_Parms, NULL);

    pFnClampRotation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.OnSleepRBPhysics
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnSleepRBPhysics() {
    static UFunction* pFnOnSleepRBPhysics = NULL;

    if (!pFnOnSleepRBPhysics)
        pFnOnSleepRBPhysics = (UFunction*)UObject::GObjObjects()->Data[5419];

    AActor_eventOnSleepRBPhysics_Parms OnSleepRBPhysics_Parms;

    this->ProcessEvent(pFnOnSleepRBPhysics, &OnSleepRBPhysics_Parms, NULL);
};

// Function Engine.Actor.OnWakeRBPhysics
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventOnWakeRBPhysics() {
    static UFunction* pFnOnWakeRBPhysics = NULL;

    if (!pFnOnWakeRBPhysics)
        pFnOnWakeRBPhysics = (UFunction*)UObject::GObjObjects()->Data[5418];

    AActor_eventOnWakeRBPhysics_Parms OnWakeRBPhysics_Parms;

    this->ProcessEvent(pFnOnWakeRBPhysics, &OnWakeRBPhysics_Parms, NULL);
};

// Function Engine.Actor.RanInto
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventRanInto() {
    static UFunction* pFnRanInto = NULL;

    if (!pFnRanInto)
        pFnRanInto = (UFunction*)UObject::GObjObjects()->Data[5416];

    AActor_eventRanInto_Parms RanInto_Parms;

    this->ProcessEvent(pFnRanInto, &RanInto_Parms, NULL);
};

// Function Engine.Actor.EncroachedBy
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventEncroachedBy() {
    static UFunction* pFnEncroachedBy = NULL;

    if (!pFnEncroachedBy)
        pFnEncroachedBy = (UFunction*)UObject::GObjObjects()->Data[5414];

    AActor_eventEncroachedBy_Parms EncroachedBy_Parms;

    this->ProcessEvent(pFnEncroachedBy, &EncroachedBy_Parms, NULL);
};

// Function Engine.Actor.EncroachingOn
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventEncroachingOn() {
    static UFunction* pFnEncroachingOn = NULL;

    if (!pFnEncroachingOn)
        pFnEncroachingOn = (UFunction*)UObject::GObjObjects()->Data[5411];

    AActor_eventEncroachingOn_Parms EncroachingOn_Parms;

    this->ProcessEvent(pFnEncroachingOn, &EncroachingOn_Parms, NULL);
};

// Function Engine.Actor.CollisionChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventCollisionChanged() {
    static UFunction* pFnCollisionChanged = NULL;

    if (!pFnCollisionChanged)
        pFnCollisionChanged = (UFunction*)UObject::GObjObjects()->Data[5410];

    AActor_eventCollisionChanged_Parms CollisionChanged_Parms;

    this->ProcessEvent(pFnCollisionChanged, &CollisionChanged_Parms, NULL);
};

// Function Engine.Actor.SpecialHandling
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventSpecialHandling() {
    static UFunction* pFnSpecialHandling = NULL;

    if (!pFnSpecialHandling)
        pFnSpecialHandling = (UFunction*)UObject::GObjObjects()->Data[5407];

    AActor_eventSpecialHandling_Parms SpecialHandling_Parms;

    this->ProcessEvent(pFnSpecialHandling, &SpecialHandling_Parms, NULL);
};

// Function Engine.Actor.Detach
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventDetach() {
    static UFunction* pFnDetach = NULL;

    if (!pFnDetach) pFnDetach = (UFunction*)UObject::GObjObjects()->Data[5405];

    AActor_eventDetach_Parms Detach_Parms;

    this->ProcessEvent(pFnDetach, &Detach_Parms, NULL);
};

// Function Engine.Actor.Attach
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventAttach() {
    static UFunction* pFnAttach = NULL;

    if (!pFnAttach) pFnAttach = (UFunction*)UObject::GObjObjects()->Data[5403];

    AActor_eventAttach_Parms Attach_Parms;

    this->ProcessEvent(pFnAttach, &Attach_Parms, NULL);
};

// Function Engine.Actor.BaseChange
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventBaseChange() {
    static UFunction* pFnBaseChange = NULL;

    if (!pFnBaseChange)
        pFnBaseChange = (UFunction*)UObject::GObjObjects()->Data[5402];

    AActor_eventBaseChange_Parms BaseChange_Parms;

    this->ProcessEvent(pFnBaseChange, &BaseChange_Parms, NULL);
};

// Function Engine.Actor.Bump
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventBump() {
    static UFunction* pFnBump = NULL;

    if (!pFnBump) pFnBump = (UFunction*)UObject::GObjObjects()->Data[5398];

    AActor_eventBump_Parms Bump_Parms;

    this->ProcessEvent(pFnBump, &Bump_Parms, NULL);
};

// Function Engine.Actor.UnTouch
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventUnTouch() {
    static UFunction* pFnUnTouch = NULL;

    if (!pFnUnTouch)
        pFnUnTouch = (UFunction*)UObject::GObjObjects()->Data[5396];

    AActor_eventUnTouch_Parms UnTouch_Parms;

    this->ProcessEvent(pFnUnTouch, &UnTouch_Parms, NULL);
};

// Function Engine.Actor.PostTouch
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventPostTouch() {
    static UFunction* pFnPostTouch = NULL;

    if (!pFnPostTouch)
        pFnPostTouch = (UFunction*)UObject::GObjObjects()->Data[5394];

    AActor_eventPostTouch_Parms PostTouch_Parms;

    this->ProcessEvent(pFnPostTouch, &PostTouch_Parms, NULL);
};

// Function Engine.Actor.Touch
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[5389];

    AActor_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.Actor.PhysicsVolumeChange
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventPhysicsVolumeChange() {
    static UFunction* pFnPhysicsVolumeChange = NULL;

    if (!pFnPhysicsVolumeChange)
        pFnPhysicsVolumeChange = (UFunction*)UObject::GObjObjects()->Data[5387];

    AActor_eventPhysicsVolumeChange_Parms PhysicsVolumeChange_Parms;

    this->ProcessEvent(pFnPhysicsVolumeChange, &PhysicsVolumeChange_Parms,
                       NULL);
};

// Function Engine.Actor.Landed
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventLanded() {
    static UFunction* pFnLanded = NULL;

    if (!pFnLanded) pFnLanded = (UFunction*)UObject::GObjObjects()->Data[5384];

    AActor_eventLanded_Parms Landed_Parms;

    this->ProcessEvent(pFnLanded, &Landed_Parms, NULL);
};

// Function Engine.Actor.Falling
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventFalling() {
    static UFunction* pFnFalling = NULL;

    if (!pFnFalling)
        pFnFalling = (UFunction*)UObject::GObjObjects()->Data[5383];

    AActor_eventFalling_Parms Falling_Parms;

    this->ProcessEvent(pFnFalling, &Falling_Parms, NULL);
};

// Function Engine.Actor.HitWall
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AActor::eventHitWall() {
    static UFunction* pFnHitWall = NULL;

    if (!pFnHitWall)
        pFnHitWall = (UFunction*)UObject::GObjObjects()->Data[5379];

    AActor_eventHitWall_Parms HitWall_Parms;

    this->ProcessEvent(pFnHitWall, &HitWall_Parms, NULL);
};

// Function Engine.Actor.Timer
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTimer() {
    static UFunction* pFnTimer = NULL;

    if (!pFnTimer) pFnTimer = (UFunction*)UObject::GObjObjects()->Data[5378];

    AActor_eventTimer_Parms Timer_Parms;

    this->ProcessEvent(pFnTimer, &Timer_Parms, NULL);
};

// Function Engine.Actor.Tick
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventTick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[5376];

    AActor_eventTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.Actor.LostChild
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventLostChild() {
    static UFunction* pFnLostChild = NULL;

    if (!pFnLostChild)
        pFnLostChild = (UFunction*)UObject::GObjObjects()->Data[5374];

    AActor_eventLostChild_Parms LostChild_Parms;

    this->ProcessEvent(pFnLostChild, &LostChild_Parms, NULL);
};

// Function Engine.Actor.GainedChild
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventGainedChild() {
    static UFunction* pFnGainedChild = NULL;

    if (!pFnGainedChild)
        pFnGainedChild = (UFunction*)UObject::GObjObjects()->Data[5372];

    AActor_eventGainedChild_Parms GainedChild_Parms;

    this->ProcessEvent(pFnGainedChild, &GainedChild_Parms, NULL);
};

// Function Engine.Actor.Destroyed
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AActor::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[5371];

    AActor_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Actor.SetTickIsDisabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetTickIsDisabled() {
    static UFunction* pFnSetTickIsDisabled = NULL;

    if (!pFnSetTickIsDisabled)
        pFnSetTickIsDisabled = (UFunction*)UObject::GObjObjects()->Data[5369];

    AActor_execSetTickIsDisabled_Parms SetTickIsDisabled_Parms;

    pFnSetTickIsDisabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTickIsDisabled, &SetTickIsDisabled_Parms, NULL);

    pFnSetTickIsDisabled->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetTickGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetTickGroup() {
    static UFunction* pFnSetTickGroup = NULL;

    if (!pFnSetTickGroup)
        pFnSetTickGroup = (UFunction*)UObject::GObjObjects()->Data[5367];

    AActor_execSetTickGroup_Parms SetTickGroup_Parms;

    pFnSetTickGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTickGroup, &SetTickGroup_Parms, NULL);

    pFnSetTickGroup->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ReattachComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ReattachComponent() {
    static UFunction* pFnReattachComponent = NULL;

    if (!pFnReattachComponent)
        pFnReattachComponent = (UFunction*)UObject::GObjObjects()->Data[5365];

    AActor_execReattachComponent_Parms ReattachComponent_Parms;

    pFnReattachComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReattachComponent, &ReattachComponent_Parms, NULL);

    pFnReattachComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DetachComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DetachComponent() {
    static UFunction* pFnDetachComponent = NULL;

    if (!pFnDetachComponent)
        pFnDetachComponent = (UFunction*)UObject::GObjObjects()->Data[5363];

    AActor_execDetachComponent_Parms DetachComponent_Parms;

    pFnDetachComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDetachComponent, &DetachComponent_Parms, NULL);

    pFnDetachComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.AttachComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::AttachComponent() {
    static UFunction* pFnAttachComponent = NULL;

    if (!pFnAttachComponent)
        pFnAttachComponent = (UFunction*)UObject::GObjObjects()->Data[5361];

    AActor_execAttachComponent_Parms AttachComponent_Parms;

    pFnAttachComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAttachComponent, &AttachComponent_Parms, NULL);

    pFnAttachComponent->FunctionFlags |= 0x400;
};

// Function Engine.Actor.UnClock
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::UnClock() {
    static UFunction* pFnUnClock = NULL;

    if (!pFnUnClock)
        pFnUnClock = (UFunction*)UObject::GObjObjects()->Data[5359];

    AActor_execUnClock_Parms UnClock_Parms;

    pFnUnClock->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnClock, &UnClock_Parms, NULL);

    pFnUnClock->FunctionFlags |= 0x400;
};

// Function Engine.Actor.Clock
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::Clock() {
    static UFunction* pFnClock = NULL;

    if (!pFnClock) pFnClock = (UFunction*)UObject::GObjObjects()->Data[5357];

    AActor_execClock_Parms Clock_Parms;

    pFnClock->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClock, &Clock_Parms, NULL);

    pFnClock->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetPhysics
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0F82]
// Parameters infos:

void AActor::SetPhysics() {
    static UFunction* pFnSetPhysics = NULL;

    if (!pFnSetPhysics)
        pFnSetPhysics = (UFunction*)UObject::GObjObjects()->Data[5355];

    AActor_execSetPhysics_Parms SetPhysics_Parms;

    unsigned short NativeIndex = pFnSetPhysics->iNative;
    pFnSetPhysics->iNative = 0;

    pFnSetPhysics->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPhysics, &SetPhysics_Parms, NULL);

    pFnSetPhysics->FunctionFlags |= 0x400;

    pFnSetPhysics->iNative = NativeIndex;
};

// Function Engine.Actor.SetOnlyOwnerSee
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetOnlyOwnerSee() {
    static UFunction* pFnSetOnlyOwnerSee = NULL;

    if (!pFnSetOnlyOwnerSee)
        pFnSetOnlyOwnerSee = (UFunction*)UObject::GObjObjects()->Data[5353];

    AActor_execSetOnlyOwnerSee_Parms SetOnlyOwnerSee_Parms;

    pFnSetOnlyOwnerSee->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOnlyOwnerSee, &SetOnlyOwnerSee_Parms, NULL);

    pFnSetOnlyOwnerSee->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetHidden
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetHidden() {
    static UFunction* pFnSetHidden = NULL;

    if (!pFnSetHidden)
        pFnSetHidden = (UFunction*)UObject::GObjObjects()->Data[5351];

    AActor_execSetHidden_Parms SetHidden_Parms;

    pFnSetHidden->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetHidden, &SetHidden_Parms, NULL);

    pFnSetHidden->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ChartData
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::ChartData() {
    static UFunction* pFnChartData = NULL;

    if (!pFnChartData)
        pFnChartData = (UFunction*)UObject::GObjObjects()->Data[5348];

    AActor_execChartData_Parms ChartData_Parms;

    pFnChartData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnChartData, &ChartData_Parms, NULL);

    pFnChartData->FunctionFlags |= 0x400;
};

// Function Engine.Actor.FlushDebugStrings
// [0x00022601] ( FUNC_Final | FUNC_Exec | FUNC_Native )
// Parameters infos:

void AActor::FlushDebugStrings() {
    static UFunction* pFnFlushDebugStrings = NULL;

    if (!pFnFlushDebugStrings)
        pFnFlushDebugStrings = (UFunction*)UObject::GObjObjects()->Data[5347];

    AActor_execFlushDebugStrings_Parms FlushDebugStrings_Parms;

    pFnFlushDebugStrings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFlushDebugStrings, &FlushDebugStrings_Parms, NULL);

    pFnFlushDebugStrings->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugFrustrum
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugFrustrum() {
    static UFunction* pFnDrawDebugFrustrum = NULL;

    if (!pFnDrawDebugFrustrum)
        pFnDrawDebugFrustrum = (UFunction*)UObject::GObjObjects()->Data[5341];

    AActor_execDrawDebugFrustrum_Parms DrawDebugFrustrum_Parms;

    pFnDrawDebugFrustrum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugFrustrum, &DrawDebugFrustrum_Parms, NULL);

    pFnDrawDebugFrustrum->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugString
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugString() {
    static UFunction* pFnDrawDebugString = NULL;

    if (!pFnDrawDebugString)
        pFnDrawDebugString = (UFunction*)UObject::GObjObjects()->Data[5335];

    AActor_execDrawDebugString_Parms DrawDebugString_Parms;

    pFnDrawDebugString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugString, &DrawDebugString_Parms, NULL);

    pFnDrawDebugString->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugCone
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugCone() {
    static UFunction* pFnDrawDebugCone = NULL;

    if (!pFnDrawDebugCone)
        pFnDrawDebugCone = (UFunction*)UObject::GObjObjects()->Data[5326];

    AActor_execDrawDebugCone_Parms DrawDebugCone_Parms;

    pFnDrawDebugCone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugCone, &DrawDebugCone_Parms, NULL);

    pFnDrawDebugCone->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugCylinder
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugCylinder() {
    static UFunction* pFnDrawDebugCylinder = NULL;

    if (!pFnDrawDebugCylinder)
        pFnDrawDebugCylinder = (UFunction*)UObject::GObjObjects()->Data[5317];

    AActor_execDrawDebugCylinder_Parms DrawDebugCylinder_Parms;

    pFnDrawDebugCylinder->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugCylinder, &DrawDebugCylinder_Parms, NULL);

    pFnDrawDebugCylinder->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugSphere
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugSphere() {
    static UFunction* pFnDrawDebugSphere = NULL;

    if (!pFnDrawDebugSphere)
        pFnDrawDebugSphere = (UFunction*)UObject::GObjObjects()->Data[5309];

    AActor_execDrawDebugSphere_Parms DrawDebugSphere_Parms;

    pFnDrawDebugSphere->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugSphere, &DrawDebugSphere_Parms, NULL);

    pFnDrawDebugSphere->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugCoordinateSystem
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugCoordinateSystem() {
    static UFunction* pFnDrawDebugCoordinateSystem = NULL;

    if (!pFnDrawDebugCoordinateSystem)
        pFnDrawDebugCoordinateSystem =
            (UFunction*)UObject::GObjObjects()->Data[5304];

    AActor_execDrawDebugCoordinateSystem_Parms DrawDebugCoordinateSystem_Parms;

    pFnDrawDebugCoordinateSystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugCoordinateSystem,
                       &DrawDebugCoordinateSystem_Parms, NULL);

    pFnDrawDebugCoordinateSystem->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugStar
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugStar() {
    static UFunction* pFnDrawDebugStar = NULL;

    if (!pFnDrawDebugStar)
        pFnDrawDebugStar = (UFunction*)UObject::GObjObjects()->Data[5297];

    AActor_execDrawDebugStar_Parms DrawDebugStar_Parms;

    pFnDrawDebugStar->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugStar, &DrawDebugStar_Parms, NULL);

    pFnDrawDebugStar->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugBox
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugBox() {
    static UFunction* pFnDrawDebugBox = NULL;

    if (!pFnDrawDebugBox)
        pFnDrawDebugBox = (UFunction*)UObject::GObjObjects()->Data[5290];

    AActor_execDrawDebugBox_Parms DrawDebugBox_Parms;

    pFnDrawDebugBox->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugBox, &DrawDebugBox_Parms, NULL);

    pFnDrawDebugBox->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugPoint
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugPoint() {
    static UFunction* pFnDrawDebugPoint = NULL;

    if (!pFnDrawDebugPoint)
        pFnDrawDebugPoint = (UFunction*)UObject::GObjObjects()->Data[5285];

    AActor_execDrawDebugPoint_Parms DrawDebugPoint_Parms;

    pFnDrawDebugPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugPoint, &DrawDebugPoint_Parms, NULL);

    pFnDrawDebugPoint->FunctionFlags |= 0x400;
};

// Function Engine.Actor.DrawDebugLine
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::DrawDebugLine() {
    static UFunction* pFnDrawDebugLine = NULL;

    if (!pFnDrawDebugLine)
        pFnDrawDebugLine = (UFunction*)UObject::GObjObjects()->Data[5278];

    AActor_execDrawDebugLine_Parms DrawDebugLine_Parms;

    pFnDrawDebugLine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawDebugLine, &DrawDebugLine_Parms, NULL);

    pFnDrawDebugLine->FunctionFlags |= 0x400;
};

// Function Engine.Actor.FlushPersistentDebugLines
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::FlushPersistentDebugLines() {
    static UFunction* pFnFlushPersistentDebugLines = NULL;

    if (!pFnFlushPersistentDebugLines)
        pFnFlushPersistentDebugLines =
            (UFunction*)UObject::GObjObjects()->Data[5277];

    AActor_execFlushPersistentDebugLines_Parms FlushPersistentDebugLines_Parms;

    pFnFlushPersistentDebugLines->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFlushPersistentDebugLines,
                       &FlushPersistentDebugLines_Parms, NULL);

    pFnFlushPersistentDebugLines->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetBasedPosition
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetBasedPosition() {
    static UFunction* pFnGetBasedPosition = NULL;

    if (!pFnGetBasedPosition)
        pFnGetBasedPosition = (UFunction*)UObject::GObjObjects()->Data[5274];

    AActor_execGetBasedPosition_Parms GetBasedPosition_Parms;

    pFnGetBasedPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBasedPosition, &GetBasedPosition_Parms, NULL);

    pFnGetBasedPosition->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetBasedPosition
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetBasedPosition() {
    static UFunction* pFnSetBasedPosition = NULL;

    if (!pFnSetBasedPosition)
        pFnSetBasedPosition = (UFunction*)UObject::GObjObjects()->Data[5270];

    AActor_execSetBasedPosition_Parms SetBasedPosition_Parms;

    pFnSetBasedPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBasedPosition, &SetBasedPosition_Parms, NULL);

    pFnSetBasedPosition->FunctionFlags |= 0x400;
};

// Function Engine.Actor.BP2Vect
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::BP2Vect() {
    static UFunction* pFnBP2Vect = NULL;

    if (!pFnBP2Vect)
        pFnBP2Vect = (UFunction*)UObject::GObjObjects()->Data[5267];

    AActor_execBP2Vect_Parms BP2Vect_Parms;

    pFnBP2Vect->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBP2Vect, &BP2Vect_Parms, NULL);

    pFnBP2Vect->FunctionFlags |= 0x400;
};

// Function Engine.Actor.Vect2BP
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::Vect2BP() {
    static UFunction* pFnVect2BP = NULL;

    if (!pFnVect2BP)
        pFnVect2BP = (UFunction*)UObject::GObjObjects()->Data[5263];

    AActor_execVect2BP_Parms Vect2BP_Parms;

    pFnVect2BP->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnVect2BP, &Vect2BP_Parms, NULL);

    pFnVect2BP->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetForcedInitialReplicatedProperty
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetForcedInitialReplicatedProperty() {
    static UFunction* pFnSetForcedInitialReplicatedProperty = NULL;

    if (!pFnSetForcedInitialReplicatedProperty)
        pFnSetForcedInitialReplicatedProperty =
            (UFunction*)UObject::GObjObjects()->Data[5260];

    AActor_execSetForcedInitialReplicatedProperty_Parms
        SetForcedInitialReplicatedProperty_Parms;

    pFnSetForcedInitialReplicatedProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetForcedInitialReplicatedProperty,
                       &SetForcedInitialReplicatedProperty_Parms, NULL);

    pFnSetForcedInitialReplicatedProperty->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ReplicatedEvent
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[5258];

    AActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Actor.GetAggregateBaseVelocity
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::GetAggregateBaseVelocity() {
    static UFunction* pFnGetAggregateBaseVelocity = NULL;

    if (!pFnGetAggregateBaseVelocity)
        pFnGetAggregateBaseVelocity =
            (UFunction*)UObject::GObjObjects()->Data[5255];

    AActor_execGetAggregateBaseVelocity_Parms GetAggregateBaseVelocity_Parms;

    pFnGetAggregateBaseVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAggregateBaseVelocity,
                       &GetAggregateBaseVelocity_Parms, NULL);

    pFnGetAggregateBaseVelocity->FunctionFlags |= 0x400;
};

// Function Engine.Actor.IsOwnedBy
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::IsOwnedBy() {
    static UFunction* pFnIsOwnedBy = NULL;

    if (!pFnIsOwnedBy)
        pFnIsOwnedBy = (UFunction*)UObject::GObjObjects()->Data[5252];

    AActor_execIsOwnedBy_Parms IsOwnedBy_Parms;

    pFnIsOwnedBy->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsOwnedBy, &IsOwnedBy_Parms, NULL);

    pFnIsOwnedBy->FunctionFlags |= 0x400;
};

// Function Engine.Actor.GetBaseMost
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::GetBaseMost() {
    static UFunction* pFnGetBaseMost = NULL;

    if (!pFnGetBaseMost)
        pFnGetBaseMost = (UFunction*)UObject::GObjObjects()->Data[5250];

    AActor_execGetBaseMost_Parms GetBaseMost_Parms;

    pFnGetBaseMost->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBaseMost, &GetBaseMost_Parms, NULL);

    pFnGetBaseMost->FunctionFlags |= 0x400;
};

// Function Engine.Actor.IsBasedOn
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::IsBasedOn() {
    static UFunction* pFnIsBasedOn = NULL;

    if (!pFnIsBasedOn)
        pFnIsBasedOn = (UFunction*)UObject::GObjObjects()->Data[5247];

    AActor_execIsBasedOn_Parms IsBasedOn_Parms;

    pFnIsBasedOn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsBasedOn, &IsBasedOn_Parms, NULL);

    pFnIsBasedOn->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SearchForBaseBelow
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AActor::SearchForBaseBelow() {
    static UFunction* pFnSearchForBaseBelow = NULL;

    if (!pFnSearchForBaseBelow)
        pFnSearchForBaseBelow = (UFunction*)UObject::GObjObjects()->Data[5243];

    AActor_execSearchForBaseBelow_Parms SearchForBaseBelow_Parms;

    pFnSearchForBaseBelow->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSearchForBaseBelow, &SearchForBaseBelow_Parms, NULL);

    pFnSearchForBaseBelow->FunctionFlags |= 0x400;
};

// Function Engine.Actor.FindBase
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::FindBase() {
    static UFunction* pFnFindBase = NULL;

    if (!pFnFindBase)
        pFnFindBase = (UFunction*)UObject::GObjObjects()->Data[5242];

    AActor_execFindBase_Parms FindBase_Parms;

    pFnFindBase->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindBase, &FindBase_Parms, NULL);

    pFnFindBase->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetOwner
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0110]
// Parameters infos:

void AActor::SetOwner() {
    static UFunction* pFnSetOwner = NULL;

    if (!pFnSetOwner)
        pFnSetOwner = (UFunction*)UObject::GObjObjects()->Data[5240];

    AActor_execSetOwner_Parms SetOwner_Parms;

    unsigned short NativeIndex = pFnSetOwner->iNative;
    pFnSetOwner->iNative = 0;

    pFnSetOwner->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOwner, &SetOwner_Parms, NULL);

    pFnSetOwner->FunctionFlags |= 0x400;

    pFnSetOwner->iNative = NativeIndex;
};

// Function Engine.Actor.SetBase
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x012A]
// Parameters infos:

void AActor::SetBase() {
    static UFunction* pFnSetBase = NULL;

    if (!pFnSetBase)
        pFnSetBase = (UFunction*)UObject::GObjObjects()->Data[5235];

    AActor_execSetBase_Parms SetBase_Parms;

    unsigned short NativeIndex = pFnSetBase->iNative;
    pFnSetBase->iNative = 0;

    pFnSetBase->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBase, &SetBase_Parms, NULL);

    pFnSetBase->FunctionFlags |= 0x400;

    pFnSetBase->iNative = NativeIndex;
};

// Function Engine.Actor.GetTerminalVelocity
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AActor::GetTerminalVelocity() {
    static UFunction* pFnGetTerminalVelocity = NULL;

    if (!pFnGetTerminalVelocity)
        pFnGetTerminalVelocity = (UFunction*)UObject::GObjObjects()->Data[5233];

    AActor_execGetTerminalVelocity_Parms GetTerminalVelocity_Parms;

    pFnGetTerminalVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTerminalVelocity, &GetTerminalVelocity_Parms,
                       NULL);

    pFnGetTerminalVelocity->FunctionFlags |= 0x400;
};

// Function Engine.Actor.AutonomousPhysics
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0F83]
// Parameters infos:

void AActor::AutonomousPhysics() {
    static UFunction* pFnAutonomousPhysics = NULL;

    if (!pFnAutonomousPhysics)
        pFnAutonomousPhysics = (UFunction*)UObject::GObjObjects()->Data[5231];

    AActor_execAutonomousPhysics_Parms AutonomousPhysics_Parms;

    unsigned short NativeIndex = pFnAutonomousPhysics->iNative;
    pFnAutonomousPhysics->iNative = 0;

    pFnAutonomousPhysics->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAutonomousPhysics, &AutonomousPhysics_Parms, NULL);

    pFnAutonomousPhysics->FunctionFlags |= 0x400;

    pFnAutonomousPhysics->iNative = NativeIndex;
};

// Function Engine.Actor.MoveSmooth
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0F81]
// Parameters infos:

void AActor::MoveSmooth() {
    static UFunction* pFnMoveSmooth = NULL;

    if (!pFnMoveSmooth)
        pFnMoveSmooth = (UFunction*)UObject::GObjObjects()->Data[5228];

    AActor_execMoveSmooth_Parms MoveSmooth_Parms;

    unsigned short NativeIndex = pFnMoveSmooth->iNative;
    pFnMoveSmooth->iNative = 0;

    pFnMoveSmooth->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveSmooth, &MoveSmooth_Parms, NULL);

    pFnMoveSmooth->FunctionFlags |= 0x400;

    pFnMoveSmooth->iNative = NativeIndex;
};

// Function Engine.Actor.fixedTurn
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::fixedTurn() {
    static UFunction* pFnfixedTurn = NULL;

    if (!pFnfixedTurn)
        pFnfixedTurn = (UFunction*)UObject::GObjObjects()->Data[5223];

    AActor_execfixedTurn_Parms fixedTurn_Parms;

    pFnfixedTurn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnfixedTurn, &fixedTurn_Parms, NULL);

    pFnfixedTurn->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetShadowParentOnAllAttachedComponents
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AActor::SetShadowParentOnAllAttachedComponents() {
    static UFunction* pFnSetShadowParentOnAllAttachedComponents = NULL;

    if (!pFnSetShadowParentOnAllAttachedComponents)
        pFnSetShadowParentOnAllAttachedComponents =
            (UFunction*)UObject::GObjObjects()->Data[5220];

    AActor_execSetShadowParentOnAllAttachedComponents_Parms
        SetShadowParentOnAllAttachedComponents_Parms;

    pFnSetShadowParentOnAllAttachedComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetShadowParentOnAllAttachedComponents,
                       &SetShadowParentOnAllAttachedComponents_Parms, NULL);

    pFnSetShadowParentOnAllAttachedComponents->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetHardAttach
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetHardAttach() {
    static UFunction* pFnSetHardAttach = NULL;

    if (!pFnSetHardAttach)
        pFnSetHardAttach = (UFunction*)UObject::GObjObjects()->Data[5218];

    AActor_execSetHardAttach_Parms SetHardAttach_Parms;

    pFnSetHardAttach->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetHardAttach, &SetHardAttach_Parms, NULL);

    pFnSetHardAttach->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetRelativeLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetRelativeLocation() {
    static UFunction* pFnSetRelativeLocation = NULL;

    if (!pFnSetRelativeLocation)
        pFnSetRelativeLocation = (UFunction*)UObject::GObjObjects()->Data[5215];

    AActor_execSetRelativeLocation_Parms SetRelativeLocation_Parms;

    pFnSetRelativeLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRelativeLocation, &SetRelativeLocation_Parms,
                       NULL);

    pFnSetRelativeLocation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetRelativeRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetRelativeRotation() {
    static UFunction* pFnSetRelativeRotation = NULL;

    if (!pFnSetRelativeRotation)
        pFnSetRelativeRotation = (UFunction*)UObject::GObjObjects()->Data[5212];

    AActor_execSetRelativeRotation_Parms SetRelativeRotation_Parms;

    pFnSetRelativeRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRelativeRotation, &SetRelativeRotation_Parms,
                       NULL);

    pFnSetRelativeRotation->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetZone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetZone() {
    static UFunction* pFnSetZone = NULL;

    if (!pFnSetZone)
        pFnSetZone = (UFunction*)UObject::GObjObjects()->Data[5210];

    AActor_execSetZone_Parms SetZone_Parms;

    pFnSetZone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetZone, &SetZone_Parms, NULL);

    pFnSetZone->FunctionFlags |= 0x400;
};

// Function Engine.Actor.MovingWhichWay
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AActor::MovingWhichWay() {
    static UFunction* pFnMovingWhichWay = NULL;

    if (!pFnMovingWhichWay)
        pFnMovingWhichWay = (UFunction*)UObject::GObjObjects()->Data[5207];

    AActor_execMovingWhichWay_Parms MovingWhichWay_Parms;

    pFnMovingWhichWay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMovingWhichWay, &MovingWhichWay_Parms, NULL);

    pFnMovingWhichWay->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetRotation
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x012B]
// Parameters infos:

void AActor::SetRotation() {
    static UFunction* pFnSetRotation = NULL;

    if (!pFnSetRotation)
        pFnSetRotation = (UFunction*)UObject::GObjObjects()->Data[5204];

    AActor_execSetRotation_Parms SetRotation_Parms;

    unsigned short NativeIndex = pFnSetRotation->iNative;
    pFnSetRotation->iNative = 0;

    pFnSetRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRotation, &SetRotation_Parms, NULL);

    pFnSetRotation->FunctionFlags |= 0x400;

    pFnSetRotation->iNative = NativeIndex;
};

// Function Engine.Actor.SetLocation
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x010B]
// Parameters infos:

void AActor::SetLocation() {
    static UFunction* pFnSetLocation = NULL;

    if (!pFnSetLocation)
        pFnSetLocation = (UFunction*)UObject::GObjObjects()->Data[5201];

    AActor_execSetLocation_Parms SetLocation_Parms;

    unsigned short NativeIndex = pFnSetLocation->iNative;
    pFnSetLocation->iNative = 0;

    pFnSetLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLocation, &SetLocation_Parms, NULL);

    pFnSetLocation->FunctionFlags |= 0x400;

    pFnSetLocation->iNative = NativeIndex;
};

// Function Engine.Actor.Move
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x010A]
// Parameters infos:

void AActor::Move() {
    static UFunction* pFnMove = NULL;

    if (!pFnMove) pFnMove = (UFunction*)UObject::GObjObjects()->Data[5198];

    AActor_execMove_Parms Move_Parms;

    unsigned short NativeIndex = pFnMove->iNative;
    pFnMove->iNative = 0;

    pFnMove->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMove, &Move_Parms, NULL);

    pFnMove->FunctionFlags |= 0x400;

    pFnMove->iNative = NativeIndex;
};

// Function Engine.Actor.SetDrawScale3D
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetDrawScale3D() {
    static UFunction* pFnSetDrawScale3D = NULL;

    if (!pFnSetDrawScale3D)
        pFnSetDrawScale3D = (UFunction*)UObject::GObjObjects()->Data[5196];

    AActor_execSetDrawScale3D_Parms SetDrawScale3D_Parms;

    pFnSetDrawScale3D->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDrawScale3D, &SetDrawScale3D_Parms, NULL);

    pFnSetDrawScale3D->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetDrawScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetDrawScale() {
    static UFunction* pFnSetDrawScale = NULL;

    if (!pFnSetDrawScale)
        pFnSetDrawScale = (UFunction*)UObject::GObjObjects()->Data[5194];

    AActor_execSetDrawScale_Parms SetDrawScale_Parms;

    pFnSetDrawScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDrawScale, &SetDrawScale_Parms, NULL);

    pFnSetDrawScale->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetCollisionType
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AActor::SetCollisionType() {
    static UFunction* pFnSetCollisionType = NULL;

    if (!pFnSetCollisionType)
        pFnSetCollisionType = (UFunction*)UObject::GObjObjects()->Data[5192];

    AActor_execSetCollisionType_Parms SetCollisionType_Parms;

    pFnSetCollisionType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCollisionType, &SetCollisionType_Parms, NULL);

    pFnSetCollisionType->FunctionFlags |= 0x400;
};

// Function Engine.Actor.SetCollisionSize
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x011B]
// Parameters infos:

void AActor::SetCollisionSize() {
    static UFunction* pFnSetCollisionSize = NULL;

    if (!pFnSetCollisionSize)
        pFnSetCollisionSize = (UFunction*)UObject::GObjObjects()->Data[5189];

    AActor_execSetCollisionSize_Parms SetCollisionSize_Parms;

    unsigned short NativeIndex = pFnSetCollisionSize->iNative;
    pFnSetCollisionSize->iNative = 0;

    pFnSetCollisionSize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCollisionSize, &SetCollisionSize_Parms, NULL);

    pFnSetCollisionSize->FunctionFlags |= 0x400;

    pFnSetCollisionSize->iNative = NativeIndex;
};

// Function Engine.Actor.SetCollision
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0106]
// Parameters infos:

void AActor::SetCollision() {
    static UFunction* pFnSetCollision = NULL;

    if (!pFnSetCollision)
        pFnSetCollision = (UFunction*)UObject::GObjObjects()->Data[5185];

    AActor_execSetCollision_Parms SetCollision_Parms;

    unsigned short NativeIndex = pFnSetCollision->iNative;
    pFnSetCollision->iNative = 0;

    pFnSetCollision->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCollision, &SetCollision_Parms, NULL);

    pFnSetCollision->FunctionFlags |= 0x400;

    pFnSetCollision->iNative = NativeIndex;
};

// Function Engine.Actor.FinishAnim
// [0x00024409] ( FUNC_Final | FUNC_Native ) iNative [0x0105]
// Parameters infos:

void AActor::FinishAnim() {
    static UFunction* pFnFinishAnim = NULL;

    if (!pFnFinishAnim)
        pFnFinishAnim = (UFunction*)UObject::GObjObjects()->Data[5182];

    AActor_execFinishAnim_Parms FinishAnim_Parms;

    unsigned short NativeIndex = pFnFinishAnim->iNative;
    pFnFinishAnim->iNative = 0;

    pFnFinishAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFinishAnim, &FinishAnim_Parms, NULL);

    pFnFinishAnim->FunctionFlags |= 0x400;

    pFnFinishAnim->iNative = NativeIndex;
};

// Function Engine.Actor.Sleep
// [0x00020409] ( FUNC_Final | FUNC_Native ) iNative [0x0100]
// Parameters infos:

void AActor::Sleep() {
    static UFunction* pFnSleep = NULL;

    if (!pFnSleep) pFnSleep = (UFunction*)UObject::GObjObjects()->Data[5180];

    AActor_execSleep_Parms Sleep_Parms;

    unsigned short NativeIndex = pFnSleep->iNative;
    pFnSleep->iNative = 0;

    pFnSleep->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSleep, &Sleep_Parms, NULL);

    pFnSleep->FunctionFlags |= 0x400;

    pFnSleep->iNative = NativeIndex;
};

// Function Engine.Actor.ConsoleCommand
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AActor::ConsoleCommand() {
    static UFunction* pFnConsoleCommand = NULL;

    if (!pFnConsoleCommand)
        pFnConsoleCommand = (UFunction*)UObject::GObjObjects()->Data[5176];

    AActor_execConsoleCommand_Parms ConsoleCommand_Parms;

    pFnConsoleCommand->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnConsoleCommand, &ConsoleCommand_Parms, NULL);

    pFnConsoleCommand->FunctionFlags |= 0x400;
};

// Function Engine.Actor.ForceUpdateComponents
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AActor::ForceUpdateComponents() {
    static UFunction* pFnForceUpdateComponents = NULL;

    if (!pFnForceUpdateComponents)
        pFnForceUpdateComponents =
            (UFunction*)UObject::GObjObjects()->Data[5173];

    AActor_execForceUpdateComponents_Parms ForceUpdateComponents_Parms;

    pFnForceUpdateComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceUpdateComponents, &ForceUpdateComponents_Parms,
                       NULL);

    pFnForceUpdateComponents->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.TWPushLogs
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::TWPushLogs() {
    static UFunction* pFnTWPushLogs = NULL;

    if (!pFnTWPushLogs)
        pFnTWPushLogs = (UFunction*)UObject::GObjObjects()->Data[20470];

    AWorldInfo_execTWPushLogs_Parms TWPushLogs_Parms;

    pFnTWPushLogs->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTWPushLogs, &TWPushLogs_Parms, NULL);

    pFnTWPushLogs->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.TWLogEvent
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::TWLogEvent() {
    static UFunction* pFnTWLogEvent = NULL;

    if (!pFnTWLogEvent)
        pFnTWLogEvent = (UFunction*)UObject::GObjObjects()->Data[20458];

    AWorldInfo_execTWLogEvent_Parms TWLogEvent_Parms;

    pFnTWLogEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTWLogEvent, &TWLogEvent_Parms, NULL);

    pFnTWLogEvent->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.TWLogsInit
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::TWLogsInit() {
    static UFunction* pFnTWLogsInit = NULL;

    if (!pFnTWLogsInit)
        pFnTWLogsInit = (UFunction*)UObject::GObjObjects()->Data[20457];

    AWorldInfo_execTWLogsInit_Parms TWLogsInit_Parms;

    pFnTWLogsInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTWLogsInit, &TWLogsInit_Parms, NULL);

    pFnTWLogsInit->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.LogGameBalance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::LogGameBalance() {
    static UFunction* pFnLogGameBalance = NULL;

    if (!pFnLogGameBalance)
        pFnLogGameBalance = (UFunction*)UObject::GObjObjects()->Data[20455];

    AWorldInfo_execLogGameBalance_Parms LogGameBalance_Parms;

    pFnLogGameBalance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameBalance, &LogGameBalance_Parms, NULL);

    pFnLogGameBalance->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetAkEnvironmentName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetAkEnvironmentName() {
    static UFunction* pFnGetAkEnvironmentName = NULL;

    if (!pFnGetAkEnvironmentName)
        pFnGetAkEnvironmentName =
            (UFunction*)UObject::GObjObjects()->Data[20452];

    AWorldInfo_execGetAkEnvironmentName_Parms GetAkEnvironmentName_Parms;

    pFnGetAkEnvironmentName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAkEnvironmentName, &GetAkEnvironmentName_Parms,
                       NULL);

    pFnGetAkEnvironmentName->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetReverbVolume
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetReverbVolume() {
    static UFunction* pFnGetReverbVolume = NULL;

    if (!pFnGetReverbVolume)
        pFnGetReverbVolume = (UFunction*)UObject::GObjObjects()->Data[20449];

    AWorldInfo_execGetReverbVolume_Parms GetReverbVolume_Parms;

    pFnGetReverbVolume->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetReverbVolume, &GetReverbVolume_Parms, NULL);

    pFnGetReverbVolume->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.ClearObjectPools
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::ClearObjectPools() {
    static UFunction* pFnClearObjectPools = NULL;

    if (!pFnClearObjectPools)
        pFnClearObjectPools = (UFunction*)UObject::GObjObjects()->Data[20448];

    AWorldInfo_execClearObjectPools_Parms ClearObjectPools_Parms;

    pFnClearObjectPools->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearObjectPools, &ClearObjectPools_Parms, NULL);

    pFnClearObjectPools->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.ToggleHostMigration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::ToggleHostMigration() {
    static UFunction* pFnToggleHostMigration = NULL;

    if (!pFnToggleHostMigration)
        pFnToggleHostMigration =
            (UFunction*)UObject::GObjObjects()->Data[20446];

    AWorldInfo_execToggleHostMigration_Parms ToggleHostMigration_Parms;

    pFnToggleHostMigration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnToggleHostMigration, &ToggleHostMigration_Parms,
                       NULL);

    pFnToggleHostMigration->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.NotifyHostMigrationStateChanged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWorldInfo::eventNotifyHostMigrationStateChanged() {
    static UFunction* pFnNotifyHostMigrationStateChanged = NULL;

    if (!pFnNotifyHostMigrationStateChanged)
        pFnNotifyHostMigrationStateChanged =
            (UFunction*)UObject::GObjObjects()->Data[20442];

    AWorldInfo_eventNotifyHostMigrationStateChanged_Parms
        NotifyHostMigrationStateChanged_Parms;

    this->ProcessEvent(pFnNotifyHostMigrationStateChanged,
                       &NotifyHostMigrationStateChanged_Parms, NULL);
};

// Function Engine.WorldInfo.BeginHostMigration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::BeginHostMigration() {
    static UFunction* pFnBeginHostMigration = NULL;

    if (!pFnBeginHostMigration)
        pFnBeginHostMigration = (UFunction*)UObject::GObjObjects()->Data[20440];

    AWorldInfo_execBeginHostMigration_Parms BeginHostMigration_Parms;

    pFnBeginHostMigration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBeginHostMigration, &BeginHostMigration_Parms, NULL);

    pFnBeginHostMigration->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.CanBeginHostMigration
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWorldInfo::eventCanBeginHostMigration() {
    static UFunction* pFnCanBeginHostMigration = NULL;

    if (!pFnCanBeginHostMigration)
        pFnCanBeginHostMigration =
            (UFunction*)UObject::GObjObjects()->Data[20437];

    AWorldInfo_eventCanBeginHostMigration_Parms CanBeginHostMigration_Parms;

    this->ProcessEvent(pFnCanBeginHostMigration, &CanBeginHostMigration_Parms,
                       NULL);
};

// Function Engine.WorldInfo.FindEnvironmentVolume
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::FindEnvironmentVolume() {
    static UFunction* pFnFindEnvironmentVolume = NULL;

    if (!pFnFindEnvironmentVolume)
        pFnFindEnvironmentVolume =
            (UFunction*)UObject::GObjObjects()->Data[20434];

    AWorldInfo_execFindEnvironmentVolume_Parms FindEnvironmentVolume_Parms;

    pFnFindEnvironmentVolume->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindEnvironmentVolume, &FindEnvironmentVolume_Parms,
                       NULL);

    pFnFindEnvironmentVolume->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetWorldInfo
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetWorldInfo() {
    static UFunction* pFnGetWorldInfo = NULL;

    if (!pFnGetWorldInfo)
        pFnGetWorldInfo = (UFunction*)UObject::GObjObjects()->Data[7963];

    AWorldInfo_execGetWorldInfo_Parms GetWorldInfo_Parms;

    pFnGetWorldInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetWorldInfo, &GetWorldInfo_Parms, NULL);

    pFnGetWorldInfo->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetWorldFractureSettings
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetWorldFractureSettings() {
    static UFunction* pFnGetWorldFractureSettings = NULL;

    if (!pFnGetWorldFractureSettings)
        pFnGetWorldFractureSettings =
            (UFunction*)UObject::GObjObjects()->Data[20432];

    AWorldInfo_execGetWorldFractureSettings_Parms
        GetWorldFractureSettings_Parms;

    pFnGetWorldFractureSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetWorldFractureSettings,
                       &GetWorldFractureSettings_Parms, NULL);

    pFnGetWorldFractureSettings->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.DoMemoryTracking
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::DoMemoryTracking() {
    static UFunction* pFnDoMemoryTracking = NULL;

    if (!pFnDoMemoryTracking)
        pFnDoMemoryTracking = (UFunction*)UObject::GObjObjects()->Data[20431];

    AWorldInfo_execDoMemoryTracking_Parms DoMemoryTracking_Parms;

    pFnDoMemoryTracking->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoMemoryTracking, &DoMemoryTracking_Parms, NULL);

    pFnDoMemoryTracking->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetDemoRewindPoints
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetDemoRewindPoints() {
    static UFunction* pFnGetDemoRewindPoints = NULL;

    if (!pFnGetDemoRewindPoints)
        pFnGetDemoRewindPoints =
            (UFunction*)UObject::GObjObjects()->Data[20427];

    AWorldInfo_execGetDemoRewindPoints_Parms GetDemoRewindPoints_Parms;

    pFnGetDemoRewindPoints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDemoRewindPoints, &GetDemoRewindPoints_Parms,
                       NULL);

    pFnGetDemoRewindPoints->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetDemoFrameInfo
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetDemoFrameInfo() {
    static UFunction* pFnGetDemoFrameInfo = NULL;

    if (!pFnGetDemoFrameInfo)
        pFnGetDemoFrameInfo = (UFunction*)UObject::GObjObjects()->Data[20424];

    AWorldInfo_execGetDemoFrameInfo_Parms GetDemoFrameInfo_Parms;

    pFnGetDemoFrameInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDemoFrameInfo, &GetDemoFrameInfo_Parms, NULL);

    pFnGetDemoFrameInfo->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsPlayingDemo
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsPlayingDemo() {
    static UFunction* pFnIsPlayingDemo = NULL;

    if (!pFnIsPlayingDemo)
        pFnIsPlayingDemo = (UFunction*)UObject::GObjObjects()->Data[20422];

    AWorldInfo_execIsPlayingDemo_Parms IsPlayingDemo_Parms;

    pFnIsPlayingDemo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayingDemo, &IsPlayingDemo_Parms, NULL);

    pFnIsPlayingDemo->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsRecordingDemo
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsRecordingDemo() {
    static UFunction* pFnIsRecordingDemo = NULL;

    if (!pFnIsRecordingDemo)
        pFnIsRecordingDemo = (UFunction*)UObject::GObjObjects()->Data[20420];

    AWorldInfo_execIsRecordingDemo_Parms IsRecordingDemo_Parms;

    pFnIsRecordingDemo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsRecordingDemo, &IsRecordingDemo_Parms, NULL);

    pFnIsRecordingDemo->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetDetailMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetDetailMode() {
    static UFunction* pFnGetDetailMode = NULL;

    if (!pFnGetDetailMode)
        pFnGetDetailMode = (UFunction*)UObject::GObjObjects()->Data[20418];

    AWorldInfo_execGetDetailMode_Parms GetDetailMode_Parms;

    pFnGetDetailMode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDetailMode, &GetDetailMode_Parms, NULL);

    pFnGetDetailMode->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetMapName
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetMapName() {
    static UFunction* pFnGetMapName = NULL;

    if (!pFnGetMapName)
        pFnGetMapName = (UFunction*)UObject::GObjObjects()->Data[12563];

    AWorldInfo_execGetMapName_Parms GetMapName_Parms;

    pFnGetMapName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMapName, &GetMapName_Parms, NULL);

    pFnGetMapName->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.SetMapInfo
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::SetMapInfo() {
    static UFunction* pFnSetMapInfo = NULL;

    if (!pFnSetMapInfo)
        pFnSetMapInfo = (UFunction*)UObject::GObjObjects()->Data[20415];

    AWorldInfo_execSetMapInfo_Parms SetMapInfo_Parms;

    pFnSetMapInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMapInfo, &SetMapInfo_Parms, NULL);

    pFnSetMapInfo->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetMapInfo
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetMapInfo() {
    static UFunction* pFnGetMapInfo = NULL;

    if (!pFnGetMapInfo)
        pFnGetMapInfo = (UFunction*)UObject::GObjObjects()->Data[20413];

    AWorldInfo_execGetMapInfo_Parms GetMapInfo_Parms;

    pFnGetMapInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMapInfo, &GetMapInfo_Parms, NULL);

    pFnGetMapInfo->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.SetSeamlessTravelMidpointPause
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::SetSeamlessTravelMidpointPause() {
    static UFunction* pFnSetSeamlessTravelMidpointPause = NULL;

    if (!pFnSetSeamlessTravelMidpointPause)
        pFnSetSeamlessTravelMidpointPause =
            (UFunction*)UObject::GObjObjects()->Data[20411];

    AWorldInfo_execSetSeamlessTravelMidpointPause_Parms
        SetSeamlessTravelMidpointPause_Parms;

    pFnSetSeamlessTravelMidpointPause->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSeamlessTravelMidpointPause,
                       &SetSeamlessTravelMidpointPause_Parms, NULL);

    pFnSetSeamlessTravelMidpointPause->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsInSeamlessTravel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsInSeamlessTravel() {
    static UFunction* pFnIsInSeamlessTravel = NULL;

    if (!pFnIsInSeamlessTravel)
        pFnIsInSeamlessTravel = (UFunction*)UObject::GObjObjects()->Data[20409];

    AWorldInfo_execIsInSeamlessTravel_Parms IsInSeamlessTravel_Parms;

    pFnIsInSeamlessTravel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsInSeamlessTravel, &IsInSeamlessTravel_Parms, NULL);

    pFnIsInSeamlessTravel->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.SeamlessTravel
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::SeamlessTravel() {
    static UFunction* pFnSeamlessTravel = NULL;

    if (!pFnSeamlessTravel)
        pFnSeamlessTravel = (UFunction*)UObject::GObjObjects()->Data[20405];

    AWorldInfo_execSeamlessTravel_Parms SeamlessTravel_Parms;

    pFnSeamlessTravel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSeamlessTravel, &SeamlessTravel_Parms, NULL);

    pFnSeamlessTravel->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.CommitMapChange
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::CommitMapChange() {
    static UFunction* pFnCommitMapChange = NULL;

    if (!pFnCommitMapChange)
        pFnCommitMapChange = (UFunction*)UObject::GObjObjects()->Data[12297];

    AWorldInfo_execCommitMapChange_Parms CommitMapChange_Parms;

    pFnCommitMapChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCommitMapChange, &CommitMapChange_Parms, NULL);

    pFnCommitMapChange->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.CancelPendingMapChange
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::CancelPendingMapChange() {
    static UFunction* pFnCancelPendingMapChange = NULL;

    if (!pFnCancelPendingMapChange)
        pFnCancelPendingMapChange =
            (UFunction*)UObject::GObjObjects()->Data[12296];

    AWorldInfo_execCancelPendingMapChange_Parms CancelPendingMapChange_Parms;

    pFnCancelPendingMapChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCancelPendingMapChange, &CancelPendingMapChange_Parms,
                       NULL);

    pFnCancelPendingMapChange->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsMapChangeReady
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsMapChangeReady() {
    static UFunction* pFnIsMapChangeReady = NULL;

    if (!pFnIsMapChangeReady)
        pFnIsMapChangeReady = (UFunction*)UObject::GObjObjects()->Data[20403];

    AWorldInfo_execIsMapChangeReady_Parms IsMapChangeReady_Parms;

    pFnIsMapChangeReady->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsMapChangeReady, &IsMapChangeReady_Parms, NULL);

    pFnIsMapChangeReady->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsPreparingMapChange
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsPreparingMapChange() {
    static UFunction* pFnIsPreparingMapChange = NULL;

    if (!pFnIsPreparingMapChange)
        pFnIsPreparingMapChange =
            (UFunction*)UObject::GObjObjects()->Data[12298];

    AWorldInfo_execIsPreparingMapChange_Parms IsPreparingMapChange_Parms;

    pFnIsPreparingMapChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPreparingMapChange, &IsPreparingMapChange_Parms,
                       NULL);

    pFnIsPreparingMapChange->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.PrepareMapChange
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::PrepareMapChange() {
    static UFunction* pFnPrepareMapChange = NULL;

    if (!pFnPrepareMapChange)
        pFnPrepareMapChange = (UFunction*)UObject::GObjObjects()->Data[12300];

    AWorldInfo_execPrepareMapChange_Parms PrepareMapChange_Parms;

    pFnPrepareMapChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPrepareMapChange, &PrepareMapChange_Parms, NULL);

    pFnPrepareMapChange->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.NotifyMatchStarted
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::NotifyMatchStarted() {
    static UFunction* pFnNotifyMatchStarted = NULL;

    if (!pFnNotifyMatchStarted)
        pFnNotifyMatchStarted = (UFunction*)UObject::GObjObjects()->Data[20397];

    AWorldInfo_execNotifyMatchStarted_Parms NotifyMatchStarted_Parms;

    pFnNotifyMatchStarted->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnNotifyMatchStarted, &NotifyMatchStarted_Parms, NULL);

    pFnNotifyMatchStarted->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.AllClientConnections
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::AllClientConnections() {
    static UFunction* pFnAllClientConnections = NULL;

    if (!pFnAllClientConnections)
        pFnAllClientConnections =
            (UFunction*)UObject::GObjObjects()->Data[7954];

    AWorldInfo_execAllClientConnections_Parms AllClientConnections_Parms;

    pFnAllClientConnections->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllClientConnections, &AllClientConnections_Parms,
                       NULL);

    pFnAllClientConnections->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.AllPawns
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::AllPawns() {
    static UFunction* pFnAllPawns = NULL;

    if (!pFnAllPawns)
        pFnAllPawns = (UFunction*)UObject::GObjObjects()->Data[20389];

    AWorldInfo_execAllPawns_Parms AllPawns_Parms;

    pFnAllPawns->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllPawns, &AllPawns_Parms, NULL);

    pFnAllPawns->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.AllControllers
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::AllControllers() {
    static UFunction* pFnAllControllers = NULL;

    if (!pFnAllControllers)
        pFnAllControllers = (UFunction*)UObject::GObjObjects()->Data[7985];

    AWorldInfo_execAllControllers_Parms AllControllers_Parms;

    pFnAllControllers->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllControllers, &AllControllers_Parms, NULL);

    pFnAllControllers->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.NavigationPointCheck
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::NavigationPointCheck() {
    static UFunction* pFnNavigationPointCheck = NULL;

    if (!pFnNavigationPointCheck)
        pFnNavigationPointCheck =
            (UFunction*)UObject::GObjObjects()->Data[20380];

    AWorldInfo_execNavigationPointCheck_Parms NavigationPointCheck_Parms;

    pFnNavigationPointCheck->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnNavigationPointCheck, &NavigationPointCheck_Parms,
                       NULL);

    pFnNavigationPointCheck->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.RadiusNavigationPoints
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::RadiusNavigationPoints() {
    static UFunction* pFnRadiusNavigationPoints = NULL;

    if (!pFnRadiusNavigationPoints)
        pFnRadiusNavigationPoints =
            (UFunction*)UObject::GObjObjects()->Data[20375];

    AWorldInfo_execRadiusNavigationPoints_Parms RadiusNavigationPoints_Parms;

    pFnRadiusNavigationPoints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRadiusNavigationPoints, &RadiusNavigationPoints_Parms,
                       NULL);

    pFnRadiusNavigationPoints->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.AllNavigationPoints
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::AllNavigationPoints() {
    static UFunction* pFnAllNavigationPoints = NULL;

    if (!pFnAllNavigationPoints)
        pFnAllNavigationPoints =
            (UFunction*)UObject::GObjObjects()->Data[12456];

    AWorldInfo_execAllNavigationPoints_Parms AllNavigationPoints_Parms;

    pFnAllNavigationPoints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllNavigationPoints, &AllNavigationPoints_Parms,
                       NULL);

    pFnAllNavigationPoints->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.Reset
// [0x00020002]
// Parameters infos:

void AWorldInfo::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[20372];

    AWorldInfo_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.WorldInfo.PostBeginPlay
// [0x00020102]
// Parameters infos:

void AWorldInfo::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[20371];

    AWorldInfo_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.WorldInfo.PreBeginPlay
// [0x00020102]
// Parameters infos:

void AWorldInfo::PreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[20360];

    AWorldInfo_execPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.WorldInfo.ThisIsNeverExecuted
// [0x00020002]
// Parameters infos:

void AWorldInfo::ThisIsNeverExecuted() {
    static UFunction* pFnThisIsNeverExecuted = NULL;

    if (!pFnThisIsNeverExecuted)
        pFnThisIsNeverExecuted =
            (UFunction*)UObject::GObjObjects()->Data[20358];

    AWorldInfo_execThisIsNeverExecuted_Parms ThisIsNeverExecuted_Parms;

    this->ProcessEvent(pFnThisIsNeverExecuted, &ThisIsNeverExecuted_Parms,
                       NULL);
};

// Function Engine.WorldInfo.ServerTravel
// [0x00024902] ( FUNC_Event )
// Parameters infos:

void AWorldInfo::eventServerTravel() {
    static UFunction* pFnServerTravel = NULL;

    if (!pFnServerTravel)
        pFnServerTravel = (UFunction*)UObject::GObjObjects()->Data[20354];

    AWorldInfo_eventServerTravel_Parms ServerTravel_Parms;

    this->ProcessEvent(pFnServerTravel, &ServerTravel_Parms, NULL);
};

// Function Engine.WorldInfo.GetGameClass
// [0x00020102]
// Parameters infos:

void AWorldInfo::GetGameClass() {
    static UFunction* pFnGetGameClass = NULL;

    if (!pFnGetGameClass)
        pFnGetGameClass = (UFunction*)UObject::GObjObjects()->Data[12565];

    AWorldInfo_execGetGameClass_Parms GetGameClass_Parms;

    this->ProcessEvent(pFnGetGameClass, &GetGameClass_Parms, NULL);
};

// Function Engine.WorldInfo.GetAddressURL
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetAddressURL() {
    static UFunction* pFnGetAddressURL = NULL;

    if (!pFnGetAddressURL)
        pFnGetAddressURL = (UFunction*)UObject::GObjObjects()->Data[20352];

    AWorldInfo_execGetAddressURL_Parms GetAddressURL_Parms;

    pFnGetAddressURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAddressURL, &GetAddressURL_Parms, NULL);

    pFnGetAddressURL->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.VerifyNavList
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::VerifyNavList() {
    static UFunction* pFnVerifyNavList = NULL;

    if (!pFnVerifyNavList)
        pFnVerifyNavList = (UFunction*)UObject::GObjObjects()->Data[20351];

    AWorldInfo_execVerifyNavList_Parms VerifyNavList_Parms;

    pFnVerifyNavList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnVerifyNavList, &VerifyNavList_Parms, NULL);

    pFnVerifyNavList->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.ForceGarbageCollection
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::ForceGarbageCollection() {
    static UFunction* pFnForceGarbageCollection = NULL;

    if (!pFnForceGarbageCollection)
        pFnForceGarbageCollection =
            (UFunction*)UObject::GObjObjects()->Data[12303];

    AWorldInfo_execForceGarbageCollection_Parms ForceGarbageCollection_Parms;

    pFnForceGarbageCollection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceGarbageCollection, &ForceGarbageCollection_Parms,
                       NULL);

    pFnForceGarbageCollection->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsPlayInMobilePreview
// [0x00022501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsPlayInMobilePreview() {
    static UFunction* pFnIsPlayInMobilePreview = NULL;

    if (!pFnIsPlayInMobilePreview)
        pFnIsPlayInMobilePreview =
            (UFunction*)UObject::GObjObjects()->Data[20348];

    AWorldInfo_execIsPlayInMobilePreview_Parms IsPlayInMobilePreview_Parms;

    pFnIsPlayInMobilePreview->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayInMobilePreview, &IsPlayInMobilePreview_Parms,
                       NULL);

    pFnIsPlayInMobilePreview->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsPlayInPreview
// [0x00022501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsPlayInPreview() {
    static UFunction* pFnIsPlayInPreview = NULL;

    if (!pFnIsPlayInPreview)
        pFnIsPlayInPreview = (UFunction*)UObject::GObjObjects()->Data[20346];

    AWorldInfo_execIsPlayInPreview_Parms IsPlayInPreview_Parms;

    pFnIsPlayInPreview->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayInPreview, &IsPlayInPreview_Parms, NULL);

    pFnIsPlayInPreview->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsPlayInEditor
// [0x00022501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsPlayInEditor() {
    static UFunction* pFnIsPlayInEditor = NULL;

    if (!pFnIsPlayInEditor)
        pFnIsPlayInEditor = (UFunction*)UObject::GObjObjects()->Data[20344];

    AWorldInfo_execIsPlayInEditor_Parms IsPlayInEditor_Parms;

    pFnIsPlayInEditor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayInEditor, &IsPlayInEditor_Parms, NULL);

    pFnIsPlayInEditor->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsWithGFx
// [0x00022501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsWithGFx() {
    static UFunction* pFnIsWithGFx = NULL;

    if (!pFnIsWithGFx)
        pFnIsWithGFx = (UFunction*)UObject::GObjObjects()->Data[20342];

    AWorldInfo_execIsWithGFx_Parms IsWithGFx_Parms;

    pFnIsWithGFx->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsWithGFx, &IsWithGFx_Parms, NULL);

    pFnIsWithGFx->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetResolutionBasedHUDScale
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetResolutionBasedHUDScale() {
    static UFunction* pFnGetResolutionBasedHUDScale = NULL;

    if (!pFnGetResolutionBasedHUDScale)
        pFnGetResolutionBasedHUDScale =
            (UFunction*)UObject::GObjObjects()->Data[20340];

    AWorldInfo_execGetResolutionBasedHUDScale_Parms
        GetResolutionBasedHUDScale_Parms;

    pFnGetResolutionBasedHUDScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetResolutionBasedHUDScale,
                       &GetResolutionBasedHUDScale_Parms, NULL);

    pFnGetResolutionBasedHUDScale->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsConsoleBuild
// [0x00026501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsConsoleBuild() {
    static UFunction* pFnIsConsoleBuild = NULL;

    if (!pFnIsConsoleBuild)
        pFnIsConsoleBuild = (UFunction*)UObject::GObjObjects()->Data[8007];

    AWorldInfo_execIsConsoleBuild_Parms IsConsoleBuild_Parms;

    pFnIsConsoleBuild->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsConsoleBuild, &IsConsoleBuild_Parms, NULL);

    pFnIsConsoleBuild->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsNeoCheckerboardRendering
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsNeoCheckerboardRendering() {
    static UFunction* pFnIsNeoCheckerboardRendering = NULL;

    if (!pFnIsNeoCheckerboardRendering)
        pFnIsNeoCheckerboardRendering =
            (UFunction*)UObject::GObjObjects()->Data[20337];

    AWorldInfo_execIsNeoCheckerboardRendering_Parms
        IsNeoCheckerboardRendering_Parms;

    pFnIsNeoCheckerboardRendering->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsNeoCheckerboardRendering,
                       &IsNeoCheckerboardRendering_Parms, NULL);

    pFnIsNeoCheckerboardRendering->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsE3Build
// [0x00022501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsE3Build() {
    static UFunction* pFnIsE3Build = NULL;

    if (!pFnIsE3Build)
        pFnIsE3Build = (UFunction*)UObject::GObjObjects()->Data[20335];

    AWorldInfo_execIsE3Build_Parms IsE3Build_Parms;

    pFnIsE3Build->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsE3Build, &IsE3Build_Parms, NULL);

    pFnIsE3Build->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsConsoleDedicatedServer
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsConsoleDedicatedServer() {
    static UFunction* pFnIsConsoleDedicatedServer = NULL;

    if (!pFnIsConsoleDedicatedServer)
        pFnIsConsoleDedicatedServer =
            (UFunction*)UObject::GObjObjects()->Data[7995];

    AWorldInfo_execIsConsoleDedicatedServer_Parms
        IsConsoleDedicatedServer_Parms;

    pFnIsConsoleDedicatedServer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsConsoleDedicatedServer,
                       &IsConsoleDedicatedServer_Parms, NULL);

    pFnIsConsoleDedicatedServer->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsDemoBuild
// [0x00022501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsDemoBuild() {
    static UFunction* pFnIsDemoBuild = NULL;

    if (!pFnIsDemoBuild)
        pFnIsDemoBuild = (UFunction*)UObject::GObjObjects()->Data[20333];

    AWorldInfo_execIsDemoBuild_Parms IsDemoBuild_Parms;

    pFnIsDemoBuild->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsDemoBuild, &IsDemoBuild_Parms, NULL);

    pFnIsDemoBuild->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetLocalURL
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetLocalURL() {
    static UFunction* pFnGetLocalURL = NULL;

    if (!pFnGetLocalURL)
        pFnGetLocalURL = (UFunction*)UObject::GObjObjects()->Data[20331];

    AWorldInfo_execGetLocalURL_Parms GetLocalURL_Parms;

    pFnGetLocalURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLocalURL, &GetLocalURL_Parms, NULL);

    pFnGetLocalURL->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.SetLevelRBGravity
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::SetLevelRBGravity() {
    static UFunction* pFnSetLevelRBGravity = NULL;

    if (!pFnSetLevelRBGravity)
        pFnSetLevelRBGravity = (UFunction*)UObject::GObjObjects()->Data[20329];

    AWorldInfo_execSetLevelRBGravity_Parms SetLevelRBGravity_Parms;

    pFnSetLevelRBGravity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLevelRBGravity, &SetLevelRBGravity_Parms, NULL);

    pFnSetLevelRBGravity->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetAllRootSequences
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetAllRootSequences() {
    static UFunction* pFnGetAllRootSequences = NULL;

    if (!pFnGetAllRootSequences)
        pFnGetAllRootSequences =
            (UFunction*)UObject::GObjObjects()->Data[20326];

    AWorldInfo_execGetAllRootSequences_Parms GetAllRootSequences_Parms;

    pFnGetAllRootSequences->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAllRootSequences, &GetAllRootSequences_Parms,
                       NULL);

    pFnGetAllRootSequences->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetGameSequence
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::GetGameSequence() {
    static UFunction* pFnGetGameSequence = NULL;

    if (!pFnGetGameSequence)
        pFnGetGameSequence = (UFunction*)UObject::GObjObjects()->Data[6285];

    AWorldInfo_execGetGameSequence_Parms GetGameSequence_Parms;

    pFnGetGameSequence->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGameSequence, &GetGameSequence_Parms, NULL);

    pFnGetGameSequence->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetGravityZ
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetGravityZ() {
    static UFunction* pFnGetGravityZ = NULL;

    if (!pFnGetGravityZ)
        pFnGetGravityZ = (UFunction*)UObject::GObjObjects()->Data[20324];

    AWorldInfo_execGetGravityZ_Parms GetGravityZ_Parms;

    pFnGetGravityZ->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGravityZ, &GetGravityZ_Parms, NULL);

    pFnGetGravityZ->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.UpdateMusicTrack
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::UpdateMusicTrack() {
    static UFunction* pFnUpdateMusicTrack = NULL;

    if (!pFnUpdateMusicTrack)
        pFnUpdateMusicTrack = (UFunction*)UObject::GObjObjects()->Data[20322];

    AWorldInfo_execUpdateMusicTrack_Parms UpdateMusicTrack_Parms;

    pFnUpdateMusicTrack->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMusicTrack, &UpdateMusicTrack_Parms, NULL);

    pFnUpdateMusicTrack->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.SetMusicVolume
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::SetMusicVolume() {
    static UFunction* pFnSetMusicVolume = NULL;

    if (!pFnSetMusicVolume)
        pFnSetMusicVolume = (UFunction*)UObject::GObjObjects()->Data[20311];

    AWorldInfo_execSetMusicVolume_Parms SetMusicVolume_Parms;

    pFnSetMusicVolume->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMusicVolume, &SetMusicVolume_Parms, NULL);

    pFnSetMusicVolume->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.IsMenuLevel
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::IsMenuLevel() {
    static UFunction* pFnIsMenuLevel = NULL;

    if (!pFnIsMenuLevel)
        pFnIsMenuLevel = (UFunction*)UObject::GObjObjects()->Data[20308];

    AWorldInfo_execIsMenuLevel_Parms IsMenuLevel_Parms;

    pFnIsMenuLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsMenuLevel, &IsMenuLevel_Parms, NULL);

    pFnIsMenuLevel->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.AddOnScreenDebugMessage
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AWorldInfo::AddOnScreenDebugMessage() {
    static UFunction* pFnAddOnScreenDebugMessage = NULL;

    if (!pFnAddOnScreenDebugMessage)
        pFnAddOnScreenDebugMessage =
            (UFunction*)UObject::GObjObjects()->Data[20303];

    AWorldInfo_execAddOnScreenDebugMessage_Parms AddOnScreenDebugMessage_Parms;

    pFnAddOnScreenDebugMessage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddOnScreenDebugMessage,
                       &AddOnScreenDebugMessage_Parms, NULL);

    pFnAddOnScreenDebugMessage->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWorldInfo::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[20301];

    AWorldInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.WorldInfo.GetNavMeshPathGoalEvaluatorFromCache
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetNavMeshPathGoalEvaluatorFromCache() {
    static UFunction* pFnGetNavMeshPathGoalEvaluatorFromCache = NULL;

    if (!pFnGetNavMeshPathGoalEvaluatorFromCache)
        pFnGetNavMeshPathGoalEvaluatorFromCache =
            (UFunction*)UObject::GObjObjects()->Data[20297];

    AWorldInfo_execGetNavMeshPathGoalEvaluatorFromCache_Parms
        GetNavMeshPathGoalEvaluatorFromCache_Parms;

    pFnGetNavMeshPathGoalEvaluatorFromCache->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNavMeshPathGoalEvaluatorFromCache,
                       &GetNavMeshPathGoalEvaluatorFromCache_Parms, NULL);

    pFnGetNavMeshPathGoalEvaluatorFromCache->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.GetNavMeshPathConstraintFromCache
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::GetNavMeshPathConstraintFromCache() {
    static UFunction* pFnGetNavMeshPathConstraintFromCache = NULL;

    if (!pFnGetNavMeshPathConstraintFromCache)
        pFnGetNavMeshPathConstraintFromCache =
            (UFunction*)UObject::GObjObjects()->Data[20293];

    AWorldInfo_execGetNavMeshPathConstraintFromCache_Parms
        GetNavMeshPathConstraintFromCache_Parms;

    pFnGetNavMeshPathConstraintFromCache->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNavMeshPathConstraintFromCache,
                       &GetNavMeshPathConstraintFromCache_Parms, NULL);

    pFnGetNavMeshPathConstraintFromCache->FunctionFlags |= 0x400;
};

// Function Engine.WorldInfo.ReleaseCachedConstraintsAndEvaluators
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AWorldInfo::ReleaseCachedConstraintsAndEvaluators() {
    static UFunction* pFnReleaseCachedConstraintsAndEvaluators = NULL;

    if (!pFnReleaseCachedConstraintsAndEvaluators)
        pFnReleaseCachedConstraintsAndEvaluators =
            (UFunction*)UObject::GObjObjects()->Data[20292];

    AWorldInfo_execReleaseCachedConstraintsAndEvaluators_Parms
        ReleaseCachedConstraintsAndEvaluators_Parms;

    pFnReleaseCachedConstraintsAndEvaluators->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReleaseCachedConstraintsAndEvaluators,
                       &ReleaseCachedConstraintsAndEvaluators_Parms, NULL);

    pFnReleaseCachedConstraintsAndEvaluators->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentEnumerator.TriggerFindDLCDelegates
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentEnumerator::TriggerFindDLCDelegates() {
    static UFunction* pFnTriggerFindDLCDelegates = NULL;

    if (!pFnTriggerFindDLCDelegates)
        pFnTriggerFindDLCDelegates =
            (UFunction*)UObject::GObjObjects()->Data[18449];

    UDownloadableContentEnumerator_execTriggerFindDLCDelegates_Parms
        TriggerFindDLCDelegates_Parms;

    pFnTriggerFindDLCDelegates->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTriggerFindDLCDelegates,
                       &TriggerFindDLCDelegates_Parms, NULL);

    pFnTriggerFindDLCDelegates->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentEnumerator.InstallDLC
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentEnumerator::InstallDLC() {
    static UFunction* pFnInstallDLC = NULL;

    if (!pFnInstallDLC)
        pFnInstallDLC = (UFunction*)UObject::GObjObjects()->Data[18447];

    UDownloadableContentEnumerator_execInstallDLC_Parms InstallDLC_Parms;

    pFnInstallDLC->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInstallDLC, &InstallDLC_Parms, NULL);

    pFnInstallDLC->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentEnumerator.InstallAllDLC
// [0x00020002]
// Parameters infos:

void UDownloadableContentEnumerator::InstallAllDLC() {
    static UFunction* pFnInstallAllDLC = NULL;

    if (!pFnInstallAllDLC)
        pFnInstallAllDLC = (UFunction*)UObject::GObjObjects()->Data[18445];

    UDownloadableContentEnumerator_execInstallAllDLC_Parms InstallAllDLC_Parms;

    this->ProcessEvent(pFnInstallAllDLC, &InstallAllDLC_Parms, NULL);
};

// Function Engine.DownloadableContentEnumerator.DeleteDLC
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentEnumerator::DeleteDLC() {
    static UFunction* pFnDeleteDLC = NULL;

    if (!pFnDeleteDLC)
        pFnDeleteDLC = (UFunction*)UObject::GObjObjects()->Data[18443];

    UDownloadableContentEnumerator_execDeleteDLC_Parms DeleteDLC_Parms;

    pFnDeleteDLC->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeleteDLC, &DeleteDLC_Parms, NULL);

    pFnDeleteDLC->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentEnumerator.ClearFindDLCDelegate
// [0x00020002]
// Parameters infos:

void UDownloadableContentEnumerator::ClearFindDLCDelegate() {
    static UFunction* pFnClearFindDLCDelegate = NULL;

    if (!pFnClearFindDLCDelegate)
        pFnClearFindDLCDelegate =
            (UFunction*)UObject::GObjObjects()->Data[18440];

    UDownloadableContentEnumerator_execClearFindDLCDelegate_Parms
        ClearFindDLCDelegate_Parms;

    this->ProcessEvent(pFnClearFindDLCDelegate, &ClearFindDLCDelegate_Parms,
                       NULL);
};

// Function Engine.DownloadableContentEnumerator.AddFindDLCDelegate
// [0x00020002]
// Parameters infos:

void UDownloadableContentEnumerator::AddFindDLCDelegate() {
    static UFunction* pFnAddFindDLCDelegate = NULL;

    if (!pFnAddFindDLCDelegate)
        pFnAddFindDLCDelegate = (UFunction*)UObject::GObjObjects()->Data[18438];

    UDownloadableContentEnumerator_execAddFindDLCDelegate_Parms
        AddFindDLCDelegate_Parms;

    this->ProcessEvent(pFnAddFindDLCDelegate, &AddFindDLCDelegate_Parms, NULL);
};

// Function Engine.DownloadableContentEnumerator.OnFindDLCComplete
// [0x00120000]
// Parameters infos:

void UDownloadableContentEnumerator::OnFindDLCComplete() {
    static UFunction* pFnOnFindDLCComplete = NULL;

    if (!pFnOnFindDLCComplete)
        pFnOnFindDLCComplete = (UFunction*)UObject::GObjObjects()->Data[18437];

    UDownloadableContentEnumerator_execOnFindDLCComplete_Parms
        OnFindDLCComplete_Parms;

    this->ProcessEvent(pFnOnFindDLCComplete, &OnFindDLCComplete_Parms, NULL);
};

// Function Engine.DownloadableContentEnumerator.FindDLC
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentEnumerator::FindDLC() {
    static UFunction* pFnFindDLC = NULL;

    if (!pFnFindDLC)
        pFnFindDLC = (UFunction*)UObject::GObjObjects()->Data[18436];

    UDownloadableContentEnumerator_execFindDLC_Parms FindDLC_Parms;

    pFnFindDLC->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindDLC, &FindDLC_Parms, NULL);

    pFnFindDLC->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.OnRefreshComplete
// [0x00120000]
// Parameters infos:

void UDownloadableContentManager::OnRefreshComplete() {
    static UFunction* pFnOnRefreshComplete = NULL;

    if (!pFnOnRefreshComplete)
        pFnOnRefreshComplete = (UFunction*)UObject::GObjObjects()->Data[18497];

    UDownloadableContentManager_execOnRefreshComplete_Parms
        OnRefreshComplete_Parms;

    this->ProcessEvent(pFnOnRefreshComplete, &OnRefreshComplete_Parms, NULL);
};

// Function Engine.DownloadableContentManager.AddPackagesToFullyLoad
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::AddPackagesToFullyLoad() {
    static UFunction* pFnAddPackagesToFullyLoad = NULL;

    if (!pFnAddPackagesToFullyLoad)
        pFnAddPackagesToFullyLoad =
            (UFunction*)UObject::GObjObjects()->Data[18495];

    UDownloadableContentManager_execAddPackagesToFullyLoad_Parms
        AddPackagesToFullyLoad_Parms;

    pFnAddPackagesToFullyLoad->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddPackagesToFullyLoad, &AddPackagesToFullyLoad_Parms,
                       NULL);

    pFnAddPackagesToFullyLoad->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.RefreshDLCEnumComplete
// [0x00020002]
// Parameters infos:

void UDownloadableContentManager::RefreshDLCEnumComplete() {
    static UFunction* pFnRefreshDLCEnumComplete = NULL;

    if (!pFnRefreshDLCEnumComplete)
        pFnRefreshDLCEnumComplete =
            (UFunction*)UObject::GObjObjects()->Data[18493];

    UDownloadableContentManager_execRefreshDLCEnumComplete_Parms
        RefreshDLCEnumComplete_Parms;

    this->ProcessEvent(pFnRefreshDLCEnumComplete, &RefreshDLCEnumComplete_Parms,
                       NULL);
};

// Function Engine.DownloadableContentManager.RefreshDLC
// [0x00020002]
// Parameters infos:

void UDownloadableContentManager::RefreshDLC() {
    static UFunction* pFnRefreshDLC = NULL;

    if (!pFnRefreshDLC)
        pFnRefreshDLC = (UFunction*)UObject::GObjObjects()->Data[18491];

    UDownloadableContentManager_execRefreshDLC_Parms RefreshDLC_Parms;

    this->ProcessEvent(pFnRefreshDLC, &RefreshDLC_Parms, NULL);
};

// Function Engine.DownloadableContentManager.OnContentChange
// [0x00020002]
// Parameters infos:

void UDownloadableContentManager::OnContentChange() {
    static UFunction* pFnOnContentChange = NULL;

    if (!pFnOnContentChange)
        pFnOnContentChange = (UFunction*)UObject::GObjObjects()->Data[18490];

    UDownloadableContentManager_execOnContentChange_Parms OnContentChange_Parms;

    this->ProcessEvent(pFnOnContentChange, &OnContentChange_Parms, NULL);
};

// Function Engine.DownloadableContentManager.OnStorageDeviceChange
// [0x00020002]
// Parameters infos:

void UDownloadableContentManager::OnStorageDeviceChange() {
    static UFunction* pFnOnStorageDeviceChange = NULL;

    if (!pFnOnStorageDeviceChange)
        pFnOnStorageDeviceChange =
            (UFunction*)UObject::GObjObjects()->Data[18489];

    UDownloadableContentManager_execOnStorageDeviceChange_Parms
        OnStorageDeviceChange_Parms;

    this->ProcessEvent(pFnOnStorageDeviceChange, &OnStorageDeviceChange_Parms,
                       NULL);
};

// Function Engine.DownloadableContentManager.OnLoginChange
// [0x00020002]
// Parameters infos:

void UDownloadableContentManager::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[18487];

    UDownloadableContentManager_execOnLoginChange_Parms OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.DownloadableContentManager.Init
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UDownloadableContentManager::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[18485];

    UDownloadableContentManager_eventInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.DownloadableContentManager.InstallNonPackageFiles
// [0x00480400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::InstallNonPackageFiles() {
    static UFunction* pFnInstallNonPackageFiles = NULL;

    if (!pFnInstallNonPackageFiles)
        pFnInstallNonPackageFiles =
            (UFunction*)UObject::GObjObjects()->Data[18483];

    UDownloadableContentManager_execInstallNonPackageFiles_Parms
        InstallNonPackageFiles_Parms;

    pFnInstallNonPackageFiles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInstallNonPackageFiles, &InstallNonPackageFiles_Parms,
                       NULL);

    pFnInstallNonPackageFiles->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.InstallPackages
// [0x00480400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::InstallPackages() {
    static UFunction* pFnInstallPackages = NULL;

    if (!pFnInstallPackages)
        pFnInstallPackages = (UFunction*)UObject::GObjObjects()->Data[18481];

    UDownloadableContentManager_execInstallPackages_Parms InstallPackages_Parms;

    pFnInstallPackages->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInstallPackages, &InstallPackages_Parms, NULL);

    pFnInstallPackages->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.UpdateObjectLists
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::UpdateObjectLists() {
    static UFunction* pFnUpdateObjectLists = NULL;

    if (!pFnUpdateObjectLists)
        pFnUpdateObjectLists = (UFunction*)UObject::GObjObjects()->Data[18480];

    UDownloadableContentManager_execUpdateObjectLists_Parms
        UpdateObjectLists_Parms;

    pFnUpdateObjectLists->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateObjectLists, &UpdateObjectLists_Parms, NULL);

    pFnUpdateObjectLists->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.MarkPerObjectConfigPendingKill
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::MarkPerObjectConfigPendingKill() {
    static UFunction* pFnMarkPerObjectConfigPendingKill = NULL;

    if (!pFnMarkPerObjectConfigPendingKill)
        pFnMarkPerObjectConfigPendingKill =
            (UFunction*)UObject::GObjObjects()->Data[18478];

    UDownloadableContentManager_execMarkPerObjectConfigPendingKill_Parms
        MarkPerObjectConfigPendingKill_Parms;

    pFnMarkPerObjectConfigPendingKill->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMarkPerObjectConfigPendingKill,
                       &MarkPerObjectConfigPendingKill_Parms, NULL);

    pFnMarkPerObjectConfigPendingKill->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.AddSectionToObjectList
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::AddSectionToObjectList() {
    static UFunction* pFnAddSectionToObjectList = NULL;

    if (!pFnAddSectionToObjectList)
        pFnAddSectionToObjectList =
            (UFunction*)UObject::GObjObjects()->Data[18476];

    UDownloadableContentManager_execAddSectionToObjectList_Parms
        AddSectionToObjectList_Parms;

    pFnAddSectionToObjectList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddSectionToObjectList, &AddSectionToObjectList_Parms,
                       NULL);

    pFnAddSectionToObjectList->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.GetDLCNonPackageFilePath
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::GetDLCNonPackageFilePath() {
    static UFunction* pFnGetDLCNonPackageFilePath = NULL;

    if (!pFnGetDLCNonPackageFilePath)
        pFnGetDLCNonPackageFilePath =
            (UFunction*)UObject::GObjObjects()->Data[18472];

    UDownloadableContentManager_execGetDLCNonPackageFilePath_Parms
        GetDLCNonPackageFilePath_Parms;

    pFnGetDLCNonPackageFilePath->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDLCNonPackageFilePath,
                       &GetDLCNonPackageFilePath_Parms, NULL);

    pFnGetDLCNonPackageFilePath->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.ClearDLC
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::ClearDLC() {
    static UFunction* pFnClearDLC = NULL;

    if (!pFnClearDLC)
        pFnClearDLC = (UFunction*)UObject::GObjObjects()->Data[18471];

    UDownloadableContentManager_execClearDLC_Parms ClearDLC_Parms;

    pFnClearDLC->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearDLC, &ClearDLC_Parms, NULL);

    pFnClearDLC->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.InstallDLCs
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::InstallDLCs() {
    static UFunction* pFnInstallDLCs = NULL;

    if (!pFnInstallDLCs)
        pFnInstallDLCs = (UFunction*)UObject::GObjObjects()->Data[18468];

    UDownloadableContentManager_execInstallDLCs_Parms InstallDLCs_Parms;

    pFnInstallDLCs->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInstallDLCs, &InstallDLCs_Parms, NULL);

    pFnInstallDLCs->FunctionFlags |= 0x400;
};

// Function Engine.DownloadableContentManager.InstallDLC
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UDownloadableContentManager::InstallDLC() {
    static UFunction* pFnInstallDLC = NULL;

    if (!pFnInstallDLC)
        pFnInstallDLC = (UFunction*)UObject::GObjObjects()->Data[18465];

    UDownloadableContentManager_execInstallDLC_Parms InstallDLC_Parms;

    pFnInstallDLC->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInstallDLC, &InstallDLC_Parms, NULL);

    pFnInstallDLC->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetSystemSettingFloat
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetSystemSettingFloat() {
    static UFunction* pFnGetSystemSettingFloat = NULL;

    if (!pFnGetSystemSettingFloat)
        pFnGetSystemSettingFloat =
            (UFunction*)UObject::GObjObjects()->Data[19447];

    UEngine_execGetSystemSettingFloat_Parms GetSystemSettingFloat_Parms;

    pFnGetSystemSettingFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSystemSettingFloat, &GetSystemSettingFloat_Parms,
                       NULL);

    pFnGetSystemSettingFloat->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetSystemSettingInt
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetSystemSettingInt() {
    static UFunction* pFnGetSystemSettingInt = NULL;

    if (!pFnGetSystemSettingInt)
        pFnGetSystemSettingInt =
            (UFunction*)UObject::GObjObjects()->Data[19444];

    UEngine_execGetSystemSettingInt_Parms GetSystemSettingInt_Parms;

    pFnGetSystemSettingInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSystemSettingInt, &GetSystemSettingInt_Parms,
                       NULL);

    pFnGetSystemSettingInt->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetSystemSettingBool
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetSystemSettingBool() {
    static UFunction* pFnGetSystemSettingBool = NULL;

    if (!pFnGetSystemSettingBool)
        pFnGetSystemSettingBool =
            (UFunction*)UObject::GObjObjects()->Data[19441];

    UEngine_execGetSystemSettingBool_Parms GetSystemSettingBool_Parms;

    pFnGetSystemSettingBool->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSystemSettingBool, &GetSystemSettingBool_Parms,
                       NULL);

    pFnGetSystemSettingBool->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetPhysXLevel
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetPhysXLevel() {
    static UFunction* pFnGetPhysXLevel = NULL;

    if (!pFnGetPhysXLevel)
        pFnGetPhysXLevel = (UFunction*)UObject::GObjObjects()->Data[19439];

    UEngine_execGetPhysXLevel_Parms GetPhysXLevel_Parms;

    pFnGetPhysXLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPhysXLevel, &GetPhysXLevel_Parms, NULL);

    pFnGetPhysXLevel->FunctionFlags |= 0x400;
};

// Function Engine.Engine.LaunchURL
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::LaunchURL() {
    static UFunction* pFnLaunchURL = NULL;

    if (!pFnLaunchURL)
        pFnLaunchURL = (UFunction*)UObject::GObjObjects()->Data[19437];

    UEngine_execLaunchURL_Parms LaunchURL_Parms;

    pFnLaunchURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLaunchURL, &LaunchURL_Parms, NULL);

    pFnLaunchURL->FunctionFlags |= 0x400;
};

// Function Engine.Engine.BasicLoadObject
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::BasicLoadObject() {
    static UFunction* pFnBasicLoadObject = NULL;

    if (!pFnBasicLoadObject)
        pFnBasicLoadObject = (UFunction*)UObject::GObjObjects()->Data[19431];

    UEngine_execBasicLoadObject_Parms BasicLoadObject_Parms;

    pFnBasicLoadObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBasicLoadObject, &BasicLoadObject_Parms, NULL);

    pFnBasicLoadObject->FunctionFlags |= 0x400;
};

// Function Engine.Engine.BasicSaveObject
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::BasicSaveObject() {
    static UFunction* pFnBasicSaveObject = NULL;

    if (!pFnBasicSaveObject)
        pFnBasicSaveObject = (UFunction*)UObject::GObjObjects()->Data[19424];

    UEngine_execBasicSaveObject_Parms BasicSaveObject_Parms;

    pFnBasicSaveObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBasicSaveObject, &BasicSaveObject_Parms, NULL);

    pFnBasicSaveObject->FunctionFlags |= 0x400;
};

// Function Engine.Engine.AddTextureStreamingSlaveLoc
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::AddTextureStreamingSlaveLoc() {
    static UFunction* pFnAddTextureStreamingSlaveLoc = NULL;

    if (!pFnAddTextureStreamingSlaveLoc)
        pFnAddTextureStreamingSlaveLoc =
            (UFunction*)UObject::GObjObjects()->Data[19419];

    UEngine_execAddTextureStreamingSlaveLoc_Parms
        AddTextureStreamingSlaveLoc_Parms;

    pFnAddTextureStreamingSlaveLoc->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddTextureStreamingSlaveLoc,
                       &AddTextureStreamingSlaveLoc_Parms, NULL);

    pFnAddTextureStreamingSlaveLoc->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetWorldPostProcessChain
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetWorldPostProcessChain() {
    static UFunction* pFnGetWorldPostProcessChain = NULL;

    if (!pFnGetWorldPostProcessChain)
        pFnGetWorldPostProcessChain =
            (UFunction*)UObject::GObjObjects()->Data[19417];

    UEngine_execGetWorldPostProcessChain_Parms GetWorldPostProcessChain_Parms;

    pFnGetWorldPostProcessChain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetWorldPostProcessChain,
                       &GetWorldPostProcessChain_Parms, NULL);

    pFnGetWorldPostProcessChain->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetDefaultPostProcessChain
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetDefaultPostProcessChain() {
    static UFunction* pFnGetDefaultPostProcessChain = NULL;

    if (!pFnGetDefaultPostProcessChain)
        pFnGetDefaultPostProcessChain =
            (UFunction*)UObject::GObjObjects()->Data[19415];

    UEngine_execGetDefaultPostProcessChain_Parms
        GetDefaultPostProcessChain_Parms;

    pFnGetDefaultPostProcessChain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDefaultPostProcessChain,
                       &GetDefaultPostProcessChain_Parms, NULL);

    pFnGetDefaultPostProcessChain->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetEngine
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetEngine() {
    static UFunction* pFnGetEngine = NULL;

    if (!pFnGetEngine)
        pFnGetEngine = (UFunction*)UObject::GObjObjects()->Data[7950];

    UEngine_execGetEngine_Parms GetEngine_Parms;

    pFnGetEngine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetEngine, &GetEngine_Parms, NULL);

    pFnGetEngine->FunctionFlags |= 0x400;
};

// Function Engine.Engine.IsRealDStereoEnabled
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::IsRealDStereoEnabled() {
    static UFunction* pFnIsRealDStereoEnabled = NULL;

    if (!pFnIsRealDStereoEnabled)
        pFnIsRealDStereoEnabled =
            (UFunction*)UObject::GObjObjects()->Data[19413];

    UEngine_execIsRealDStereoEnabled_Parms IsRealDStereoEnabled_Parms;

    pFnIsRealDStereoEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsRealDStereoEnabled, &IsRealDStereoEnabled_Parms,
                       NULL);

    pFnIsRealDStereoEnabled->FunctionFlags |= 0x400;
};

// Function Engine.Engine.AddOverlayWrapped
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::AddOverlayWrapped() {
    static UFunction* pFnAddOverlayWrapped = NULL;

    if (!pFnAddOverlayWrapped)
        pFnAddOverlayWrapped = (UFunction*)UObject::GObjObjects()->Data[19405];

    UEngine_execAddOverlayWrapped_Parms AddOverlayWrapped_Parms;

    pFnAddOverlayWrapped->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddOverlayWrapped, &AddOverlayWrapped_Parms, NULL);

    pFnAddOverlayWrapped->FunctionFlags |= 0x400;
};

// Function Engine.Engine.AddOverlay
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::AddOverlay() {
    static UFunction* pFnAddOverlay = NULL;

    if (!pFnAddOverlay)
        pFnAddOverlay = (UFunction*)UObject::GObjObjects()->Data[19397];

    UEngine_execAddOverlay_Parms AddOverlay_Parms;

    pFnAddOverlay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddOverlay, &AddOverlay_Parms, NULL);

    pFnAddOverlay->FunctionFlags |= 0x400;
};

// Function Engine.Engine.RemoveAllOverlays
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::RemoveAllOverlays() {
    static UFunction* pFnRemoveAllOverlays = NULL;

    if (!pFnRemoveAllOverlays)
        pFnRemoveAllOverlays = (UFunction*)UObject::GObjObjects()->Data[19396];

    UEngine_execRemoveAllOverlays_Parms RemoveAllOverlays_Parms;

    pFnRemoveAllOverlays->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveAllOverlays, &RemoveAllOverlays_Parms, NULL);

    pFnRemoveAllOverlays->FunctionFlags |= 0x400;
};

// Function Engine.Engine.StopMovie
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::StopMovie() {
    static UFunction* pFnStopMovie = NULL;

    if (!pFnStopMovie)
        pFnStopMovie = (UFunction*)UObject::GObjObjects()->Data[19394];

    UEngine_execStopMovie_Parms StopMovie_Parms;

    pFnStopMovie->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopMovie, &StopMovie_Parms, NULL);

    pFnStopMovie->FunctionFlags |= 0x400;
};

// Function Engine.Engine.PlayLoadMapMovie
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::PlayLoadMapMovie() {
    static UFunction* pFnPlayLoadMapMovie = NULL;

    if (!pFnPlayLoadMapMovie)
        pFnPlayLoadMapMovie = (UFunction*)UObject::GObjObjects()->Data[19392];

    UEngine_execPlayLoadMapMovie_Parms PlayLoadMapMovie_Parms;

    pFnPlayLoadMapMovie->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayLoadMapMovie, &PlayLoadMapMovie_Parms, NULL);

    pFnPlayLoadMapMovie->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetLastMovieName
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetLastMovieName() {
    static UFunction* pFnGetLastMovieName = NULL;

    if (!pFnGetLastMovieName)
        pFnGetLastMovieName = (UFunction*)UObject::GObjObjects()->Data[19390];

    UEngine_execGetLastMovieName_Parms GetLastMovieName_Parms;

    pFnGetLastMovieName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLastMovieName, &GetLastMovieName_Parms, NULL);

    pFnGetLastMovieName->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetAISubsystem
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetAISubsystem() {
    static UFunction* pFnGetAISubsystem = NULL;

    if (!pFnGetAISubsystem)
        pFnGetAISubsystem = (UFunction*)UObject::GObjObjects()->Data[19388];

    UEngine_execGetAISubsystem_Parms GetAISubsystem_Parms;

    pFnGetAISubsystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAISubsystem, &GetAISubsystem_Parms, NULL);

    pFnGetAISubsystem->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetAudioDevice
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetAudioDevice() {
    static UFunction* pFnGetAudioDevice = NULL;

    if (!pFnGetAudioDevice)
        pFnGetAudioDevice = (UFunction*)UObject::GObjObjects()->Data[12200];

    UEngine_execGetAudioDevice_Parms GetAudioDevice_Parms;

    pFnGetAudioDevice->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAudioDevice, &GetAudioDevice_Parms, NULL);

    pFnGetAudioDevice->FunctionFlags |= 0x400;
};

// Function Engine.Engine.IsUsingES2Renderer
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::IsUsingES2Renderer() {
    static UFunction* pFnIsUsingES2Renderer = NULL;

    if (!pFnIsUsingES2Renderer)
        pFnIsUsingES2Renderer = (UFunction*)UObject::GObjObjects()->Data[19386];

    UEngine_execIsUsingES2Renderer_Parms IsUsingES2Renderer_Parms;

    pFnIsUsingES2Renderer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsUsingES2Renderer, &IsUsingES2Renderer_Parms, NULL);

    pFnIsUsingES2Renderer->FunctionFlags |= 0x400;
};

// Function Engine.Engine.IsStereoscopic3D
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::IsStereoscopic3D() {
    static UFunction* pFnIsStereoscopic3D = NULL;

    if (!pFnIsStereoscopic3D)
        pFnIsStereoscopic3D = (UFunction*)UObject::GObjObjects()->Data[19384];

    UEngine_execIsStereoscopic3D_Parms IsStereoscopic3D_Parms;

    pFnIsStereoscopic3D->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsStereoscopic3D, &IsStereoscopic3D_Parms, NULL);

    pFnIsStereoscopic3D->FunctionFlags |= 0x400;
};

// Function Engine.Engine.IsSplitScreen
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::IsSplitScreen() {
    static UFunction* pFnIsSplitScreen = NULL;

    if (!pFnIsSplitScreen)
        pFnIsSplitScreen = (UFunction*)UObject::GObjObjects()->Data[15633];

    UEngine_execIsSplitScreen_Parms IsSplitScreen_Parms;

    pFnIsSplitScreen->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsSplitScreen, &IsSplitScreen_Parms, NULL);

    pFnIsSplitScreen->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetAdditionalFont
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetAdditionalFont() {
    static UFunction* pFnGetAdditionalFont = NULL;

    if (!pFnGetAdditionalFont)
        pFnGetAdditionalFont = (UFunction*)UObject::GObjObjects()->Data[19381];

    UEngine_execGetAdditionalFont_Parms GetAdditionalFont_Parms;

    pFnGetAdditionalFont->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAdditionalFont, &GetAdditionalFont_Parms, NULL);

    pFnGetAdditionalFont->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetSubtitleFont
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetSubtitleFont() {
    static UFunction* pFnGetSubtitleFont = NULL;

    if (!pFnGetSubtitleFont)
        pFnGetSubtitleFont = (UFunction*)UObject::GObjObjects()->Data[19379];

    UEngine_execGetSubtitleFont_Parms GetSubtitleFont_Parms;

    pFnGetSubtitleFont->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSubtitleFont, &GetSubtitleFont_Parms, NULL);

    pFnGetSubtitleFont->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetLargeFont
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetLargeFont() {
    static UFunction* pFnGetLargeFont = NULL;

    if (!pFnGetLargeFont)
        pFnGetLargeFont = (UFunction*)UObject::GObjObjects()->Data[19377];

    UEngine_execGetLargeFont_Parms GetLargeFont_Parms;

    pFnGetLargeFont->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLargeFont, &GetLargeFont_Parms, NULL);

    pFnGetLargeFont->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetMediumFont
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetMediumFont() {
    static UFunction* pFnGetMediumFont = NULL;

    if (!pFnGetMediumFont)
        pFnGetMediumFont = (UFunction*)UObject::GObjObjects()->Data[19375];

    UEngine_execGetMediumFont_Parms GetMediumFont_Parms;

    pFnGetMediumFont->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMediumFont, &GetMediumFont_Parms, NULL);

    pFnGetMediumFont->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetSmallFont
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetSmallFont() {
    static UFunction* pFnGetSmallFont = NULL;

    if (!pFnGetSmallFont)
        pFnGetSmallFont = (UFunction*)UObject::GObjObjects()->Data[12261];

    UEngine_execGetSmallFont_Parms GetSmallFont_Parms;

    pFnGetSmallFont->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSmallFont, &GetSmallFont_Parms, NULL);

    pFnGetSmallFont->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetTinyFont
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetTinyFont() {
    static UFunction* pFnGetTinyFont = NULL;

    if (!pFnGetTinyFont)
        pFnGetTinyFont = (UFunction*)UObject::GObjObjects()->Data[19373];

    UEngine_execGetTinyFont_Parms GetTinyFont_Parms;

    pFnGetTinyFont->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTinyFont, &GetTinyFont_Parms, NULL);

    pFnGetTinyFont->FunctionFlags |= 0x400;
};

// Function Engine.Engine.HasNetworkConnection
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::HasNetworkConnection() {
    static UFunction* pFnHasNetworkConnection = NULL;

    if (!pFnHasNetworkConnection)
        pFnHasNetworkConnection =
            (UFunction*)UObject::GObjObjects()->Data[19371];

    UEngine_execHasNetworkConnection_Parms HasNetworkConnection_Parms;

    pFnHasNetworkConnection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasNetworkConnection, &HasNetworkConnection_Parms,
                       NULL);

    pFnHasNetworkConnection->FunctionFlags |= 0x400;
};

// Function Engine.Engine.BuildBugSubmissionString
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::BuildBugSubmissionString() {
    static UFunction* pFnBuildBugSubmissionString = NULL;

    if (!pFnBuildBugSubmissionString)
        pFnBuildBugSubmissionString =
            (UFunction*)UObject::GObjObjects()->Data[19367];

    UEngine_execBuildBugSubmissionString_Parms BuildBugSubmissionString_Parms;

    pFnBuildBugSubmissionString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBuildBugSubmissionString,
                       &BuildBugSubmissionString_Parms, NULL);

    pFnBuildBugSubmissionString->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetDevicePushNotificationToken
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetDevicePushNotificationToken() {
    static UFunction* pFnGetDevicePushNotificationToken = NULL;

    if (!pFnGetDevicePushNotificationToken)
        pFnGetDevicePushNotificationToken =
            (UFunction*)UObject::GObjObjects()->Data[19365];

    UEngine_execGetDevicePushNotificationToken_Parms
        GetDevicePushNotificationToken_Parms;

    pFnGetDevicePushNotificationToken->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDevicePushNotificationToken,
                       &GetDevicePushNotificationToken_Parms, NULL);

    pFnGetDevicePushNotificationToken->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetTitleSafeArea
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetTitleSafeArea() {
    static UFunction* pFnGetTitleSafeArea = NULL;

    if (!pFnGetTitleSafeArea)
        pFnGetTitleSafeArea = (UFunction*)UObject::GObjObjects()->Data[19363];

    UEngine_execGetTitleSafeArea_Parms GetTitleSafeArea_Parms;

    pFnGetTitleSafeArea->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTitleSafeArea, &GetTitleSafeArea_Parms, NULL);

    pFnGetTitleSafeArea->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetOSVersion
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetOSVersion() {
    static UFunction* pFnGetOSVersion = NULL;

    if (!pFnGetOSVersion)
        pFnGetOSVersion = (UFunction*)UObject::GObjObjects()->Data[19361];

    UEngine_execGetOSVersion_Parms GetOSVersion_Parms;

    pFnGetOSVersion->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetOSVersion, &GetOSVersion_Parms, NULL);

    pFnGetOSVersion->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetDeviceUUID
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetDeviceUUID() {
    static UFunction* pFnGetDeviceUUID = NULL;

    if (!pFnGetDeviceUUID)
        pFnGetDeviceUUID = (UFunction*)UObject::GObjObjects()->Data[19359];

    UEngine_execGetDeviceUUID_Parms GetDeviceUUID_Parms;

    pFnGetDeviceUUID->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDeviceUUID, &GetDeviceUUID_Parms, NULL);

    pFnGetDeviceUUID->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetBuildDate
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetBuildDate() {
    static UFunction* pFnGetBuildDate = NULL;

    if (!pFnGetBuildDate)
        pFnGetBuildDate = (UFunction*)UObject::GObjObjects()->Data[19357];

    UEngine_execGetBuildDate_Parms GetBuildDate_Parms;

    pFnGetBuildDate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBuildDate, &GetBuildDate_Parms, NULL);

    pFnGetBuildDate->FunctionFlags |= 0x400;
};

// Function Engine.Engine.GetCurrentWorldInfo
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::GetCurrentWorldInfo() {
    static UFunction* pFnGetCurrentWorldInfo = NULL;

    if (!pFnGetCurrentWorldInfo)
        pFnGetCurrentWorldInfo =
            (UFunction*)UObject::GObjObjects()->Data[16941];

    UEngine_execGetCurrentWorldInfo_Parms GetCurrentWorldInfo_Parms;

    pFnGetCurrentWorldInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCurrentWorldInfo, &GetCurrentWorldInfo_Parms,
                       NULL);

    pFnGetCurrentWorldInfo->FunctionFlags |= 0x400;
};

// Function Engine.Engine.IsGame
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::IsGame() {
    static UFunction* pFnIsGame = NULL;

    if (!pFnIsGame) pFnIsGame = (UFunction*)UObject::GObjObjects()->Data[9994];

    UEngine_execIsGame_Parms IsGame_Parms;

    pFnIsGame->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsGame, &IsGame_Parms, NULL);

    pFnIsGame->FunctionFlags |= 0x400;
};

// Function Engine.Engine.IsEditor
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UEngine::IsEditor() {
    static UFunction* pFnIsEditor = NULL;

    if (!pFnIsEditor)
        pFnIsEditor = (UFunction*)UObject::GObjObjects()->Data[10008];

    UEngine_execIsEditor_Parms IsEditor_Parms;

    pFnIsEditor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsEditor, &IsEditor_Parms, NULL);

    pFnIsEditor->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetChunkInstallProgress
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetChunkInstallProgress() {
    static UFunction* pFnGetChunkInstallProgress = NULL;

    if (!pFnGetChunkInstallProgress)
        pFnGetChunkInstallProgress =
            (UFunction*)UObject::GObjObjects()->Data[21070];

    UGameEngine_execGetChunkInstallProgress_Parms GetChunkInstallProgress_Parms;

    pFnGetChunkInstallProgress->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetChunkInstallProgress,
                       &GetChunkInstallProgress_Parms, NULL);

    pFnGetChunkInstallProgress->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetChunksInstallProgress
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetChunksInstallProgress() {
    static UFunction* pFnGetChunksInstallProgress = NULL;

    if (!pFnGetChunksInstallProgress)
        pFnGetChunksInstallProgress =
            (UFunction*)UObject::GObjObjects()->Data[21066];

    UGameEngine_execGetChunksInstallProgress_Parms
        GetChunksInstallProgress_Parms;

    pFnGetChunksInstallProgress->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetChunksInstallProgress,
                       &GetChunksInstallProgress_Parms, NULL);

    pFnGetChunksInstallProgress->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.AreChunksInstalled
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::AreChunksInstalled() {
    static UFunction* pFnAreChunksInstalled = NULL;

    if (!pFnAreChunksInstalled)
        pFnAreChunksInstalled = (UFunction*)UObject::GObjObjects()->Data[21062];

    UGameEngine_execAreChunksInstalled_Parms AreChunksInstalled_Parms;

    pFnAreChunksInstalled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAreChunksInstalled, &AreChunksInstalled_Parms, NULL);

    pFnAreChunksInstalled->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.IsGameFullyInstalled
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::IsGameFullyInstalled() {
    static UFunction* pFnIsGameFullyInstalled = NULL;

    if (!pFnIsGameFullyInstalled)
        pFnIsGameFullyInstalled =
            (UFunction*)UObject::GObjObjects()->Data[21060];

    UGameEngine_execIsGameFullyInstalled_Parms IsGameFullyInstalled_Parms;

    pFnIsGameFullyInstalled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsGameFullyInstalled, &IsGameFullyInstalled_Parms,
                       NULL);

    pFnIsGameFullyInstalled->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetPercentageOfStreamingInstallComplete
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetPercentageOfStreamingInstallComplete() {
    static UFunction* pFnGetPercentageOfStreamingInstallComplete = NULL;

    if (!pFnGetPercentageOfStreamingInstallComplete)
        pFnGetPercentageOfStreamingInstallComplete =
            (UFunction*)UObject::GObjObjects()->Data[21058];

    UGameEngine_execGetPercentageOfStreamingInstallComplete_Parms
        GetPercentageOfStreamingInstallComplete_Parms;

    pFnGetPercentageOfStreamingInstallComplete->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPercentageOfStreamingInstallComplete,
                       &GetPercentageOfStreamingInstallComplete_Parms, NULL);

    pFnGetPercentageOfStreamingInstallComplete->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.DecodeURLString
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::DecodeURLString() {
    static UFunction* pFnDecodeURLString = NULL;

    if (!pFnDecodeURLString)
        pFnDecodeURLString = (UFunction*)UObject::GObjObjects()->Data[21056];

    UGameEngine_execDecodeURLString_Parms DecodeURLString_Parms;

    pFnDecodeURLString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDecodeURLString, &DecodeURLString_Parms, NULL);

    pFnDecodeURLString->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.EncodeURLString
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::EncodeURLString() {
    static UFunction* pFnEncodeURLString = NULL;

    if (!pFnEncodeURLString)
        pFnEncodeURLString = (UFunction*)UObject::GObjObjects()->Data[21054];

    UGameEngine_execEncodeURLString_Parms EncodeURLString_Parms;

    pFnEncodeURLString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEncodeURLString, &EncodeURLString_Parms, NULL);

    pFnEncodeURLString->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.DisableServerTakeover
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::DisableServerTakeover() {
    static UFunction* pFnDisableServerTakeover = NULL;

    if (!pFnDisableServerTakeover)
        pFnDisableServerTakeover =
            (UFunction*)UObject::GObjObjects()->Data[21053];

    UGameEngine_execDisableServerTakeover_Parms DisableServerTakeover_Parms;

    pFnDisableServerTakeover->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDisableServerTakeover, &DisableServerTakeover_Parms,
                       NULL);

    pFnDisableServerTakeover->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetWebAdminPort
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGameEngine::GetWebAdminPort() {
    static UFunction* pFnGetWebAdminPort = NULL;

    if (!pFnGetWebAdminPort)
        pFnGetWebAdminPort = (UFunction*)UObject::GObjObjects()->Data[21051];

    UGameEngine_execGetWebAdminPort_Parms GetWebAdminPort_Parms;

    pFnGetWebAdminPort->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetWebAdminPort, &GetWebAdminPort_Parms, NULL);

    pFnGetWebAdminPort->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.TakeoverServer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameEngine::TakeoverServer() {
    static UFunction* pFnTakeoverServer = NULL;

    if (!pFnTakeoverServer)
        pFnTakeoverServer = (UFunction*)UObject::GObjObjects()->Data[21048];

    UGameEngine_execTakeoverServer_Parms TakeoverServer_Parms;

    pFnTakeoverServer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTakeoverServer, &TakeoverServer_Parms, NULL);

    pFnTakeoverServer->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.HasSecondaryScreenActive
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::HasSecondaryScreenActive() {
    static UFunction* pFnHasSecondaryScreenActive = NULL;

    if (!pFnHasSecondaryScreenActive)
        pFnHasSecondaryScreenActive =
            (UFunction*)UObject::GObjObjects()->Data[21046];

    UGameEngine_execHasSecondaryScreenActive_Parms
        HasSecondaryScreenActive_Parms;

    pFnHasSecondaryScreenActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasSecondaryScreenActive,
                       &HasSecondaryScreenActive_Parms, NULL);

    pFnHasSecondaryScreenActive->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetDLCManager
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetDLCManager() {
    static UFunction* pFnGetDLCManager = NULL;

    if (!pFnGetDLCManager)
        pFnGetDLCManager = (UFunction*)UObject::GObjObjects()->Data[18450];

    UGameEngine_execGetDLCManager_Parms GetDLCManager_Parms;

    pFnGetDLCManager->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDLCManager, &GetDLCManager_Parms, NULL);

    pFnGetDLCManager->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetDLCEnumerator
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetDLCEnumerator() {
    static UFunction* pFnGetDLCEnumerator = NULL;

    if (!pFnGetDLCEnumerator)
        pFnGetDLCEnumerator = (UFunction*)UObject::GObjObjects()->Data[18498];

    UGameEngine_execGetDLCEnumerator_Parms GetDLCEnumerator_Parms;

    pFnGetDLCEnumerator->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDLCEnumerator, &GetDLCEnumerator_Parms, NULL);

    pFnGetDLCEnumerator->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetPlayfabInterface
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetPlayfabInterface() {
    static UFunction* pFnGetPlayfabInterface = NULL;

    if (!pFnGetPlayfabInterface)
        pFnGetPlayfabInterface =
            (UFunction*)UObject::GObjObjects()->Data[12576];

    UGameEngine_execGetPlayfabInterface_Parms GetPlayfabInterface_Parms;

    pFnGetPlayfabInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayfabInterface, &GetPlayfabInterface_Parms,
                       NULL);

    pFnGetPlayfabInterface->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.GetOnlineSubsystem
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::GetOnlineSubsystem() {
    static UFunction* pFnGetOnlineSubsystem = NULL;

    if (!pFnGetOnlineSubsystem)
        pFnGetOnlineSubsystem = (UFunction*)UObject::GObjObjects()->Data[7957];

    UGameEngine_execGetOnlineSubsystem_Parms GetOnlineSubsystem_Parms;

    pFnGetOnlineSubsystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetOnlineSubsystem, &GetOnlineSubsystem_Parms, NULL);

    pFnGetOnlineSubsystem->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.DestroyNamedNetDriver
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::DestroyNamedNetDriver() {
    static UFunction* pFnDestroyNamedNetDriver = NULL;

    if (!pFnDestroyNamedNetDriver)
        pFnDestroyNamedNetDriver =
            (UFunction*)UObject::GObjObjects()->Data[21044];

    UGameEngine_execDestroyNamedNetDriver_Parms DestroyNamedNetDriver_Parms;

    pFnDestroyNamedNetDriver->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDestroyNamedNetDriver, &DestroyNamedNetDriver_Parms,
                       NULL);

    pFnDestroyNamedNetDriver->FunctionFlags |= 0x400;
};

// Function Engine.GameEngine.CreateNamedNetDriver
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameEngine::CreateNamedNetDriver() {
    static UFunction* pFnCreateNamedNetDriver = NULL;

    if (!pFnCreateNamedNetDriver)
        pFnCreateNamedNetDriver =
            (UFunction*)UObject::GObjObjects()->Data[21041];

    UGameEngine_execCreateNamedNetDriver_Parms CreateNamedNetDriver_Parms;

    pFnCreateNamedNetDriver->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreateNamedNetDriver, &CreateNamedNetDriver_Parms,
                       NULL);

    pFnCreateNamedNetDriver->FunctionFlags |= 0x400;
};

// Function Engine.Volume.ProcessActorSetVolume
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AVolume::eventProcessActorSetVolume() {
    static UFunction* pFnProcessActorSetVolume = NULL;

    if (!pFnProcessActorSetVolume)
        pFnProcessActorSetVolume =
            (UFunction*)UObject::GObjObjects()->Data[13261];

    AVolume_eventProcessActorSetVolume_Parms ProcessActorSetVolume_Parms;

    this->ProcessEvent(pFnProcessActorSetVolume, &ProcessActorSetVolume_Parms,
                       NULL);
};

// Function Engine.Volume.CollisionChanged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AVolume::eventCollisionChanged() {
    static UFunction* pFnCollisionChanged = NULL;

    if (!pFnCollisionChanged)
        pFnCollisionChanged = (UFunction*)UObject::GObjObjects()->Data[13260];

    AVolume_eventCollisionChanged_Parms CollisionChanged_Parms;

    this->ProcessEvent(pFnCollisionChanged, &CollisionChanged_Parms, NULL);
};

// Function Engine.Volume.OnToggle
// [0x00020102]
// Parameters infos:

void AVolume::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[13258];

    AVolume_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.Volume.DisplayDebug
// [0x00420102]
// Parameters infos:

void AVolume::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[13243];

    AVolume_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Volume.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[13242];

    AVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Volume.EncompassesPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AVolume::EncompassesPoint() {
    static UFunction* pFnEncompassesPoint = NULL;

    if (!pFnEncompassesPoint)
        pFnEncompassesPoint = (UFunction*)UObject::GObjObjects()->Data[13239];

    AVolume_execEncompassesPoint_Parms EncompassesPoint_Parms;

    pFnEncompassesPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEncompassesPoint, &EncompassesPoint_Parms, NULL);

    pFnEncompassesPoint->FunctionFlags |= 0x400;
};

// Function Engine.Volume.Encompasses
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AVolume::Encompasses() {
    static UFunction* pFnEncompasses = NULL;

    if (!pFnEncompasses)
        pFnEncompasses = (UFunction*)UObject::GObjObjects()->Data[13236];

    AVolume_execEncompasses_Parms Encompasses_Parms;

    pFnEncompasses->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEncompasses, &Encompasses_Parms, NULL);

    pFnEncompasses->FunctionFlags |= 0x400;
};

// Function Engine.BlockingVolume.OnToggle
// [0x00020102]
// Parameters infos:

void ABlockingVolume::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[15304];

    ABlockingVolume_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.DynamicBlockingVolume.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ADynamicBlockingVolume::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[18606];

    ADynamicBlockingVolume_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.DynamicBlockingVolume.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ADynamicBlockingVolume::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[18604];

    ADynamicBlockingVolume_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.DynamicBlockingVolume.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADynamicBlockingVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18603];

    ADynamicBlockingVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.LevelStreamingVolume.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ALevelStreamingVolume::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[24693];

    ALevelStreamingVolume_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.LevelStreamingVolume.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ALevelStreamingVolume::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[24691];

    ALevelStreamingVolume_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.LevelStreamingVolume.OnToggle
// [0x00020102]
// Parameters infos:

void ALevelStreamingVolume::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[24689];

    ALevelStreamingVolume_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.PhysicsVolume.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void APhysicsVolume::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[18094];

    APhysicsVolume_execApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.PhysicsVolume.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void APhysicsVolume::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[18092];

    APhysicsVolume_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.PhysicsVolume.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void APhysicsVolume::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[18090];

    APhysicsVolume_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.PhysicsVolume.OnSetDamageInstigator
// [0x00020002]
// Parameters infos:

void APhysicsVolume::OnSetDamageInstigator() {
    static UFunction* pFnOnSetDamageInstigator = NULL;

    if (!pFnOnSetDamageInstigator)
        pFnOnSetDamageInstigator =
            (UFunction*)UObject::GObjObjects()->Data[18088];

    APhysicsVolume_execOnSetDamageInstigator_Parms OnSetDamageInstigator_Parms;

    this->ProcessEvent(pFnOnSetDamageInstigator, &OnSetDamageInstigator_Parms,
                       NULL);
};

// Function Engine.PhysicsVolume.NotifyPawnBecameViewTarget
// [0x00020000]
// Parameters infos:

void APhysicsVolume::NotifyPawnBecameViewTarget() {
    static UFunction* pFnNotifyPawnBecameViewTarget = NULL;

    if (!pFnNotifyPawnBecameViewTarget)
        pFnNotifyPawnBecameViewTarget =
            (UFunction*)UObject::GObjObjects()->Data[18085];

    APhysicsVolume_execNotifyPawnBecameViewTarget_Parms
        NotifyPawnBecameViewTarget_Parms;

    this->ProcessEvent(pFnNotifyPawnBecameViewTarget,
                       &NotifyPawnBecameViewTarget_Parms, NULL);
};

// Function Engine.PhysicsVolume.ModifyPlayer
// [0x00020000]
// Parameters infos:

void APhysicsVolume::ModifyPlayer() {
    static UFunction* pFnModifyPlayer = NULL;

    if (!pFnModifyPlayer)
        pFnModifyPlayer = (UFunction*)UObject::GObjObjects()->Data[18083];

    APhysicsVolume_execModifyPlayer_Parms ModifyPlayer_Parms;

    this->ProcessEvent(pFnModifyPlayer, &ModifyPlayer_Parms, NULL);
};

// Function Engine.PhysicsVolume.CausePainTo
// [0x00020002]
// Parameters infos:

void APhysicsVolume::CausePainTo() {
    static UFunction* pFnCausePainTo = NULL;

    if (!pFnCausePainTo)
        pFnCausePainTo = (UFunction*)UObject::GObjObjects()->Data[18081];

    APhysicsVolume_execCausePainTo_Parms CausePainTo_Parms;

    this->ProcessEvent(pFnCausePainTo, &CausePainTo_Parms, NULL);
};

// Function Engine.PhysicsVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[18076];

    APhysicsVolume_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.PhysicsVolume.TimerPop
// [0x00020002]
// Parameters infos:

void APhysicsVolume::TimerPop() {
    static UFunction* pFnTimerPop = NULL;

    if (!pFnTimerPop)
        pFnTimerPop = (UFunction*)UObject::GObjObjects()->Data[18073];

    APhysicsVolume_execTimerPop_Parms TimerPop_Parms;

    this->ProcessEvent(pFnTimerPop, &TimerPop_Parms, NULL);
};

// Function Engine.PhysicsVolume.CollisionChanged
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventCollisionChanged() {
    static UFunction* pFnCollisionChanged = NULL;

    if (!pFnCollisionChanged)
        pFnCollisionChanged = (UFunction*)UObject::GObjObjects()->Data[18072];

    APhysicsVolume_eventCollisionChanged_Parms CollisionChanged_Parms;

    this->ProcessEvent(pFnCollisionChanged, &CollisionChanged_Parms, NULL);
};

// Function Engine.PhysicsVolume.OnToggle
// [0x00020102]
// Parameters infos:

void APhysicsVolume::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[18070];

    APhysicsVolume_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.PhysicsVolume.PawnLeavingVolume
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventPawnLeavingVolume() {
    static UFunction* pFnPawnLeavingVolume = NULL;

    if (!pFnPawnLeavingVolume)
        pFnPawnLeavingVolume = (UFunction*)UObject::GObjObjects()->Data[18068];

    APhysicsVolume_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;

    this->ProcessEvent(pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL);
};

// Function Engine.PhysicsVolume.PawnEnteredVolume
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventPawnEnteredVolume() {
    static UFunction* pFnPawnEnteredVolume = NULL;

    if (!pFnPawnEnteredVolume)
        pFnPawnEnteredVolume = (UFunction*)UObject::GObjObjects()->Data[18066];

    APhysicsVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;

    this->ProcessEvent(pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL);
};

// Function Engine.PhysicsVolume.ActorLeavingVolume
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventActorLeavingVolume() {
    static UFunction* pFnActorLeavingVolume = NULL;

    if (!pFnActorLeavingVolume)
        pFnActorLeavingVolume = (UFunction*)UObject::GObjObjects()->Data[18064];

    APhysicsVolume_eventActorLeavingVolume_Parms ActorLeavingVolume_Parms;

    this->ProcessEvent(pFnActorLeavingVolume, &ActorLeavingVolume_Parms, NULL);
};

// Function Engine.PhysicsVolume.ActorEnteredVolume
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventActorEnteredVolume() {
    static UFunction* pFnActorEnteredVolume = NULL;

    if (!pFnActorEnteredVolume)
        pFnActorEnteredVolume = (UFunction*)UObject::GObjObjects()->Data[18062];

    APhysicsVolume_eventActorEnteredVolume_Parms ActorEnteredVolume_Parms;

    this->ProcessEvent(pFnActorEnteredVolume, &ActorEnteredVolume_Parms, NULL);
};

// Function Engine.PhysicsVolume.PhysicsChangedFor
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventPhysicsChangedFor() {
    static UFunction* pFnPhysicsChangedFor = NULL;

    if (!pFnPhysicsChangedFor)
        pFnPhysicsChangedFor = (UFunction*)UObject::GObjObjects()->Data[18060];

    APhysicsVolume_eventPhysicsChangedFor_Parms PhysicsChangedFor_Parms;

    this->ProcessEvent(pFnPhysicsChangedFor, &PhysicsChangedFor_Parms, NULL);
};

// Function Engine.PhysicsVolume.Reset
// [0x00020002]
// Parameters infos:

void APhysicsVolume::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[18059];

    APhysicsVolume_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.PhysicsVolume.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APhysicsVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18058];

    APhysicsVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.PhysicsVolume.GetZoneVelocityForActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APhysicsVolume::GetZoneVelocityForActor() {
    static UFunction* pFnGetZoneVelocityForActor = NULL;

    if (!pFnGetZoneVelocityForActor)
        pFnGetZoneVelocityForActor =
            (UFunction*)UObject::GObjObjects()->Data[18055];

    APhysicsVolume_execGetZoneVelocityForActor_Parms
        GetZoneVelocityForActor_Parms;

    pFnGetZoneVelocityForActor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetZoneVelocityForActor,
                       &GetZoneVelocityForActor_Parms, NULL);

    pFnGetZoneVelocityForActor->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsVolume.GetGravityZ
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APhysicsVolume::GetGravityZ() {
    static UFunction* pFnGetGravityZ = NULL;

    if (!pFnGetGravityZ)
        pFnGetGravityZ = (UFunction*)UObject::GObjObjects()->Data[18053];

    APhysicsVolume_execGetGravityZ_Parms GetGravityZ_Parms;

    pFnGetGravityZ->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGravityZ, &GetGravityZ_Parms, NULL);

    pFnGetGravityZ->FunctionFlags |= 0x400;
};

// Function Engine.DefaultPhysicsVolume.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADefaultPhysicsVolume::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[18101];

    ADefaultPhysicsVolume_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.LadderVolume.PhysicsChangedFor
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ALadderVolume::eventPhysicsChangedFor() {
    static UFunction* pFnPhysicsChangedFor = NULL;

    if (!pFnPhysicsChangedFor)
        pFnPhysicsChangedFor = (UFunction*)UObject::GObjObjects()->Data[24297];

    ALadderVolume_eventPhysicsChangedFor_Parms PhysicsChangedFor_Parms;

    this->ProcessEvent(pFnPhysicsChangedFor, &PhysicsChangedFor_Parms, NULL);
};

// Function Engine.LadderVolume.PawnLeavingVolume
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ALadderVolume::eventPawnLeavingVolume() {
    static UFunction* pFnPawnLeavingVolume = NULL;

    if (!pFnPawnLeavingVolume)
        pFnPawnLeavingVolume = (UFunction*)UObject::GObjObjects()->Data[24294];

    ALadderVolume_eventPawnLeavingVolume_Parms PawnLeavingVolume_Parms;

    this->ProcessEvent(pFnPawnLeavingVolume, &PawnLeavingVolume_Parms, NULL);
};

// Function Engine.LadderVolume.PawnEnteredVolume
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void ALadderVolume::eventPawnEnteredVolume() {
    static UFunction* pFnPawnEnteredVolume = NULL;

    if (!pFnPawnEnteredVolume)
        pFnPawnEnteredVolume = (UFunction*)UObject::GObjObjects()->Data[24291];

    ALadderVolume_eventPawnEnteredVolume_Parms PawnEnteredVolume_Parms;

    this->ProcessEvent(pFnPawnEnteredVolume, &PawnEnteredVolume_Parms, NULL);
};

// Function Engine.LadderVolume.InUse
// [0x00020002]
// Parameters infos:

void ALadderVolume::InUse() {
    static UFunction* pFnInUse = NULL;

    if (!pFnInUse) pFnInUse = (UFunction*)UObject::GObjObjects()->Data[15190];

    ALadderVolume_execInUse_Parms InUse_Parms;

    this->ProcessEvent(pFnInUse, &InUse_Parms, NULL);
};

// Function Engine.LadderVolume.PostBeginPlay
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void ALadderVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[24285];

    ALadderVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.PostProcessVolume.OnToggle
// [0x00020102]
// Parameters infos:

void APostProcessVolume::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[31935];

    APostProcessVolume_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.ReverbVolume.GetEnvironmentEchoDistance
// [0x00020102]
// Parameters infos:

void AReverbVolume::GetEnvironmentEchoDistance() {
    static UFunction* pFnGetEnvironmentEchoDistance = NULL;

    if (!pFnGetEnvironmentEchoDistance)
        pFnGetEnvironmentEchoDistance =
            (UFunction*)UObject::GObjObjects()->Data[13269];

    AReverbVolume_execGetEnvironmentEchoDistance_Parms
        GetEnvironmentEchoDistance_Parms;

    this->ProcessEvent(pFnGetEnvironmentEchoDistance,
                       &GetEnvironmentEchoDistance_Parms, NULL);
};

// Function Engine.TriggerVolume.StopsProjectile
// [0x00020102]
// Parameters infos:

void ATriggerVolume::StopsProjectile() {
    static UFunction* pFnStopsProjectile = NULL;

    if (!pFnStopsProjectile)
        pFnStopsProjectile = (UFunction*)UObject::GObjObjects()->Data[18669];

    ATriggerVolume_execStopsProjectile_Parms StopsProjectile_Parms;

    this->ProcessEvent(pFnStopsProjectile, &StopsProjectile_Parms, NULL);
};

// Function Engine.TriggerVolume.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATriggerVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18668];

    ATriggerVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.DroppedPickup.RecheckValidTouch
// [0x00020000]
// Parameters infos:

void ADroppedPickup::RecheckValidTouch() {
    static UFunction* pFnRecheckValidTouch = NULL;

    if (!pFnRecheckValidTouch)
        pFnRecheckValidTouch = (UFunction*)UObject::GObjObjects()->Data[18563];

    ADroppedPickup_execRecheckValidTouch_Parms RecheckValidTouch_Parms;

    this->ProcessEvent(pFnRecheckValidTouch, &RecheckValidTouch_Parms, NULL);
};

// Function Engine.DroppedPickup.PickedUpBy
// [0x00020002]
// Parameters infos:

void ADroppedPickup::PickedUpBy() {
    static UFunction* pFnPickedUpBy = NULL;

    if (!pFnPickedUpBy)
        pFnPickedUpBy = (UFunction*)UObject::GObjObjects()->Data[18561];

    ADroppedPickup_execPickedUpBy_Parms PickedUpBy_Parms;

    this->ProcessEvent(pFnPickedUpBy, &PickedUpBy_Parms, NULL);
};

// Function Engine.DroppedPickup.GiveTo
// [0x00020002]
// Parameters infos:

void ADroppedPickup::GiveTo() {
    static UFunction* pFnGiveTo = NULL;

    if (!pFnGiveTo) pFnGiveTo = (UFunction*)UObject::GObjObjects()->Data[18559];

    ADroppedPickup_execGiveTo_Parms GiveTo_Parms;

    this->ProcessEvent(pFnGiveTo, &GiveTo_Parms, NULL);
};

// Function Engine.DroppedPickup.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADroppedPickup::eventLanded() {
    static UFunction* pFnLanded = NULL;

    if (!pFnLanded) pFnLanded = (UFunction*)UObject::GObjObjects()->Data[18556];

    ADroppedPickup_eventLanded_Parms Landed_Parms;

    this->ProcessEvent(pFnLanded, &Landed_Parms, NULL);
};

// Function Engine.DroppedPickup.DetourWeight
// [0x00020002]
// Parameters infos:

void ADroppedPickup::DetourWeight() {
    static UFunction* pFnDetourWeight = NULL;

    if (!pFnDetourWeight)
        pFnDetourWeight = (UFunction*)UObject::GObjObjects()->Data[18552];

    ADroppedPickup_execDetourWeight_Parms DetourWeight_Parms;

    this->ProcessEvent(pFnDetourWeight, &DetourWeight_Parms, NULL);
};

// Function Engine.DroppedPickup.EncroachedBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADroppedPickup::eventEncroachedBy() {
    static UFunction* pFnEncroachedBy = NULL;

    if (!pFnEncroachedBy)
        pFnEncroachedBy = (UFunction*)UObject::GObjObjects()->Data[18550];

    ADroppedPickup_eventEncroachedBy_Parms EncroachedBy_Parms;

    this->ProcessEvent(pFnEncroachedBy, &EncroachedBy_Parms, NULL);
};

// Function Engine.DroppedPickup.SetPickupParticles
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADroppedPickup::eventSetPickupParticles() {
    static UFunction* pFnSetPickupParticles = NULL;

    if (!pFnSetPickupParticles)
        pFnSetPickupParticles = (UFunction*)UObject::GObjObjects()->Data[18547];

    ADroppedPickup_eventSetPickupParticles_Parms SetPickupParticles_Parms;

    this->ProcessEvent(pFnSetPickupParticles, &SetPickupParticles_Parms, NULL);
};

// Function Engine.DroppedPickup.SetPickupMesh
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADroppedPickup::eventSetPickupMesh() {
    static UFunction* pFnSetPickupMesh = NULL;

    if (!pFnSetPickupMesh)
        pFnSetPickupMesh = (UFunction*)UObject::GObjObjects()->Data[18544];

    ADroppedPickup_eventSetPickupMesh_Parms SetPickupMesh_Parms;

    this->ProcessEvent(pFnSetPickupMesh, &SetPickupMesh_Parms, NULL);
};

// Function Engine.DroppedPickup.Reset
// [0x00020002]
// Parameters infos:

void ADroppedPickup::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[18543];

    ADroppedPickup_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.DroppedPickup.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADroppedPickup::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[18541];

    ADroppedPickup_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.DroppedPickup.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADroppedPickup::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[18540];

    ADroppedPickup_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.DroppedPickup.RemoveFromNavigation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ADroppedPickup::RemoveFromNavigation() {
    static UFunction* pFnRemoveFromNavigation = NULL;

    if (!pFnRemoveFromNavigation)
        pFnRemoveFromNavigation =
            (UFunction*)UObject::GObjObjects()->Data[18539];

    ADroppedPickup_execRemoveFromNavigation_Parms RemoveFromNavigation_Parms;

    pFnRemoveFromNavigation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveFromNavigation, &RemoveFromNavigation_Parms,
                       NULL);

    pFnRemoveFromNavigation->FunctionFlags |= 0x400;
};

// Function Engine.DroppedPickup.AddToNavigation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ADroppedPickup::AddToNavigation() {
    static UFunction* pFnAddToNavigation = NULL;

    if (!pFnAddToNavigation)
        pFnAddToNavigation = (UFunction*)UObject::GObjObjects()->Data[18538];

    ADroppedPickup_execAddToNavigation_Parms AddToNavigation_Parms;

    pFnAddToNavigation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddToNavigation, &AddToNavigation_Parms, NULL);

    pFnAddToNavigation->FunctionFlags |= 0x400;
};

// Function Engine.DynamicSMActor.SetLightEnvironmentToNotBeDynamic
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ADynamicSMActor::SetLightEnvironmentToNotBeDynamic() {
    static UFunction* pFnSetLightEnvironmentToNotBeDynamic = NULL;

    if (!pFnSetLightEnvironmentToNotBeDynamic)
        pFnSetLightEnvironmentToNotBeDynamic =
            (UFunction*)UObject::GObjObjects()->Data[18657];

    ADynamicSMActor_execSetLightEnvironmentToNotBeDynamic_Parms
        SetLightEnvironmentToNotBeDynamic_Parms;

    this->ProcessEvent(pFnSetLightEnvironmentToNotBeDynamic,
                       &SetLightEnvironmentToNotBeDynamic_Parms, NULL);
};

// Function Engine.DynamicSMActor.Detach
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADynamicSMActor::eventDetach() {
    static UFunction* pFnDetach = NULL;

    if (!pFnDetach) pFnDetach = (UFunction*)UObject::GObjObjects()->Data[18651];

    ADynamicSMActor_eventDetach_Parms Detach_Parms;

    this->ProcessEvent(pFnDetach, &Detach_Parms, NULL);
};

// Function Engine.DynamicSMActor.Attach
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADynamicSMActor::eventAttach() {
    static UFunction* pFnAttach = NULL;

    if (!pFnAttach) pFnAttach = (UFunction*)UObject::GObjObjects()->Data[18648];

    ADynamicSMActor_eventAttach_Parms Attach_Parms;

    this->ProcessEvent(pFnAttach, &Attach_Parms, NULL);
};

// Function Engine.DynamicSMActor.CanBasePawn
// [0x00020102]
// Parameters infos:

void ADynamicSMActor::CanBasePawn() {
    static UFunction* pFnCanBasePawn = NULL;

    if (!pFnCanBasePawn)
        pFnCanBasePawn = (UFunction*)UObject::GObjObjects()->Data[18645];

    ADynamicSMActor_execCanBasePawn_Parms CanBasePawn_Parms;

    this->ProcessEvent(pFnCanBasePawn, &CanBasePawn_Parms, NULL);
};

// Function Engine.DynamicSMActor.SetStaticMesh
// [0x00024002]
// Parameters infos:

void ADynamicSMActor::SetStaticMesh() {
    static UFunction* pFnSetStaticMesh = NULL;

    if (!pFnSetStaticMesh)
        pFnSetStaticMesh = (UFunction*)UObject::GObjObjects()->Data[18640];

    ADynamicSMActor_execSetStaticMesh_Parms SetStaticMesh_Parms;

    this->ProcessEvent(pFnSetStaticMesh, &SetStaticMesh_Parms, NULL);
};

// Function Engine.DynamicSMActor.OnSetMaterial
// [0x00020002]
// Parameters infos:

void ADynamicSMActor::OnSetMaterial() {
    static UFunction* pFnOnSetMaterial = NULL;

    if (!pFnOnSetMaterial)
        pFnOnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[18638];

    ADynamicSMActor_execOnSetMaterial_Parms OnSetMaterial_Parms;

    this->ProcessEvent(pFnOnSetMaterial, &OnSetMaterial_Parms, NULL);
};

// Function Engine.DynamicSMActor.OnSetMesh
// [0x00020002]
// Parameters infos:

void ADynamicSMActor::OnSetMesh() {
    static UFunction* pFnOnSetMesh = NULL;

    if (!pFnOnSetMesh)
        pFnOnSetMesh = (UFunction*)UObject::GObjObjects()->Data[18635];

    ADynamicSMActor_execOnSetMesh_Parms OnSetMesh_Parms;

    this->ProcessEvent(pFnOnSetMesh, &OnSetMesh_Parms, NULL);
};

// Function Engine.DynamicSMActor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADynamicSMActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[18633];

    ADynamicSMActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.DynamicSMActor.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADynamicSMActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18632];

    ADynamicSMActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.InterpActor.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void AInterpActor::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[19711];

    AInterpActor_execApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.InterpActor.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void AInterpActor::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[19709];

    AInterpActor_execCreateCheckpointRecord_Parms CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.InterpActor.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void AInterpActor::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[19707];

    AInterpActor_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.InterpActor.ShutDown
// [0x00020102]
// Parameters infos:

void AInterpActor::ShutDown() {
    static UFunction* pFnShutDown = NULL;

    if (!pFnShutDown)
        pFnShutDown = (UFunction*)UObject::GObjObjects()->Data[19706];

    AInterpActor_execShutDown_Parms ShutDown_Parms;

    this->ProcessEvent(pFnShutDown, &ShutDown_Parms, NULL);
};

// Function Engine.InterpActor.InterpolationChanged
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventInterpolationChanged() {
    static UFunction* pFnInterpolationChanged = NULL;

    if (!pFnInterpolationChanged)
        pFnInterpolationChanged =
            (UFunction*)UObject::GObjObjects()->Data[19704];

    AInterpActor_eventInterpolationChanged_Parms InterpolationChanged_Parms;

    this->ProcessEvent(pFnInterpolationChanged, &InterpolationChanged_Parms,
                       NULL);
};

// Function Engine.InterpActor.InterpolationFinished
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventInterpolationFinished() {
    static UFunction* pFnInterpolationFinished = NULL;

    if (!pFnInterpolationFinished)
        pFnInterpolationFinished =
            (UFunction*)UObject::GObjObjects()->Data[19699];

    AInterpActor_eventInterpolationFinished_Parms InterpolationFinished_Parms;

    this->ProcessEvent(pFnInterpolationFinished, &InterpolationFinished_Parms,
                       NULL);
};

// Function Engine.InterpActor.InterpolationStarted
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventInterpolationStarted() {
    static UFunction* pFnInterpolationStarted = NULL;

    if (!pFnInterpolationStarted)
        pFnInterpolationStarted =
            (UFunction*)UObject::GObjObjects()->Data[19696];

    AInterpActor_eventInterpolationStarted_Parms InterpolationStarted_Parms;

    this->ProcessEvent(pFnInterpolationStarted, &InterpolationStarted_Parms,
                       NULL);
};

// Function Engine.InterpActor.PlayMovingSound
// [0x00020102]
// Parameters infos:

void AInterpActor::PlayMovingSound() {
    static UFunction* pFnPlayMovingSound = NULL;

    if (!pFnPlayMovingSound)
        pFnPlayMovingSound = (UFunction*)UObject::GObjObjects()->Data[19692];

    AInterpActor_execPlayMovingSound_Parms PlayMovingSound_Parms;

    this->ProcessEvent(pFnPlayMovingSound, &PlayMovingSound_Parms, NULL);
};

// Function Engine.InterpActor.FinishedOpen
// [0x00020002]
// Parameters infos:

void AInterpActor::FinishedOpen() {
    static UFunction* pFnFinishedOpen = NULL;

    if (!pFnFinishedOpen)
        pFnFinishedOpen = (UFunction*)UObject::GObjObjects()->Data[19689];

    AInterpActor_execFinishedOpen_Parms FinishedOpen_Parms;

    this->ProcessEvent(pFnFinishedOpen, &FinishedOpen_Parms, NULL);
};

// Function Engine.InterpActor.Restart
// [0x00020002]
// Parameters infos:

void AInterpActor::Restart() {
    static UFunction* pFnRestart = NULL;

    if (!pFnRestart)
        pFnRestart = (UFunction*)UObject::GObjObjects()->Data[19687];

    AInterpActor_execRestart_Parms Restart_Parms;

    this->ProcessEvent(pFnRestart, &Restart_Parms, NULL);
};

// Function Engine.InterpActor.Detach
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventDetach() {
    static UFunction* pFnDetach = NULL;

    if (!pFnDetach) pFnDetach = (UFunction*)UObject::GObjObjects()->Data[19683];

    AInterpActor_eventDetach_Parms Detach_Parms;

    this->ProcessEvent(pFnDetach, &Detach_Parms, NULL);
};

// Function Engine.InterpActor.Attach
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventAttach() {
    static UFunction* pFnAttach = NULL;

    if (!pFnAttach) pFnAttach = (UFunction*)UObject::GObjObjects()->Data[19679];

    AInterpActor_eventAttach_Parms Attach_Parms;

    this->ProcessEvent(pFnAttach, &Attach_Parms, NULL);
};

// Function Engine.InterpActor.RanInto
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventRanInto() {
    static UFunction* pFnRanInto = NULL;

    if (!pFnRanInto)
        pFnRanInto = (UFunction*)UObject::GObjObjects()->Data[19675];

    AInterpActor_eventRanInto_Parms RanInto_Parms;

    this->ProcessEvent(pFnRanInto, &RanInto_Parms, NULL);
};

// Function Engine.InterpActor.EncroachingOn
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventEncroachingOn() {
    static UFunction* pFnEncroachingOn = NULL;

    if (!pFnEncroachingOn)
        pFnEncroachingOn = (UFunction*)UObject::GObjObjects()->Data[19665];

    AInterpActor_eventEncroachingOn_Parms EncroachingOn_Parms;

    this->ProcessEvent(pFnEncroachingOn, &EncroachingOn_Parms, NULL);
};

// Function Engine.InterpActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AInterpActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[19664];

    AInterpActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Emitter.HideSelf
// [0x00020100]
// Parameters infos:

void AEmitter::HideSelf() {
    static UFunction* pFnHideSelf = NULL;

    if (!pFnHideSelf)
        pFnHideSelf = (UFunction*)UObject::GObjObjects()->Data[18978];

    AEmitter_execHideSelf_Parms HideSelf_Parms;

    this->ProcessEvent(pFnHideSelf, &HideSelf_Parms, NULL);
};

// Function Engine.Emitter.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void AEmitter::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[18976];

    AEmitter_execApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.Emitter.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void AEmitter::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[18974];

    AEmitter_execCreateCheckpointRecord_Parms CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.Emitter.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void AEmitter::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[18972];

    AEmitter_execShouldSaveForCheckpoint_Parms ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.Emitter.OnSetParticleSysParam
// [0x00020102]
// Parameters infos:

void AEmitter::OnSetParticleSysParam() {
    static UFunction* pFnOnSetParticleSysParam = NULL;

    if (!pFnOnSetParticleSysParam)
        pFnOnSetParticleSysParam =
            (UFunction*)UObject::GObjObjects()->Data[18968];

    AEmitter_execOnSetParticleSysParam_Parms OnSetParticleSysParam_Parms;

    this->ProcessEvent(pFnOnSetParticleSysParam, &OnSetParticleSysParam_Parms,
                       NULL);
};

// Function Engine.Emitter.SetActorParameter
// [0x00020102]
// Parameters infos:

void AEmitter::SetActorParameter() {
    static UFunction* pFnSetActorParameter = NULL;

    if (!pFnSetActorParameter)
        pFnSetActorParameter = (UFunction*)UObject::GObjObjects()->Data[18965];

    AEmitter_execSetActorParameter_Parms SetActorParameter_Parms;

    this->ProcessEvent(pFnSetActorParameter, &SetActorParameter_Parms, NULL);
};

// Function Engine.Emitter.SetExtColorParameter
// [0x00820102]
// Parameters infos:

void AEmitter::SetExtColorParameter() {
    static UFunction* pFnSetExtColorParameter = NULL;

    if (!pFnSetExtColorParameter)
        pFnSetExtColorParameter =
            (UFunction*)UObject::GObjObjects()->Data[18958];

    AEmitter_execSetExtColorParameter_Parms SetExtColorParameter_Parms;

    this->ProcessEvent(pFnSetExtColorParameter, &SetExtColorParameter_Parms,
                       NULL);
};

// Function Engine.Emitter.SetColorParameter
// [0x00020102]
// Parameters infos:

void AEmitter::SetColorParameter() {
    static UFunction* pFnSetColorParameter = NULL;

    if (!pFnSetColorParameter)
        pFnSetColorParameter = (UFunction*)UObject::GObjObjects()->Data[18955];

    AEmitter_execSetColorParameter_Parms SetColorParameter_Parms;

    this->ProcessEvent(pFnSetColorParameter, &SetColorParameter_Parms, NULL);
};

// Function Engine.Emitter.SetVectorParameter
// [0x00020102]
// Parameters infos:

void AEmitter::SetVectorParameter() {
    static UFunction* pFnSetVectorParameter = NULL;

    if (!pFnSetVectorParameter)
        pFnSetVectorParameter = (UFunction*)UObject::GObjObjects()->Data[18952];

    AEmitter_execSetVectorParameter_Parms SetVectorParameter_Parms;

    this->ProcessEvent(pFnSetVectorParameter, &SetVectorParameter_Parms, NULL);
};

// Function Engine.Emitter.SetFloatParameter
// [0x00020102]
// Parameters infos:

void AEmitter::SetFloatParameter() {
    static UFunction* pFnSetFloatParameter = NULL;

    if (!pFnSetFloatParameter)
        pFnSetFloatParameter = (UFunction*)UObject::GObjObjects()->Data[18949];

    AEmitter_execSetFloatParameter_Parms SetFloatParameter_Parms;

    this->ProcessEvent(pFnSetFloatParameter, &SetFloatParameter_Parms, NULL);
};

// Function Engine.Emitter.ShutDown
// [0x00020102]
// Parameters infos:

void AEmitter::ShutDown() {
    static UFunction* pFnShutDown = NULL;

    if (!pFnShutDown)
        pFnShutDown = (UFunction*)UObject::GObjObjects()->Data[18948];

    AEmitter_execShutDown_Parms ShutDown_Parms;

    this->ProcessEvent(pFnShutDown, &ShutDown_Parms, NULL);
};

// Function Engine.Emitter.OnParticleEventGenerator
// [0x00020000]
// Parameters infos:

void AEmitter::OnParticleEventGenerator() {
    static UFunction* pFnOnParticleEventGenerator = NULL;

    if (!pFnOnParticleEventGenerator)
        pFnOnParticleEventGenerator =
            (UFunction*)UObject::GObjObjects()->Data[18946];

    AEmitter_execOnParticleEventGenerator_Parms OnParticleEventGenerator_Parms;

    this->ProcessEvent(pFnOnParticleEventGenerator,
                       &OnParticleEventGenerator_Parms, NULL);
};

// Function Engine.Emitter.OnToggle
// [0x00020002]
// Parameters infos:

void AEmitter::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[18944];

    AEmitter_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.Emitter.OnParticleSystemFinished
// [0x00020102]
// Parameters infos:

void AEmitter::OnParticleSystemFinished() {
    static UFunction* pFnOnParticleSystemFinished = NULL;

    if (!pFnOnParticleSystemFinished)
        pFnOnParticleSystemFinished =
            (UFunction*)UObject::GObjObjects()->Data[18942];

    AEmitter_execOnParticleSystemFinished_Parms OnParticleSystemFinished_Parms;

    this->ProcessEvent(pFnOnParticleSystemFinished,
                       &OnParticleSystemFinished_Parms, NULL);
};

// Function Engine.Emitter.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AEmitter::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[18940];

    AEmitter_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Emitter.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AEmitter::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18939];

    AEmitter_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Emitter.SetTemplate
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AEmitter::eventSetTemplate() {
    static UFunction* pFnSetTemplate = NULL;

    if (!pFnSetTemplate)
        pFnSetTemplate = (UFunction*)UObject::GObjObjects()->Data[18936];

    AEmitter_eventSetTemplate_Parms SetTemplate_Parms;

    pFnSetTemplate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTemplate, &SetTemplate_Parms, NULL);

    pFnSetTemplate->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.PostBeginPlay
// [0x00820102]
// Parameters infos:

void AEmitterPool::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[19066];

    AEmitterPool_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.EmitterPool.SpawnEmitterCustomLifetime
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AEmitterPool::SpawnEmitterCustomLifetime() {
    static UFunction* pFnSpawnEmitterCustomLifetime = NULL;

    if (!pFnSpawnEmitterCustomLifetime)
        pFnSpawnEmitterCustomLifetime =
            (UFunction*)UObject::GObjObjects()->Data[19062];

    AEmitterPool_execSpawnEmitterCustomLifetime_Parms
        SpawnEmitterCustomLifetime_Parms;

    pFnSpawnEmitterCustomLifetime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnEmitterCustomLifetime,
                       &SpawnEmitterCustomLifetime_Parms, NULL);

    pFnSpawnEmitterCustomLifetime->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.SpawnEmitterMeshAttachment
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AEmitterPool::SpawnEmitterMeshAttachment() {
    static UFunction* pFnSpawnEmitterMeshAttachment = NULL;

    if (!pFnSpawnEmitterMeshAttachment)
        pFnSpawnEmitterMeshAttachment =
            (UFunction*)UObject::GObjObjects()->Data[19054];

    AEmitterPool_execSpawnEmitterMeshAttachment_Parms
        SpawnEmitterMeshAttachment_Parms;

    pFnSpawnEmitterMeshAttachment->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnEmitterMeshAttachment,
                       &SpawnEmitterMeshAttachment_Parms, NULL);

    pFnSpawnEmitterMeshAttachment->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.SpawnEmitter
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AEmitterPool::SpawnEmitter() {
    static UFunction* pFnSpawnEmitter = NULL;

    if (!pFnSpawnEmitter)
        pFnSpawnEmitter = (UFunction*)UObject::GObjObjects()->Data[10006];

    AEmitterPool_execSpawnEmitter_Parms SpawnEmitter_Parms;

    pFnSpawnEmitter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnEmitter, &SpawnEmitter_Parms, NULL);

    pFnSpawnEmitter->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.GetPooledComponent
// [0x00080401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::GetPooledComponent() {
    static UFunction* pFnGetPooledComponent = NULL;

    if (!pFnGetPooledComponent)
        pFnGetPooledComponent = (UFunction*)UObject::GObjObjects()->Data[19043];

    AEmitterPool_execGetPooledComponent_Parms GetPooledComponent_Parms;

    pFnGetPooledComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPooledComponent, &GetPooledComponent_Parms, NULL);

    pFnGetPooledComponent->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.GetFreeMatInstConsts
// [0x00084401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::GetFreeMatInstConsts() {
    static UFunction* pFnGetFreeMatInstConsts = NULL;

    if (!pFnGetFreeMatInstConsts)
        pFnGetFreeMatInstConsts =
            (UFunction*)UObject::GObjObjects()->Data[19040];

    AEmitterPool_execGetFreeMatInstConsts_Parms GetFreeMatInstConsts_Parms;

    pFnGetFreeMatInstConsts->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFreeMatInstConsts, &GetFreeMatInstConsts_Parms,
                       NULL);

    pFnGetFreeMatInstConsts->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.FreeMaterialInstanceConstants
// [0x00080401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::FreeMaterialInstanceConstants() {
    static UFunction* pFnFreeMaterialInstanceConstants = NULL;

    if (!pFnFreeMaterialInstanceConstants)
        pFnFreeMaterialInstanceConstants =
            (UFunction*)UObject::GObjObjects()->Data[19038];

    AEmitterPool_execFreeMaterialInstanceConstants_Parms
        FreeMaterialInstanceConstants_Parms;

    pFnFreeMaterialInstanceConstants->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFreeMaterialInstanceConstants,
                       &FreeMaterialInstanceConstants_Parms, NULL);

    pFnFreeMaterialInstanceConstants->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.GetFreeStaticMeshComponent
// [0x00084401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::GetFreeStaticMeshComponent() {
    static UFunction* pFnGetFreeStaticMeshComponent = NULL;

    if (!pFnGetFreeStaticMeshComponent)
        pFnGetFreeStaticMeshComponent =
            (UFunction*)UObject::GObjObjects()->Data[19035];

    AEmitterPool_execGetFreeStaticMeshComponent_Parms
        GetFreeStaticMeshComponent_Parms;

    pFnGetFreeStaticMeshComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFreeStaticMeshComponent,
                       &GetFreeStaticMeshComponent_Parms, NULL);

    pFnGetFreeStaticMeshComponent->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.FreeStaticMeshComponents
// [0x00080401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::FreeStaticMeshComponents() {
    static UFunction* pFnFreeStaticMeshComponents = NULL;

    if (!pFnFreeStaticMeshComponents)
        pFnFreeStaticMeshComponents =
            (UFunction*)UObject::GObjObjects()->Data[19033];

    AEmitterPool_execFreeStaticMeshComponents_Parms
        FreeStaticMeshComponents_Parms;

    pFnFreeStaticMeshComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFreeStaticMeshComponents,
                       &FreeStaticMeshComponents_Parms, NULL);

    pFnFreeStaticMeshComponents->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.ReturnToPool
// [0x00080401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::ReturnToPool() {
    static UFunction* pFnReturnToPool = NULL;

    if (!pFnReturnToPool)
        pFnReturnToPool = (UFunction*)UObject::GObjObjects()->Data[19031];

    AEmitterPool_execReturnToPool_Parms ReturnToPool_Parms;

    pFnReturnToPool->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReturnToPool, &ReturnToPool_Parms, NULL);

    pFnReturnToPool->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.ClearPoolComponents
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEmitterPool::ClearPoolComponents() {
    static UFunction* pFnClearPoolComponents = NULL;

    if (!pFnClearPoolComponents)
        pFnClearPoolComponents =
            (UFunction*)UObject::GObjObjects()->Data[19029];

    AEmitterPool_execClearPoolComponents_Parms ClearPoolComponents_Parms;

    pFnClearPoolComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearPoolComponents, &ClearPoolComponents_Parms,
                       NULL);

    pFnClearPoolComponents->FunctionFlags |= 0x400;
};

// Function Engine.EmitterPool.OnParticleSystemFinished
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AEmitterPool::OnParticleSystemFinished() {
    static UFunction* pFnOnParticleSystemFinished = NULL;

    if (!pFnOnParticleSystemFinished)
        pFnOnParticleSystemFinished =
            (UFunction*)UObject::GObjObjects()->Data[19027];

    AEmitterPool_execOnParticleSystemFinished_Parms
        OnParticleSystemFinished_Parms;

    pFnOnParticleSystemFinished->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOnParticleSystemFinished,
                       &OnParticleSystemFinished_Parms, NULL);

    pFnOnParticleSystemFinished->FunctionFlags |= 0x400;
};

// Function Engine.HUD.OnLostFocusPause
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AHUD::eventOnLostFocusPause() {
    static UFunction* pFnOnLostFocusPause = NULL;

    if (!pFnOnLostFocusPause)
        pFnOnLostFocusPause = (UFunction*)UObject::GObjObjects()->Data[23171];

    AHUD_eventOnLostFocusPause_Parms OnLostFocusPause_Parms;

    this->ProcessEvent(pFnOnLostFocusPause, &OnLostFocusPause_Parms, NULL);
};

// Function Engine.HUD.NotifyBindPostProcessEffects
// [0x00020000]
// Parameters infos:

void AHUD::NotifyBindPostProcessEffects() {
    static UFunction* pFnNotifyBindPostProcessEffects = NULL;

    if (!pFnNotifyBindPostProcessEffects)
        pFnNotifyBindPostProcessEffects =
            (UFunction*)UObject::GObjObjects()->Data[23170];

    AHUD_execNotifyBindPostProcessEffects_Parms
        NotifyBindPostProcessEffects_Parms;

    this->ProcessEvent(pFnNotifyBindPostProcessEffects,
                       &NotifyBindPostProcessEffects_Parms, NULL);
};

// Function Engine.HUD.PlayerOwnerDied
// [0x00020000]
// Parameters infos:

void AHUD::PlayerOwnerDied() {
    static UFunction* pFnPlayerOwnerDied = NULL;

    if (!pFnPlayerOwnerDied)
        pFnPlayerOwnerDied = (UFunction*)UObject::GObjObjects()->Data[23169];

    AHUD_execPlayerOwnerDied_Parms PlayerOwnerDied_Parms;

    this->ProcessEvent(pFnPlayerOwnerDied, &PlayerOwnerDied_Parms, NULL);
};

// Function Engine.HUD.GetFontSizeIndex
// [0x00022002]
// Parameters infos:

void AHUD::GetFontSizeIndex() {
    static UFunction* pFnGetFontSizeIndex = NULL;

    if (!pFnGetFontSizeIndex)
        pFnGetFontSizeIndex = (UFunction*)UObject::GObjObjects()->Data[23166];

    AHUD_execGetFontSizeIndex_Parms GetFontSizeIndex_Parms;

    this->ProcessEvent(pFnGetFontSizeIndex, &GetFontSizeIndex_Parms, NULL);
};

// Function Engine.HUD.DrawText
// [0x00424002]
// Parameters infos:

void AHUD::DrawText() {
    static UFunction* pFnDrawText = NULL;

    if (!pFnDrawText)
        pFnDrawText = (UFunction*)UObject::GObjObjects()->Data[23157];

    AHUD_execDrawText_Parms DrawText_Parms;

    this->ProcessEvent(pFnDrawText, &DrawText_Parms, NULL);
};

// Function Engine.HUD.DisplayKismetMessages
// [0x00020002]
// Parameters infos:

void AHUD::DisplayKismetMessages() {
    static UFunction* pFnDisplayKismetMessages = NULL;

    if (!pFnDisplayKismetMessages)
        pFnDisplayKismetMessages =
            (UFunction*)UObject::GObjObjects()->Data[23155];

    AHUD_execDisplayKismetMessages_Parms DisplayKismetMessages_Parms;

    this->ProcessEvent(pFnDisplayKismetMessages, &DisplayKismetMessages_Parms,
                       NULL);
};

// Function Engine.HUD.DisplayLocalMessages
// [0x00020002]
// Parameters infos:

void AHUD::DisplayLocalMessages() {
    static UFunction* pFnDisplayLocalMessages = NULL;

    if (!pFnDisplayLocalMessages)
        pFnDisplayLocalMessages =
            (UFunction*)UObject::GObjObjects()->Data[23145];

    AHUD_execDisplayLocalMessages_Parms DisplayLocalMessages_Parms;

    this->ProcessEvent(pFnDisplayLocalMessages, &DisplayLocalMessages_Parms,
                       NULL);
};

// Function Engine.HUD.DrawMessageText
// [0x00820002]
// Parameters infos:

void AHUD::DrawMessageText() {
    static UFunction* pFnDrawMessageText = NULL;

    if (!pFnDrawMessageText)
        pFnDrawMessageText = (UFunction*)UObject::GObjObjects()->Data[23140];

    AHUD_execDrawMessageText_Parms DrawMessageText_Parms;

    this->ProcessEvent(pFnDrawMessageText, &DrawMessageText_Parms, NULL);
};

// Function Engine.HUD.DrawMessage
// [0x00420002]
// Parameters infos:

void AHUD::DrawMessage() {
    static UFunction* pFnDrawMessage = NULL;

    if (!pFnDrawMessage)
        pFnDrawMessage = (UFunction*)UObject::GObjObjects()->Data[23132];

    AHUD_execDrawMessage_Parms DrawMessage_Parms;

    this->ProcessEvent(pFnDrawMessage, &DrawMessage_Parms, NULL);
};

// Function Engine.HUD.GetScreenCoords
// [0x00420002]
// Parameters infos:

void AHUD::GetScreenCoords() {
    static UFunction* pFnGetScreenCoords = NULL;

    if (!pFnGetScreenCoords)
        pFnGetScreenCoords = (UFunction*)UObject::GObjObjects()->Data[23127];

    AHUD_execGetScreenCoords_Parms GetScreenCoords_Parms;

    this->ProcessEvent(pFnGetScreenCoords, &GetScreenCoords_Parms, NULL);
};

// Function Engine.HUD.AddLocalizedMessage
// [0x00024002]
// Parameters infos:

void AHUD::AddLocalizedMessage() {
    static UFunction* pFnAddLocalizedMessage = NULL;

    if (!pFnAddLocalizedMessage)
        pFnAddLocalizedMessage =
            (UFunction*)UObject::GObjObjects()->Data[23116];

    AHUD_execAddLocalizedMessage_Parms AddLocalizedMessage_Parms;

    this->ProcessEvent(pFnAddLocalizedMessage, &AddLocalizedMessage_Parms,
                       NULL);
};

// Function Engine.HUD.LocalizedMessage
// [0x00024002]
// Parameters infos:

void AHUD::LocalizedMessage() {
    static UFunction* pFnLocalizedMessage = NULL;

    if (!pFnLocalizedMessage)
        pFnLocalizedMessage = (UFunction*)UObject::GObjObjects()->Data[23102];

    AHUD_execLocalizedMessage_Parms LocalizedMessage_Parms;

    this->ProcessEvent(pFnLocalizedMessage, &LocalizedMessage_Parms, NULL);
};

// Function Engine.HUD.AddConsoleMessage
// [0x00024002]
// Parameters infos:

void AHUD::AddConsoleMessage() {
    static UFunction* pFnAddConsoleMessage = NULL;

    if (!pFnAddConsoleMessage)
        pFnAddConsoleMessage = (UFunction*)UObject::GObjObjects()->Data[23095];

    AHUD_execAddConsoleMessage_Parms AddConsoleMessage_Parms;

    this->ProcessEvent(pFnAddConsoleMessage, &AddConsoleMessage_Parms, NULL);
};

// Function Engine.HUD.ShouldShowConsoleMessage
// [0x00020002]
// Parameters infos:

void AHUD::ShouldShowConsoleMessage() {
    static UFunction* pFnShouldShowConsoleMessage = NULL;

    if (!pFnShouldShowConsoleMessage)
        pFnShouldShowConsoleMessage =
            (UFunction*)UObject::GObjObjects()->Data[23092];

    AHUD_execShouldShowConsoleMessage_Parms ShouldShowConsoleMessage_Parms;

    this->ProcessEvent(pFnShouldShowConsoleMessage,
                       &ShouldShowConsoleMessage_Parms, NULL);
};

// Function Engine.HUD.DisplayConsoleMessages
// [0x00020002]
// Parameters infos:

void AHUD::DisplayConsoleMessages() {
    static UFunction* pFnDisplayConsoleMessages = NULL;

    if (!pFnDisplayConsoleMessages)
        pFnDisplayConsoleMessages =
            (UFunction*)UObject::GObjObjects()->Data[23086];

    AHUD_execDisplayConsoleMessages_Parms DisplayConsoleMessages_Parms;

    this->ProcessEvent(pFnDisplayConsoleMessages, &DisplayConsoleMessages_Parms,
                       NULL);
};

// Function Engine.HUD.Message
// [0x00024002]
// Parameters infos:

void AHUD::Message() {
    static UFunction* pFnMessage = NULL;

    if (!pFnMessage)
        pFnMessage = (UFunction*)UObject::GObjObjects()->Data[23080];

    AHUD_execMessage_Parms Message_Parms;

    this->ProcessEvent(pFnMessage, &Message_Parms, NULL);
};

// Function Engine.HUD.ClearMessage
// [0x00420002]
// Parameters infos:

void AHUD::ClearMessage() {
    static UFunction* pFnClearMessage = NULL;

    if (!pFnClearMessage)
        pFnClearMessage = (UFunction*)UObject::GObjObjects()->Data[23078];

    AHUD_execClearMessage_Parms ClearMessage_Parms;

    this->ProcessEvent(pFnClearMessage, &ClearMessage_Parms, NULL);
};

// Function Engine.HUD.DisplayBadConnectionAlert
// [0x00020000]
// Parameters infos:

void AHUD::DisplayBadConnectionAlert() {
    static UFunction* pFnDisplayBadConnectionAlert = NULL;

    if (!pFnDisplayBadConnectionAlert)
        pFnDisplayBadConnectionAlert =
            (UFunction*)UObject::GObjObjects()->Data[23077];

    AHUD_execDisplayBadConnectionAlert_Parms DisplayBadConnectionAlert_Parms;

    this->ProcessEvent(pFnDisplayBadConnectionAlert,
                       &DisplayBadConnectionAlert_Parms, NULL);
};

// Function Engine.HUD.DrawHUD
// [0x00820002]
// Parameters infos:

void AHUD::DrawHUD() {
    static UFunction* pFnDrawHUD = NULL;

    if (!pFnDrawHUD)
        pFnDrawHUD = (UFunction*)UObject::GObjObjects()->Data[23074];

    AHUD_execDrawHUD_Parms DrawHUD_Parms;

    this->ProcessEvent(pFnDrawHUD, &DrawHUD_Parms, NULL);
};

// Function Engine.HUD.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AHUD::eventPostRender() {
    static UFunction* pFnPostRender = NULL;

    if (!pFnPostRender)
        pFnPostRender = (UFunction*)UObject::GObjObjects()->Data[23070];

    AHUD_eventPostRender_Parms PostRender_Parms;

    this->ProcessEvent(pFnPostRender, &PostRender_Parms, NULL);
};

// Function Engine.HUD.PreCalcValues
// [0x00020002]
// Parameters infos:

void AHUD::PreCalcValues() {
    static UFunction* pFnPreCalcValues = NULL;

    if (!pFnPreCalcValues)
        pFnPreCalcValues = (UFunction*)UObject::GObjObjects()->Data[23069];

    AHUD_execPreCalcValues_Parms PreCalcValues_Parms;

    this->ProcessEvent(pFnPreCalcValues, &PreCalcValues_Parms, NULL);
};

// Function Engine.HUD.DrawRoute
// [0x00820002]
// Parameters infos:

void AHUD::DrawRoute() {
    static UFunction* pFnDrawRoute = NULL;

    if (!pFnDrawRoute)
        pFnDrawRoute = (UFunction*)UObject::GObjObjects()->Data[23059];

    AHUD_execDrawRoute_Parms DrawRoute_Parms;

    this->ProcessEvent(pFnDrawRoute, &DrawRoute_Parms, NULL);
};

// Function Engine.HUD.ShowDebugInfo
// [0x00420002]
// Parameters infos:

void AHUD::ShowDebugInfo() {
    static UFunction* pFnShowDebugInfo = NULL;

    if (!pFnShowDebugInfo)
        pFnShowDebugInfo = (UFunction*)UObject::GObjObjects()->Data[23056];

    AHUD_execShowDebugInfo_Parms ShowDebugInfo_Parms;

    this->ProcessEvent(pFnShowDebugInfo, &ShowDebugInfo_Parms, NULL);
};

// Function Engine.HUD.ToggleDirectorInfoDebug
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AHUD::ToggleDirectorInfoDebug() {
    static UFunction* pFnToggleDirectorInfoDebug = NULL;

    if (!pFnToggleDirectorInfoDebug)
        pFnToggleDirectorInfoDebug =
            (UFunction*)UObject::GObjObjects()->Data[23055];

    AHUD_execToggleDirectorInfoDebug_Parms ToggleDirectorInfoDebug_Parms;

    this->ProcessEvent(pFnToggleDirectorInfoDebug,
                       &ToggleDirectorInfoDebug_Parms, NULL);
};

// Function Engine.HUD.ToggleDirectorInfoHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AHUD::ToggleDirectorInfoHUD() {
    static UFunction* pFnToggleDirectorInfoHUD = NULL;

    if (!pFnToggleDirectorInfoHUD)
        pFnToggleDirectorInfoHUD =
            (UFunction*)UObject::GObjObjects()->Data[23054];

    AHUD_execToggleDirectorInfoHUD_Parms ToggleDirectorInfoHUD_Parms;

    this->ProcessEvent(pFnToggleDirectorInfoHUD, &ToggleDirectorInfoHUD_Parms,
                       NULL);
};

// Function Engine.HUD.ShouldDisplayDebug
// [0x00020002]
// Parameters infos:

void AHUD::ShouldDisplayDebug() {
    static UFunction* pFnShouldDisplayDebug = NULL;

    if (!pFnShouldDisplayDebug)
        pFnShouldDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[6313];

    AHUD_execShouldDisplayDebug_Parms ShouldDisplayDebug_Parms;

    this->ProcessEvent(pFnShouldDisplayDebug, &ShouldDisplayDebug_Parms, NULL);
};

// Function Engine.HUD.ShowDebug
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void AHUD::ShowDebug() {
    static UFunction* pFnShowDebug = NULL;

    if (!pFnShowDebug)
        pFnShowDebug = (UFunction*)UObject::GObjObjects()->Data[23049];

    AHUD_execShowDebug_Parms ShowDebug_Parms;

    this->ProcessEvent(pFnShowDebug, &ShowDebug_Parms, NULL);
};

// Function Engine.HUD.SetShowScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AHUD::SetShowScores() {
    static UFunction* pFnSetShowScores = NULL;

    if (!pFnSetShowScores)
        pFnSetShowScores = (UFunction*)UObject::GObjObjects()->Data[23047];

    AHUD_execSetShowScores_Parms SetShowScores_Parms;

    this->ProcessEvent(pFnSetShowScores, &SetShowScores_Parms, NULL);
};

// Function Engine.HUD.ShowScores
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AHUD::ShowScores() {
    static UFunction* pFnShowScores = NULL;

    if (!pFnShowScores)
        pFnShowScores = (UFunction*)UObject::GObjObjects()->Data[23046];

    AHUD_execShowScores_Parms ShowScores_Parms;

    this->ProcessEvent(pFnShowScores, &ShowScores_Parms, NULL);
};

// Function Engine.HUD.ShowHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AHUD::ShowHUD() {
    static UFunction* pFnShowHUD = NULL;

    if (!pFnShowHUD)
        pFnShowHUD = (UFunction*)UObject::GObjObjects()->Data[23045];

    AHUD_execShowHUD_Parms ShowHUD_Parms;

    this->ProcessEvent(pFnShowHUD, &ShowHUD_Parms, NULL);
};

// Function Engine.HUD.ToggleHUD
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AHUD::ToggleHUD() {
    static UFunction* pFnToggleHUD = NULL;

    if (!pFnToggleHUD)
        pFnToggleHUD = (UFunction*)UObject::GObjObjects()->Data[23044];

    AHUD_execToggleHUD_Parms ToggleHUD_Parms;

    this->ProcessEvent(pFnToggleHUD, &ToggleHUD_Parms, NULL);
};

// Function Engine.HUD.AddPostRenderedActor
// [0x00020002]
// Parameters infos:

void AHUD::AddPostRenderedActor() {
    static UFunction* pFnAddPostRenderedActor = NULL;

    if (!pFnAddPostRenderedActor)
        pFnAddPostRenderedActor =
            (UFunction*)UObject::GObjObjects()->Data[23041];

    AHUD_execAddPostRenderedActor_Parms AddPostRenderedActor_Parms;

    this->ProcessEvent(pFnAddPostRenderedActor, &AddPostRenderedActor_Parms,
                       NULL);
};

// Function Engine.HUD.RemovePostRenderedActor
// [0x00020002]
// Parameters infos:

void AHUD::RemovePostRenderedActor() {
    static UFunction* pFnRemovePostRenderedActor = NULL;

    if (!pFnRemovePostRenderedActor)
        pFnRemovePostRenderedActor =
            (UFunction*)UObject::GObjObjects()->Data[23038];

    AHUD_execRemovePostRenderedActor_Parms RemovePostRenderedActor_Parms;

    this->ProcessEvent(pFnRemovePostRenderedActor,
                       &RemovePostRenderedActor_Parms, NULL);
};

// Function Engine.HUD.DrawActorOverlays
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AHUD::DrawActorOverlays() {
    static UFunction* pFnDrawActorOverlays = NULL;

    if (!pFnDrawActorOverlays)
        pFnDrawActorOverlays = (UFunction*)UObject::GObjObjects()->Data[23035];

    AHUD_execDrawActorOverlays_Parms DrawActorOverlays_Parms;

    pFnDrawActorOverlays->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawActorOverlays, &DrawActorOverlays_Parms, NULL);

    pFnDrawActorOverlays->FunctionFlags |= 0x400;
};

// Function Engine.HUD.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AHUD::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[23034];

    AHUD_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.HUD.Draw2DLine
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AHUD::Draw2DLine() {
    static UFunction* pFnDraw2DLine = NULL;

    if (!pFnDraw2DLine)
        pFnDraw2DLine = (UFunction*)UObject::GObjObjects()->Data[23028];

    AHUD_execDraw2DLine_Parms Draw2DLine_Parms;

    pFnDraw2DLine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDraw2DLine, &Draw2DLine_Parms, NULL);

    pFnDraw2DLine->FunctionFlags |= 0x400;
};

// Function Engine.HUD.Draw3DLine
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AHUD::Draw3DLine() {
    static UFunction* pFnDraw3DLine = NULL;

    if (!pFnDraw3DLine)
        pFnDraw3DLine = (UFunction*)UObject::GObjObjects()->Data[23024];

    AHUD_execDraw3DLine_Parms Draw3DLine_Parms;

    pFnDraw3DLine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDraw3DLine, &Draw3DLine_Parms, NULL);

    pFnDraw3DLine->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.CheckForSentinelRun
// [0x00020002]
// Parameters infos:

void AAutoTestManager::CheckForSentinelRun() {
    static UFunction* pFnCheckForSentinelRun = NULL;

    if (!pFnCheckForSentinelRun)
        pFnCheckForSentinelRun =
            (UFunction*)UObject::GObjObjects()->Data[15296];

    AAutoTestManager_execCheckForSentinelRun_Parms CheckForSentinelRun_Parms;

    this->ProcessEvent(pFnCheckForSentinelRun, &CheckForSentinelRun_Parms,
                       NULL);
};

// Function Engine.AutoTestManager.StartMatch
// [0x00020002]
// Parameters infos:

void AAutoTestManager::StartMatch() {
    static UFunction* pFnStartMatch = NULL;

    if (!pFnStartMatch)
        pFnStartMatch = (UFunction*)UObject::GObjObjects()->Data[15294];

    AAutoTestManager_execStartMatch_Parms StartMatch_Parms;

    this->ProcessEvent(pFnStartMatch, &StartMatch_Parms, NULL);
};

// Function Engine.AutoTestManager.GetNextAutomatedTestingMap
// [0x00020002]
// Parameters infos:

void AAutoTestManager::GetNextAutomatedTestingMap() {
    static UFunction* pFnGetNextAutomatedTestingMap = NULL;

    if (!pFnGetNextAutomatedTestingMap)
        pFnGetNextAutomatedTestingMap =
            (UFunction*)UObject::GObjObjects()->Data[15289];

    AAutoTestManager_execGetNextAutomatedTestingMap_Parms
        GetNextAutomatedTestingMap_Parms;

    this->ProcessEvent(pFnGetNextAutomatedTestingMap,
                       &GetNextAutomatedTestingMap_Parms, NULL);
};

// Function Engine.AutoTestManager.IncrementNumberOfMatchesPlayed
// [0x00020002]
// Parameters infos:

void AAutoTestManager::IncrementNumberOfMatchesPlayed() {
    static UFunction* pFnIncrementNumberOfMatchesPlayed = NULL;

    if (!pFnIncrementNumberOfMatchesPlayed)
        pFnIncrementNumberOfMatchesPlayed =
            (UFunction*)UObject::GObjObjects()->Data[15288];

    AAutoTestManager_execIncrementNumberOfMatchesPlayed_Parms
        IncrementNumberOfMatchesPlayed_Parms;

    this->ProcessEvent(pFnIncrementNumberOfMatchesPlayed,
                       &IncrementNumberOfMatchesPlayed_Parms, NULL);
};

// Function Engine.AutoTestManager.IncrementAutomatedTestingMapIndex
// [0x00020002]
// Parameters infos:

void AAutoTestManager::IncrementAutomatedTestingMapIndex() {
    static UFunction* pFnIncrementAutomatedTestingMapIndex = NULL;

    if (!pFnIncrementAutomatedTestingMapIndex)
        pFnIncrementAutomatedTestingMapIndex =
            (UFunction*)UObject::GObjObjects()->Data[15287];

    AAutoTestManager_execIncrementAutomatedTestingMapIndex_Parms
        IncrementAutomatedTestingMapIndex_Parms;

    this->ProcessEvent(pFnIncrementAutomatedTestingMapIndex,
                       &IncrementAutomatedTestingMapIndex_Parms, NULL);
};

// Function Engine.AutoTestManager.CloseAutomatedMapTestTimer
// [0x00020002]
// Parameters infos:

void AAutoTestManager::CloseAutomatedMapTestTimer() {
    static UFunction* pFnCloseAutomatedMapTestTimer = NULL;

    if (!pFnCloseAutomatedMapTestTimer)
        pFnCloseAutomatedMapTestTimer =
            (UFunction*)UObject::GObjObjects()->Data[15286];

    AAutoTestManager_execCloseAutomatedMapTestTimer_Parms
        CloseAutomatedMapTestTimer_Parms;

    this->ProcessEvent(pFnCloseAutomatedMapTestTimer,
                       &CloseAutomatedMapTestTimer_Parms, NULL);
};

// Function Engine.AutoTestManager.StartAutomatedMapTestTimerWorker
// [0x00020002]
// Parameters infos:

void AAutoTestManager::StartAutomatedMapTestTimerWorker() {
    static UFunction* pFnStartAutomatedMapTestTimerWorker = NULL;

    if (!pFnStartAutomatedMapTestTimerWorker)
        pFnStartAutomatedMapTestTimerWorker =
            (UFunction*)UObject::GObjObjects()->Data[15284];

    AAutoTestManager_execStartAutomatedMapTestTimerWorker_Parms
        StartAutomatedMapTestTimerWorker_Parms;

    this->ProcessEvent(pFnStartAutomatedMapTestTimerWorker,
                       &StartAutomatedMapTestTimerWorker_Parms, NULL);
};

// Function Engine.AutoTestManager.StartAutomatedMapTestTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAutoTestManager::eventStartAutomatedMapTestTimer() {
    static UFunction* pFnStartAutomatedMapTestTimer = NULL;

    if (!pFnStartAutomatedMapTestTimer)
        pFnStartAutomatedMapTestTimer =
            (UFunction*)UObject::GObjObjects()->Data[15283];

    AAutoTestManager_eventStartAutomatedMapTestTimer_Parms
        StartAutomatedMapTestTimer_Parms;

    this->ProcessEvent(pFnStartAutomatedMapTestTimer,
                       &StartAutomatedMapTestTimer_Parms, NULL);
};

// Function Engine.AutoTestManager.DoMemoryTracking
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::DoMemoryTracking() {
    static UFunction* pFnDoMemoryTracking = NULL;

    if (!pFnDoMemoryTracking)
        pFnDoMemoryTracking = (UFunction*)UObject::GObjObjects()->Data[15282];

    AAutoTestManager_execDoMemoryTracking_Parms DoMemoryTracking_Parms;

    pFnDoMemoryTracking->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoMemoryTracking, &DoMemoryTracking_Parms, NULL);

    pFnDoMemoryTracking->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.DoTimeBasedSentinelStatGathering
// [0x00820002]
// Parameters infos:

void AAutoTestManager::DoTimeBasedSentinelStatGathering() {
    static UFunction* pFnDoTimeBasedSentinelStatGathering = NULL;

    if (!pFnDoTimeBasedSentinelStatGathering)
        pFnDoTimeBasedSentinelStatGathering =
            (UFunction*)UObject::GObjObjects()->Data[15278];

    AAutoTestManager_execDoTimeBasedSentinelStatGathering_Parms
        DoTimeBasedSentinelStatGathering_Parms;

    this->ProcessEvent(pFnDoTimeBasedSentinelStatGathering,
                       &DoTimeBasedSentinelStatGathering_Parms, NULL);
};

// Function
// Engine.AutoTestManager.DoSentinel_ViewDependentMemoryAtSpecificLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::DoSentinel_ViewDependentMemoryAtSpecificLocation() {
    static UFunction* pFnDoSentinel_ViewDependentMemoryAtSpecificLocation =
        NULL;

    if (!pFnDoSentinel_ViewDependentMemoryAtSpecificLocation)
        pFnDoSentinel_ViewDependentMemoryAtSpecificLocation =
            (UFunction*)UObject::GObjObjects()->Data[15275];

    AAutoTestManager_execDoSentinel_ViewDependentMemoryAtSpecificLocation_Parms
        DoSentinel_ViewDependentMemoryAtSpecificLocation_Parms;

    pFnDoSentinel_ViewDependentMemoryAtSpecificLocation->FunctionFlags |=
        ~0x400;

    this->ProcessEvent(pFnDoSentinel_ViewDependentMemoryAtSpecificLocation,
                       &DoSentinel_ViewDependentMemoryAtSpecificLocation_Parms,
                       NULL);

    pFnDoSentinel_ViewDependentMemoryAtSpecificLocation->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.DoSentinel_PerfAtSpecificLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::DoSentinel_PerfAtSpecificLocation() {
    static UFunction* pFnDoSentinel_PerfAtSpecificLocation = NULL;

    if (!pFnDoSentinel_PerfAtSpecificLocation)
        pFnDoSentinel_PerfAtSpecificLocation =
            (UFunction*)UObject::GObjObjects()->Data[15272];

    AAutoTestManager_execDoSentinel_PerfAtSpecificLocation_Parms
        DoSentinel_PerfAtSpecificLocation_Parms;

    pFnDoSentinel_PerfAtSpecificLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoSentinel_PerfAtSpecificLocation,
                       &DoSentinel_PerfAtSpecificLocation_Parms, NULL);

    pFnDoSentinel_PerfAtSpecificLocation->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.DoSentinel_MemoryAtSpecificLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::DoSentinel_MemoryAtSpecificLocation() {
    static UFunction* pFnDoSentinel_MemoryAtSpecificLocation = NULL;

    if (!pFnDoSentinel_MemoryAtSpecificLocation)
        pFnDoSentinel_MemoryAtSpecificLocation =
            (UFunction*)UObject::GObjObjects()->Data[15269];

    AAutoTestManager_execDoSentinel_MemoryAtSpecificLocation_Parms
        DoSentinel_MemoryAtSpecificLocation_Parms;

    pFnDoSentinel_MemoryAtSpecificLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoSentinel_MemoryAtSpecificLocation,
                       &DoSentinel_MemoryAtSpecificLocation_Parms, NULL);

    pFnDoSentinel_MemoryAtSpecificLocation->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.GetTravelLocations
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::GetTravelLocations() {
    static UFunction* pFnGetTravelLocations = NULL;

    if (!pFnGetTravelLocations)
        pFnGetTravelLocations = (UFunction*)UObject::GObjObjects()->Data[15264];

    AAutoTestManager_execGetTravelLocations_Parms GetTravelLocations_Parms;

    pFnGetTravelLocations->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTravelLocations, &GetTravelLocations_Parms, NULL);

    pFnGetTravelLocations->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.HandlePerLoadedMapAudioStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::HandlePerLoadedMapAudioStats() {
    static UFunction* pFnHandlePerLoadedMapAudioStats = NULL;

    if (!pFnHandlePerLoadedMapAudioStats)
        pFnHandlePerLoadedMapAudioStats =
            (UFunction*)UObject::GObjObjects()->Data[15263];

    AAutoTestManager_execHandlePerLoadedMapAudioStats_Parms
        HandlePerLoadedMapAudioStats_Parms;

    pFnHandlePerLoadedMapAudioStats->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHandlePerLoadedMapAudioStats,
                       &HandlePerLoadedMapAudioStats_Parms, NULL);

    pFnHandlePerLoadedMapAudioStats->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.DoSentinelActionPerLoadedMap
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::DoSentinelActionPerLoadedMap() {
    static UFunction* pFnDoSentinelActionPerLoadedMap = NULL;

    if (!pFnDoSentinelActionPerLoadedMap)
        pFnDoSentinelActionPerLoadedMap =
            (UFunction*)UObject::GObjObjects()->Data[15262];

    AAutoTestManager_execDoSentinelActionPerLoadedMap_Parms
        DoSentinelActionPerLoadedMap_Parms;

    pFnDoSentinelActionPerLoadedMap->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoSentinelActionPerLoadedMap,
                       &DoSentinelActionPerLoadedMap_Parms, NULL);

    pFnDoSentinelActionPerLoadedMap->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.DoTravelTheWorld
// [0x00020002]
// Parameters infos:

void AAutoTestManager::DoTravelTheWorld() {
    static UFunction* pFnDoTravelTheWorld = NULL;

    if (!pFnDoTravelTheWorld)
        pFnDoTravelTheWorld = (UFunction*)UObject::GObjObjects()->Data[15242];

    AAutoTestManager_execDoTravelTheWorld_Parms DoTravelTheWorld_Parms;

    this->ProcessEvent(pFnDoTravelTheWorld, &DoTravelTheWorld_Parms, NULL);
};

// Function Engine.AutoTestManager.EndSentinelRun
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::EndSentinelRun() {
    static UFunction* pFnEndSentinelRun = NULL;

    if (!pFnEndSentinelRun)
        pFnEndSentinelRun = (UFunction*)UObject::GObjObjects()->Data[15240];

    AAutoTestManager_execEndSentinelRun_Parms EndSentinelRun_Parms;

    pFnEndSentinelRun->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndSentinelRun, &EndSentinelRun_Parms, NULL);

    pFnEndSentinelRun->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.AddSentinelPerTimePeriodStats
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::AddSentinelPerTimePeriodStats() {
    static UFunction* pFnAddSentinelPerTimePeriodStats = NULL;

    if (!pFnAddSentinelPerTimePeriodStats)
        pFnAddSentinelPerTimePeriodStats =
            (UFunction*)UObject::GObjObjects()->Data[15237];

    AAutoTestManager_execAddSentinelPerTimePeriodStats_Parms
        AddSentinelPerTimePeriodStats_Parms;

    pFnAddSentinelPerTimePeriodStats->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddSentinelPerTimePeriodStats,
                       &AddSentinelPerTimePeriodStats_Parms, NULL);

    pFnAddSentinelPerTimePeriodStats->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.BeginSentinelRun
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AAutoTestManager::BeginSentinelRun() {
    static UFunction* pFnBeginSentinelRun = NULL;

    if (!pFnBeginSentinelRun)
        pFnBeginSentinelRun = (UFunction*)UObject::GObjObjects()->Data[15233];

    AAutoTestManager_execBeginSentinelRun_Parms BeginSentinelRun_Parms;

    pFnBeginSentinelRun->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBeginSentinelRun, &BeginSentinelRun_Parms, NULL);

    pFnBeginSentinelRun->FunctionFlags |= 0x400;
};

// Function Engine.AutoTestManager.InitializeOptions
// [0x00020002]
// Parameters infos:

void AAutoTestManager::InitializeOptions() {
    static UFunction* pFnInitializeOptions = NULL;

    if (!pFnInitializeOptions)
        pFnInitializeOptions = (UFunction*)UObject::GObjObjects()->Data[15230];

    AAutoTestManager_execInitializeOptions_Parms InitializeOptions_Parms;

    this->ProcessEvent(pFnInitializeOptions, &InitializeOptions_Parms, NULL);
};

// Function Engine.AutoTestManager.Timer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAutoTestManager::eventTimer() {
    static UFunction* pFnTimer = NULL;

    if (!pFnTimer) pFnTimer = (UFunction*)UObject::GObjObjects()->Data[15229];

    AAutoTestManager_eventTimer_Parms Timer_Parms;

    this->ProcessEvent(pFnTimer, &Timer_Parms, NULL);
};

// Function Engine.AutoTestManager.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAutoTestManager::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[15228];

    AAutoTestManager_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.CoverGroup.OnToggle
// [0x00020102]
// Parameters infos:

void ACoverGroup::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[16956];

    ACoverGroup_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.CoverGroup.ToggleGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ACoverGroup::ToggleGroup() {
    static UFunction* pFnToggleGroup = NULL;

    if (!pFnToggleGroup)
        pFnToggleGroup = (UFunction*)UObject::GObjObjects()->Data[16955];

    ACoverGroup_execToggleGroup_Parms ToggleGroup_Parms;

    pFnToggleGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnToggleGroup, &ToggleGroup_Parms, NULL);

    pFnToggleGroup->FunctionFlags |= 0x400;
};

// Function Engine.CoverGroup.DisableGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ACoverGroup::DisableGroup() {
    static UFunction* pFnDisableGroup = NULL;

    if (!pFnDisableGroup)
        pFnDisableGroup = (UFunction*)UObject::GObjObjects()->Data[16954];

    ACoverGroup_execDisableGroup_Parms DisableGroup_Parms;

    pFnDisableGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDisableGroup, &DisableGroup_Parms, NULL);

    pFnDisableGroup->FunctionFlags |= 0x400;
};

// Function Engine.CoverGroup.EnableGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ACoverGroup::EnableGroup() {
    static UFunction* pFnEnableGroup = NULL;

    if (!pFnEnableGroup)
        pFnEnableGroup = (UFunction*)UObject::GObjObjects()->Data[16953];

    ACoverGroup_execEnableGroup_Parms EnableGroup_Parms;

    pFnEnableGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableGroup, &EnableGroup_Parms, NULL);

    pFnEnableGroup->FunctionFlags |= 0x400;
};

// Function Engine.FileWriter.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AFileWriter::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[19630];

    AFileWriter_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.FileWriter.Logf
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFileWriter::Logf() {
    static UFunction* pFnLogf = NULL;

    if (!pFnLogf) pFnLogf = (UFunction*)UObject::GObjObjects()->Data[19628];

    AFileWriter_execLogf_Parms Logf_Parms;

    pFnLogf->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogf, &Logf_Parms, NULL);

    pFnLogf->FunctionFlags |= 0x400;
};

// Function Engine.FileWriter.CloseFile
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFileWriter::CloseFile() {
    static UFunction* pFnCloseFile = NULL;

    if (!pFnCloseFile)
        pFnCloseFile = (UFunction*)UObject::GObjObjects()->Data[19627];

    AFileWriter_execCloseFile_Parms CloseFile_Parms;

    pFnCloseFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCloseFile, &CloseFile_Parms, NULL);

    pFnCloseFile->FunctionFlags |= 0x400;
};

// Function Engine.FileWriter.OpenFile
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFileWriter::OpenFile() {
    static UFunction* pFnOpenFile = NULL;

    if (!pFnOpenFile)
        pFnOpenFile = (UFunction*)UObject::GObjObjects()->Data[19620];

    AFileWriter_execOpenFile_Parms OpenFile_Parms;

    pFnOpenFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenFile, &OpenFile_Parms, NULL);

    pFnOpenFile->FunctionFlags |= 0x400;
};

// Function Engine.FileLog.CloseLog
// [0x00020002]
// Parameters infos:

void AFileLog::CloseLog() {
    static UFunction* pFnCloseLog = NULL;

    if (!pFnCloseLog)
        pFnCloseLog = (UFunction*)UObject::GObjObjects()->Data[19640];

    AFileLog_execCloseLog_Parms CloseLog_Parms;

    this->ProcessEvent(pFnCloseLog, &CloseLog_Parms, NULL);
};

// Function Engine.FileLog.OpenLog
// [0x00024002]
// Parameters infos:

void AFileLog::OpenLog() {
    static UFunction* pFnOpenLog = NULL;

    if (!pFnOpenLog)
        pFnOpenLog = (UFunction*)UObject::GObjObjects()->Data[19636];

    AFileLog_execOpenLog_Parms OpenLog_Parms;

    this->ProcessEvent(pFnOpenLog, &OpenLog_Parms, NULL);
};

// Function Engine.GameInfo.GetRequiresPassword
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventGetRequiresPassword() {
    static UFunction* pFnGetRequiresPassword = NULL;

    if (!pFnGetRequiresPassword)
        pFnGetRequiresPassword =
            (UFunction*)UObject::GObjObjects()->Data[21780];

    AGameInfo_eventGetRequiresPassword_Parms GetRequiresPassword_Parms;

    this->ProcessEvent(pFnGetRequiresPassword, &GetRequiresPassword_Parms,
                       NULL);
};

// Function Engine.GameInfo.NotifyControllerReconnected
// [0x00020000]
// Parameters infos:

void AGameInfo::NotifyControllerReconnected() {
    static UFunction* pFnNotifyControllerReconnected = NULL;

    if (!pFnNotifyControllerReconnected)
        pFnNotifyControllerReconnected =
            (UFunction*)UObject::GObjObjects()->Data[21779];

    AGameInfo_execNotifyControllerReconnected_Parms
        NotifyControllerReconnected_Parms;

    this->ProcessEvent(pFnNotifyControllerReconnected,
                       &NotifyControllerReconnected_Parms, NULL);
};

// Function Engine.GameInfo.NotifyControllerDisconnected
// [0x00020000]
// Parameters infos:

void AGameInfo::NotifyControllerDisconnected() {
    static UFunction* pFnNotifyControllerDisconnected = NULL;

    if (!pFnNotifyControllerDisconnected)
        pFnNotifyControllerDisconnected =
            (UFunction*)UObject::GObjObjects()->Data[21778];

    AGameInfo_execNotifyControllerDisconnected_Parms
        NotifyControllerDisconnected_Parms;

    this->ProcessEvent(pFnNotifyControllerDisconnected,
                       &NotifyControllerDisconnected_Parms, NULL);
};

// Function Engine.GameInfo.GetFriendlyNameForCurrentGameMode
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventGetFriendlyNameForCurrentGameMode() {
    static UFunction* pFnGetFriendlyNameForCurrentGameMode = NULL;

    if (!pFnGetFriendlyNameForCurrentGameMode)
        pFnGetFriendlyNameForCurrentGameMode =
            (UFunction*)UObject::GObjObjects()->Data[21776];

    AGameInfo_eventGetFriendlyNameForCurrentGameMode_Parms
        GetFriendlyNameForCurrentGameMode_Parms;

    this->ProcessEvent(pFnGetFriendlyNameForCurrentGameMode,
                       &GetFriendlyNameForCurrentGameMode_Parms, NULL);
};

// Function Engine.GameInfo.WasLaunchedByPlayfab
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::WasLaunchedByPlayfab() {
    static UFunction* pFnWasLaunchedByPlayfab = NULL;

    if (!pFnWasLaunchedByPlayfab)
        pFnWasLaunchedByPlayfab =
            (UFunction*)UObject::GObjObjects()->Data[21774];

    AGameInfo_execWasLaunchedByPlayfab_Parms WasLaunchedByPlayfab_Parms;

    pFnWasLaunchedByPlayfab->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWasLaunchedByPlayfab, &WasLaunchedByPlayfab_Parms,
                       NULL);

    pFnWasLaunchedByPlayfab->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.OnRetreivedPFInternalUserData
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventOnRetreivedPFInternalUserData() {
    static UFunction* pFnOnRetreivedPFInternalUserData = NULL;

    if (!pFnOnRetreivedPFInternalUserData)
        pFnOnRetreivedPFInternalUserData =
            (UFunction*)UObject::GObjObjects()->Data[21768];

    AGameInfo_eventOnRetreivedPFInternalUserData_Parms
        OnRetreivedPFInternalUserData_Parms;

    this->ProcessEvent(pFnOnRetreivedPFInternalUserData,
                       &OnRetreivedPFInternalUserData_Parms, NULL);
};

// Function Engine.GameInfo.ClearOnlineDelegates
// [0x00020000]
// Parameters infos:

void AGameInfo::ClearOnlineDelegates() {
    static UFunction* pFnClearOnlineDelegates = NULL;

    if (!pFnClearOnlineDelegates)
        pFnClearOnlineDelegates =
            (UFunction*)UObject::GObjObjects()->Data[21767];

    AGameInfo_execClearOnlineDelegates_Parms ClearOnlineDelegates_Parms;

    this->ProcessEvent(pFnClearOnlineDelegates, &ClearOnlineDelegates_Parms,
                       NULL);
};

// Function Engine.GameInfo.InitCrowdPopulationManager
// [0x00020002]
// Parameters infos:

void AGameInfo::InitCrowdPopulationManager() {
    static UFunction* pFnInitCrowdPopulationManager = NULL;

    if (!pFnInitCrowdPopulationManager)
        pFnInitCrowdPopulationManager =
            (UFunction*)UObject::GObjObjects()->Data[21766];

    AGameInfo_execInitCrowdPopulationManager_Parms
        InitCrowdPopulationManager_Parms;

    this->ProcessEvent(pFnInitCrowdPopulationManager,
                       &InitCrowdPopulationManager_Parms, NULL);
};

// Function Engine.GameInfo.OnEngineHasLoaded
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventOnEngineHasLoaded() {
    static UFunction* pFnOnEngineHasLoaded = NULL;

    if (!pFnOnEngineHasLoaded)
        pFnOnEngineHasLoaded = (UFunction*)UObject::GObjObjects()->Data[21765];

    AGameInfo_eventOnEngineHasLoaded_Parms OnEngineHasLoaded_Parms;

    this->ProcessEvent(pFnOnEngineHasLoaded, &OnEngineHasLoaded_Parms, NULL);
};

// Function Engine.GameInfo.OnDestroyOnlineGameComplete
// [0x00020002]
// Parameters infos:

void AGameInfo::OnDestroyOnlineGameComplete() {
    static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

    if (!pFnOnDestroyOnlineGameComplete)
        pFnOnDestroyOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[21762];

    AGameInfo_execOnDestroyOnlineGameComplete_Parms
        OnDestroyOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnDestroyOnlineGameComplete,
                       &OnDestroyOnlineGameComplete_Parms, NULL);
};

// Function Engine.GameInfo.StandbyCheatDetected
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventStandbyCheatDetected() {
    static UFunction* pFnStandbyCheatDetected = NULL;

    if (!pFnStandbyCheatDetected)
        pFnStandbyCheatDetected =
            (UFunction*)UObject::GObjObjects()->Data[21760];

    AGameInfo_eventStandbyCheatDetected_Parms StandbyCheatDetected_Parms;

    this->ProcessEvent(pFnStandbyCheatDetected, &StandbyCheatDetected_Parms,
                       NULL);
};

// Function Engine.GameInfo.EnableStandbyCheatDetection
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::EnableStandbyCheatDetection() {
    static UFunction* pFnEnableStandbyCheatDetection = NULL;

    if (!pFnEnableStandbyCheatDetection)
        pFnEnableStandbyCheatDetection =
            (UFunction*)UObject::GObjObjects()->Data[21758];

    AGameInfo_execEnableStandbyCheatDetection_Parms
        EnableStandbyCheatDetection_Parms;

    pFnEnableStandbyCheatDetection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableStandbyCheatDetection,
                       &EnableStandbyCheatDetection_Parms, NULL);

    pFnEnableStandbyCheatDetection->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.BeginBVT
// [0x00024302] ( FUNC_Exec )
// Parameters infos:

void AGameInfo::BeginBVT() {
    static UFunction* pFnBeginBVT = NULL;

    if (!pFnBeginBVT)
        pFnBeginBVT = (UFunction*)UObject::GObjObjects()->Data[21756];

    AGameInfo_execBeginBVT_Parms BeginBVT_Parms;

    this->ProcessEvent(pFnBeginBVT, &BeginBVT_Parms, NULL);
};

// Function Engine.GameInfo.CheckForSentinelRun
// [0x00020002]
// Parameters infos:

void AGameInfo::CheckForSentinelRun() {
    static UFunction* pFnCheckForSentinelRun = NULL;

    if (!pFnCheckForSentinelRun)
        pFnCheckForSentinelRun =
            (UFunction*)UObject::GObjObjects()->Data[21754];

    AGameInfo_execCheckForSentinelRun_Parms CheckForSentinelRun_Parms;

    this->ProcessEvent(pFnCheckForSentinelRun, &CheckForSentinelRun_Parms,
                       NULL);
};

// Function Engine.GameInfo.ShouldAutoContinueToNextRound
// [0x00020002]
// Parameters infos:

void AGameInfo::ShouldAutoContinueToNextRound() {
    static UFunction* pFnShouldAutoContinueToNextRound = NULL;

    if (!pFnShouldAutoContinueToNextRound)
        pFnShouldAutoContinueToNextRound =
            (UFunction*)UObject::GObjObjects()->Data[21752];

    AGameInfo_execShouldAutoContinueToNextRound_Parms
        ShouldAutoContinueToNextRound_Parms;

    this->ProcessEvent(pFnShouldAutoContinueToNextRound,
                       &ShouldAutoContinueToNextRound_Parms, NULL);
};

// Function Engine.GameInfo.IsDoingASentinelRun
// [0x00020002]
// Parameters infos:

void AGameInfo::IsDoingASentinelRun() {
    static UFunction* pFnIsDoingASentinelRun = NULL;

    if (!pFnIsDoingASentinelRun)
        pFnIsDoingASentinelRun =
            (UFunction*)UObject::GObjObjects()->Data[12218];

    AGameInfo_execIsDoingASentinelRun_Parms IsDoingASentinelRun_Parms;

    this->ProcessEvent(pFnIsDoingASentinelRun, &IsDoingASentinelRun_Parms,
                       NULL);
};

// Function Engine.GameInfo.IsCheckingForMemLeaks
// [0x00020002]
// Parameters infos:

void AGameInfo::IsCheckingForMemLeaks() {
    static UFunction* pFnIsCheckingForMemLeaks = NULL;

    if (!pFnIsCheckingForMemLeaks)
        pFnIsCheckingForMemLeaks =
            (UFunction*)UObject::GObjObjects()->Data[21750];

    AGameInfo_execIsCheckingForMemLeaks_Parms IsCheckingForMemLeaks_Parms;

    this->ProcessEvent(pFnIsCheckingForMemLeaks, &IsCheckingForMemLeaks_Parms,
                       NULL);
};

// Function Engine.GameInfo.IsCheckingForFragmentation
// [0x00020002]
// Parameters infos:

void AGameInfo::IsCheckingForFragmentation() {
    static UFunction* pFnIsCheckingForFragmentation = NULL;

    if (!pFnIsCheckingForFragmentation)
        pFnIsCheckingForFragmentation =
            (UFunction*)UObject::GObjObjects()->Data[21748];

    AGameInfo_execIsCheckingForFragmentation_Parms
        IsCheckingForFragmentation_Parms;

    this->ProcessEvent(pFnIsCheckingForFragmentation,
                       &IsCheckingForFragmentation_Parms, NULL);
};

// Function Engine.GameInfo.IsAutomatedPerfTesting
// [0x00020002]
// Parameters infos:

void AGameInfo::IsAutomatedPerfTesting() {
    static UFunction* pFnIsAutomatedPerfTesting = NULL;

    if (!pFnIsAutomatedPerfTesting)
        pFnIsAutomatedPerfTesting =
            (UFunction*)UObject::GObjObjects()->Data[12581];

    AGameInfo_execIsAutomatedPerfTesting_Parms IsAutomatedPerfTesting_Parms;

    this->ProcessEvent(pFnIsAutomatedPerfTesting, &IsAutomatedPerfTesting_Parms,
                       NULL);
};

// Function Engine.GameInfo.SetBandwidthLimit
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void AGameInfo::SetBandwidthLimit() {
    static UFunction* pFnSetBandwidthLimit = NULL;

    if (!pFnSetBandwidthLimit)
        pFnSetBandwidthLimit = (UFunction*)UObject::GObjObjects()->Data[21745];

    AGameInfo_execSetBandwidthLimit_Parms SetBandwidthLimit_Parms;

    pFnSetBandwidthLimit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBandwidthLimit, &SetBandwidthLimit_Parms, NULL);

    pFnSetBandwidthLimit->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.DoTravelTheWorld
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AGameInfo::DoTravelTheWorld() {
    static UFunction* pFnDoTravelTheWorld = NULL;

    if (!pFnDoTravelTheWorld)
        pFnDoTravelTheWorld = (UFunction*)UObject::GObjObjects()->Data[21744];

    AGameInfo_execDoTravelTheWorld_Parms DoTravelTheWorld_Parms;

    this->ProcessEvent(pFnDoTravelTheWorld, &DoTravelTheWorld_Parms, NULL);
};

// Function Engine.GameInfo.TellClientsToTravelToSession
// [0x00020002]
// Parameters infos:

void AGameInfo::TellClientsToTravelToSession() {
    static UFunction* pFnTellClientsToTravelToSession = NULL;

    if (!pFnTellClientsToTravelToSession)
        pFnTellClientsToTravelToSession =
            (UFunction*)UObject::GObjObjects()->Data[21739];

    AGameInfo_execTellClientsToTravelToSession_Parms
        TellClientsToTravelToSession_Parms;

    this->ProcessEvent(pFnTellClientsToTravelToSession,
                       &TellClientsToTravelToSession_Parms, NULL);
};

// Function Engine.GameInfo.TellClientsPartyHostIsLeaving
// [0x00020002]
// Parameters infos:

void AGameInfo::TellClientsPartyHostIsLeaving() {
    static UFunction* pFnTellClientsPartyHostIsLeaving = NULL;

    if (!pFnTellClientsPartyHostIsLeaving)
        pFnTellClientsPartyHostIsLeaving =
            (UFunction*)UObject::GObjObjects()->Data[21736];

    AGameInfo_execTellClientsPartyHostIsLeaving_Parms
        TellClientsPartyHostIsLeaving_Parms;

    this->ProcessEvent(pFnTellClientsPartyHostIsLeaving,
                       &TellClientsPartyHostIsLeaving_Parms, NULL);
};

// Function Engine.GameInfo.TellClientsToReturnToPartyHost
// [0x00820002]
// Parameters infos:

void AGameInfo::TellClientsToReturnToPartyHost() {
    static UFunction* pFnTellClientsToReturnToPartyHost = NULL;

    if (!pFnTellClientsToReturnToPartyHost)
        pFnTellClientsToReturnToPartyHost =
            (UFunction*)UObject::GObjObjects()->Data[21732];

    AGameInfo_execTellClientsToReturnToPartyHost_Parms
        TellClientsToReturnToPartyHost_Parms;

    this->ProcessEvent(pFnTellClientsToReturnToPartyHost,
                       &TellClientsToReturnToPartyHost_Parms, NULL);
};

// Function Engine.GameInfo.OnServerCreateComplete
// [0x00020002]
// Parameters infos:

void AGameInfo::OnServerCreateComplete() {
    static UFunction* pFnOnServerCreateComplete = NULL;

    if (!pFnOnServerCreateComplete)
        pFnOnServerCreateComplete =
            (UFunction*)UObject::GObjObjects()->Data[21728];

    AGameInfo_execOnServerCreateComplete_Parms OnServerCreateComplete_Parms;

    this->ProcessEvent(pFnOnServerCreateComplete, &OnServerCreateComplete_Parms,
                       NULL);
};

// Function Engine.GameInfo.RegisterServer
// [0x00020002]
// Parameters infos:

void AGameInfo::RegisterServer() {
    static UFunction* pFnRegisterServer = NULL;

    if (!pFnRegisterServer)
        pFnRegisterServer = (UFunction*)UObject::GObjObjects()->Data[21726];

    AGameInfo_execRegisterServer_Parms RegisterServer_Parms;

    this->ProcessEvent(pFnRegisterServer, &RegisterServer_Parms, NULL);
};

// Function Engine.GameInfo.OnLoginChange
// [0x00020002]
// Parameters infos:

void AGameInfo::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[21724];

    AGameInfo_execOnLoginChange_Parms OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.GameInfo.OnLoginFailed
// [0x00020002]
// Parameters infos:

void AGameInfo::OnLoginFailed() {
    static UFunction* pFnOnLoginFailed = NULL;

    if (!pFnOnLoginFailed)
        pFnOnLoginFailed = (UFunction*)UObject::GObjObjects()->Data[21721];

    AGameInfo_execOnLoginFailed_Parms OnLoginFailed_Parms;

    this->ProcessEvent(pFnOnLoginFailed, &OnLoginFailed_Parms, NULL);
};

// Function Engine.GameInfo.ClearAutoLoginDelegates
// [0x00020002]
// Parameters infos:

void AGameInfo::ClearAutoLoginDelegates() {
    static UFunction* pFnClearAutoLoginDelegates = NULL;

    if (!pFnClearAutoLoginDelegates)
        pFnClearAutoLoginDelegates =
            (UFunction*)UObject::GObjObjects()->Data[21720];

    AGameInfo_execClearAutoLoginDelegates_Parms ClearAutoLoginDelegates_Parms;

    this->ProcessEvent(pFnClearAutoLoginDelegates,
                       &ClearAutoLoginDelegates_Parms, NULL);
};

// Function Engine.GameInfo.ProcessServerLogin
// [0x00020002]
// Parameters infos:

void AGameInfo::ProcessServerLogin() {
    static UFunction* pFnProcessServerLogin = NULL;

    if (!pFnProcessServerLogin)
        pFnProcessServerLogin = (UFunction*)UObject::GObjObjects()->Data[21718];

    AGameInfo_execProcessServerLogin_Parms ProcessServerLogin_Parms;

    this->ProcessEvent(pFnProcessServerLogin, &ProcessServerLogin_Parms, NULL);
};

// Function Engine.GameInfo.MatineeCancelled
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventMatineeCancelled() {
    static UFunction* pFnMatineeCancelled = NULL;

    if (!pFnMatineeCancelled)
        pFnMatineeCancelled = (UFunction*)UObject::GObjObjects()->Data[21717];

    AGameInfo_eventMatineeCancelled_Parms MatineeCancelled_Parms;

    this->ProcessEvent(pFnMatineeCancelled, &MatineeCancelled_Parms, NULL);
};

// Function Engine.GameInfo.RecalculateSkillRating
// [0x00820002]
// Parameters infos:

void AGameInfo::RecalculateSkillRating() {
    static UFunction* pFnRecalculateSkillRating = NULL;

    if (!pFnRecalculateSkillRating)
        pFnRecalculateSkillRating =
            (UFunction*)UObject::GObjObjects()->Data[21712];

    AGameInfo_execRecalculateSkillRating_Parms RecalculateSkillRating_Parms;

    this->ProcessEvent(pFnRecalculateSkillRating, &RecalculateSkillRating_Parms,
                       NULL);
};

// Function Engine.GameInfo.UpdateGameplayMuteList
// [0x00020002]
// Parameters infos:

void AGameInfo::UpdateGameplayMuteList() {
    static UFunction* pFnUpdateGameplayMuteList = NULL;

    if (!pFnUpdateGameplayMuteList)
        pFnUpdateGameplayMuteList =
            (UFunction*)UObject::GObjObjects()->Data[21710];

    AGameInfo_execUpdateGameplayMuteList_Parms UpdateGameplayMuteList_Parms;

    this->ProcessEvent(pFnUpdateGameplayMuteList, &UpdateGameplayMuteList_Parms,
                       NULL);
};

// Function Engine.GameInfo.NotifyArbitratedMatchEnd
// [0x00020002]
// Parameters infos:

void AGameInfo::NotifyArbitratedMatchEnd() {
    static UFunction* pFnNotifyArbitratedMatchEnd = NULL;

    if (!pFnNotifyArbitratedMatchEnd)
        pFnNotifyArbitratedMatchEnd =
            (UFunction*)UObject::GObjObjects()->Data[21708];

    AGameInfo_execNotifyArbitratedMatchEnd_Parms NotifyArbitratedMatchEnd_Parms;

    this->ProcessEvent(pFnNotifyArbitratedMatchEnd,
                       &NotifyArbitratedMatchEnd_Parms, NULL);
};

// Function Engine.GameInfo.MatchIsInProgress
// [0x00020002]
// Parameters infos:

void AGameInfo::MatchIsInProgress() {
    static UFunction* pFnMatchIsInProgress = NULL;

    if (!pFnMatchIsInProgress)
        pFnMatchIsInProgress = (UFunction*)UObject::GObjObjects()->Data[21685];

    AGameInfo_execMatchIsInProgress_Parms MatchIsInProgress_Parms;

    this->ProcessEvent(pFnMatchIsInProgress, &MatchIsInProgress_Parms, NULL);
};

// Function Engine.GameInfo.ArbitrationRegistrationComplete
// [0x00020000]
// Parameters infos:

void AGameInfo::ArbitrationRegistrationComplete() {
    static UFunction* pFnArbitrationRegistrationComplete = NULL;

    if (!pFnArbitrationRegistrationComplete)
        pFnArbitrationRegistrationComplete =
            (UFunction*)UObject::GObjObjects()->Data[21682];

    AGameInfo_execArbitrationRegistrationComplete_Parms
        ArbitrationRegistrationComplete_Parms;

    this->ProcessEvent(pFnArbitrationRegistrationComplete,
                       &ArbitrationRegistrationComplete_Parms, NULL);
};

// Function Engine.GameInfo.RegisterServerForArbitration
// [0x00020000]
// Parameters infos:

void AGameInfo::RegisterServerForArbitration() {
    static UFunction* pFnRegisterServerForArbitration = NULL;

    if (!pFnRegisterServerForArbitration)
        pFnRegisterServerForArbitration =
            (UFunction*)UObject::GObjObjects()->Data[21681];

    AGameInfo_execRegisterServerForArbitration_Parms
        RegisterServerForArbitration_Parms;

    this->ProcessEvent(pFnRegisterServerForArbitration,
                       &RegisterServerForArbitration_Parms, NULL);
};

// Function Engine.GameInfo.StartArbitratedMatch
// [0x00020000]
// Parameters infos:

void AGameInfo::StartArbitratedMatch() {
    static UFunction* pFnStartArbitratedMatch = NULL;

    if (!pFnStartArbitratedMatch)
        pFnStartArbitratedMatch =
            (UFunction*)UObject::GObjObjects()->Data[21680];

    AGameInfo_execStartArbitratedMatch_Parms StartArbitratedMatch_Parms;

    this->ProcessEvent(pFnStartArbitratedMatch, &StartArbitratedMatch_Parms,
                       NULL);
};

// Function Engine.GameInfo.StartArbitrationRegistration
// [0x00020000]
// Parameters infos:

void AGameInfo::StartArbitrationRegistration() {
    static UFunction* pFnStartArbitrationRegistration = NULL;

    if (!pFnStartArbitrationRegistration)
        pFnStartArbitrationRegistration =
            (UFunction*)UObject::GObjObjects()->Data[21679];

    AGameInfo_execStartArbitrationRegistration_Parms
        StartArbitrationRegistration_Parms;

    this->ProcessEvent(pFnStartArbitrationRegistration,
                       &StartArbitrationRegistration_Parms, NULL);
};

// Function Engine.GameInfo.ProcessClientRegistrationCompletion
// [0x00020000]
// Parameters infos:

void AGameInfo::ProcessClientRegistrationCompletion() {
    static UFunction* pFnProcessClientRegistrationCompletion = NULL;

    if (!pFnProcessClientRegistrationCompletion)
        pFnProcessClientRegistrationCompletion =
            (UFunction*)UObject::GObjObjects()->Data[21676];

    AGameInfo_execProcessClientRegistrationCompletion_Parms
        ProcessClientRegistrationCompletion_Parms;

    this->ProcessEvent(pFnProcessClientRegistrationCompletion,
                       &ProcessClientRegistrationCompletion_Parms, NULL);
};

// Function Engine.GameInfo.UpdateGameSettingsCounts
// [0x00020002]
// Parameters infos:

void AGameInfo::UpdateGameSettingsCounts() {
    static UFunction* pFnUpdateGameSettingsCounts = NULL;

    if (!pFnUpdateGameSettingsCounts)
        pFnUpdateGameSettingsCounts =
            (UFunction*)UObject::GObjObjects()->Data[21674];

    AGameInfo_execUpdateGameSettingsCounts_Parms UpdateGameSettingsCounts_Parms;

    this->ProcessEvent(pFnUpdateGameSettingsCounts,
                       &UpdateGameSettingsCounts_Parms, NULL);
};

// Function Engine.GameInfo.SetSeamlessTravelViewTarget
// [0x00020002]
// Parameters infos:

void AGameInfo::SetSeamlessTravelViewTarget() {
    static UFunction* pFnSetSeamlessTravelViewTarget = NULL;

    if (!pFnSetSeamlessTravelViewTarget)
        pFnSetSeamlessTravelViewTarget =
            (UFunction*)UObject::GObjObjects()->Data[21672];

    AGameInfo_execSetSeamlessTravelViewTarget_Parms
        SetSeamlessTravelViewTarget_Parms;

    this->ProcessEvent(pFnSetSeamlessTravelViewTarget,
                       &SetSeamlessTravelViewTarget_Parms, NULL);
};

// Function Engine.GameInfo.HandleSeamlessTravelPlayer
// [0x00C20802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventHandleSeamlessTravelPlayer() {
    static UFunction* pFnHandleSeamlessTravelPlayer = NULL;

    if (!pFnHandleSeamlessTravelPlayer)
        pFnHandleSeamlessTravelPlayer =
            (UFunction*)UObject::GObjObjects()->Data[21665];

    AGameInfo_eventHandleSeamlessTravelPlayer_Parms
        HandleSeamlessTravelPlayer_Parms;

    this->ProcessEvent(pFnHandleSeamlessTravelPlayer,
                       &HandleSeamlessTravelPlayer_Parms, NULL);
};

// Function Engine.GameInfo.UpdateGameSettings
// [0x00020000]
// Parameters infos:

void AGameInfo::UpdateGameSettings() {
    static UFunction* pFnUpdateGameSettings = NULL;

    if (!pFnUpdateGameSettings)
        pFnUpdateGameSettings = (UFunction*)UObject::GObjObjects()->Data[21664];

    AGameInfo_execUpdateGameSettings_Parms UpdateGameSettings_Parms;

    this->ProcessEvent(pFnUpdateGameSettings, &UpdateGameSettings_Parms, NULL);
};

// Function Engine.GameInfo.PostSeamlessTravel
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPostSeamlessTravel() {
    static UFunction* pFnPostSeamlessTravel = NULL;

    if (!pFnPostSeamlessTravel)
        pFnPostSeamlessTravel = (UFunction*)UObject::GObjObjects()->Data[21662];

    AGameInfo_eventPostSeamlessTravel_Parms PostSeamlessTravel_Parms;

    this->ProcessEvent(pFnPostSeamlessTravel, &PostSeamlessTravel_Parms, NULL);
};

// Function Engine.GameInfo.SwapPlayerControllers
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::SwapPlayerControllers() {
    static UFunction* pFnSwapPlayerControllers = NULL;

    if (!pFnSwapPlayerControllers)
        pFnSwapPlayerControllers =
            (UFunction*)UObject::GObjObjects()->Data[21659];

    AGameInfo_execSwapPlayerControllers_Parms SwapPlayerControllers_Parms;

    pFnSwapPlayerControllers->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSwapPlayerControllers, &SwapPlayerControllers_Parms,
                       NULL);

    pFnSwapPlayerControllers->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.GetSeamlessTravelActorList
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventGetSeamlessTravelActorList() {
    static UFunction* pFnGetSeamlessTravelActorList = NULL;

    if (!pFnGetSeamlessTravelActorList)
        pFnGetSeamlessTravelActorList =
            (UFunction*)UObject::GObjObjects()->Data[21654];

    AGameInfo_eventGetSeamlessTravelActorList_Parms
        GetSeamlessTravelActorList_Parms;

    this->ProcessEvent(pFnGetSeamlessTravelActorList,
                       &GetSeamlessTravelActorList_Parms, NULL);
};

// Function Engine.GameInfo.OverridePRI
// [0x00020002]
// Parameters infos:

void AGameInfo::OverridePRI() {
    static UFunction* pFnOverridePRI = NULL;

    if (!pFnOverridePRI)
        pFnOverridePRI = (UFunction*)UObject::GObjObjects()->Data[21651];

    AGameInfo_execOverridePRI_Parms OverridePRI_Parms;

    this->ProcessEvent(pFnOverridePRI, &OverridePRI_Parms, NULL);
};

// Function Engine.GameInfo.FindInactivePRI
// [0x00020002]
// Parameters infos:

void AGameInfo::FindInactivePRI() {
    static UFunction* pFnFindInactivePRI = NULL;

    if (!pFnFindInactivePRI)
        pFnFindInactivePRI = (UFunction*)UObject::GObjObjects()->Data[21642];

    AGameInfo_execFindInactivePRI_Parms FindInactivePRI_Parms;

    this->ProcessEvent(pFnFindInactivePRI, &FindInactivePRI_Parms, NULL);
};

// Function Engine.GameInfo.AddInactivePRI
// [0x00020002]
// Parameters infos:

void AGameInfo::AddInactivePRI() {
    static UFunction* pFnAddInactivePRI = NULL;

    if (!pFnAddInactivePRI)
        pFnAddInactivePRI = (UFunction*)UObject::GObjObjects()->Data[21635];

    AGameInfo_execAddInactivePRI_Parms AddInactivePRI_Parms;

    this->ProcessEvent(pFnAddInactivePRI, &AddInactivePRI_Parms, NULL);
};

// Function Engine.GameInfo.PostCommitMapChange
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPostCommitMapChange() {
    static UFunction* pFnPostCommitMapChange = NULL;

    if (!pFnPostCommitMapChange)
        pFnPostCommitMapChange =
            (UFunction*)UObject::GObjObjects()->Data[21634];

    AGameInfo_eventPostCommitMapChange_Parms PostCommitMapChange_Parms;

    this->ProcessEvent(pFnPostCommitMapChange, &PostCommitMapChange_Parms,
                       NULL);
};

// Function Engine.GameInfo.PreCommitMapChange
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPreCommitMapChange() {
    static UFunction* pFnPreCommitMapChange = NULL;

    if (!pFnPreCommitMapChange)
        pFnPreCommitMapChange = (UFunction*)UObject::GObjObjects()->Data[21631];

    AGameInfo_eventPreCommitMapChange_Parms PreCommitMapChange_Parms;

    this->ProcessEvent(pFnPreCommitMapChange, &PreCommitMapChange_Parms, NULL);
};

// Function Engine.GameInfo.AllowPausing
// [0x00024002]
// Parameters infos:

void AGameInfo::AllowPausing() {
    static UFunction* pFnAllowPausing = NULL;

    if (!pFnAllowPausing)
        pFnAllowPausing = (UFunction*)UObject::GObjObjects()->Data[21628];

    AGameInfo_execAllowPausing_Parms AllowPausing_Parms;

    this->ProcessEvent(pFnAllowPausing, &AllowPausing_Parms, NULL);
};

// Function Engine.GameInfo.AllowCheats
// [0x00020002]
// Parameters infos:

void AGameInfo::AllowCheats() {
    static UFunction* pFnAllowCheats = NULL;

    if (!pFnAllowCheats)
        pFnAllowCheats = (UFunction*)UObject::GObjObjects()->Data[12553];

    AGameInfo_execAllowCheats_Parms AllowCheats_Parms;

    this->ProcessEvent(pFnAllowCheats, &AllowCheats_Parms, NULL);
};

// Function Engine.GameInfo.AllowMutator
// [0x00022002]
// Parameters infos:

void AGameInfo::AllowMutator() {
    static UFunction* pFnAllowMutator = NULL;

    if (!pFnAllowMutator)
        pFnAllowMutator = (UFunction*)UObject::GObjObjects()->Data[21624];

    AGameInfo_execAllowMutator_Parms AllowMutator_Parms;

    this->ProcessEvent(pFnAllowMutator, &AllowMutator_Parms, NULL);
};

// Function Engine.GameInfo.PlayerCanRestart
// [0x00020002]
// Parameters infos:

void AGameInfo::PlayerCanRestart() {
    static UFunction* pFnPlayerCanRestart = NULL;

    if (!pFnPlayerCanRestart)
        pFnPlayerCanRestart = (UFunction*)UObject::GObjObjects()->Data[12355];

    AGameInfo_execPlayerCanRestart_Parms PlayerCanRestart_Parms;

    this->ProcessEvent(pFnPlayerCanRestart, &PlayerCanRestart_Parms, NULL);
};

// Function Engine.GameInfo.PlayerCanRestartGame
// [0x00020002]
// Parameters infos:

void AGameInfo::PlayerCanRestartGame() {
    static UFunction* pFnPlayerCanRestartGame = NULL;

    if (!pFnPlayerCanRestartGame)
        pFnPlayerCanRestartGame =
            (UFunction*)UObject::GObjObjects()->Data[12374];

    AGameInfo_execPlayerCanRestartGame_Parms PlayerCanRestartGame_Parms;

    this->ProcessEvent(pFnPlayerCanRestartGame, &PlayerCanRestartGame_Parms,
                       NULL);
};

// Function Engine.GameInfo.DriverLeftVehicle
// [0x00020002]
// Parameters infos:

void AGameInfo::DriverLeftVehicle() {
    static UFunction* pFnDriverLeftVehicle = NULL;

    if (!pFnDriverLeftVehicle)
        pFnDriverLeftVehicle = (UFunction*)UObject::GObjObjects()->Data[21619];

    AGameInfo_execDriverLeftVehicle_Parms DriverLeftVehicle_Parms;

    this->ProcessEvent(pFnDriverLeftVehicle, &DriverLeftVehicle_Parms, NULL);
};

// Function Engine.GameInfo.CanLeaveVehicle
// [0x00020002]
// Parameters infos:

void AGameInfo::CanLeaveVehicle() {
    static UFunction* pFnCanLeaveVehicle = NULL;

    if (!pFnCanLeaveVehicle)
        pFnCanLeaveVehicle = (UFunction*)UObject::GObjObjects()->Data[21615];

    AGameInfo_execCanLeaveVehicle_Parms CanLeaveVehicle_Parms;

    this->ProcessEvent(pFnCanLeaveVehicle, &CanLeaveVehicle_Parms, NULL);
};

// Function Engine.GameInfo.DriverEnteredVehicle
// [0x00020002]
// Parameters infos:

void AGameInfo::DriverEnteredVehicle() {
    static UFunction* pFnDriverEnteredVehicle = NULL;

    if (!pFnDriverEnteredVehicle)
        pFnDriverEnteredVehicle =
            (UFunction*)UObject::GObjObjects()->Data[21612];

    AGameInfo_execDriverEnteredVehicle_Parms DriverEnteredVehicle_Parms;

    this->ProcessEvent(pFnDriverEnteredVehicle, &DriverEnteredVehicle_Parms,
                       NULL);
};

// Function Engine.GameInfo.ModifyScoreKill
// [0x00020002]
// Parameters infos:

void AGameInfo::ModifyScoreKill() {
    static UFunction* pFnModifyScoreKill = NULL;

    if (!pFnModifyScoreKill)
        pFnModifyScoreKill = (UFunction*)UObject::GObjObjects()->Data[21609];

    AGameInfo_execModifyScoreKill_Parms ModifyScoreKill_Parms;

    this->ProcessEvent(pFnModifyScoreKill, &ModifyScoreKill_Parms, NULL);
};

// Function Engine.GameInfo.ScoreKill
// [0x00020002]
// Parameters infos:

void AGameInfo::ScoreKill() {
    static UFunction* pFnScoreKill = NULL;

    if (!pFnScoreKill)
        pFnScoreKill = (UFunction*)UObject::GObjObjects()->Data[21606];

    AGameInfo_execScoreKill_Parms ScoreKill_Parms;

    this->ProcessEvent(pFnScoreKill, &ScoreKill_Parms, NULL);
};

// Function Engine.GameInfo.CheckScore
// [0x00020002]
// Parameters infos:

void AGameInfo::CheckScore() {
    static UFunction* pFnCheckScore = NULL;

    if (!pFnCheckScore)
        pFnCheckScore = (UFunction*)UObject::GObjObjects()->Data[21603];

    AGameInfo_execCheckScore_Parms CheckScore_Parms;

    this->ProcessEvent(pFnCheckScore, &CheckScore_Parms, NULL);
};

// Function Engine.GameInfo.ScoreObjective
// [0x00020002]
// Parameters infos:

void AGameInfo::ScoreObjective() {
    static UFunction* pFnScoreObjective = NULL;

    if (!pFnScoreObjective)
        pFnScoreObjective = (UFunction*)UObject::GObjObjects()->Data[21600];

    AGameInfo_execScoreObjective_Parms ScoreObjective_Parms;

    this->ProcessEvent(pFnScoreObjective, &ScoreObjective_Parms, NULL);
};

// Function Engine.GameInfo.AddObjectiveScore
// [0x00020002]
// Parameters infos:

void AGameInfo::AddObjectiveScore() {
    static UFunction* pFnAddObjectiveScore = NULL;

    if (!pFnAddObjectiveScore)
        pFnAddObjectiveScore = (UFunction*)UObject::GObjObjects()->Data[21597];

    AGameInfo_execAddObjectiveScore_Parms AddObjectiveScore_Parms;

    this->ProcessEvent(pFnAddObjectiveScore, &AddObjectiveScore_Parms, NULL);
};

// Function Engine.GameInfo.RatePlayerStart
// [0x00020002]
// Parameters infos:

void AGameInfo::RatePlayerStart() {
    static UFunction* pFnRatePlayerStart = NULL;

    if (!pFnRatePlayerStart)
        pFnRatePlayerStart = (UFunction*)UObject::GObjObjects()->Data[21591];

    AGameInfo_execRatePlayerStart_Parms RatePlayerStart_Parms;

    this->ProcessEvent(pFnRatePlayerStart, &RatePlayerStart_Parms, NULL);
};

// Function Engine.GameInfo.ChoosePlayerStart
// [0x00024002]
// Parameters infos:

void AGameInfo::ChoosePlayerStart() {
    static UFunction* pFnChoosePlayerStart = NULL;

    if (!pFnChoosePlayerStart)
        pFnChoosePlayerStart = (UFunction*)UObject::GObjObjects()->Data[21582];

    AGameInfo_execChoosePlayerStart_Parms ChoosePlayerStart_Parms;

    this->ProcessEvent(pFnChoosePlayerStart, &ChoosePlayerStart_Parms, NULL);
};

// Function Engine.GameInfo.FindPlayerStart
// [0x00024002]
// Parameters infos:

void AGameInfo::FindPlayerStart() {
    static UFunction* pFnFindPlayerStart = NULL;

    if (!pFnFindPlayerStart)
        pFnFindPlayerStart = (UFunction*)UObject::GObjObjects()->Data[21574];

    AGameInfo_execFindPlayerStart_Parms FindPlayerStart_Parms;

    this->ProcessEvent(pFnFindPlayerStart, &FindPlayerStart_Parms, NULL);
};

// Function Engine.GameInfo.ShouldSpawnAtStartSpot
// [0x00020002]
// Parameters infos:

void AGameInfo::ShouldSpawnAtStartSpot() {
    static UFunction* pFnShouldSpawnAtStartSpot = NULL;

    if (!pFnShouldSpawnAtStartSpot)
        pFnShouldSpawnAtStartSpot =
            (UFunction*)UObject::GObjObjects()->Data[21571];

    AGameInfo_execShouldSpawnAtStartSpot_Parms ShouldSpawnAtStartSpot_Parms;

    this->ProcessEvent(pFnShouldSpawnAtStartSpot, &ShouldSpawnAtStartSpot_Parms,
                       NULL);
};

// Function Engine.GameInfo.EndLogging
// [0x00020000]
// Parameters infos:

void AGameInfo::EndLogging() {
    static UFunction* pFnEndLogging = NULL;

    if (!pFnEndLogging)
        pFnEndLogging = (UFunction*)UObject::GObjObjects()->Data[21569];

    AGameInfo_execEndLogging_Parms EndLogging_Parms;

    this->ProcessEvent(pFnEndLogging, &EndLogging_Parms, NULL);
};

// Function Engine.GameInfo.GameEventsPoll
// [0x00020000]
// Parameters infos:

void AGameInfo::GameEventsPoll() {
    static UFunction* pFnGameEventsPoll = NULL;

    if (!pFnGameEventsPoll)
        pFnGameEventsPoll = (UFunction*)UObject::GObjObjects()->Data[21568];

    AGameInfo_execGameEventsPoll_Parms GameEventsPoll_Parms;

    this->ProcessEvent(pFnGameEventsPoll, &GameEventsPoll_Parms, NULL);
};

// Function Engine.GameInfo.EndOnlineGame
// [0x00020002]
// Parameters infos:

void AGameInfo::EndOnlineGame() {
    static UFunction* pFnEndOnlineGame = NULL;

    if (!pFnEndOnlineGame)
        pFnEndOnlineGame = (UFunction*)UObject::GObjObjects()->Data[21566];

    AGameInfo_execEndOnlineGame_Parms EndOnlineGame_Parms;

    this->ProcessEvent(pFnEndOnlineGame, &EndOnlineGame_Parms, NULL);
};

// Function Engine.GameInfo.PerformEndGameHandling
// [0x00020002]
// Parameters infos:

void AGameInfo::PerformEndGameHandling() {
    static UFunction* pFnPerformEndGameHandling = NULL;

    if (!pFnPerformEndGameHandling)
        pFnPerformEndGameHandling =
            (UFunction*)UObject::GObjObjects()->Data[21565];

    AGameInfo_execPerformEndGameHandling_Parms PerformEndGameHandling_Parms;

    this->ProcessEvent(pFnPerformEndGameHandling, &PerformEndGameHandling_Parms,
                       NULL);
};

// Function Engine.GameInfo.EndGame
// [0x00020002]
// Parameters infos:

void AGameInfo::EndGame() {
    static UFunction* pFnEndGame = NULL;

    if (!pFnEndGame)
        pFnEndGame = (UFunction*)UObject::GObjObjects()->Data[21562];

    AGameInfo_execEndGame_Parms EndGame_Parms;

    this->ProcessEvent(pFnEndGame, &EndGame_Parms, NULL);
};

// Function Engine.GameInfo.WriteOnlinePlayerScores
// [0x00020002]
// Parameters infos:

void AGameInfo::WriteOnlinePlayerScores() {
    static UFunction* pFnWriteOnlinePlayerScores = NULL;

    if (!pFnWriteOnlinePlayerScores)
        pFnWriteOnlinePlayerScores =
            (UFunction*)UObject::GObjObjects()->Data[21560];

    AGameInfo_execWriteOnlinePlayerScores_Parms WriteOnlinePlayerScores_Parms;

    this->ProcessEvent(pFnWriteOnlinePlayerScores,
                       &WriteOnlinePlayerScores_Parms, NULL);
};

// Function Engine.GameInfo.WriteOnlineStats
// [0x00020002]
// Parameters infos:

void AGameInfo::WriteOnlineStats() {
    static UFunction* pFnWriteOnlineStats = NULL;

    if (!pFnWriteOnlineStats)
        pFnWriteOnlineStats = (UFunction*)UObject::GObjObjects()->Data[21557];

    AGameInfo_execWriteOnlineStats_Parms WriteOnlineStats_Parms;

    this->ProcessEvent(pFnWriteOnlineStats, &WriteOnlineStats_Parms, NULL);
};

// Function Engine.GameInfo.CheckEndGame
// [0x00020002]
// Parameters infos:

void AGameInfo::CheckEndGame() {
    static UFunction* pFnCheckEndGame = NULL;

    if (!pFnCheckEndGame)
        pFnCheckEndGame = (UFunction*)UObject::GObjObjects()->Data[21552];

    AGameInfo_execCheckEndGame_Parms CheckEndGame_Parms;

    this->ProcessEvent(pFnCheckEndGame, &CheckEndGame_Parms, NULL);
};

// Function Engine.GameInfo.CheckModifiedEndGame
// [0x00020002]
// Parameters infos:

void AGameInfo::CheckModifiedEndGame() {
    static UFunction* pFnCheckModifiedEndGame = NULL;

    if (!pFnCheckModifiedEndGame)
        pFnCheckModifiedEndGame =
            (UFunction*)UObject::GObjObjects()->Data[21548];

    AGameInfo_execCheckModifiedEndGame_Parms CheckModifiedEndGame_Parms;

    this->ProcessEvent(pFnCheckModifiedEndGame, &CheckModifiedEndGame_Parms,
                       NULL);
};

// Function Engine.GameInfo.BroadcastLocalizedTeam
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventBroadcastLocalizedTeam() {
    static UFunction* pFnBroadcastLocalizedTeam = NULL;

    if (!pFnBroadcastLocalizedTeam)
        pFnBroadcastLocalizedTeam =
            (UFunction*)UObject::GObjObjects()->Data[21540];

    AGameInfo_eventBroadcastLocalizedTeam_Parms BroadcastLocalizedTeam_Parms;

    this->ProcessEvent(pFnBroadcastLocalizedTeam, &BroadcastLocalizedTeam_Parms,
                       NULL);
};

// Function Engine.GameInfo.BroadcastLocalized
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventBroadcastLocalized() {
    static UFunction* pFnBroadcastLocalized = NULL;

    if (!pFnBroadcastLocalized)
        pFnBroadcastLocalized = (UFunction*)UObject::GObjObjects()->Data[21533];

    AGameInfo_eventBroadcastLocalized_Parms BroadcastLocalized_Parms;

    this->ProcessEvent(pFnBroadcastLocalized, &BroadcastLocalized_Parms, NULL);
};

// Function Engine.GameInfo.BroadcastTeam
// [0x00024002]
// Parameters infos:

void AGameInfo::BroadcastTeam() {
    static UFunction* pFnBroadcastTeam = NULL;

    if (!pFnBroadcastTeam)
        pFnBroadcastTeam = (UFunction*)UObject::GObjObjects()->Data[21529];

    AGameInfo_execBroadcastTeam_Parms BroadcastTeam_Parms;

    this->ProcessEvent(pFnBroadcastTeam, &BroadcastTeam_Parms, NULL);
};

// Function Engine.GameInfo.Broadcast
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventBroadcast() {
    static UFunction* pFnBroadcast = NULL;

    if (!pFnBroadcast)
        pFnBroadcast = (UFunction*)UObject::GObjObjects()->Data[21525];

    AGameInfo_eventBroadcast_Parms Broadcast_Parms;

    this->ProcessEvent(pFnBroadcast, &Broadcast_Parms, NULL);
};

// Function Engine.GameInfo.RestartGame
// [0x00020002]
// Parameters infos:

void AGameInfo::RestartGame() {
    static UFunction* pFnRestartGame = NULL;

    if (!pFnRestartGame)
        pFnRestartGame = (UFunction*)UObject::GObjObjects()->Data[21519];

    AGameInfo_execRestartGame_Parms RestartGame_Parms;

    this->ProcessEvent(pFnRestartGame, &RestartGame_Parms, NULL);
};

// Function Engine.GameInfo.GetTravelType
// [0x00020002]
// Parameters infos:

void AGameInfo::GetTravelType() {
    static UFunction* pFnGetTravelType = NULL;

    if (!pFnGetTravelType)
        pFnGetTravelType = (UFunction*)UObject::GObjObjects()->Data[21517];

    AGameInfo_execGetTravelType_Parms GetTravelType_Parms;

    this->ProcessEvent(pFnGetTravelType, &GetTravelType_Parms, NULL);
};

// Function Engine.GameInfo.GetNextMap
// [0x00020000]
// Parameters infos:

void AGameInfo::GetNextMap() {
    static UFunction* pFnGetNextMap = NULL;

    if (!pFnGetNextMap)
        pFnGetNextMap = (UFunction*)UObject::GObjObjects()->Data[21515];

    AGameInfo_execGetNextMap_Parms GetNextMap_Parms;

    this->ProcessEvent(pFnGetNextMap, &GetNextMap_Parms, NULL);
};

// Function Engine.GameInfo.SendPlayer
// [0x00020002]
// Parameters infos:

void AGameInfo::SendPlayer() {
    static UFunction* pFnSendPlayer = NULL;

    if (!pFnSendPlayer)
        pFnSendPlayer = (UFunction*)UObject::GObjObjects()->Data[21512];

    AGameInfo_execSendPlayer_Parms SendPlayer_Parms;

    this->ProcessEvent(pFnSendPlayer, &SendPlayer_Parms, NULL);
};

// Function Engine.GameInfo.PickTeam
// [0x00420002]
// Parameters infos:

void AGameInfo::PickTeam() {
    static UFunction* pFnPickTeam = NULL;

    if (!pFnPickTeam)
        pFnPickTeam = (UFunction*)UObject::GObjObjects()->Data[21507];

    AGameInfo_execPickTeam_Parms PickTeam_Parms;

    this->ProcessEvent(pFnPickTeam, &PickTeam_Parms, NULL);
};

// Function Engine.GameInfo.ChangeTeam
// [0x00020002]
// Parameters infos:

void AGameInfo::ChangeTeam() {
    static UFunction* pFnChangeTeam = NULL;

    if (!pFnChangeTeam)
        pFnChangeTeam = (UFunction*)UObject::GObjObjects()->Data[12409];

    AGameInfo_execChangeTeam_Parms ChangeTeam_Parms;

    this->ProcessEvent(pFnChangeTeam, &ChangeTeam_Parms, NULL);
};

// Function Engine.GameInfo.ChangeName
// [0x00020002]
// Parameters infos:

void AGameInfo::ChangeName() {
    static UFunction* pFnChangeName = NULL;

    if (!pFnChangeName)
        pFnChangeName = (UFunction*)UObject::GObjObjects()->Data[21500];

    AGameInfo_execChangeName_Parms ChangeName_Parms;

    this->ProcessEvent(pFnChangeName, &ChangeName_Parms, NULL);
};

// Function Engine.GameInfo.DiscardInventory
// [0x00024002]
// Parameters infos:

void AGameInfo::DiscardInventory() {
    static UFunction* pFnDiscardInventory = NULL;

    if (!pFnDiscardInventory)
        pFnDiscardInventory = (UFunction*)UObject::GObjObjects()->Data[21497];

    AGameInfo_execDiscardInventory_Parms DiscardInventory_Parms;

    this->ProcessEvent(pFnDiscardInventory, &DiscardInventory_Parms, NULL);
};

// Function Engine.GameInfo.PickupQuery
// [0x00020002]
// Parameters infos:

void AGameInfo::PickupQuery() {
    static UFunction* pFnPickupQuery = NULL;

    if (!pFnPickupQuery)
        pFnPickupQuery = (UFunction*)UObject::GObjObjects()->Data[18585];

    AGameInfo_execPickupQuery_Parms PickupQuery_Parms;

    this->ProcessEvent(pFnPickupQuery, &PickupQuery_Parms, NULL);
};

// Function Engine.GameInfo.ShouldRespawn
// [0x00020002]
// Parameters infos:

void AGameInfo::ShouldRespawn() {
    static UFunction* pFnShouldRespawn = NULL;

    if (!pFnShouldRespawn)
        pFnShouldRespawn = (UFunction*)UObject::GObjObjects()->Data[21490];

    AGameInfo_execShouldRespawn_Parms ShouldRespawn_Parms;

    this->ProcessEvent(pFnShouldRespawn, &ShouldRespawn_Parms, NULL);
};

// Function Engine.GameInfo.CheckRelevance
// [0x00020002]
// Parameters infos:

void AGameInfo::CheckRelevance() {
    static UFunction* pFnCheckRelevance = NULL;

    if (!pFnCheckRelevance)
        pFnCheckRelevance = (UFunction*)UObject::GObjObjects()->Data[6345];

    AGameInfo_execCheckRelevance_Parms CheckRelevance_Parms;

    this->ProcessEvent(pFnCheckRelevance, &CheckRelevance_Parms, NULL);
};

// Function Engine.GameInfo.ReduceDamage
// [0x00420002]
// Parameters infos:

void AGameInfo::ReduceDamage() {
    static UFunction* pFnReduceDamage = NULL;

    if (!pFnReduceDamage)
        pFnReduceDamage = (UFunction*)UObject::GObjObjects()->Data[21479];

    AGameInfo_execReduceDamage_Parms ReduceDamage_Parms;

    this->ProcessEvent(pFnReduceDamage, &ReduceDamage_Parms, NULL);
};

// Function Engine.GameInfo.CanSpectate
// [0x00020002]
// Parameters infos:

void AGameInfo::CanSpectate() {
    static UFunction* pFnCanSpectate = NULL;

    if (!pFnCanSpectate)
        pFnCanSpectate = (UFunction*)UObject::GObjObjects()->Data[12414];

    AGameInfo_execCanSpectate_Parms CanSpectate_Parms;

    this->ProcessEvent(pFnCanSpectate, &CanSpectate_Parms, NULL);
};

// Function Engine.GameInfo.KickBan
// [0x00020002]
// Parameters infos:

void AGameInfo::KickBan() {
    static UFunction* pFnKickBan = NULL;

    if (!pFnKickBan)
        pFnKickBan = (UFunction*)UObject::GObjObjects()->Data[21475];

    AGameInfo_execKickBan_Parms KickBan_Parms;

    this->ProcessEvent(pFnKickBan, &KickBan_Parms, NULL);
};

// Function Engine.GameInfo.Kick
// [0x00020002]
// Parameters infos:

void AGameInfo::Kick() {
    static UFunction* pFnKick = NULL;

    if (!pFnKick) pFnKick = (UFunction*)UObject::GObjObjects()->Data[21473];

    AGameInfo_execKick_Parms Kick_Parms;

    this->ProcessEvent(pFnKick, &Kick_Parms, NULL);
};

// Function Engine.GameInfo.BroadcastDeathMessage
// [0x00020002]
// Parameters infos:

void AGameInfo::BroadcastDeathMessage() {
    static UFunction* pFnBroadcastDeathMessage = NULL;

    if (!pFnBroadcastDeathMessage)
        pFnBroadcastDeathMessage =
            (UFunction*)UObject::GObjObjects()->Data[21469];

    AGameInfo_execBroadcastDeathMessage_Parms BroadcastDeathMessage_Parms;

    this->ProcessEvent(pFnBroadcastDeathMessage, &BroadcastDeathMessage_Parms,
                       NULL);
};

// Function Engine.GameInfo.PreventDeath
// [0x00020002]
// Parameters infos:

void AGameInfo::PreventDeath() {
    static UFunction* pFnPreventDeath = NULL;

    if (!pFnPreventDeath)
        pFnPreventDeath = (UFunction*)UObject::GObjObjects()->Data[21463];

    AGameInfo_execPreventDeath_Parms PreventDeath_Parms;

    this->ProcessEvent(pFnPreventDeath, &PreventDeath_Parms, NULL);
};

// Function Engine.GameInfo.Killed
// [0x00020002]
// Parameters infos:

void AGameInfo::Killed() {
    static UFunction* pFnKilled = NULL;

    if (!pFnKilled) pFnKilled = (UFunction*)UObject::GObjObjects()->Data[21458];

    AGameInfo_execKilled_Parms Killed_Parms;

    this->ProcessEvent(pFnKilled, &Killed_Parms, NULL);
};

// Function Engine.GameInfo.NotifyKilled
// [0x00020002]
// Parameters infos:

void AGameInfo::NotifyKilled() {
    static UFunction* pFnNotifyKilled = NULL;

    if (!pFnNotifyKilled)
        pFnNotifyKilled = (UFunction*)UObject::GObjObjects()->Data[21452];

    AGameInfo_execNotifyKilled_Parms NotifyKilled_Parms;

    this->ProcessEvent(pFnNotifyKilled, &NotifyKilled_Parms, NULL);
};

// Function Engine.GameInfo.SetPlayerDefaults
// [0x00020002]
// Parameters infos:

void AGameInfo::SetPlayerDefaults() {
    static UFunction* pFnSetPlayerDefaults = NULL;

    if (!pFnSetPlayerDefaults)
        pFnSetPlayerDefaults = (UFunction*)UObject::GObjObjects()->Data[21450];

    AGameInfo_execSetPlayerDefaults_Parms SetPlayerDefaults_Parms;

    this->ProcessEvent(pFnSetPlayerDefaults, &SetPlayerDefaults_Parms, NULL);
};

// Function Engine.GameInfo.Mutate
// [0x00020002]
// Parameters infos:

void AGameInfo::Mutate() {
    static UFunction* pFnMutate = NULL;

    if (!pFnMutate) pFnMutate = (UFunction*)UObject::GObjObjects()->Data[21447];

    AGameInfo_execMutate_Parms Mutate_Parms;

    this->ProcessEvent(pFnMutate, &Mutate_Parms, NULL);
};

// Function Engine.GameInfo.AddDefaultInventory
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventAddDefaultInventory() {
    static UFunction* pFnAddDefaultInventory = NULL;

    if (!pFnAddDefaultInventory)
        pFnAddDefaultInventory =
            (UFunction*)UObject::GObjObjects()->Data[21445];

    AGameInfo_eventAddDefaultInventory_Parms AddDefaultInventory_Parms;

    this->ProcessEvent(pFnAddDefaultInventory, &AddDefaultInventory_Parms,
                       NULL);
};

// Function Engine.GameInfo.AcceptInventory
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventAcceptInventory() {
    static UFunction* pFnAcceptInventory = NULL;

    if (!pFnAcceptInventory)
        pFnAcceptInventory = (UFunction*)UObject::GObjObjects()->Data[21443];

    AGameInfo_eventAcceptInventory_Parms AcceptInventory_Parms;

    this->ProcessEvent(pFnAcceptInventory, &AcceptInventory_Parms, NULL);
};

// Function Engine.GameInfo.UnregisterPlayer
// [0x00820002]
// Parameters infos:

void AGameInfo::UnregisterPlayer() {
    static UFunction* pFnUnregisterPlayer = NULL;

    if (!pFnUnregisterPlayer)
        pFnUnregisterPlayer = (UFunction*)UObject::GObjObjects()->Data[21440];

    AGameInfo_execUnregisterPlayer_Parms UnregisterPlayer_Parms;

    this->ProcessEvent(pFnUnregisterPlayer, &UnregisterPlayer_Parms, NULL);
};

// Function Engine.GameInfo.Logout
// [0x00020002]
// Parameters infos:

void AGameInfo::Logout() {
    static UFunction* pFnLogout = NULL;

    if (!pFnLogout) pFnLogout = (UFunction*)UObject::GObjObjects()->Data[21436];

    AGameInfo_execLogout_Parms Logout_Parms;

    this->ProcessEvent(pFnLogout, &Logout_Parms, NULL);
};

// Function Engine.GameInfo.PreExit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPreExit() {
    static UFunction* pFnPreExit = NULL;

    if (!pFnPreExit)
        pFnPreExit = (UFunction*)UObject::GObjObjects()->Data[21435];

    AGameInfo_eventPreExit_Parms PreExit_Parms;

    this->ProcessEvent(pFnPreExit, &PreExit_Parms, NULL);
};

// Function Engine.GameInfo.CalculatedNetSpeed
// [0x00020002]
// Parameters infos:

void AGameInfo::CalculatedNetSpeed() {
    static UFunction* pFnCalculatedNetSpeed = NULL;

    if (!pFnCalculatedNetSpeed)
        pFnCalculatedNetSpeed = (UFunction*)UObject::GObjObjects()->Data[21433];

    AGameInfo_execCalculatedNetSpeed_Parms CalculatedNetSpeed_Parms;

    this->ProcessEvent(pFnCalculatedNetSpeed, &CalculatedNetSpeed_Parms, NULL);
};

// Function Engine.GameInfo.UpdateNetSpeeds
// [0x00020002]
// Parameters infos:

void AGameInfo::UpdateNetSpeeds() {
    static UFunction* pFnUpdateNetSpeeds = NULL;

    if (!pFnUpdateNetSpeeds)
        pFnUpdateNetSpeeds = (UFunction*)UObject::GObjObjects()->Data[21429];

    AGameInfo_execUpdateNetSpeeds_Parms UpdateNetSpeeds_Parms;

    this->ProcessEvent(pFnUpdateNetSpeeds, &UpdateNetSpeeds_Parms, NULL);
};

// Function Engine.GameInfo.PostLogin
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPostLogin() {
    static UFunction* pFnPostLogin = NULL;

    if (!pFnPostLogin)
        pFnPostLogin = (UFunction*)UObject::GObjObjects()->Data[21415];

    AGameInfo_eventPostLogin_Parms PostLogin_Parms;

    this->ProcessEvent(pFnPostLogin, &PostLogin_Parms, NULL);
};

// Function Engine.GameInfo.UpdateBestNextHosts
// [0x00820002]
// Parameters infos:

void AGameInfo::UpdateBestNextHosts() {
    static UFunction* pFnUpdateBestNextHosts = NULL;

    if (!pFnUpdateBestNextHosts)
        pFnUpdateBestNextHosts =
            (UFunction*)UObject::GObjObjects()->Data[21407];

    AGameInfo_execUpdateBestNextHosts_Parms UpdateBestNextHosts_Parms;

    this->ProcessEvent(pFnUpdateBestNextHosts, &UpdateBestNextHosts_Parms,
                       NULL);
};

// Function Engine.GameInfo.BestNextHostSort
// [0x00020002]
// Parameters infos:

void AGameInfo::BestNextHostSort() {
    static UFunction* pFnBestNextHostSort = NULL;

    if (!pFnBestNextHostSort)
        pFnBestNextHostSort = (UFunction*)UObject::GObjObjects()->Data[21402];

    AGameInfo_execBestNextHostSort_Parms BestNextHostSort_Parms;

    this->ProcessEvent(pFnBestNextHostSort, &BestNextHostSort_Parms, NULL);
};

// Function Engine.GameInfo.GenericPlayerInitialization
// [0x00020002]
// Parameters infos:

void AGameInfo::GenericPlayerInitialization() {
    static UFunction* pFnGenericPlayerInitialization = NULL;

    if (!pFnGenericPlayerInitialization)
        pFnGenericPlayerInitialization =
            (UFunction*)UObject::GObjObjects()->Data[21399];

    AGameInfo_execGenericPlayerInitialization_Parms
        GenericPlayerInitialization_Parms;

    this->ProcessEvent(pFnGenericPlayerInitialization,
                       &GenericPlayerInitialization_Parms, NULL);
};

// Function Engine.GameInfo.ReplicateStreamingStatus
// [0x00020002]
// Parameters infos:

void AGameInfo::ReplicateStreamingStatus() {
    static UFunction* pFnReplicateStreamingStatus = NULL;

    if (!pFnReplicateStreamingStatus)
        pFnReplicateStreamingStatus =
            (UFunction*)UObject::GObjObjects()->Data[21395];

    AGameInfo_execReplicateStreamingStatus_Parms ReplicateStreamingStatus_Parms;

    this->ProcessEvent(pFnReplicateStreamingStatus,
                       &ReplicateStreamingStatus_Parms, NULL);
};

// Function Engine.GameInfo.GetDefaultPlayerClass
// [0x00020002]
// Parameters infos:

void AGameInfo::GetDefaultPlayerClass() {
    static UFunction* pFnGetDefaultPlayerClass = NULL;

    if (!pFnGetDefaultPlayerClass)
        pFnGetDefaultPlayerClass =
            (UFunction*)UObject::GObjObjects()->Data[21392];

    AGameInfo_execGetDefaultPlayerClass_Parms GetDefaultPlayerClass_Parms;

    this->ProcessEvent(pFnGetDefaultPlayerClass, &GetDefaultPlayerClass_Parms,
                       NULL);
};

// Function Engine.GameInfo.SpawnDefaultPawnFor
// [0x00820002]
// Parameters infos:

void AGameInfo::SpawnDefaultPawnFor() {
    static UFunction* pFnSpawnDefaultPawnFor = NULL;

    if (!pFnSpawnDefaultPawnFor)
        pFnSpawnDefaultPawnFor =
            (UFunction*)UObject::GObjObjects()->Data[21385];

    AGameInfo_execSpawnDefaultPawnFor_Parms SpawnDefaultPawnFor_Parms;

    this->ProcessEvent(pFnSpawnDefaultPawnFor, &SpawnDefaultPawnFor_Parms,
                       NULL);
};

// Function Engine.GameInfo.RestartPlayer
// [0x00020002]
// Parameters infos:

void AGameInfo::RestartPlayer() {
    static UFunction* pFnRestartPlayer = NULL;

    if (!pFnRestartPlayer)
        pFnRestartPlayer = (UFunction*)UObject::GObjObjects()->Data[21375];

    AGameInfo_execRestartPlayer_Parms RestartPlayer_Parms;

    this->ProcessEvent(pFnRestartPlayer, &RestartPlayer_Parms, NULL);
};

// Function Engine.GameInfo.StartBots
// [0x00020002]
// Parameters infos:

void AGameInfo::StartBots() {
    static UFunction* pFnStartBots = NULL;

    if (!pFnStartBots)
        pFnStartBots = (UFunction*)UObject::GObjObjects()->Data[21373];

    AGameInfo_execStartBots_Parms StartBots_Parms;

    this->ProcessEvent(pFnStartBots, &StartBots_Parms, NULL);
};

// Function Engine.GameInfo.StartHumans
// [0x00020002]
// Parameters infos:

void AGameInfo::StartHumans() {
    static UFunction* pFnStartHumans = NULL;

    if (!pFnStartHumans)
        pFnStartHumans = (UFunction*)UObject::GObjObjects()->Data[21371];

    AGameInfo_execStartHumans_Parms StartHumans_Parms;

    this->ProcessEvent(pFnStartHumans, &StartHumans_Parms, NULL);
};

// Function Engine.GameInfo.OnStartOnlineGameComplete
// [0x00020002]
// Parameters infos:

void AGameInfo::OnStartOnlineGameComplete() {
    static UFunction* pFnOnStartOnlineGameComplete = NULL;

    if (!pFnOnStartOnlineGameComplete)
        pFnOnStartOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[21366];

    AGameInfo_execOnStartOnlineGameComplete_Parms
        OnStartOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnStartOnlineGameComplete,
                       &OnStartOnlineGameComplete_Parms, NULL);
};

// Function Engine.GameInfo.StartOnlineGame
// [0x00020002]
// Parameters infos:

void AGameInfo::StartOnlineGame() {
    static UFunction* pFnStartOnlineGame = NULL;

    if (!pFnStartOnlineGame)
        pFnStartOnlineGame = (UFunction*)UObject::GObjObjects()->Data[21364];

    AGameInfo_execStartOnlineGame_Parms StartOnlineGame_Parms;

    this->ProcessEvent(pFnStartOnlineGame, &StartOnlineGame_Parms, NULL);
};

// Function Engine.GameInfo.StartMatch
// [0x00020002]
// Parameters infos:

void AGameInfo::StartMatch() {
    static UFunction* pFnStartMatch = NULL;

    if (!pFnStartMatch)
        pFnStartMatch = (UFunction*)UObject::GObjObjects()->Data[21362];

    AGameInfo_execStartMatch_Parms StartMatch_Parms;

    this->ProcessEvent(pFnStartMatch, &StartMatch_Parms, NULL);
};

// Function Engine.GameInfo.SetNeedsReload
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::SetNeedsReload() {
    static UFunction* pFnSetNeedsReload = NULL;

    if (!pFnSetNeedsReload)
        pFnSetNeedsReload = (UFunction*)UObject::GObjObjects()->Data[21361];

    AGameInfo_execSetNeedsReload_Parms SetNeedsReload_Parms;

    pFnSetNeedsReload->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNeedsReload, &SetNeedsReload_Parms, NULL);

    pFnSetNeedsReload->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.SetNeedsRestart
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::SetNeedsRestart() {
    static UFunction* pFnSetNeedsRestart = NULL;

    if (!pFnSetNeedsRestart)
        pFnSetNeedsRestart = (UFunction*)UObject::GObjObjects()->Data[21360];

    AGameInfo_execSetNeedsRestart_Parms SetNeedsRestart_Parms;

    pFnSetNeedsRestart->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNeedsRestart, &SetNeedsRestart_Parms, NULL);

    pFnSetNeedsRestart->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.ConfirmReservation
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventConfirmReservation() {
    static UFunction* pFnConfirmReservation = NULL;

    if (!pFnConfirmReservation)
        pFnConfirmReservation = (UFunction*)UObject::GObjObjects()->Data[21357];

    AGameInfo_eventConfirmReservation_Parms ConfirmReservation_Parms;

    this->ProcessEvent(pFnConfirmReservation, &ConfirmReservation_Parms, NULL);
};

// Function Engine.GameInfo.MakeReservations
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventMakeReservations() {
    static UFunction* pFnMakeReservations = NULL;

    if (!pFnMakeReservations)
        pFnMakeReservations = (UFunction*)UObject::GObjObjects()->Data[21353];

    AGameInfo_eventMakeReservations_Parms MakeReservations_Parms;

    this->ProcessEvent(pFnMakeReservations, &MakeReservations_Parms, NULL);
};

// Function Engine.GameInfo.SeatPlayer
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventSeatPlayer() {
    static UFunction* pFnSeatPlayer = NULL;

    if (!pFnSeatPlayer)
        pFnSeatPlayer = (UFunction*)UObject::GObjObjects()->Data[21350];

    AGameInfo_eventSeatPlayer_Parms SeatPlayer_Parms;

    this->ProcessEvent(pFnSeatPlayer, &SeatPlayer_Parms, NULL);
};

// Function Engine.GameInfo.ScoreHeal
// [0x00020000]
// Parameters infos:

void AGameInfo::ScoreHeal() {
    static UFunction* pFnScoreHeal = NULL;

    if (!pFnScoreHeal)
        pFnScoreHeal = (UFunction*)UObject::GObjObjects()->Data[21344];

    AGameInfo_execScoreHeal_Parms ScoreHeal_Parms;

    this->ProcessEvent(pFnScoreHeal, &ScoreHeal_Parms, NULL);
};

// Function Engine.GameInfo.ScoreDamage
// [0x00020000]
// Parameters infos:

void AGameInfo::ScoreDamage() {
    static UFunction* pFnScoreDamage = NULL;

    if (!pFnScoreDamage)
        pFnScoreDamage = (UFunction*)UObject::GObjObjects()->Data[21338];

    AGameInfo_execScoreDamage_Parms ScoreDamage_Parms;

    this->ProcessEvent(pFnScoreDamage, &ScoreDamage_Parms, NULL);
};

// Function Engine.GameInfo.AllowAnalyticsLogging
// [0x00022000]
// Parameters infos:

void AGameInfo::AllowAnalyticsLogging() {
    static UFunction* pFnAllowAnalyticsLogging = NULL;

    if (!pFnAllowAnalyticsLogging)
        pFnAllowAnalyticsLogging =
            (UFunction*)UObject::GObjObjects()->Data[21336];

    AGameInfo_execAllowAnalyticsLogging_Parms AllowAnalyticsLogging_Parms;

    this->ProcessEvent(pFnAllowAnalyticsLogging, &AllowAnalyticsLogging_Parms,
                       NULL);
};

// Function Engine.GameInfo.Login
// [0x00C20802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventLogin() {
    static UFunction* pFnLogin = NULL;

    if (!pFnLogin) pFnLogin = (UFunction*)UObject::GObjObjects()->Data[21319];

    AGameInfo_eventLogin_Parms Login_Parms;

    this->ProcessEvent(pFnLogin, &Login_Parms, NULL);
};

// Function Engine.GameInfo.SpawnPlayerController
// [0x00020002]
// Parameters infos:

void AGameInfo::SpawnPlayerController() {
    static UFunction* pFnSpawnPlayerController = NULL;

    if (!pFnSpawnPlayerController)
        pFnSpawnPlayerController =
            (UFunction*)UObject::GObjObjects()->Data[21315];

    AGameInfo_execSpawnPlayerController_Parms SpawnPlayerController_Parms;

    this->ProcessEvent(pFnSpawnPlayerController, &SpawnPlayerController_Parms,
                       NULL);
};

// Function Engine.GameInfo.GetNextPlayerID
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::GetNextPlayerID() {
    static UFunction* pFnGetNextPlayerID = NULL;

    if (!pFnGetNextPlayerID)
        pFnGetNextPlayerID = (UFunction*)UObject::GObjObjects()->Data[21313];

    AGameInfo_execGetNextPlayerID_Parms GetNextPlayerID_Parms;

    pFnGetNextPlayerID->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNextPlayerID, &GetNextPlayerID_Parms, NULL);

    pFnGetNextPlayerID->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.AtCapacity
// [0x00024002]
// Parameters infos:

void AGameInfo::AtCapacity() {
    static UFunction* pFnAtCapacity = NULL;

    if (!pFnAtCapacity)
        pFnAtCapacity = (UFunction*)UObject::GObjObjects()->Data[7999];

    AGameInfo_execAtCapacity_Parms AtCapacity_Parms;

    this->ProcessEvent(pFnAtCapacity, &AtCapacity_Parms, NULL);
};

// Function Engine.GameInfo.RejectLogin
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::RejectLogin() {
    static UFunction* pFnRejectLogin = NULL;

    if (!pFnRejectLogin)
        pFnRejectLogin = (UFunction*)UObject::GObjObjects()->Data[7980];

    AGameInfo_execRejectLogin_Parms RejectLogin_Parms;

    pFnRejectLogin->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRejectLogin, &RejectLogin_Parms, NULL);

    pFnRejectLogin->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.ResumeLogin
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::ResumeLogin() {
    static UFunction* pFnResumeLogin = NULL;

    if (!pFnResumeLogin)
        pFnResumeLogin = (UFunction*)UObject::GObjObjects()->Data[7989];

    AGameInfo_execResumeLogin_Parms ResumeLogin_Parms;

    pFnResumeLogin->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResumeLogin, &ResumeLogin_Parms, NULL);

    pFnResumeLogin->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.PauseLogin
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::PauseLogin() {
    static UFunction* pFnPauseLogin = NULL;

    if (!pFnPauseLogin)
        pFnPauseLogin = (UFunction*)UObject::GObjObjects()->Data[8003];

    AGameInfo_execPauseLogin_Parms PauseLogin_Parms;

    pFnPauseLogin->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPauseLogin, &PauseLogin_Parms, NULL);

    pFnPauseLogin->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.PreLogin
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPreLogin() {
    static UFunction* pFnPreLogin = NULL;

    if (!pFnPreLogin)
        pFnPreLogin = (UFunction*)UObject::GObjObjects()->Data[21300];

    AGameInfo_eventPreLogin_Parms PreLogin_Parms;

    this->ProcessEvent(pFnPreLogin, &PreLogin_Parms, NULL);
};

// Function Engine.GameInfo.RequiresPassword
// [0x00020002]
// Parameters infos:

void AGameInfo::RequiresPassword() {
    static UFunction* pFnRequiresPassword = NULL;

    if (!pFnRequiresPassword)
        pFnRequiresPassword = (UFunction*)UObject::GObjObjects()->Data[21298];

    AGameInfo_execRequiresPassword_Parms RequiresPassword_Parms;

    this->ProcessEvent(pFnRequiresPassword, &RequiresPassword_Parms, NULL);
};

// Function Engine.GameInfo.ProcessClientTravel
// [0x00420002]
// Parameters infos:

void AGameInfo::ProcessClientTravel() {
    static UFunction* pFnProcessClientTravel = NULL;

    if (!pFnProcessClientTravel)
        pFnProcessClientTravel =
            (UFunction*)UObject::GObjObjects()->Data[21290];

    AGameInfo_execProcessClientTravel_Parms ProcessClientTravel_Parms;

    this->ProcessEvent(pFnProcessClientTravel, &ProcessClientTravel_Parms,
                       NULL);
};

// Function Engine.GameInfo.ProcessServerTravel
// [0x00824002]
// Parameters infos:

void AGameInfo::ProcessServerTravel() {
    static UFunction* pFnProcessServerTravel = NULL;

    if (!pFnProcessServerTravel)
        pFnProcessServerTravel =
            (UFunction*)UObject::GObjObjects()->Data[21281];

    AGameInfo_execProcessServerTravel_Parms ProcessServerTravel_Parms;

    this->ProcessEvent(pFnProcessServerTravel, &ProcessServerTravel_Parms,
                       NULL);
};

// Function Engine.GameInfo.CheckNextMap
// [0x00020002]
// Parameters infos:

void AGameInfo::CheckNextMap() {
    static UFunction* pFnCheckNextMap = NULL;

    if (!pFnCheckNextMap)
        pFnCheckNextMap = (UFunction*)UObject::GObjObjects()->Data[21278];

    AGameInfo_execCheckNextMap_Parms CheckNextMap_Parms;

    this->ProcessEvent(pFnCheckNextMap, &CheckNextMap_Parms, NULL);
};

// Function Engine.GameInfo.RemoveMutator
// [0x00020002]
// Parameters infos:

void AGameInfo::RemoveMutator() {
    static UFunction* pFnRemoveMutator = NULL;

    if (!pFnRemoveMutator)
        pFnRemoveMutator = (UFunction*)UObject::GObjObjects()->Data[21275];

    AGameInfo_execRemoveMutator_Parms RemoveMutator_Parms;

    this->ProcessEvent(pFnRemoveMutator, &RemoveMutator_Parms, NULL);
};

// Function Engine.GameInfo.AddMutator
// [0x00024002]
// Parameters infos:

void AGameInfo::AddMutator() {
    static UFunction* pFnAddMutator = NULL;

    if (!pFnAddMutator)
        pFnAddMutator = (UFunction*)UObject::GObjObjects()->Data[21269];

    AGameInfo_execAddMutator_Parms AddMutator_Parms;

    this->ProcessEvent(pFnAddMutator, &AddMutator_Parms, NULL);
};

// Function Engine.GameInfo.NotifyPendingConnectionLost
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventNotifyPendingConnectionLost() {
    static UFunction* pFnNotifyPendingConnectionLost = NULL;

    if (!pFnNotifyPendingConnectionLost)
        pFnNotifyPendingConnectionLost =
            (UFunction*)UObject::GObjObjects()->Data[21268];

    AGameInfo_eventNotifyPendingConnectionLost_Parms
        NotifyPendingConnectionLost_Parms;

    this->ProcessEvent(pFnNotifyPendingConnectionLost,
                       &NotifyPendingConnectionLost_Parms, NULL);
};

// Function Engine.GameInfo.InitGame
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventInitGame() {
    static UFunction* pFnInitGame = NULL;

    if (!pFnInitGame)
        pFnInitGame = (UFunction*)UObject::GObjObjects()->Data[21259];

    AGameInfo_eventInitGame_Parms InitGame_Parms;

    this->ProcessEvent(pFnInitGame, &InitGame_Parms, NULL);
};

// Function Engine.GameInfo.SetGameType
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventSetGameType() {
    static UFunction* pFnSetGameType = NULL;

    if (!pFnSetGameType)
        pFnSetGameType = (UFunction*)UObject::GObjObjects()->Data[21254];

    AGameInfo_eventSetGameType_Parms SetGameType_Parms;

    this->ProcessEvent(pFnSetGameType, &SetGameType_Parms, NULL);
};

// Function Engine.GameInfo.GetDefaultGameClassPath
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventGetDefaultGameClassPath() {
    static UFunction* pFnGetDefaultGameClassPath = NULL;

    if (!pFnGetDefaultGameClassPath)
        pFnGetDefaultGameClassPath =
            (UFunction*)UObject::GObjObjects()->Data[21249];

    AGameInfo_eventGetDefaultGameClassPath_Parms GetDefaultGameClassPath_Parms;

    this->ProcessEvent(pFnGetDefaultGameClassPath,
                       &GetDefaultGameClassPath_Parms, NULL);
};

// Function Engine.GameInfo.GetIntOption
// [0x00022002]
// Parameters infos:

void AGameInfo::GetIntOption() {
    static UFunction* pFnGetIntOption = NULL;

    if (!pFnGetIntOption)
        pFnGetIntOption = (UFunction*)UObject::GObjObjects()->Data[21243];

    AGameInfo_execGetIntOption_Parms GetIntOption_Parms;

    this->ProcessEvent(pFnGetIntOption, &GetIntOption_Parms, NULL);
};

// Function Engine.GameInfo.HasOption
// [0x00022002]
// Parameters infos:

void AGameInfo::HasOption() {
    static UFunction* pFnHasOption = NULL;

    if (!pFnHasOption)
        pFnHasOption = (UFunction*)UObject::GObjObjects()->Data[7997];

    AGameInfo_execHasOption_Parms HasOption_Parms;

    this->ProcessEvent(pFnHasOption, &HasOption_Parms, NULL);
};

// Function Engine.GameInfo.ParseOption
// [0x00022002]
// Parameters infos:

void AGameInfo::ParseOption() {
    static UFunction* pFnParseOption = NULL;

    if (!pFnParseOption)
        pFnParseOption = (UFunction*)UObject::GObjObjects()->Data[7993];

    AGameInfo_execParseOption_Parms ParseOption_Parms;

    this->ProcessEvent(pFnParseOption, &ParseOption_Parms, NULL);
};

// Function Engine.GameInfo.GetKeyValue
// [0x00422002]
// Parameters infos:

void AGameInfo::GetKeyValue() {
    static UFunction* pFnGetKeyValue = NULL;

    if (!pFnGetKeyValue)
        pFnGetKeyValue = (UFunction*)UObject::GObjObjects()->Data[21229];

    AGameInfo_execGetKeyValue_Parms GetKeyValue_Parms;

    this->ProcessEvent(pFnGetKeyValue, &GetKeyValue_Parms, NULL);
};

// Function Engine.GameInfo.GrabOption
// [0x00422002]
// Parameters infos:

void AGameInfo::GrabOption() {
    static UFunction* pFnGrabOption = NULL;

    if (!pFnGrabOption)
        pFnGrabOption = (UFunction*)UObject::GObjObjects()->Data[21225];

    AGameInfo_execGrabOption_Parms GrabOption_Parms;

    this->ProcessEvent(pFnGrabOption, &GrabOption_Parms, NULL);
};

// Function Engine.GameInfo.SetGameSpeed
// [0x00020002]
// Parameters infos:

void AGameInfo::SetGameSpeed() {
    static UFunction* pFnSetGameSpeed = NULL;

    if (!pFnSetGameSpeed)
        pFnSetGameSpeed = (UFunction*)UObject::GObjObjects()->Data[21223];

    AGameInfo_execSetGameSpeed_Parms SetGameSpeed_Parms;

    this->ProcessEvent(pFnSetGameSpeed, &SetGameSpeed_Parms, NULL);
};

// Function Engine.GameInfo.DebugPause
// [0x00020002]
// Parameters infos:

void AGameInfo::DebugPause() {
    static UFunction* pFnDebugPause = NULL;

    if (!pFnDebugPause)
        pFnDebugPause = (UFunction*)UObject::GObjObjects()->Data[21220];

    AGameInfo_execDebugPause_Parms DebugPause_Parms;

    this->ProcessEvent(pFnDebugPause, &DebugPause_Parms, NULL);
};

// Function Engine.GameInfo.ForceClearUnpauseDelegates
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::ForceClearUnpauseDelegates() {
    static UFunction* pFnForceClearUnpauseDelegates = NULL;

    if (!pFnForceClearUnpauseDelegates)
        pFnForceClearUnpauseDelegates =
            (UFunction*)UObject::GObjObjects()->Data[12595];

    AGameInfo_execForceClearUnpauseDelegates_Parms
        ForceClearUnpauseDelegates_Parms;

    pFnForceClearUnpauseDelegates->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceClearUnpauseDelegates,
                       &ForceClearUnpauseDelegates_Parms, NULL);

    pFnForceClearUnpauseDelegates->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.ClearPause
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventClearPause() {
    static UFunction* pFnClearPause = NULL;

    if (!pFnClearPause)
        pFnClearPause = (UFunction*)UObject::GObjObjects()->Data[21216];

    AGameInfo_eventClearPause_Parms ClearPause_Parms;

    this->ProcessEvent(pFnClearPause, &ClearPause_Parms, NULL);
};

// Function Engine.GameInfo.SetPause
// [0x00024002]
// Parameters infos:

void AGameInfo::SetPause() {
    static UFunction* pFnSetPause = NULL;

    if (!pFnSetPause)
        pFnSetPause = (UFunction*)UObject::GObjObjects()->Data[12466];

    AGameInfo_execSetPause_Parms SetPause_Parms;

    this->ProcessEvent(pFnSetPause, &SetPause_Parms, NULL);
};

// Function Engine.GameInfo.CanUnpause
// [0x00120002]
// Parameters infos:

void AGameInfo::CanUnpause() {
    static UFunction* pFnCanUnpause = NULL;

    if (!pFnCanUnpause)
        pFnCanUnpause = (UFunction*)UObject::GObjObjects()->Data[21211];

    AGameInfo_execCanUnpause_Parms CanUnpause_Parms;

    this->ProcessEvent(pFnCanUnpause, &CanUnpause_Parms, NULL);
};

// Function Engine.GameInfo.GetNumPlayers
// [0x00020002]
// Parameters infos:

void AGameInfo::GetNumPlayers() {
    static UFunction* pFnGetNumPlayers = NULL;

    if (!pFnGetNumPlayers)
        pFnGetNumPlayers = (UFunction*)UObject::GObjObjects()->Data[21209];

    AGameInfo_execGetNumPlayers_Parms GetNumPlayers_Parms;

    this->ProcessEvent(pFnGetNumPlayers, &GetNumPlayers_Parms, NULL);
};

// Function Engine.GameInfo.GetNetworkNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::GetNetworkNumber() {
    static UFunction* pFnGetNetworkNumber = NULL;

    if (!pFnGetNetworkNumber)
        pFnGetNetworkNumber = (UFunction*)UObject::GObjObjects()->Data[21207];

    AGameInfo_execGetNetworkNumber_Parms GetNetworkNumber_Parms;

    pFnGetNetworkNumber->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNetworkNumber, &GetNetworkNumber_Parms, NULL);

    pFnGetNetworkNumber->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.InitGameReplicationInfo
// [0x00020002]
// Parameters infos:

void AGameInfo::InitGameReplicationInfo() {
    static UFunction* pFnInitGameReplicationInfo = NULL;

    if (!pFnInitGameReplicationInfo)
        pFnInitGameReplicationInfo =
            (UFunction*)UObject::GObjObjects()->Data[21206];

    AGameInfo_execInitGameReplicationInfo_Parms InitGameReplicationInfo_Parms;

    this->ProcessEvent(pFnInitGameReplicationInfo,
                       &InitGameReplicationInfo_Parms, NULL);
};

// Function Engine.GameInfo.ForceKickPlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventForceKickPlayer() {
    static UFunction* pFnForceKickPlayer = NULL;

    if (!pFnForceKickPlayer)
        pFnForceKickPlayer = (UFunction*)UObject::GObjObjects()->Data[21203];

    AGameInfo_eventForceKickPlayer_Parms ForceKickPlayer_Parms;

    this->ProcessEvent(pFnForceKickPlayer, &ForceKickPlayer_Parms, NULL);
};

// Function Engine.GameInfo.KickIdler
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventKickIdler() {
    static UFunction* pFnKickIdler = NULL;

    if (!pFnKickIdler)
        pFnKickIdler = (UFunction*)UObject::GObjObjects()->Data[21201];

    AGameInfo_eventKickIdler_Parms KickIdler_Parms;

    this->ProcessEvent(pFnKickIdler, &KickIdler_Parms, NULL);
};

// Function Engine.GameInfo.GameEnding
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventGameEnding() {
    static UFunction* pFnGameEnding = NULL;

    if (!pFnGameEnding)
        pFnGameEnding = (UFunction*)UObject::GObjObjects()->Data[21200];

    AGameInfo_eventGameEnding_Parms GameEnding_Parms;

    this->ProcessEvent(pFnGameEnding, &GameEnding_Parms, NULL);
};

// Function Engine.GameInfo.NotifyNavigationChanged
// [0x00020000]
// Parameters infos:

void AGameInfo::NotifyNavigationChanged() {
    static UFunction* pFnNotifyNavigationChanged = NULL;

    if (!pFnNotifyNavigationChanged)
        pFnNotifyNavigationChanged =
            (UFunction*)UObject::GObjObjects()->Data[21198];

    AGameInfo_execNotifyNavigationChanged_Parms NotifyNavigationChanged_Parms;

    this->ProcessEvent(pFnNotifyNavigationChanged,
                       &NotifyNavigationChanged_Parms, NULL);
};

// Function Engine.GameInfo.DoNavFearCostFallOff
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::DoNavFearCostFallOff() {
    static UFunction* pFnDoNavFearCostFallOff = NULL;

    if (!pFnDoNavFearCostFallOff)
        pFnDoNavFearCostFallOff =
            (UFunction*)UObject::GObjObjects()->Data[21197];

    AGameInfo_execDoNavFearCostFallOff_Parms DoNavFearCostFallOff_Parms;

    pFnDoNavFearCostFallOff->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoNavFearCostFallOff, &DoNavFearCostFallOff_Parms,
                       NULL);

    pFnDoNavFearCostFallOff->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.ShouldStartInCinematicMode
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AGameInfo::ShouldStartInCinematicMode() {
    static UFunction* pFnShouldStartInCinematicMode = NULL;

    if (!pFnShouldStartInCinematicMode)
        pFnShouldStartInCinematicMode =
            (UFunction*)UObject::GObjObjects()->Data[21190];

    AGameInfo_execShouldStartInCinematicMode_Parms
        ShouldStartInCinematicMode_Parms;

    pFnShouldStartInCinematicMode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldStartInCinematicMode,
                       &ShouldStartInCinematicMode_Parms, NULL);

    pFnShouldStartInCinematicMode->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.Timer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventTimer() {
    static UFunction* pFnTimer = NULL;

    if (!pFnTimer) pFnTimer = (UFunction*)UObject::GObjObjects()->Data[21189];

    AGameInfo_eventTimer_Parms Timer_Parms;

    this->ProcessEvent(pFnTimer, &Timer_Parms, NULL);
};

// Function Engine.GameInfo.ResetLevel
// [0x00020002]
// Parameters infos:

void AGameInfo::ResetLevel() {
    static UFunction* pFnResetLevel = NULL;

    if (!pFnResetLevel)
        pFnResetLevel = (UFunction*)UObject::GObjObjects()->Data[21180];

    AGameInfo_execResetLevel_Parms ResetLevel_Parms;

    this->ProcessEvent(pFnResetLevel, &ResetLevel_Parms, NULL);
};

// Function Engine.GameInfo.ShouldReset
// [0x00020002]
// Parameters infos:

void AGameInfo::ShouldReset() {
    static UFunction* pFnShouldReset = NULL;

    if (!pFnShouldReset)
        pFnShouldReset = (UFunction*)UObject::GObjObjects()->Data[21177];

    AGameInfo_execShouldReset_Parms ShouldReset_Parms;

    this->ProcessEvent(pFnShouldReset, &ShouldReset_Parms, NULL);
};

// Function Engine.GameInfo.Reset
// [0x00020002]
// Parameters infos:

void AGameInfo::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[21176];

    AGameInfo_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.GameInfo.DisplayDebug
// [0x00420102]
// Parameters infos:

void AGameInfo::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[21171];

    AGameInfo_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.GameInfo.OnServerTitleDataRead
// [0x00020002]
// Parameters infos:

void AGameInfo::OnServerTitleDataRead() {
    static UFunction* pFnOnServerTitleDataRead = NULL;

    if (!pFnOnServerTitleDataRead)
        pFnOnServerTitleDataRead =
            (UFunction*)UObject::GObjObjects()->Data[21170];

    AGameInfo_execOnServerTitleDataRead_Parms OnServerTitleDataRead_Parms;

    this->ProcessEvent(pFnOnServerTitleDataRead, &OnServerTitleDataRead_Parms,
                       NULL);
};

// Function Engine.GameInfo.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[21168];

    AGameInfo_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.GameInfo.GetCoverReplicator
// [0x00020002]
// Parameters infos:

void AGameInfo::GetCoverReplicator() {
    static UFunction* pFnGetCoverReplicator = NULL;

    if (!pFnGetCoverReplicator)
        pFnGetCoverReplicator = (UFunction*)UObject::GObjObjects()->Data[17290];

    AGameInfo_execGetCoverReplicator_Parms GetCoverReplicator_Parms;

    this->ProcessEvent(pFnGetCoverReplicator, &GetCoverReplicator_Parms, NULL);
};

// Function Engine.GameInfo.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AGameInfo::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[21167];

    AGameInfo_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.GameInfo.GetMapCommonPackageName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::GetMapCommonPackageName() {
    static UFunction* pFnGetMapCommonPackageName = NULL;

    if (!pFnGetMapCommonPackageName)
        pFnGetMapCommonPackageName =
            (UFunction*)UObject::GObjObjects()->Data[21163];

    AGameInfo_execGetMapCommonPackageName_Parms GetMapCommonPackageName_Parms;

    pFnGetMapCommonPackageName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMapCommonPackageName,
                       &GetMapCommonPackageName_Parms, NULL);

    pFnGetMapCommonPackageName->FunctionFlags |= 0x400;
};

// Function Engine.GameInfo.GetSupportedGameTypes
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void AGameInfo::GetSupportedGameTypes() {
    static UFunction* pFnGetSupportedGameTypes = NULL;

    if (!pFnGetSupportedGameTypes)
        pFnGetSupportedGameTypes =
            (UFunction*)UObject::GObjObjects()->Data[21158];

    AGameInfo_execGetSupportedGameTypes_Parms GetSupportedGameTypes_Parms;

    pFnGetSupportedGameTypes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSupportedGameTypes, &GetSupportedGameTypes_Parms,
                       NULL);

    pFnGetSupportedGameTypes->FunctionFlags |= 0x400;
};

// Function Engine.Mutator.ModifyZedTime
// [0x00420000]
// Parameters infos:

void AMutator::ModifyZedTime() {
    static UFunction* pFnModifyZedTime = NULL;

    if (!pFnModifyZedTime)
        pFnModifyZedTime = (UFunction*)UObject::GObjObjects()->Data[26258];

    AMutator_execModifyZedTime_Parms ModifyZedTime_Parms;

    this->ProcessEvent(pFnModifyZedTime, &ModifyZedTime_Parms, NULL);
};

// Function Engine.Mutator.ModifyActivatedPickupFactory
// [0x00420000]
// Parameters infos:

void AMutator::ModifyActivatedPickupFactory() {
    static UFunction* pFnModifyActivatedPickupFactory = NULL;

    if (!pFnModifyActivatedPickupFactory)
        pFnModifyActivatedPickupFactory =
            (UFunction*)UObject::GObjObjects()->Data[26255];

    AMutator_execModifyActivatedPickupFactory_Parms
        ModifyActivatedPickupFactory_Parms;

    this->ProcessEvent(pFnModifyActivatedPickupFactory,
                       &ModifyActivatedPickupFactory_Parms, NULL);
};

// Function Engine.Mutator.ModifyPickupFactories
// [0x00020000]
// Parameters infos:

void AMutator::ModifyPickupFactories() {
    static UFunction* pFnModifyPickupFactories = NULL;

    if (!pFnModifyPickupFactories)
        pFnModifyPickupFactories =
            (UFunction*)UObject::GObjObjects()->Data[26254];

    AMutator_execModifyPickupFactories_Parms ModifyPickupFactories_Parms;

    this->ProcessEvent(pFnModifyPickupFactories, &ModifyPickupFactories_Parms,
                       NULL);
};

// Function Engine.Mutator.ModifyAIEnemy
// [0x00020000]
// Parameters infos:

void AMutator::ModifyAIEnemy() {
    static UFunction* pFnModifyAIEnemy = NULL;

    if (!pFnModifyAIEnemy)
        pFnModifyAIEnemy = (UFunction*)UObject::GObjObjects()->Data[26251];

    AMutator_execModifyAIEnemy_Parms ModifyAIEnemy_Parms;

    this->ProcessEvent(pFnModifyAIEnemy, &ModifyAIEnemy_Parms, NULL);
};

// Function Engine.Mutator.ModifyAI
// [0x00020000]
// Parameters infos:

void AMutator::ModifyAI() {
    static UFunction* pFnModifyAI = NULL;

    if (!pFnModifyAI)
        pFnModifyAI = (UFunction*)UObject::GObjObjects()->Data[26249];

    AMutator_execModifyAI_Parms ModifyAI_Parms;

    this->ProcessEvent(pFnModifyAI, &ModifyAI_Parms, NULL);
};

// Function Engine.Mutator.ModifyNextTraderIndex
// [0x00420000]
// Parameters infos:

void AMutator::ModifyNextTraderIndex() {
    static UFunction* pFnModifyNextTraderIndex = NULL;

    if (!pFnModifyNextTraderIndex)
        pFnModifyNextTraderIndex =
            (UFunction*)UObject::GObjObjects()->Data[26247];

    AMutator_execModifyNextTraderIndex_Parms ModifyNextTraderIndex_Parms;

    this->ProcessEvent(pFnModifyNextTraderIndex, &ModifyNextTraderIndex_Parms,
                       NULL);
};

// Function Engine.Mutator.NetDamage
// [0x00420002]
// Parameters infos:

void AMutator::NetDamage() {
    static UFunction* pFnNetDamage = NULL;

    if (!pFnNetDamage)
        pFnNetDamage = (UFunction*)UObject::GObjObjects()->Data[26238];

    AMutator_execNetDamage_Parms NetDamage_Parms;

    this->ProcessEvent(pFnNetDamage, &NetDamage_Parms, NULL);
};

// Function Engine.Mutator.ScoreKill
// [0x00020002]
// Parameters infos:

void AMutator::ScoreKill() {
    static UFunction* pFnScoreKill = NULL;

    if (!pFnScoreKill)
        pFnScoreKill = (UFunction*)UObject::GObjObjects()->Data[26235];

    AMutator_execScoreKill_Parms ScoreKill_Parms;

    this->ProcessEvent(pFnScoreKill, &ScoreKill_Parms, NULL);
};

// Function Engine.Mutator.ScoreObjective
// [0x00020002]
// Parameters infos:

void AMutator::ScoreObjective() {
    static UFunction* pFnScoreObjective = NULL;

    if (!pFnScoreObjective)
        pFnScoreObjective = (UFunction*)UObject::GObjObjects()->Data[26232];

    AMutator_execScoreObjective_Parms ScoreObjective_Parms;

    this->ProcessEvent(pFnScoreObjective, &ScoreObjective_Parms, NULL);
};

// Function Engine.Mutator.PreventDeath
// [0x00020002]
// Parameters infos:

void AMutator::PreventDeath() {
    static UFunction* pFnPreventDeath = NULL;

    if (!pFnPreventDeath)
        pFnPreventDeath = (UFunction*)UObject::GObjObjects()->Data[21840];

    AMutator_execPreventDeath_Parms PreventDeath_Parms;

    this->ProcessEvent(pFnPreventDeath, &PreventDeath_Parms, NULL);
};

// Function Engine.Mutator.OverridePickupQuery
// [0x00420002]
// Parameters infos:

void AMutator::OverridePickupQuery() {
    static UFunction* pFnOverridePickupQuery = NULL;

    if (!pFnOverridePickupQuery)
        pFnOverridePickupQuery =
            (UFunction*)UObject::GObjObjects()->Data[21831];

    AMutator_execOverridePickupQuery_Parms OverridePickupQuery_Parms;

    this->ProcessEvent(pFnOverridePickupQuery, &OverridePickupQuery_Parms,
                       NULL);
};

// Function Engine.Mutator.CheckEndGame
// [0x00020002]
// Parameters infos:

void AMutator::CheckEndGame() {
    static UFunction* pFnCheckEndGame = NULL;

    if (!pFnCheckEndGame)
        pFnCheckEndGame = (UFunction*)UObject::GObjObjects()->Data[21824];

    AMutator_execCheckEndGame_Parms CheckEndGame_Parms;

    this->ProcessEvent(pFnCheckEndGame, &CheckEndGame_Parms, NULL);
};

// Function Engine.Mutator.HandleRestartGame
// [0x00020002]
// Parameters infos:

void AMutator::HandleRestartGame() {
    static UFunction* pFnHandleRestartGame = NULL;

    if (!pFnHandleRestartGame)
        pFnHandleRestartGame = (UFunction*)UObject::GObjObjects()->Data[21826];

    AMutator_execHandleRestartGame_Parms HandleRestartGame_Parms;

    this->ProcessEvent(pFnHandleRestartGame, &HandleRestartGame_Parms, NULL);
};

// Function Engine.Mutator.FindPlayerStart
// [0x00024002]
// Parameters infos:

void AMutator::FindPlayerStart() {
    static UFunction* pFnFindPlayerStart = NULL;

    if (!pFnFindPlayerStart)
        pFnFindPlayerStart = (UFunction*)UObject::GObjObjects()->Data[21818];

    AMutator_execFindPlayerStart_Parms FindPlayerStart_Parms;

    this->ProcessEvent(pFnFindPlayerStart, &FindPlayerStart_Parms, NULL);
};

// Function Engine.Mutator.GetSeamlessTravelActorList
// [0x00420002]
// Parameters infos:

void AMutator::GetSeamlessTravelActorList() {
    static UFunction* pFnGetSeamlessTravelActorList = NULL;

    if (!pFnGetSeamlessTravelActorList)
        pFnGetSeamlessTravelActorList =
            (UFunction*)UObject::GObjObjects()->Data[26215];

    AMutator_execGetSeamlessTravelActorList_Parms
        GetSeamlessTravelActorList_Parms;

    this->ProcessEvent(pFnGetSeamlessTravelActorList,
                       &GetSeamlessTravelActorList_Parms, NULL);
};

// Function Engine.Mutator.InitMutator
// [0x00420002]
// Parameters infos:

void AMutator::InitMutator() {
    static UFunction* pFnInitMutator = NULL;

    if (!pFnInitMutator)
        pFnInitMutator = (UFunction*)UObject::GObjObjects()->Data[26212];

    AMutator_execInitMutator_Parms InitMutator_Parms;

    this->ProcessEvent(pFnInitMutator, &InitMutator_Parms, NULL);
};

// Function Engine.Mutator.DriverLeftVehicle
// [0x00020002]
// Parameters infos:

void AMutator::DriverLeftVehicle() {
    static UFunction* pFnDriverLeftVehicle = NULL;

    if (!pFnDriverLeftVehicle)
        pFnDriverLeftVehicle = (UFunction*)UObject::GObjObjects()->Data[26209];

    AMutator_execDriverLeftVehicle_Parms DriverLeftVehicle_Parms;

    this->ProcessEvent(pFnDriverLeftVehicle, &DriverLeftVehicle_Parms, NULL);
};

// Function Engine.Mutator.CanLeaveVehicle
// [0x00020002]
// Parameters infos:

void AMutator::CanLeaveVehicle() {
    static UFunction* pFnCanLeaveVehicle = NULL;

    if (!pFnCanLeaveVehicle)
        pFnCanLeaveVehicle = (UFunction*)UObject::GObjObjects()->Data[21811];

    AMutator_execCanLeaveVehicle_Parms CanLeaveVehicle_Parms;

    this->ProcessEvent(pFnCanLeaveVehicle, &CanLeaveVehicle_Parms, NULL);
};

// Function Engine.Mutator.DriverEnteredVehicle
// [0x00020002]
// Parameters infos:

void AMutator::DriverEnteredVehicle() {
    static UFunction* pFnDriverEnteredVehicle = NULL;

    if (!pFnDriverEnteredVehicle)
        pFnDriverEnteredVehicle =
            (UFunction*)UObject::GObjObjects()->Data[26204];

    AMutator_execDriverEnteredVehicle_Parms DriverEnteredVehicle_Parms;

    this->ProcessEvent(pFnDriverEnteredVehicle, &DriverEnteredVehicle_Parms,
                       NULL);
};

// Function Engine.Mutator.NotifyLogin
// [0x00020002]
// Parameters infos:

void AMutator::NotifyLogin() {
    static UFunction* pFnNotifyLogin = NULL;

    if (!pFnNotifyLogin)
        pFnNotifyLogin = (UFunction*)UObject::GObjObjects()->Data[26202];

    AMutator_execNotifyLogin_Parms NotifyLogin_Parms;

    this->ProcessEvent(pFnNotifyLogin, &NotifyLogin_Parms, NULL);
};

// Function Engine.Mutator.NotifyLogout
// [0x00020002]
// Parameters infos:

void AMutator::NotifyLogout() {
    static UFunction* pFnNotifyLogout = NULL;

    if (!pFnNotifyLogout)
        pFnNotifyLogout = (UFunction*)UObject::GObjObjects()->Data[26200];

    AMutator_execNotifyLogout_Parms NotifyLogout_Parms;

    this->ProcessEvent(pFnNotifyLogout, &NotifyLogout_Parms, NULL);
};

// Function Engine.Mutator.CheckReplacement
// [0x00020002]
// Parameters infos:

void AMutator::CheckReplacement() {
    static UFunction* pFnCheckReplacement = NULL;

    if (!pFnCheckReplacement)
        pFnCheckReplacement = (UFunction*)UObject::GObjObjects()->Data[26197];

    AMutator_execCheckReplacement_Parms CheckReplacement_Parms;

    this->ProcessEvent(pFnCheckReplacement, &CheckReplacement_Parms, NULL);
};

// Function Engine.Mutator.CheckRelevance
// [0x00020002]
// Parameters infos:

void AMutator::CheckRelevance() {
    static UFunction* pFnCheckRelevance = NULL;

    if (!pFnCheckRelevance)
        pFnCheckRelevance = (UFunction*)UObject::GObjObjects()->Data[21835];

    AMutator_execCheckRelevance_Parms CheckRelevance_Parms;

    this->ProcessEvent(pFnCheckRelevance, &CheckRelevance_Parms, NULL);
};

// Function Engine.Mutator.IsRelevant
// [0x00020002]
// Parameters infos:

void AMutator::IsRelevant() {
    static UFunction* pFnIsRelevant = NULL;

    if (!pFnIsRelevant)
        pFnIsRelevant = (UFunction*)UObject::GObjObjects()->Data[26191];

    AMutator_execIsRelevant_Parms IsRelevant_Parms;

    this->ProcessEvent(pFnIsRelevant, &IsRelevant_Parms, NULL);
};

// Function Engine.Mutator.AlwaysKeep
// [0x00020002]
// Parameters infos:

void AMutator::AlwaysKeep() {
    static UFunction* pFnAlwaysKeep = NULL;

    if (!pFnAlwaysKeep)
        pFnAlwaysKeep = (UFunction*)UObject::GObjObjects()->Data[26188];

    AMutator_execAlwaysKeep_Parms AlwaysKeep_Parms;

    this->ProcessEvent(pFnAlwaysKeep, &AlwaysKeep_Parms, NULL);
};

// Function Engine.Mutator.AddMutator
// [0x00020002]
// Parameters infos:

void AMutator::AddMutator() {
    static UFunction* pFnAddMutator = NULL;

    if (!pFnAddMutator)
        pFnAddMutator = (UFunction*)UObject::GObjObjects()->Data[26186];

    AMutator_execAddMutator_Parms AddMutator_Parms;

    this->ProcessEvent(pFnAddMutator, &AddMutator_Parms, NULL);
};

// Function Engine.Mutator.ModifyPlayer
// [0x00020002]
// Parameters infos:

void AMutator::ModifyPlayer() {
    static UFunction* pFnModifyPlayer = NULL;

    if (!pFnModifyPlayer)
        pFnModifyPlayer = (UFunction*)UObject::GObjObjects()->Data[26184];

    AMutator_execModifyPlayer_Parms ModifyPlayer_Parms;

    this->ProcessEvent(pFnModifyPlayer, &ModifyPlayer_Parms, NULL);
};

// Function Engine.Mutator.ModifyLogin
// [0x00420002]
// Parameters infos:

void AMutator::ModifyLogin() {
    static UFunction* pFnModifyLogin = NULL;

    if (!pFnModifyLogin)
        pFnModifyLogin = (UFunction*)UObject::GObjObjects()->Data[26181];

    AMutator_execModifyLogin_Parms ModifyLogin_Parms;

    this->ProcessEvent(pFnModifyLogin, &ModifyLogin_Parms, NULL);
};

// Function Engine.Mutator.Mutate
// [0x00020002]
// Parameters infos:

void AMutator::Mutate() {
    static UFunction* pFnMutate = NULL;

    if (!pFnMutate) pFnMutate = (UFunction*)UObject::GObjObjects()->Data[26178];

    AMutator_execMutate_Parms Mutate_Parms;

    this->ProcessEvent(pFnMutate, &Mutate_Parms, NULL);
};

// Function Engine.Mutator.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AMutator::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[26177];

    AMutator_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Mutator.MutatorIsAllowed
// [0x00020002]
// Parameters infos:

void AMutator::MutatorIsAllowed() {
    static UFunction* pFnMutatorIsAllowed = NULL;

    if (!pFnMutatorIsAllowed)
        pFnMutatorIsAllowed = (UFunction*)UObject::GObjObjects()->Data[26175];

    AMutator_execMutatorIsAllowed_Parms MutatorIsAllowed_Parms;

    this->ProcessEvent(pFnMutatorIsAllowed, &MutatorIsAllowed_Parms, NULL);
};

// Function Engine.Mutator.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AMutator::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[26174];

    AMutator_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.PotentialClimbWatcher.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void APotentialClimbWatcher::eventTick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[31938];

    APotentialClimbWatcher_eventTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.Route.MoveOntoRoutePath
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ARoute::MoveOntoRoutePath() {
    static UFunction* pFnMoveOntoRoutePath = NULL;

    if (!pFnMoveOntoRoutePath)
        pFnMoveOntoRoutePath = (UFunction*)UObject::GObjObjects()->Data[32546];

    ARoute_execMoveOntoRoutePath_Parms MoveOntoRoutePath_Parms;

    pFnMoveOntoRoutePath->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveOntoRoutePath, &MoveOntoRoutePath_Parms, NULL);

    pFnMoveOntoRoutePath->FunctionFlags |= 0x400;
};

// Function Engine.Route.ResolveRouteIndex
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ARoute::ResolveRouteIndex() {
    static UFunction* pFnResolveRouteIndex = NULL;

    if (!pFnResolveRouteIndex)
        pFnResolveRouteIndex = (UFunction*)UObject::GObjObjects()->Data[32540];

    ARoute_execResolveRouteIndex_Parms ResolveRouteIndex_Parms;

    pFnResolveRouteIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResolveRouteIndex, &ResolveRouteIndex_Parms, NULL);

    pFnResolveRouteIndex->FunctionFlags |= 0x400;
};

// Function Engine.Inventory.GetLocalString
// [0x00026002]
// Parameters infos:

void AInventory::GetLocalString() {
    static UFunction* pFnGetLocalString = NULL;

    if (!pFnGetLocalString)
        pFnGetLocalString = (UFunction*)UObject::GObjObjects()->Data[23934];

    AInventory_execGetLocalString_Parms GetLocalString_Parms;

    this->ProcessEvent(pFnGetLocalString, &GetLocalString_Parms, NULL);
};

// Function Engine.Inventory.DropFrom
// [0x00020002]
// Parameters infos:

void AInventory::DropFrom() {
    static UFunction* pFnDropFrom = NULL;

    if (!pFnDropFrom)
        pFnDropFrom = (UFunction*)UObject::GObjObjects()->Data[23930];

    AInventory_execDropFrom_Parms DropFrom_Parms;

    this->ProcessEvent(pFnDropFrom, &DropFrom_Parms, NULL);
};

// Function Engine.Inventory.DenyPickupQuery
// [0x00020002]
// Parameters infos:

void AInventory::DenyPickupQuery() {
    static UFunction* pFnDenyPickupQuery = NULL;

    if (!pFnDenyPickupQuery)
        pFnDenyPickupQuery = (UFunction*)UObject::GObjObjects()->Data[23926];

    AInventory_execDenyPickupQuery_Parms DenyPickupQuery_Parms;

    this->ProcessEvent(pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL);
};

// Function Engine.Inventory.ItemRemovedFromInvManager
// [0x00020000]
// Parameters infos:

void AInventory::ItemRemovedFromInvManager() {
    static UFunction* pFnItemRemovedFromInvManager = NULL;

    if (!pFnItemRemovedFromInvManager)
        pFnItemRemovedFromInvManager =
            (UFunction*)UObject::GObjObjects()->Data[23925];

    AInventory_execItemRemovedFromInvManager_Parms
        ItemRemovedFromInvManager_Parms;

    this->ProcessEvent(pFnItemRemovedFromInvManager,
                       &ItemRemovedFromInvManager_Parms, NULL);
};

// Function Engine.Inventory.ClientGivenTo
// [0x010201C2]
// Parameters infos:

void AInventory::ClientGivenTo() {
    static UFunction* pFnClientGivenTo = NULL;

    if (!pFnClientGivenTo)
        pFnClientGivenTo = (UFunction*)UObject::GObjObjects()->Data[23922];

    AInventory_execClientGivenTo_Parms ClientGivenTo_Parms;

    this->ProcessEvent(pFnClientGivenTo, &ClientGivenTo_Parms, NULL);
};

// Function Engine.Inventory.GivenTo
// [0x00024002]
// Parameters infos:

void AInventory::GivenTo() {
    static UFunction* pFnGivenTo = NULL;

    if (!pFnGivenTo)
        pFnGivenTo = (UFunction*)UObject::GObjObjects()->Data[23919];

    AInventory_execGivenTo_Parms GivenTo_Parms;

    this->ProcessEvent(pFnGivenTo, &GivenTo_Parms, NULL);
};

// Function Engine.Inventory.AnnouncePickup
// [0x00020002]
// Parameters infos:

void AInventory::AnnouncePickup() {
    static UFunction* pFnAnnouncePickup = NULL;

    if (!pFnAnnouncePickup)
        pFnAnnouncePickup = (UFunction*)UObject::GObjObjects()->Data[23917];

    AInventory_execAnnouncePickup_Parms AnnouncePickup_Parms;

    this->ProcessEvent(pFnAnnouncePickup, &AnnouncePickup_Parms, NULL);
};

// Function Engine.Inventory.GiveTo
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void AInventory::GiveTo() {
    static UFunction* pFnGiveTo = NULL;

    if (!pFnGiveTo) pFnGiveTo = (UFunction*)UObject::GObjObjects()->Data[18587];

    AInventory_execGiveTo_Parms GiveTo_Parms;

    this->ProcessEvent(pFnGiveTo, &GiveTo_Parms, NULL);
};

// Function Engine.Inventory.DetourWeight
// [0x00022002]
// Parameters infos:

void AInventory::DetourWeight() {
    static UFunction* pFnDetourWeight = NULL;

    if (!pFnDetourWeight)
        pFnDetourWeight = (UFunction*)UObject::GObjObjects()->Data[18588];

    AInventory_execDetourWeight_Parms DetourWeight_Parms;

    this->ProcessEvent(pFnDetourWeight, &DetourWeight_Parms, NULL);
};

// Function Engine.Inventory.BotDesireability
// [0x00022002]
// Parameters infos:

void AInventory::BotDesireability() {
    static UFunction* pFnBotDesireability = NULL;

    if (!pFnBotDesireability)
        pFnBotDesireability = (UFunction*)UObject::GObjObjects()->Data[23907];

    AInventory_execBotDesireability_Parms BotDesireability_Parms;

    this->ProcessEvent(pFnBotDesireability, &BotDesireability_Parms, NULL);
};

// Function Engine.Inventory.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AInventory::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[23906];

    AInventory_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Inventory.GetHumanReadableName
// [0x00020102]
// Parameters infos:

void AInventory::GetHumanReadableName() {
    static UFunction* pFnGetHumanReadableName = NULL;

    if (!pFnGetHumanReadableName)
        pFnGetHumanReadableName =
            (UFunction*)UObject::GObjObjects()->Data[23904];

    AInventory_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

    this->ProcessEvent(pFnGetHumanReadableName, &GetHumanReadableName_Parms,
                       NULL);
};

// Function Engine.Weapon.SetMeshLightingChannels
// [0x00020100]
// Parameters infos:

void AWeapon::SetMeshLightingChannels() {
    static UFunction* pFnSetMeshLightingChannels = NULL;

    if (!pFnSetMeshLightingChannels)
        pFnSetMeshLightingChannels =
            (UFunction*)UObject::GObjObjects()->Data[37033];

    AWeapon_execSetMeshLightingChannels_Parms SetMeshLightingChannels_Parms;

    this->ProcessEvent(pFnSetMeshLightingChannels,
                       &SetMeshLightingChannels_Parms, NULL);
};

// Function Engine.Weapon.GetTargetDistance
// [0x00820102]
// Parameters infos:

void AWeapon::GetTargetDistance() {
    static UFunction* pFnGetTargetDistance = NULL;

    if (!pFnGetTargetDistance)
        pFnGetTargetDistance = (UFunction*)UObject::GObjObjects()->Data[37021];

    AWeapon_execGetTargetDistance_Parms GetTargetDistance_Parms;

    this->ProcessEvent(pFnGetTargetDistance, &GetTargetDistance_Parms, NULL);
};

// Function Engine.Weapon.CacheAIController
// [0x00020102]
// Parameters infos:

void AWeapon::CacheAIController() {
    static UFunction* pFnCacheAIController = NULL;

    if (!pFnCacheAIController)
        pFnCacheAIController = (UFunction*)UObject::GObjObjects()->Data[37020];

    AWeapon_execCacheAIController_Parms CacheAIController_Parms;

    this->ProcessEvent(pFnCacheAIController, &CacheAIController_Parms, NULL);
};

// Function Engine.Weapon.WeaponIsDown
// [0x00020100]
// Parameters infos:

void AWeapon::WeaponIsDown() {
    static UFunction* pFnWeaponIsDown = NULL;

    if (!pFnWeaponIsDown)
        pFnWeaponIsDown = (UFunction*)UObject::GObjObjects()->Data[37013];

    AWeapon_execWeaponIsDown_Parms WeaponIsDown_Parms;

    this->ProcessEvent(pFnWeaponIsDown, &WeaponIsDown_Parms, NULL);
};

// Function Engine.Weapon.StillFiring
// [0x00020102]
// Parameters infos:

void AWeapon::StillFiring() {
    static UFunction* pFnStillFiring = NULL;

    if (!pFnStillFiring)
        pFnStillFiring = (UFunction*)UObject::GObjObjects()->Data[36994];

    AWeapon_execStillFiring_Parms StillFiring_Parms;

    this->ProcessEvent(pFnStillFiring, &StillFiring_Parms, NULL);
};

// Function Engine.Weapon.ShouldRefire
// [0x00020102]
// Parameters infos:

void AWeapon::ShouldRefire() {
    static UFunction* pFnShouldRefire = NULL;

    if (!pFnShouldRefire)
        pFnShouldRefire = (UFunction*)UObject::GObjObjects()->Data[36992];

    AWeapon_execShouldRefire_Parms ShouldRefire_Parms;

    this->ProcessEvent(pFnShouldRefire, &ShouldRefire_Parms, NULL);
};

// Function Engine.Weapon.NotifyWeaponFinishedFiring
// [0x00020002]
// Parameters infos:

void AWeapon::NotifyWeaponFinishedFiring() {
    static UFunction* pFnNotifyWeaponFinishedFiring = NULL;

    if (!pFnNotifyWeaponFinishedFiring)
        pFnNotifyWeaponFinishedFiring =
            (UFunction*)UObject::GObjObjects()->Data[36990];

    AWeapon_execNotifyWeaponFinishedFiring_Parms
        NotifyWeaponFinishedFiring_Parms;

    this->ProcessEvent(pFnNotifyWeaponFinishedFiring,
                       &NotifyWeaponFinishedFiring_Parms, NULL);
};

// Function Engine.Weapon.NotifyWeaponFired
// [0x00020002]
// Parameters infos:

void AWeapon::NotifyWeaponFired() {
    static UFunction* pFnNotifyWeaponFired = NULL;

    if (!pFnNotifyWeaponFired)
        pFnNotifyWeaponFired = (UFunction*)UObject::GObjObjects()->Data[36988];

    AWeapon_execNotifyWeaponFired_Parms NotifyWeaponFired_Parms;

    this->ProcessEvent(pFnNotifyWeaponFired, &NotifyWeaponFired_Parms, NULL);
};

// Function Engine.Weapon.HandleFinishedFiring
// [0x00020102]
// Parameters infos:

void AWeapon::HandleFinishedFiring() {
    static UFunction* pFnHandleFinishedFiring = NULL;

    if (!pFnHandleFinishedFiring)
        pFnHandleFinishedFiring =
            (UFunction*)UObject::GObjObjects()->Data[36987];

    AWeapon_execHandleFinishedFiring_Parms HandleFinishedFiring_Parms;

    this->ProcessEvent(pFnHandleFinishedFiring, &HandleFinishedFiring_Parms,
                       NULL);
};

// Function Engine.Weapon.CanProcessPendingFire
// [0x00020102]
// Parameters infos:

void AWeapon::CanProcessPendingFire() {
    static UFunction* pFnCanProcessPendingFire = NULL;

    if (!pFnCanProcessPendingFire)
        pFnCanProcessPendingFire =
            (UFunction*)UObject::GObjObjects()->Data[36963];

    AWeapon_execCanProcessPendingFire_Parms CanProcessPendingFire_Parms;

    this->ProcessEvent(pFnCanProcessPendingFire, &CanProcessPendingFire_Parms,
                       NULL);
};

// Function Engine.Weapon.TryPutDown
// [0x00020102]
// Parameters infos:

void AWeapon::TryPutDown() {
    static UFunction* pFnTryPutDown = NULL;

    if (!pFnTryPutDown)
        pFnTryPutDown = (UFunction*)UObject::GObjObjects()->Data[24049];

    AWeapon_execTryPutDown_Parms TryPutDown_Parms;

    this->ProcessEvent(pFnTryPutDown, &TryPutDown_Parms, NULL);
};

// Function Engine.Weapon.GetPhysicalFireStartLoc
// [0x00024D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AWeapon::eventGetPhysicalFireStartLoc() {
    static UFunction* pFnGetPhysicalFireStartLoc = NULL;

    if (!pFnGetPhysicalFireStartLoc)
        pFnGetPhysicalFireStartLoc =
            (UFunction*)UObject::GObjObjects()->Data[36949];

    AWeapon_eventGetPhysicalFireStartLoc_Parms GetPhysicalFireStartLoc_Parms;

    pFnGetPhysicalFireStartLoc->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPhysicalFireStartLoc,
                       &GetPhysicalFireStartLoc_Parms, NULL);

    pFnGetPhysicalFireStartLoc->FunctionFlags |= 0x400;
};

// Function Engine.Weapon.GetMuzzleLoc
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWeapon::eventGetMuzzleLoc() {
    static UFunction* pFnGetMuzzleLoc = NULL;

    if (!pFnGetMuzzleLoc)
        pFnGetMuzzleLoc = (UFunction*)UObject::GObjObjects()->Data[36947];

    AWeapon_eventGetMuzzleLoc_Parms GetMuzzleLoc_Parms;

    this->ProcessEvent(pFnGetMuzzleLoc, &GetMuzzleLoc_Parms, NULL);
};

// Function Engine.Weapon.CustomFire
// [0x00020100]
// Parameters infos:

void AWeapon::CustomFire() {
    static UFunction* pFnCustomFire = NULL;

    if (!pFnCustomFire)
        pFnCustomFire = (UFunction*)UObject::GObjObjects()->Data[36946];

    AWeapon_execCustomFire_Parms CustomFire_Parms;

    this->ProcessEvent(pFnCustomFire, &CustomFire_Parms, NULL);
};

// Function Engine.Weapon.ProjectileFire
// [0x00820102]
// Parameters infos:

void AWeapon::ProjectileFire() {
    static UFunction* pFnProjectileFire = NULL;

    if (!pFnProjectileFire)
        pFnProjectileFire = (UFunction*)UObject::GObjObjects()->Data[36938];

    AWeapon_execProjectileFire_Parms ProjectileFire_Parms;

    this->ProcessEvent(pFnProjectileFire, &ProjectileFire_Parms, NULL);
};

// Function Engine.Weapon.ProcessInstantHit
// [0x00024102]
// Parameters infos:

void AWeapon::ProcessInstantHit() {
    static UFunction* pFnProcessInstantHit = NULL;

    if (!pFnProcessInstantHit)
        pFnProcessInstantHit = (UFunction*)UObject::GObjObjects()->Data[36931];

    AWeapon_execProcessInstantHit_Parms ProcessInstantHit_Parms;

    this->ProcessEvent(pFnProcessInstantHit, &ProcessInstantHit_Parms, NULL);
};

// Function Engine.Weapon.InstantFire
// [0x00820102]
// Parameters infos:

void AWeapon::InstantFire() {
    static UFunction* pFnInstantFire = NULL;

    if (!pFnInstantFire)
        pFnInstantFire = (UFunction*)UObject::GObjObjects()->Data[36924];

    AWeapon_execInstantFire_Parms InstantFire_Parms;

    this->ProcessEvent(pFnInstantFire, &InstantFire_Parms, NULL);
};

// Function Engine.Weapon.PassThroughDamage
// [0x00020102]
// Parameters infos:

void AWeapon::PassThroughDamage() {
    static UFunction* pFnPassThroughDamage = NULL;

    if (!pFnPassThroughDamage)
        pFnPassThroughDamage = (UFunction*)UObject::GObjObjects()->Data[36921];

    AWeapon_execPassThroughDamage_Parms PassThroughDamage_Parms;

    this->ProcessEvent(pFnPassThroughDamage, &PassThroughDamage_Parms, NULL);
};

// Function Engine.Weapon.CalcWeaponFire
// [0x00C24102]
// Parameters infos:

void AWeapon::CalcWeaponFire() {
    static UFunction* pFnCalcWeaponFire = NULL;

    if (!pFnCalcWeaponFire)
        pFnCalcWeaponFire = (UFunction*)UObject::GObjObjects()->Data[36904];

    AWeapon_execCalcWeaponFire_Parms CalcWeaponFire_Parms;

    this->ProcessEvent(pFnCalcWeaponFire, &CalcWeaponFire_Parms, NULL);
};

// Function Engine.Weapon.GetTraceOwner
// [0x00020102]
// Parameters infos:

void AWeapon::GetTraceOwner() {
    static UFunction* pFnGetTraceOwner = NULL;

    if (!pFnGetTraceOwner)
        pFnGetTraceOwner = (UFunction*)UObject::GObjObjects()->Data[36902];

    AWeapon_execGetTraceOwner_Parms GetTraceOwner_Parms;

    this->ProcessEvent(pFnGetTraceOwner, &GetTraceOwner_Parms, NULL);
};

// Function Engine.Weapon.GetTraceRange
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWeapon::eventGetTraceRange() {
    static UFunction* pFnGetTraceRange = NULL;

    if (!pFnGetTraceRange)
        pFnGetTraceRange = (UFunction*)UObject::GObjObjects()->Data[12449];

    AWeapon_eventGetTraceRange_Parms GetTraceRange_Parms;

    this->ProcessEvent(pFnGetTraceRange, &GetTraceRange_Parms, NULL);
};

// Function Engine.Weapon.GetAdjustedAim
// [0x00820102]
// Parameters infos:

void AWeapon::GetAdjustedAim() {
    static UFunction* pFnGetAdjustedAim = NULL;

    if (!pFnGetAdjustedAim)
        pFnGetAdjustedAim = (UFunction*)UObject::GObjObjects()->Data[36898];

    AWeapon_execGetAdjustedAim_Parms GetAdjustedAim_Parms;

    this->ProcessEvent(pFnGetAdjustedAim, &GetAdjustedAim_Parms, NULL);
};

// Function Engine.Weapon.FireAmmunition
// [0x00020102]
// Parameters infos:

void AWeapon::FireAmmunition() {
    static UFunction* pFnFireAmmunition = NULL;

    if (!pFnFireAmmunition)
        pFnFireAmmunition = (UFunction*)UObject::GObjObjects()->Data[36897];

    AWeapon_execFireAmmunition_Parms FireAmmunition_Parms;

    this->ProcessEvent(pFnFireAmmunition, &FireAmmunition_Parms, NULL);
};

// Function Engine.Weapon.FireModeUpdated
// [0x00020100]
// Parameters infos:

void AWeapon::FireModeUpdated() {
    static UFunction* pFnFireModeUpdated = NULL;

    if (!pFnFireModeUpdated)
        pFnFireModeUpdated = (UFunction*)UObject::GObjObjects()->Data[36894];

    AWeapon_execFireModeUpdated_Parms FireModeUpdated_Parms;

    this->ProcessEvent(pFnFireModeUpdated, &FireModeUpdated_Parms, NULL);
};

// Function Engine.Weapon.SetCurrentFireMode
// [0x00020102]
// Parameters infos:

void AWeapon::SetCurrentFireMode() {
    static UFunction* pFnSetCurrentFireMode = NULL;

    if (!pFnSetCurrentFireMode)
        pFnSetCurrentFireMode = (UFunction*)UObject::GObjObjects()->Data[36892];

    AWeapon_execSetCurrentFireMode_Parms SetCurrentFireMode_Parms;

    this->ProcessEvent(pFnSetCurrentFireMode, &SetCurrentFireMode_Parms, NULL);
};

// Function Engine.Weapon.SendToFiringState
// [0x00020102]
// Parameters infos:

void AWeapon::SendToFiringState() {
    static UFunction* pFnSendToFiringState = NULL;

    if (!pFnSendToFiringState)
        pFnSendToFiringState = (UFunction*)UObject::GObjObjects()->Data[36890];

    AWeapon_execSendToFiringState_Parms SendToFiringState_Parms;

    this->ProcessEvent(pFnSendToFiringState, &SendToFiringState_Parms, NULL);
};

// Function Engine.Weapon.ForceEndFire
// [0x00020102]
// Parameters infos:

void AWeapon::ForceEndFire() {
    static UFunction* pFnForceEndFire = NULL;

    if (!pFnForceEndFire)
        pFnForceEndFire = (UFunction*)UObject::GObjObjects()->Data[36887];

    AWeapon_execForceEndFire_Parms ForceEndFire_Parms;

    this->ProcessEvent(pFnForceEndFire, &ForceEndFire_Parms, NULL);
};

// Function Engine.Weapon.EndFire
// [0x00020102]
// Parameters infos:

void AWeapon::EndFire() {
    static UFunction* pFnEndFire = NULL;

    if (!pFnEndFire)
        pFnEndFire = (UFunction*)UObject::GObjObjects()->Data[36885];

    AWeapon_execEndFire_Parms EndFire_Parms;

    this->ProcessEvent(pFnEndFire, &EndFire_Parms, NULL);
};

// Function Engine.Weapon.ServerStopFire
// [0x002200C2]
// Parameters infos:

void AWeapon::ServerStopFire() {
    static UFunction* pFnServerStopFire = NULL;

    if (!pFnServerStopFire)
        pFnServerStopFire = (UFunction*)UObject::GObjObjects()->Data[36883];

    AWeapon_execServerStopFire_Parms ServerStopFire_Parms;

    this->ProcessEvent(pFnServerStopFire, &ServerStopFire_Parms, NULL);
};

// Function Engine.Weapon.StopFire
// [0x00020102]
// Parameters infos:

void AWeapon::StopFire() {
    static UFunction* pFnStopFire = NULL;

    if (!pFnStopFire)
        pFnStopFire = (UFunction*)UObject::GObjObjects()->Data[36881];

    AWeapon_execStopFire_Parms StopFire_Parms;

    this->ProcessEvent(pFnStopFire, &StopFire_Parms, NULL);
};

// Function Engine.Weapon.BeginFire
// [0x00020102]
// Parameters infos:

void AWeapon::BeginFire() {
    static UFunction* pFnBeginFire = NULL;

    if (!pFnBeginFire)
        pFnBeginFire = (UFunction*)UObject::GObjObjects()->Data[36879];

    AWeapon_execBeginFire_Parms BeginFire_Parms;

    this->ProcessEvent(pFnBeginFire, &BeginFire_Parms, NULL);
};

// Function Engine.Weapon.ServerStartFire
// [0x002200C2]
// Parameters infos:

void AWeapon::ServerStartFire() {
    static UFunction* pFnServerStartFire = NULL;

    if (!pFnServerStartFire)
        pFnServerStartFire = (UFunction*)UObject::GObjObjects()->Data[36877];

    AWeapon_execServerStartFire_Parms ServerStartFire_Parms;

    this->ProcessEvent(pFnServerStartFire, &ServerStartFire_Parms, NULL);
};

// Function Engine.Weapon.StartFire
// [0x00020102]
// Parameters infos:

void AWeapon::StartFire() {
    static UFunction* pFnStartFire = NULL;

    if (!pFnStartFire)
        pFnStartFire = (UFunction*)UObject::GObjObjects()->Data[36875];

    AWeapon_execStartFire_Parms StartFire_Parms;

    this->ProcessEvent(pFnStartFire, &StartFire_Parms, NULL);
};

// Function Engine.Weapon.ClientWeaponSet
// [0x010241C2]
// Parameters infos:

void AWeapon::ClientWeaponSet() {
    static UFunction* pFnClientWeaponSet = NULL;

    if (!pFnClientWeaponSet)
        pFnClientWeaponSet = (UFunction*)UObject::GObjObjects()->Data[36872];

    AWeapon_execClientWeaponSet_Parms ClientWeaponSet_Parms;

    this->ProcessEvent(pFnClientWeaponSet, &ClientWeaponSet_Parms, NULL);
};

// Function Engine.Weapon.ClientGivenTo
// [0x010201C2]
// Parameters infos:

void AWeapon::ClientGivenTo() {
    static UFunction* pFnClientGivenTo = NULL;

    if (!pFnClientGivenTo)
        pFnClientGivenTo = (UFunction*)UObject::GObjObjects()->Data[36869];

    AWeapon_execClientGivenTo_Parms ClientGivenTo_Parms;

    this->ProcessEvent(pFnClientGivenTo, &ClientGivenTo_Parms, NULL);
};

// Function Engine.Weapon.DetachWeapon
// [0x00020100]
// Parameters infos:

void AWeapon::DetachWeapon() {
    static UFunction* pFnDetachWeapon = NULL;

    if (!pFnDetachWeapon)
        pFnDetachWeapon = (UFunction*)UObject::GObjObjects()->Data[36868];

    AWeapon_execDetachWeapon_Parms DetachWeapon_Parms;

    this->ProcessEvent(pFnDetachWeapon, &DetachWeapon_Parms, NULL);
};

// Function Engine.Weapon.AttachWeaponTo
// [0x00024100]
// Parameters infos:

void AWeapon::AttachWeaponTo() {
    static UFunction* pFnAttachWeaponTo = NULL;

    if (!pFnAttachWeaponTo)
        pFnAttachWeaponTo = (UFunction*)UObject::GObjObjects()->Data[36865];

    AWeapon_execAttachWeaponTo_Parms AttachWeaponTo_Parms;

    this->ProcessEvent(pFnAttachWeaponTo, &AttachWeaponTo_Parms, NULL);
};

// Function Engine.Weapon.ClearFlashLocation
// [0x00020002]
// Parameters infos:

void AWeapon::ClearFlashLocation() {
    static UFunction* pFnClearFlashLocation = NULL;

    if (!pFnClearFlashLocation)
        pFnClearFlashLocation = (UFunction*)UObject::GObjObjects()->Data[36864];

    AWeapon_execClearFlashLocation_Parms ClearFlashLocation_Parms;

    this->ProcessEvent(pFnClearFlashLocation, &ClearFlashLocation_Parms, NULL);
};

// Function Engine.Weapon.SetFlashLocation
// [0x00020002]
// Parameters infos:

void AWeapon::SetFlashLocation() {
    static UFunction* pFnSetFlashLocation = NULL;

    if (!pFnSetFlashLocation)
        pFnSetFlashLocation = (UFunction*)UObject::GObjObjects()->Data[36862];

    AWeapon_execSetFlashLocation_Parms SetFlashLocation_Parms;

    this->ProcessEvent(pFnSetFlashLocation, &SetFlashLocation_Parms, NULL);
};

// Function Engine.Weapon.ClearFlashCount
// [0x00020102]
// Parameters infos:

void AWeapon::ClearFlashCount() {
    static UFunction* pFnClearFlashCount = NULL;

    if (!pFnClearFlashCount)
        pFnClearFlashCount = (UFunction*)UObject::GObjObjects()->Data[36861];

    AWeapon_execClearFlashCount_Parms ClearFlashCount_Parms;

    this->ProcessEvent(pFnClearFlashCount, &ClearFlashCount_Parms, NULL);
};

// Function Engine.Weapon.IncrementFlashCount
// [0x00020102]
// Parameters infos:

void AWeapon::IncrementFlashCount() {
    static UFunction* pFnIncrementFlashCount = NULL;

    if (!pFnIncrementFlashCount)
        pFnIncrementFlashCount =
            (UFunction*)UObject::GObjObjects()->Data[36860];

    AWeapon_execIncrementFlashCount_Parms IncrementFlashCount_Parms;

    this->ProcessEvent(pFnIncrementFlashCount, &IncrementFlashCount_Parms,
                       NULL);
};

// Function Engine.Weapon.WeaponEmpty
// [0x00020100]
// Parameters infos:

void AWeapon::WeaponEmpty() {
    static UFunction* pFnWeaponEmpty = NULL;

    if (!pFnWeaponEmpty)
        pFnWeaponEmpty = (UFunction*)UObject::GObjObjects()->Data[36859];

    AWeapon_execWeaponEmpty_Parms WeaponEmpty_Parms;

    this->ProcessEvent(pFnWeaponEmpty, &WeaponEmpty_Parms, NULL);
};

// Function Engine.Weapon.DenyPickupQuery
// [0x00020002]
// Parameters infos:

void AWeapon::DenyPickupQuery() {
    static UFunction* pFnDenyPickupQuery = NULL;

    if (!pFnDenyPickupQuery)
        pFnDenyPickupQuery = (UFunction*)UObject::GObjObjects()->Data[36855];

    AWeapon_execDenyPickupQuery_Parms DenyPickupQuery_Parms;

    this->ProcessEvent(pFnDenyPickupQuery, &DenyPickupQuery_Parms, NULL);
};

// Function Engine.Weapon.PutDownWeapon
// [0x00020102]
// Parameters infos:

void AWeapon::PutDownWeapon() {
    static UFunction* pFnPutDownWeapon = NULL;

    if (!pFnPutDownWeapon)
        pFnPutDownWeapon = (UFunction*)UObject::GObjObjects()->Data[36854];

    AWeapon_execPutDownWeapon_Parms PutDownWeapon_Parms;

    this->ProcessEvent(pFnPutDownWeapon, &PutDownWeapon_Parms, NULL);
};

// Function Engine.Weapon.Activate
// [0x00020102]
// Parameters infos:

void AWeapon::Activate() {
    static UFunction* pFnActivate = NULL;

    if (!pFnActivate)
        pFnActivate = (UFunction*)UObject::GObjObjects()->Data[36853];

    AWeapon_execActivate_Parms Activate_Parms;

    this->ProcessEvent(pFnActivate, &Activate_Parms, NULL);
};

// Function Engine.Weapon.TimeWeaponEquipping
// [0x00020102]
// Parameters infos:

void AWeapon::TimeWeaponEquipping() {
    static UFunction* pFnTimeWeaponEquipping = NULL;

    if (!pFnTimeWeaponEquipping)
        pFnTimeWeaponEquipping =
            (UFunction*)UObject::GObjObjects()->Data[36852];

    AWeapon_execTimeWeaponEquipping_Parms TimeWeaponEquipping_Parms;

    this->ProcessEvent(pFnTimeWeaponEquipping, &TimeWeaponEquipping_Parms,
                       NULL);
};

// Function Engine.Weapon.TimeWeaponPutDown
// [0x00020102]
// Parameters infos:

void AWeapon::TimeWeaponPutDown() {
    static UFunction* pFnTimeWeaponPutDown = NULL;

    if (!pFnTimeWeaponPutDown)
        pFnTimeWeaponPutDown = (UFunction*)UObject::GObjObjects()->Data[36851];

    AWeapon_execTimeWeaponPutDown_Parms TimeWeaponPutDown_Parms;

    this->ProcessEvent(pFnTimeWeaponPutDown, &TimeWeaponPutDown_Parms, NULL);
};

// Function Engine.Weapon.RefireCheckTimer
// [0x00020100]
// Parameters infos:

void AWeapon::RefireCheckTimer() {
    static UFunction* pFnRefireCheckTimer = NULL;

    if (!pFnRefireCheckTimer)
        pFnRefireCheckTimer = (UFunction*)UObject::GObjObjects()->Data[36850];

    AWeapon_execRefireCheckTimer_Parms RefireCheckTimer_Parms;

    this->ProcessEvent(pFnRefireCheckTimer, &RefireCheckTimer_Parms, NULL);
};

// Function Engine.Weapon.TimeWeaponFiring
// [0x00020102]
// Parameters infos:

void AWeapon::TimeWeaponFiring() {
    static UFunction* pFnTimeWeaponFiring = NULL;

    if (!pFnTimeWeaponFiring)
        pFnTimeWeaponFiring = (UFunction*)UObject::GObjObjects()->Data[36848];

    AWeapon_execTimeWeaponFiring_Parms TimeWeaponFiring_Parms;

    this->ProcessEvent(pFnTimeWeaponFiring, &TimeWeaponFiring_Parms, NULL);
};

// Function Engine.Weapon.GetFireInterval
// [0x00020102]
// Parameters infos:

void AWeapon::GetFireInterval() {
    static UFunction* pFnGetFireInterval = NULL;

    if (!pFnGetFireInterval)
        pFnGetFireInterval = (UFunction*)UObject::GObjObjects()->Data[36845];

    AWeapon_execGetFireInterval_Parms GetFireInterval_Parms;

    this->ProcessEvent(pFnGetFireInterval, &GetFireInterval_Parms, NULL);
};

// Function Engine.Weapon.StopFireEffects
// [0x00020100]
// Parameters infos:

void AWeapon::StopFireEffects() {
    static UFunction* pFnStopFireEffects = NULL;

    if (!pFnStopFireEffects)
        pFnStopFireEffects = (UFunction*)UObject::GObjObjects()->Data[36843];

    AWeapon_execStopFireEffects_Parms StopFireEffects_Parms;

    this->ProcessEvent(pFnStopFireEffects, &StopFireEffects_Parms, NULL);
};

// Function Engine.Weapon.PlayFireEffects
// [0x00024100]
// Parameters infos:

void AWeapon::PlayFireEffects() {
    static UFunction* pFnPlayFireEffects = NULL;

    if (!pFnPlayFireEffects)
        pFnPlayFireEffects = (UFunction*)UObject::GObjObjects()->Data[36840];

    AWeapon_execPlayFireEffects_Parms PlayFireEffects_Parms;

    this->ProcessEvent(pFnPlayFireEffects, &PlayFireEffects_Parms, NULL);
};

// Function Engine.Weapon.StopWeaponAnimation
// [0x00020102]
// Parameters infos:

void AWeapon::StopWeaponAnimation() {
    static UFunction* pFnStopWeaponAnimation = NULL;

    if (!pFnStopWeaponAnimation)
        pFnStopWeaponAnimation =
            (UFunction*)UObject::GObjObjects()->Data[36838];

    AWeapon_execStopWeaponAnimation_Parms StopWeaponAnimation_Parms;

    this->ProcessEvent(pFnStopWeaponAnimation, &StopWeaponAnimation_Parms,
                       NULL);
};

// Function Engine.Weapon.PlayWeaponAnimation
// [0x00024102]
// Parameters infos:

void AWeapon::PlayWeaponAnimation() {
    static UFunction* pFnPlayWeaponAnimation = NULL;

    if (!pFnPlayWeaponAnimation)
        pFnPlayWeaponAnimation =
            (UFunction*)UObject::GObjObjects()->Data[36831];

    AWeapon_execPlayWeaponAnimation_Parms PlayWeaponAnimation_Parms;

    this->ProcessEvent(pFnPlayWeaponAnimation, &PlayWeaponAnimation_Parms,
                       NULL);
};

// Function Engine.Weapon.GetWeaponAnimNodeSeq
// [0x00020102]
// Parameters infos:

void AWeapon::GetWeaponAnimNodeSeq() {
    static UFunction* pFnGetWeaponAnimNodeSeq = NULL;

    if (!pFnGetWeaponAnimNodeSeq)
        pFnGetWeaponAnimNodeSeq =
            (UFunction*)UObject::GObjObjects()->Data[36826];

    AWeapon_execGetWeaponAnimNodeSeq_Parms GetWeaponAnimNodeSeq_Parms;

    this->ProcessEvent(pFnGetWeaponAnimNodeSeq, &GetWeaponAnimNodeSeq_Parms,
                       NULL);
};

// Function Engine.Weapon.FireOnRelease
// [0x00020002]
// Parameters infos:

void AWeapon::FireOnRelease() {
    static UFunction* pFnFireOnRelease = NULL;

    if (!pFnFireOnRelease)
        pFnFireOnRelease = (UFunction*)UObject::GObjObjects()->Data[25978];

    AWeapon_execFireOnRelease_Parms FireOnRelease_Parms;

    this->ProcessEvent(pFnFireOnRelease, &FireOnRelease_Parms, NULL);
};

// Function Engine.Weapon.CanAttack
// [0x00020002]
// Parameters infos:

void AWeapon::CanAttack() {
    static UFunction* pFnCanAttack = NULL;

    if (!pFnCanAttack)
        pFnCanAttack = (UFunction*)UObject::GObjObjects()->Data[25980];

    AWeapon_execCanAttack_Parms CanAttack_Parms;

    this->ProcessEvent(pFnCanAttack, &CanAttack_Parms, NULL);
};

// Function Engine.Weapon.GetWeaponRating
// [0x00020102]
// Parameters infos:

void AWeapon::GetWeaponRating() {
    static UFunction* pFnGetWeaponRating = NULL;

    if (!pFnGetWeaponRating)
        pFnGetWeaponRating = (UFunction*)UObject::GObjObjects()->Data[24047];

    AWeapon_execGetWeaponRating_Parms GetWeaponRating_Parms;

    this->ProcessEvent(pFnGetWeaponRating, &GetWeaponRating_Parms, NULL);
};

// Function Engine.Weapon.GetAIRating
// [0x00020002]
// Parameters infos:

void AWeapon::GetAIRating() {
    static UFunction* pFnGetAIRating = NULL;

    if (!pFnGetAIRating)
        pFnGetAIRating = (UFunction*)UObject::GObjObjects()->Data[24051];

    AWeapon_execGetAIRating_Parms GetAIRating_Parms;

    this->ProcessEvent(pFnGetAIRating, &GetAIRating_Parms, NULL);
};

// Function Engine.Weapon.MaxRange
// [0x00020102]
// Parameters infos:

void AWeapon::MaxRange() {
    static UFunction* pFnMaxRange = NULL;

    if (!pFnMaxRange)
        pFnMaxRange = (UFunction*)UObject::GObjObjects()->Data[36822];

    AWeapon_execMaxRange_Parms MaxRange_Parms;

    this->ProcessEvent(pFnMaxRange, &MaxRange_Parms, NULL);
};

// Function Engine.Weapon.AddSpread
// [0x00820102]
// Parameters infos:

void AWeapon::AddSpread() {
    static UFunction* pFnAddSpread = NULL;

    if (!pFnAddSpread)
        pFnAddSpread = (UFunction*)UObject::GObjObjects()->Data[36813];

    AWeapon_execAddSpread_Parms AddSpread_Parms;

    this->ProcessEvent(pFnAddSpread, &AddSpread_Parms, NULL);
};

// Function Engine.Weapon.GetProjectileClass
// [0x00020002]
// Parameters infos:

void AWeapon::GetProjectileClass() {
    static UFunction* pFnGetProjectileClass = NULL;

    if (!pFnGetProjectileClass)
        pFnGetProjectileClass = (UFunction*)UObject::GObjObjects()->Data[36811];

    AWeapon_execGetProjectileClass_Parms GetProjectileClass_Parms;

    this->ProcessEvent(pFnGetProjectileClass, &GetProjectileClass_Parms, NULL);
};

// Function Engine.Weapon.ClearPendingFire
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AWeapon::ClearPendingFire() {
    static UFunction* pFnClearPendingFire = NULL;

    if (!pFnClearPendingFire)
        pFnClearPendingFire = (UFunction*)UObject::GObjObjects()->Data[36809];

    AWeapon_execClearPendingFire_Parms ClearPendingFire_Parms;

    this->ProcessEvent(pFnClearPendingFire, &ClearPendingFire_Parms, NULL);
};

// Function Engine.Weapon.SetPendingFire
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AWeapon::SetPendingFire() {
    static UFunction* pFnSetPendingFire = NULL;

    if (!pFnSetPendingFire)
        pFnSetPendingFire = (UFunction*)UObject::GObjObjects()->Data[36807];

    AWeapon_execSetPendingFire_Parms SetPendingFire_Parms;

    this->ProcessEvent(pFnSetPendingFire, &SetPendingFire_Parms, NULL);
};

// Function Engine.Weapon.PendingFire
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AWeapon::PendingFire() {
    static UFunction* pFnPendingFire = NULL;

    if (!pFnPendingFire)
        pFnPendingFire = (UFunction*)UObject::GObjObjects()->Data[36804];

    AWeapon_execPendingFire_Parms PendingFire_Parms;

    this->ProcessEvent(pFnPendingFire, &PendingFire_Parms, NULL);
};

// Function Engine.Weapon.GetPendingFireLength
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AWeapon::GetPendingFireLength() {
    static UFunction* pFnGetPendingFireLength = NULL;

    if (!pFnGetPendingFireLength)
        pFnGetPendingFireLength =
            (UFunction*)UObject::GObjObjects()->Data[36802];

    AWeapon_execGetPendingFireLength_Parms GetPendingFireLength_Parms;

    this->ProcessEvent(pFnGetPendingFireLength, &GetPendingFireLength_Parms,
                       NULL);
};

// Function Engine.Weapon.HasAnyAmmo
// [0x00020102]
// Parameters infos:

void AWeapon::HasAnyAmmo() {
    static UFunction* pFnHasAnyAmmo = NULL;

    if (!pFnHasAnyAmmo)
        pFnHasAnyAmmo = (UFunction*)UObject::GObjObjects()->Data[24045];

    AWeapon_execHasAnyAmmo_Parms HasAnyAmmo_Parms;

    this->ProcessEvent(pFnHasAnyAmmo, &HasAnyAmmo_Parms, NULL);
};

// Function Engine.Weapon.HasAmmo
// [0x00024102]
// Parameters infos:

void AWeapon::HasAmmo() {
    static UFunction* pFnHasAmmo = NULL;

    if (!pFnHasAmmo)
        pFnHasAmmo = (UFunction*)UObject::GObjObjects()->Data[36798];

    AWeapon_execHasAmmo_Parms HasAmmo_Parms;

    this->ProcessEvent(pFnHasAmmo, &HasAmmo_Parms, NULL);
};

// Function Engine.Weapon.AddAmmo
// [0x00020000]
// Parameters infos:

void AWeapon::AddAmmo() {
    static UFunction* pFnAddAmmo = NULL;

    if (!pFnAddAmmo)
        pFnAddAmmo = (UFunction*)UObject::GObjObjects()->Data[36795];

    AWeapon_execAddAmmo_Parms AddAmmo_Parms;

    this->ProcessEvent(pFnAddAmmo, &AddAmmo_Parms, NULL);
};

// Function Engine.Weapon.ConsumeAmmo
// [0x00020000]
// Parameters infos:

void AWeapon::ConsumeAmmo() {
    static UFunction* pFnConsumeAmmo = NULL;

    if (!pFnConsumeAmmo)
        pFnConsumeAmmo = (UFunction*)UObject::GObjObjects()->Data[36793];

    AWeapon_execConsumeAmmo_Parms ConsumeAmmo_Parms;

    this->ProcessEvent(pFnConsumeAmmo, &ConsumeAmmo_Parms, NULL);
};

// Function Engine.Weapon.GetWeaponDebug
// [0x00420102]
// Parameters infos:

void AWeapon::GetWeaponDebug() {
    static UFunction* pFnGetWeaponDebug = NULL;

    if (!pFnGetWeaponDebug)
        pFnGetWeaponDebug = (UFunction*)UObject::GObjObjects()->Data[36788];

    AWeapon_execGetWeaponDebug_Parms GetWeaponDebug_Parms;

    this->ProcessEvent(pFnGetWeaponDebug, &GetWeaponDebug_Parms, NULL);
};

// Function Engine.Weapon.DisplayDebug
// [0x00420102]
// Parameters infos:

void AWeapon::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[36781];

    AWeapon_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Weapon.DrawHUD
// [0x00020100]
// Parameters infos:

void AWeapon::DrawHUD() {
    static UFunction* pFnDrawHUD = NULL;

    if (!pFnDrawHUD)
        pFnDrawHUD = (UFunction*)UObject::GObjObjects()->Data[36778];

    AWeapon_execDrawHUD_Parms DrawHUD_Parms;

    this->ProcessEvent(pFnDrawHUD, &DrawHUD_Parms, NULL);
};

// Function Engine.Weapon.DenyClientWeaponSet
// [0x00020102]
// Parameters infos:

void AWeapon::DenyClientWeaponSet() {
    static UFunction* pFnDenyClientWeaponSet = NULL;

    if (!pFnDenyClientWeaponSet)
        pFnDenyClientWeaponSet =
            (UFunction*)UObject::GObjObjects()->Data[24043];

    AWeapon_execDenyClientWeaponSet_Parms DenyClientWeaponSet_Parms;

    this->ProcessEvent(pFnDenyClientWeaponSet, &DenyClientWeaponSet_Parms,
                       NULL);
};

// Function Engine.Weapon.IsFiring
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWeapon::eventIsFiring() {
    static UFunction* pFnIsFiring = NULL;

    if (!pFnIsFiring)
        pFnIsFiring = (UFunction*)UObject::GObjObjects()->Data[25976];

    AWeapon_eventIsFiring_Parms IsFiring_Parms;

    this->ProcessEvent(pFnIsFiring, &IsFiring_Parms, NULL);
};

// Function Engine.Weapon.ClientWeaponThrown
// [0x010201C2]
// Parameters infos:

void AWeapon::ClientWeaponThrown() {
    static UFunction* pFnClientWeaponThrown = NULL;

    if (!pFnClientWeaponThrown)
        pFnClientWeaponThrown = (UFunction*)UObject::GObjObjects()->Data[36777];

    AWeapon_execClientWeaponThrown_Parms ClientWeaponThrown_Parms;

    this->ProcessEvent(pFnClientWeaponThrown, &ClientWeaponThrown_Parms, NULL);
};

// Function Engine.Weapon.CanThrow
// [0x00020102]
// Parameters infos:

void AWeapon::CanThrow() {
    static UFunction* pFnCanThrow = NULL;

    if (!pFnCanThrow)
        pFnCanThrow = (UFunction*)UObject::GObjObjects()->Data[25968];

    AWeapon_execCanThrow_Parms CanThrow_Parms;

    this->ProcessEvent(pFnCanThrow, &CanThrow_Parms, NULL);
};

// Function Engine.Weapon.DropFrom
// [0x00020002]
// Parameters infos:

void AWeapon::DropFrom() {
    static UFunction* pFnDropFrom = NULL;

    if (!pFnDropFrom)
        pFnDropFrom = (UFunction*)UObject::GObjObjects()->Data[36774];

    AWeapon_execDropFrom_Parms DropFrom_Parms;

    this->ProcessEvent(pFnDropFrom, &DropFrom_Parms, NULL);
};

// Function Engine.Weapon.DoOverridePrevWeapon
// [0x00020102]
// Parameters infos:

void AWeapon::DoOverridePrevWeapon() {
    static UFunction* pFnDoOverridePrevWeapon = NULL;

    if (!pFnDoOverridePrevWeapon)
        pFnDoOverridePrevWeapon =
            (UFunction*)UObject::GObjObjects()->Data[36772];

    AWeapon_execDoOverridePrevWeapon_Parms DoOverridePrevWeapon_Parms;

    this->ProcessEvent(pFnDoOverridePrevWeapon, &DoOverridePrevWeapon_Parms,
                       NULL);
};

// Function Engine.Weapon.DoOverrideNextWeapon
// [0x00020102]
// Parameters infos:

void AWeapon::DoOverrideNextWeapon() {
    static UFunction* pFnDoOverrideNextWeapon = NULL;

    if (!pFnDoOverrideNextWeapon)
        pFnDoOverrideNextWeapon =
            (UFunction*)UObject::GObjObjects()->Data[36770];

    AWeapon_execDoOverrideNextWeapon_Parms DoOverrideNextWeapon_Parms;

    this->ProcessEvent(pFnDoOverrideNextWeapon, &DoOverrideNextWeapon_Parms,
                       NULL);
};

// Function Engine.Weapon.HolderDied
// [0x00020002]
// Parameters infos:

void AWeapon::HolderDied() {
    static UFunction* pFnHolderDied = NULL;

    if (!pFnHolderDied)
        pFnHolderDied = (UFunction*)UObject::GObjObjects()->Data[36769];

    AWeapon_execHolderDied_Parms HolderDied_Parms;

    this->ProcessEvent(pFnHolderDied, &HolderDied_Parms, NULL);
};

// Function Engine.Weapon.ItemRemovedFromInvManager
// [0x00020002]
// Parameters infos:

void AWeapon::ItemRemovedFromInvManager() {
    static UFunction* pFnItemRemovedFromInvManager = NULL;

    if (!pFnItemRemovedFromInvManager)
        pFnItemRemovedFromInvManager =
            (UFunction*)UObject::GObjObjects()->Data[36768];

    AWeapon_execItemRemovedFromInvManager_Parms ItemRemovedFromInvManager_Parms;

    this->ProcessEvent(pFnItemRemovedFromInvManager,
                       &ItemRemovedFromInvManager_Parms, NULL);
};

// Function Engine.Weapon.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWeapon::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[36767];

    AWeapon_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Weapon.ShouldWeaponIgnoreStartFire
// [0x00020102]
// Parameters infos:

void AWeapon::ShouldWeaponIgnoreStartFire() {
    static UFunction* pFnShouldWeaponIgnoreStartFire = NULL;

    if (!pFnShouldWeaponIgnoreStartFire)
        pFnShouldWeaponIgnoreStartFire =
            (UFunction*)UObject::GObjObjects()->Data[36765];

    AWeapon_execShouldWeaponIgnoreStartFire_Parms
        ShouldWeaponIgnoreStartFire_Parms;

    this->ProcessEvent(pFnShouldWeaponIgnoreStartFire,
                       &ShouldWeaponIgnoreStartFire_Parms, NULL);
};

// Function Engine.Weapon.GetModifiedFOVAngle
// [0x00020102]
// Parameters infos:

void AWeapon::GetModifiedFOVAngle() {
    static UFunction* pFnGetModifiedFOVAngle = NULL;

    if (!pFnGetModifiedFOVAngle)
        pFnGetModifiedFOVAngle =
            (UFunction*)UObject::GObjObjects()->Data[36763];

    AWeapon_execGetModifiedFOVAngle_Parms GetModifiedFOVAngle_Parms;

    this->ProcessEvent(pFnGetModifiedFOVAngle, &GetModifiedFOVAngle_Parms,
                       NULL);
};

// Function Engine.Weapon.ShouldOwnerWalk
// [0x00020102]
// Parameters infos:

void AWeapon::ShouldOwnerWalk() {
    static UFunction* pFnShouldOwnerWalk = NULL;

    if (!pFnShouldOwnerWalk)
        pFnShouldOwnerWalk = (UFunction*)UObject::GObjObjects()->Data[36761];

    AWeapon_execShouldOwnerWalk_Parms ShouldOwnerWalk_Parms;

    this->ProcessEvent(pFnShouldOwnerWalk, &ShouldOwnerWalk_Parms, NULL);
};

// Function Engine.InventoryManager.UpdateController
// [0x00020102]
// Parameters infos:

void AInventoryManager::UpdateController() {
    static UFunction* pFnUpdateController = NULL;

    if (!pFnUpdateController)
        pFnUpdateController = (UFunction*)UObject::GObjObjects()->Data[24040];

    AInventoryManager_execUpdateController_Parms UpdateController_Parms;

    this->ProcessEvent(pFnUpdateController, &UpdateController_Parms, NULL);
};

// Function Engine.InventoryManager.ClientWeaponSet
// [0x00024102]
// Parameters infos:

void AInventoryManager::ClientWeaponSet() {
    static UFunction* pFnClientWeaponSet = NULL;

    if (!pFnClientWeaponSet)
        pFnClientWeaponSet = (UFunction*)UObject::GObjObjects()->Data[24035];

    AInventoryManager_execClientWeaponSet_Parms ClientWeaponSet_Parms;

    this->ProcessEvent(pFnClientWeaponSet, &ClientWeaponSet_Parms, NULL);
};

// Function Engine.InventoryManager.ChangedWeapon
// [0x00020102]
// Parameters infos:

void AInventoryManager::ChangedWeapon() {
    static UFunction* pFnChangedWeapon = NULL;

    if (!pFnChangedWeapon)
        pFnChangedWeapon = (UFunction*)UObject::GObjObjects()->Data[24033];

    AInventoryManager_execChangedWeapon_Parms ChangedWeapon_Parms;

    this->ProcessEvent(pFnChangedWeapon, &ChangedWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.ClearPendingWeapon
// [0x00020102]
// Parameters infos:

void AInventoryManager::ClearPendingWeapon() {
    static UFunction* pFnClearPendingWeapon = NULL;

    if (!pFnClearPendingWeapon)
        pFnClearPendingWeapon = (UFunction*)UObject::GObjObjects()->Data[24032];

    AInventoryManager_execClearPendingWeapon_Parms ClearPendingWeapon_Parms;

    this->ProcessEvent(pFnClearPendingWeapon, &ClearPendingWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.CancelWeaponChange
// [0x00020102]
// Parameters infos:

void AInventoryManager::CancelWeaponChange() {
    static UFunction* pFnCancelWeaponChange = NULL;

    if (!pFnCancelWeaponChange)
        pFnCancelWeaponChange = (UFunction*)UObject::GObjObjects()->Data[24030];

    AInventoryManager_execCancelWeaponChange_Parms CancelWeaponChange_Parms;

    this->ProcessEvent(pFnCancelWeaponChange, &CancelWeaponChange_Parms, NULL);
};

// Function Engine.InventoryManager.SetPendingWeapon
// [0x00020102]
// Parameters infos:

void AInventoryManager::SetPendingWeapon() {
    static UFunction* pFnSetPendingWeapon = NULL;

    if (!pFnSetPendingWeapon)
        pFnSetPendingWeapon = (UFunction*)UObject::GObjObjects()->Data[24028];

    AInventoryManager_execSetPendingWeapon_Parms SetPendingWeapon_Parms;

    this->ProcessEvent(pFnSetPendingWeapon, &SetPendingWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.InternalSetCurrentWeapon
// [0x00040103] ( FUNC_Final )
// Parameters infos:

void AInventoryManager::InternalSetCurrentWeapon() {
    static UFunction* pFnInternalSetCurrentWeapon = NULL;

    if (!pFnInternalSetCurrentWeapon)
        pFnInternalSetCurrentWeapon =
            (UFunction*)UObject::GObjObjects()->Data[24025];

    AInventoryManager_execInternalSetCurrentWeapon_Parms
        InternalSetCurrentWeapon_Parms;

    this->ProcessEvent(pFnInternalSetCurrentWeapon,
                       &InternalSetCurrentWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.ServerSetCurrentWeapon
// [0x002200C2]
// Parameters infos:

void AInventoryManager::ServerSetCurrentWeapon() {
    static UFunction* pFnServerSetCurrentWeapon = NULL;

    if (!pFnServerSetCurrentWeapon)
        pFnServerSetCurrentWeapon =
            (UFunction*)UObject::GObjObjects()->Data[24023];

    AInventoryManager_execServerSetCurrentWeapon_Parms
        ServerSetCurrentWeapon_Parms;

    this->ProcessEvent(pFnServerSetCurrentWeapon, &ServerSetCurrentWeapon_Parms,
                       NULL);
};

// Function Engine.InventoryManager.SetCurrentWeapon
// [0x010201C2]
// Parameters infos:

void AInventoryManager::SetCurrentWeapon() {
    static UFunction* pFnSetCurrentWeapon = NULL;

    if (!pFnSetCurrentWeapon)
        pFnSetCurrentWeapon = (UFunction*)UObject::GObjObjects()->Data[24021];

    AInventoryManager_execSetCurrentWeapon_Parms SetCurrentWeapon_Parms;

    this->ProcessEvent(pFnSetCurrentWeapon, &SetCurrentWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.NextWeapon
// [0x00020102]
// Parameters infos:

void AInventoryManager::NextWeapon() {
    static UFunction* pFnNextWeapon = NULL;

    if (!pFnNextWeapon)
        pFnNextWeapon = (UFunction*)UObject::GObjObjects()->Data[24016];

    AInventoryManager_execNextWeapon_Parms NextWeapon_Parms;

    this->ProcessEvent(pFnNextWeapon, &NextWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.PrevWeapon
// [0x00020102]
// Parameters infos:

void AInventoryManager::PrevWeapon() {
    static UFunction* pFnPrevWeapon = NULL;

    if (!pFnPrevWeapon)
        pFnPrevWeapon = (UFunction*)UObject::GObjObjects()->Data[24012];

    AInventoryManager_execPrevWeapon_Parms PrevWeapon_Parms;

    this->ProcessEvent(pFnPrevWeapon, &PrevWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.SwitchToBestWeapon
// [0x00024102]
// Parameters infos:

void AInventoryManager::SwitchToBestWeapon() {
    static UFunction* pFnSwitchToBestWeapon = NULL;

    if (!pFnSwitchToBestWeapon)
        pFnSwitchToBestWeapon = (UFunction*)UObject::GObjObjects()->Data[24009];

    AInventoryManager_execSwitchToBestWeapon_Parms SwitchToBestWeapon_Parms;

    this->ProcessEvent(pFnSwitchToBestWeapon, &SwitchToBestWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.GetBestWeapon
// [0x00024102]
// Parameters infos:

void AInventoryManager::GetBestWeapon() {
    static UFunction* pFnGetBestWeapon = NULL;

    if (!pFnGetBestWeapon)
        pFnGetBestWeapon = (UFunction*)UObject::GObjObjects()->Data[24002];

    AInventoryManager_execGetBestWeapon_Parms GetBestWeapon_Parms;

    this->ProcessEvent(pFnGetBestWeapon, &GetBestWeapon_Parms, NULL);
};

// Function Engine.InventoryManager.GetWeaponRatingFor
// [0x00020102]
// Parameters infos:

void AInventoryManager::GetWeaponRatingFor() {
    static UFunction* pFnGetWeaponRatingFor = NULL;

    if (!pFnGetWeaponRatingFor)
        pFnGetWeaponRatingFor = (UFunction*)UObject::GObjObjects()->Data[23998];

    AInventoryManager_execGetWeaponRatingFor_Parms GetWeaponRatingFor_Parms;

    this->ProcessEvent(pFnGetWeaponRatingFor, &GetWeaponRatingFor_Parms, NULL);
};

// Function Engine.InventoryManager.DrawHUD
// [0x00020100]
// Parameters infos:

void AInventoryManager::DrawHUD() {
    static UFunction* pFnDrawHUD = NULL;

    if (!pFnDrawHUD)
        pFnDrawHUD = (UFunction*)UObject::GObjObjects()->Data[23996];

    AInventoryManager_execDrawHUD_Parms DrawHUD_Parms;

    this->ProcessEvent(pFnDrawHUD, &DrawHUD_Parms, NULL);
};

// Function Engine.InventoryManager.OwnerDied
// [0x00020002]
// Parameters infos:

void AInventoryManager::OwnerDied() {
    static UFunction* pFnOwnerDied = NULL;

    if (!pFnOwnerDied)
        pFnOwnerDied = (UFunction*)UObject::GObjObjects()->Data[23995];

    AInventoryManager_execOwnerDied_Parms OwnerDied_Parms;

    this->ProcessEvent(pFnOwnerDied, &OwnerDied_Parms, NULL);
};

// Function Engine.InventoryManager.DiscardInventory
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void AInventoryManager::eventDiscardInventory() {
    static UFunction* pFnDiscardInventory = NULL;

    if (!pFnDiscardInventory)
        pFnDiscardInventory = (UFunction*)UObject::GObjObjects()->Data[23991];

    AInventoryManager_eventDiscardInventory_Parms DiscardInventory_Parms;

    this->ProcessEvent(pFnDiscardInventory, &DiscardInventory_Parms, NULL);
};

// Function Engine.InventoryManager.RemoveFromInventory
// [0x00020102]
// Parameters infos:

void AInventoryManager::RemoveFromInventory() {
    static UFunction* pFnRemoveFromInventory = NULL;

    if (!pFnRemoveFromInventory)
        pFnRemoveFromInventory =
            (UFunction*)UObject::GObjObjects()->Data[23987];

    AInventoryManager_execRemoveFromInventory_Parms RemoveFromInventory_Parms;

    this->ProcessEvent(pFnRemoveFromInventory, &RemoveFromInventory_Parms,
                       NULL);
};

// Function Engine.InventoryManager.AddInventory
// [0x00024102]
// Parameters infos:

void AInventoryManager::AddInventory() {
    static UFunction* pFnAddInventory = NULL;

    if (!pFnAddInventory)
        pFnAddInventory = (UFunction*)UObject::GObjObjects()->Data[23939];

    AInventoryManager_execAddInventory_Parms AddInventory_Parms;

    this->ProcessEvent(pFnAddInventory, &AddInventory_Parms, NULL);
};

// Function Engine.InventoryManager.CreateInventory
// [0x00024102]
// Parameters infos:

void AInventoryManager::CreateInventory() {
    static UFunction* pFnCreateInventory = NULL;

    if (!pFnCreateInventory)
        pFnCreateInventory = (UFunction*)UObject::GObjObjects()->Data[23978];

    AInventoryManager_execCreateInventory_Parms CreateInventory_Parms;

    this->ProcessEvent(pFnCreateInventory, &CreateInventory_Parms, NULL);
};

// Function Engine.InventoryManager.FindInventoryType
// [0x00024902] ( FUNC_Event )
// Parameters infos:

void AInventoryManager::eventFindInventoryType() {
    static UFunction* pFnFindInventoryType = NULL;

    if (!pFnFindInventoryType)
        pFnFindInventoryType = (UFunction*)UObject::GObjObjects()->Data[23973];

    AInventoryManager_eventFindInventoryType_Parms FindInventoryType_Parms;

    this->ProcessEvent(pFnFindInventoryType, &FindInventoryType_Parms, NULL);
};

// Function Engine.InventoryManager.HandlePickupQuery
// [0x00020002]
// Parameters infos:

void AInventoryManager::HandlePickupQuery() {
    static UFunction* pFnHandlePickupQuery = NULL;

    if (!pFnHandlePickupQuery)
        pFnHandlePickupQuery = (UFunction*)UObject::GObjObjects()->Data[21833];

    AInventoryManager_execHandlePickupQuery_Parms HandlePickupQuery_Parms;

    this->ProcessEvent(pFnHandlePickupQuery, &HandlePickupQuery_Parms, NULL);
};

// Function Engine.InventoryManager.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AInventoryManager::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[23969];

    AInventoryManager_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.InventoryManager.SetupFor
// [0x00020002]
// Parameters infos:

void AInventoryManager::SetupFor() {
    static UFunction* pFnSetupFor = NULL;

    if (!pFnSetupFor)
        pFnSetupFor = (UFunction*)UObject::GObjObjects()->Data[23967];

    AInventoryManager_execSetupFor_Parms SetupFor_Parms;

    this->ProcessEvent(pFnSetupFor, &SetupFor_Parms, NULL);
};

// Function Engine.InventoryManager.InventoryActors
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AInventoryManager::InventoryActors() {
    static UFunction* pFnInventoryActors = NULL;

    if (!pFnInventoryActors)
        pFnInventoryActors = (UFunction*)UObject::GObjObjects()->Data[23964];

    AInventoryManager_execInventoryActors_Parms InventoryActors_Parms;

    pFnInventoryActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInventoryActors, &InventoryActors_Parms, NULL);

    pFnInventoryActors->FunctionFlags |= 0x400;
};

// Function Engine.InventoryManager.ClearAllPendingFire
// [0x00020102]
// Parameters infos:

void AInventoryManager::ClearAllPendingFire() {
    static UFunction* pFnClearAllPendingFire = NULL;

    if (!pFnClearAllPendingFire)
        pFnClearAllPendingFire =
            (UFunction*)UObject::GObjObjects()->Data[23961];

    AInventoryManager_execClearAllPendingFire_Parms ClearAllPendingFire_Parms;

    this->ProcessEvent(pFnClearAllPendingFire, &ClearAllPendingFire_Parms,
                       NULL);
};

// Function Engine.InventoryManager.IsPendingFire
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AInventoryManager::IsPendingFire() {
    static UFunction* pFnIsPendingFire = NULL;

    if (!pFnIsPendingFire)
        pFnIsPendingFire = (UFunction*)UObject::GObjObjects()->Data[23957];

    AInventoryManager_execIsPendingFire_Parms IsPendingFire_Parms;

    this->ProcessEvent(pFnIsPendingFire, &IsPendingFire_Parms, NULL);
};

// Function Engine.InventoryManager.ClearPendingFire
// [0x00020102]
// Parameters infos:

void AInventoryManager::ClearPendingFire() {
    static UFunction* pFnClearPendingFire = NULL;

    if (!pFnClearPendingFire)
        pFnClearPendingFire = (UFunction*)UObject::GObjObjects()->Data[23954];

    AInventoryManager_execClearPendingFire_Parms ClearPendingFire_Parms;

    this->ProcessEvent(pFnClearPendingFire, &ClearPendingFire_Parms, NULL);
};

// Function Engine.InventoryManager.SetPendingFire
// [0x00020102]
// Parameters infos:

void AInventoryManager::SetPendingFire() {
    static UFunction* pFnSetPendingFire = NULL;

    if (!pFnSetPendingFire)
        pFnSetPendingFire = (UFunction*)UObject::GObjObjects()->Data[23951];

    AInventoryManager_execSetPendingFire_Parms SetPendingFire_Parms;

    this->ProcessEvent(pFnSetPendingFire, &SetPendingFire_Parms, NULL);
};

// Function Engine.InventoryManager.GetPendingFireLength
// [0x00020102]
// Parameters infos:

void AInventoryManager::GetPendingFireLength() {
    static UFunction* pFnGetPendingFireLength = NULL;

    if (!pFnGetPendingFireLength)
        pFnGetPendingFireLength =
            (UFunction*)UObject::GObjObjects()->Data[23948];

    AInventoryManager_execGetPendingFireLength_Parms GetPendingFireLength_Parms;

    this->ProcessEvent(pFnGetPendingFireLength, &GetPendingFireLength_Parms,
                       NULL);
};

// Function Engine.InventoryManager.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AInventoryManager::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[23947];

    AInventoryManager_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.MatineeActor.CheckPriorityRefresh
// [0x00020002]
// Parameters infos:

void AMatineeActor::CheckPriorityRefresh() {
    static UFunction* pFnCheckPriorityRefresh = NULL;

    if (!pFnCheckPriorityRefresh)
        pFnCheckPriorityRefresh =
            (UFunction*)UObject::GObjObjects()->Data[25324];

    AMatineeActor_execCheckPriorityRefresh_Parms CheckPriorityRefresh_Parms;

    this->ProcessEvent(pFnCheckPriorityRefresh, &CheckPriorityRefresh_Parms,
                       NULL);
};

// Function Engine.MatineeActor.Update
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AMatineeActor::eventUpdate() {
    static UFunction* pFnUpdate = NULL;

    if (!pFnUpdate) pFnUpdate = (UFunction*)UObject::GObjObjects()->Data[25321];

    AMatineeActor_eventUpdate_Parms Update_Parms;

    this->ProcessEvent(pFnUpdate, &Update_Parms, NULL);
};

// Function Engine.MatineeActor.AddAIGroupActor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AMatineeActor::AddAIGroupActor() {
    static UFunction* pFnAddAIGroupActor = NULL;

    if (!pFnAddAIGroupActor)
        pFnAddAIGroupActor = (UFunction*)UObject::GObjObjects()->Data[25319];

    AMatineeActor_execAddAIGroupActor_Parms AddAIGroupActor_Parms;

    pFnAddAIGroupActor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddAIGroupActor, &AddAIGroupActor_Parms, NULL);

    pFnAddAIGroupActor->FunctionFlags |= 0x400;
};

// Function Engine.NavigationPoint.GetDebugAbbrev
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANavigationPoint::eventGetDebugAbbrev() {
    static UFunction* pFnGetDebugAbbrev = NULL;

    if (!pFnGetDebugAbbrev)
        pFnGetDebugAbbrev = (UFunction*)UObject::GObjObjects()->Data[12958];

    ANavigationPoint_eventGetDebugAbbrev_Parms GetDebugAbbrev_Parms;

    this->ProcessEvent(pFnGetDebugAbbrev, &GetDebugAbbrev_Parms, NULL);
};

// Function Engine.NavigationPoint.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ANavigationPoint::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[12956];

    ANavigationPoint_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.NavigationPoint.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ANavigationPoint::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[12954];

    ANavigationPoint_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.NavigationPoint.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void ANavigationPoint::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[12952];

    ANavigationPoint_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.NavigationPoint.ShutDown
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANavigationPoint::eventShutDown() {
    static UFunction* pFnShutDown = NULL;

    if (!pFnShutDown)
        pFnShutDown = (UFunction*)UObject::GObjObjects()->Data[12951];

    ANavigationPoint_eventShutDown_Parms ShutDown_Parms;

    this->ProcessEvent(pFnShutDown, &ShutDown_Parms, NULL);
};

// Function Engine.NavigationPoint.OnToggle
// [0x00020002]
// Parameters infos:

void ANavigationPoint::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[12949];

    ANavigationPoint_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.NavigationPoint.IsOnDifferentNetwork
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ANavigationPoint::IsOnDifferentNetwork() {
    static UFunction* pFnIsOnDifferentNetwork = NULL;

    if (!pFnIsOnDifferentNetwork)
        pFnIsOnDifferentNetwork =
            (UFunction*)UObject::GObjObjects()->Data[12946];

    ANavigationPoint_execIsOnDifferentNetwork_Parms IsOnDifferentNetwork_Parms;

    pFnIsOnDifferentNetwork->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsOnDifferentNetwork, &IsOnDifferentNetwork_Parms,
                       NULL);

    pFnIsOnDifferentNetwork->FunctionFlags |= 0x400;
};

// Function Engine.NavigationPoint.GetAllNavInRadius
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ANavigationPoint::GetAllNavInRadius() {
    static UFunction* pFnGetAllNavInRadius = NULL;

    if (!pFnGetAllNavInRadius)
        pFnGetAllNavInRadius = (UFunction*)UObject::GObjObjects()->Data[12936];

    ANavigationPoint_execGetAllNavInRadius_Parms GetAllNavInRadius_Parms;

    pFnGetAllNavInRadius->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAllNavInRadius, &GetAllNavInRadius_Parms, NULL);

    pFnGetAllNavInRadius->FunctionFlags |= 0x400;
};

// Function Engine.NavigationPoint.GetNearestNavToPoint
// [0x00026003] ( FUNC_Final )
// Parameters infos:

void ANavigationPoint::GetNearestNavToPoint() {
    static UFunction* pFnGetNearestNavToPoint = NULL;

    if (!pFnGetNearestNavToPoint)
        pFnGetNearestNavToPoint =
            (UFunction*)UObject::GObjObjects()->Data[12925];

    ANavigationPoint_execGetNearestNavToPoint_Parms GetNearestNavToPoint_Parms;

    this->ProcessEvent(pFnGetNearestNavToPoint, &GetNearestNavToPoint_Parms,
                       NULL);
};

// Function Engine.NavigationPoint.GetNearestNavToActor
// [0x00026003] ( FUNC_Final )
// Parameters infos:

void ANavigationPoint::GetNearestNavToActor() {
    static UFunction* pFnGetNearestNavToActor = NULL;

    if (!pFnGetNearestNavToActor)
        pFnGetNearestNavToActor =
            (UFunction*)UObject::GObjObjects()->Data[12914];

    ANavigationPoint_execGetNearestNavToActor_Parms GetNearestNavToActor_Parms;

    this->ProcessEvent(pFnGetNearestNavToActor, &GetNearestNavToActor_Parms,
                       NULL);
};

// Function Engine.NavigationPoint.ProceedWithMove
// [0x00020002]
// Parameters infos:

void ANavigationPoint::ProceedWithMove() {
    static UFunction* pFnProceedWithMove = NULL;

    if (!pFnProceedWithMove)
        pFnProceedWithMove = (UFunction*)UObject::GObjObjects()->Data[8615];

    ANavigationPoint_execProceedWithMove_Parms ProceedWithMove_Parms;

    this->ProcessEvent(pFnProceedWithMove, &ProceedWithMove_Parms, NULL);
};

// Function Engine.NavigationPoint.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANavigationPoint::eventSuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[12910];

    ANavigationPoint_eventSuggestMovePreparation_Parms
        SuggestMovePreparation_Parms;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);
};

// Function Engine.NavigationPoint.DetourWeight
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANavigationPoint::eventDetourWeight() {
    static UFunction* pFnDetourWeight = NULL;

    if (!pFnDetourWeight)
        pFnDetourWeight = (UFunction*)UObject::GObjObjects()->Data[12906];

    ANavigationPoint_eventDetourWeight_Parms DetourWeight_Parms;

    this->ProcessEvent(pFnDetourWeight, &DetourWeight_Parms, NULL);
};

// Function Engine.NavigationPoint.Accept
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ANavigationPoint::eventAccept() {
    static UFunction* pFnAccept = NULL;

    if (!pFnAccept) pFnAccept = (UFunction*)UObject::GObjObjects()->Data[12901];

    ANavigationPoint_eventAccept_Parms Accept_Parms;

    this->ProcessEvent(pFnAccept, &Accept_Parms, NULL);
};

// Function Engine.NavigationPoint.SpecialCost
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ANavigationPoint::eventSpecialCost() {
    static UFunction* pFnSpecialCost = NULL;

    if (!pFnSpecialCost)
        pFnSpecialCost = (UFunction*)UObject::GObjObjects()->Data[12897];

    ANavigationPoint_eventSpecialCost_Parms SpecialCost_Parms;

    this->ProcessEvent(pFnSpecialCost, &SpecialCost_Parms, NULL);
};

// Function Engine.NavigationPoint.CanTeleport
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANavigationPoint::CanTeleport() {
    static UFunction* pFnCanTeleport = NULL;

    if (!pFnCanTeleport)
        pFnCanTeleport = (UFunction*)UObject::GObjObjects()->Data[12894];

    ANavigationPoint_execCanTeleport_Parms CanTeleport_Parms;

    pFnCanTeleport->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanTeleport, &CanTeleport_Parms, NULL);

    pFnCanTeleport->FunctionFlags |= 0x400;
};

// Function Engine.NavigationPoint.IsUsableAnchorFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANavigationPoint::IsUsableAnchorFor() {
    static UFunction* pFnIsUsableAnchorFor = NULL;

    if (!pFnIsUsableAnchorFor)
        pFnIsUsableAnchorFor = (UFunction*)UObject::GObjObjects()->Data[12891];

    ANavigationPoint_execIsUsableAnchorFor_Parms IsUsableAnchorFor_Parms;

    pFnIsUsableAnchorFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsUsableAnchorFor, &IsUsableAnchorFor_Parms, NULL);

    pFnIsUsableAnchorFor->FunctionFlags |= 0x400;
};

// Function Engine.NavigationPoint.GetReachSpecTo
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ANavigationPoint::GetReachSpecTo() {
    static UFunction* pFnGetReachSpecTo = NULL;

    if (!pFnGetReachSpecTo)
        pFnGetReachSpecTo = (UFunction*)UObject::GObjObjects()->Data[12886];

    ANavigationPoint_execGetReachSpecTo_Parms GetReachSpecTo_Parms;

    pFnGetReachSpecTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetReachSpecTo, &GetReachSpecTo_Parms, NULL);

    pFnGetReachSpecTo->FunctionFlags |= 0x400;
};

// Function Engine.NavigationPoint.GetBoundingCylinder
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void ANavigationPoint::GetBoundingCylinder() {
    static UFunction* pFnGetBoundingCylinder = NULL;

    if (!pFnGetBoundingCylinder)
        pFnGetBoundingCylinder =
            (UFunction*)UObject::GObjObjects()->Data[12883];

    ANavigationPoint_execGetBoundingCylinder_Parms GetBoundingCylinder_Parms;

    pFnGetBoundingCylinder->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoundingCylinder, &GetBoundingCylinder_Parms,
                       NULL);

    pFnGetBoundingCylinder->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetDebugAbbrev
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ACoverLink::eventGetDebugAbbrev() {
    static UFunction* pFnGetDebugAbbrev = NULL;

    if (!pFnGetDebugAbbrev)
        pFnGetDebugAbbrev = (UFunction*)UObject::GObjObjects()->Data[17275];

    ACoverLink_eventGetDebugAbbrev_Parms GetDebugAbbrev_Parms;

    this->ProcessEvent(pFnGetDebugAbbrev, &GetDebugAbbrev_Parms, NULL);
};

// Function Engine.CoverLink.GetLocationDescription
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetLocationDescription() {
    static UFunction* pFnGetLocationDescription = NULL;

    if (!pFnGetLocationDescription)
        pFnGetLocationDescription =
            (UFunction*)UObject::GObjObjects()->Data[17272];

    ACoverLink_execGetLocationDescription_Parms GetLocationDescription_Parms;

    pFnGetLocationDescription->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLocationDescription, &GetLocationDescription_Parms,
                       NULL);

    pFnGetLocationDescription->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetDebugString
// [0x00020903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void ACoverLink::eventGetDebugString() {
    static UFunction* pFnGetDebugString = NULL;

    if (!pFnGetDebugString)
        pFnGetDebugString = (UFunction*)UObject::GObjObjects()->Data[17269];

    ACoverLink_eventGetDebugString_Parms GetDebugString_Parms;

    this->ProcessEvent(pFnGetDebugString, &GetDebugString_Parms, NULL);
};

// Function Engine.CoverLink.AddCoverSlot
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::AddCoverSlot() {
    static UFunction* pFnAddCoverSlot = NULL;

    if (!pFnAddCoverSlot)
        pFnAddCoverSlot = (UFunction*)UObject::GObjObjects()->Data[17262];

    ACoverLink_execAddCoverSlot_Parms AddCoverSlot_Parms;

    pFnAddCoverSlot->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddCoverSlot, &AddCoverSlot_Parms, NULL);

    pFnAddCoverSlot->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void ACoverLink::eventTick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[17254];

    ACoverLink_eventTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.CoverLink.BreakFracturedMeshes
// [0x00020102]
// Parameters infos:

void ACoverLink::BreakFracturedMeshes() {
    static UFunction* pFnBreakFracturedMeshes = NULL;

    if (!pFnBreakFracturedMeshes)
        pFnBreakFracturedMeshes =
            (UFunction*)UObject::GObjObjects()->Data[17247];

    ACoverLink_execBreakFracturedMeshes_Parms BreakFracturedMeshes_Parms;

    this->ProcessEvent(pFnBreakFracturedMeshes, &BreakFracturedMeshes_Parms,
                       NULL);
};

// Function Engine.CoverLink.GetSwatTurnTarget
// [0x00420500] ( FUNC_Native )
// Parameters infos:

void ACoverLink::GetSwatTurnTarget() {
    static UFunction* pFnGetSwatTurnTarget = NULL;

    if (!pFnGetSwatTurnTarget)
        pFnGetSwatTurnTarget = (UFunction*)UObject::GObjObjects()->Data[17242];

    ACoverLink_execGetSwatTurnTarget_Parms GetSwatTurnTarget_Parms;

    pFnGetSwatTurnTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSwatTurnTarget, &GetSwatTurnTarget_Parms, NULL);

    pFnGetSwatTurnTarget->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.ShutDown
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ACoverLink::eventShutDown() {
    static UFunction* pFnShutDown = NULL;

    if (!pFnShutDown)
        pFnShutDown = (UFunction*)UObject::GObjObjects()->Data[17241];

    ACoverLink_eventShutDown_Parms ShutDown_Parms;

    this->ProcessEvent(pFnShutDown, &ShutDown_Parms, NULL);
};

// Function Engine.CoverLink.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ACoverLink::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[17238];

    ACoverLink_execApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.CoverLink.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ACoverLink::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[17236];

    ACoverLink_execCreateCheckpointRecord_Parms CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.CoverLink.OnToggle
// [0x00020002]
// Parameters infos:

void ACoverLink::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[17232];

    ACoverLink_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.CoverLink.IsEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsEnabled() {
    static UFunction* pFnIsEnabled = NULL;

    if (!pFnIsEnabled)
        pFnIsEnabled = (UFunction*)UObject::GObjObjects()->Data[17230];

    ACoverLink_execIsEnabled_Parms IsEnabled_Parms;

    pFnIsEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsEnabled, &IsEnabled_Parms, NULL);

    pFnIsEnabled->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.AutoAdjustSlot
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::AutoAdjustSlot() {
    static UFunction* pFnAutoAdjustSlot = NULL;

    if (!pFnAutoAdjustSlot)
        pFnAutoAdjustSlot = (UFunction*)UObject::GObjObjects()->Data[17226];

    ACoverLink_execAutoAdjustSlot_Parms AutoAdjustSlot_Parms;

    pFnAutoAdjustSlot->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAutoAdjustSlot, &AutoAdjustSlot_Parms, NULL);

    pFnAutoAdjustSlot->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.OnModifyCover
// [0x00020002]
// Parameters infos:

void ACoverLink::OnModifyCover() {
    static UFunction* pFnOnModifyCover = NULL;

    if (!pFnOnModifyCover)
        pFnOnModifyCover = (UFunction*)UObject::GObjObjects()->Data[17219];

    ACoverLink_execOnModifyCover_Parms OnModifyCover_Parms;

    this->ProcessEvent(pFnOnModifyCover, &OnModifyCover_Parms, NULL);
};

// Function Engine.CoverLink.SetSlotPlayerOnly
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ACoverLink::eventSetSlotPlayerOnly() {
    static UFunction* pFnSetSlotPlayerOnly = NULL;

    if (!pFnSetSlotPlayerOnly)
        pFnSetSlotPlayerOnly = (UFunction*)UObject::GObjObjects()->Data[17216];

    ACoverLink_eventSetSlotPlayerOnly_Parms SetSlotPlayerOnly_Parms;

    this->ProcessEvent(pFnSetSlotPlayerOnly, &SetSlotPlayerOnly_Parms, NULL);
};

// Function Engine.CoverLink.NotifySlotOwnerCoverDisabled
// [0x00024102]
// Parameters infos:

void ACoverLink::NotifySlotOwnerCoverDisabled() {
    static UFunction* pFnNotifySlotOwnerCoverDisabled = NULL;

    if (!pFnNotifySlotOwnerCoverDisabled)
        pFnNotifySlotOwnerCoverDisabled =
            (UFunction*)UObject::GObjObjects()->Data[17211];

    ACoverLink_execNotifySlotOwnerCoverDisabled_Parms
        NotifySlotOwnerCoverDisabled_Parms;

    this->ProcessEvent(pFnNotifySlotOwnerCoverDisabled,
                       &NotifySlotOwnerCoverDisabled_Parms, NULL);
};

// Function Engine.CoverLink.SetSlotEnabled
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ACoverLink::eventSetSlotEnabled() {
    static UFunction* pFnSetSlotEnabled = NULL;

    if (!pFnSetSlotEnabled)
        pFnSetSlotEnabled = (UFunction*)UObject::GObjObjects()->Data[17208];

    ACoverLink_eventSetSlotEnabled_Parms SetSlotEnabled_Parms;

    this->ProcessEvent(pFnSetSlotEnabled, &SetSlotEnabled_Parms, NULL);
};

// Function Engine.CoverLink.SetDisabled
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ACoverLink::eventSetDisabled() {
    static UFunction* pFnSetDisabled = NULL;

    if (!pFnSetDisabled)
        pFnSetDisabled = (UFunction*)UObject::GObjObjects()->Data[17204];

    ACoverLink_eventSetDisabled_Parms SetDisabled_Parms;

    this->ProcessEvent(pFnSetDisabled, &SetDisabled_Parms, NULL);
};

// Function Engine.CoverLink.GetSlotActions
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetSlotActions() {
    static UFunction* pFnGetSlotActions = NULL;

    if (!pFnGetSlotActions)
        pFnGetSlotActions = (UFunction*)UObject::GObjObjects()->Data[17200];

    ACoverLink_execGetSlotActions_Parms GetSlotActions_Parms;

    pFnGetSlotActions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSlotActions, &GetSlotActions_Parms, NULL);

    pFnGetSlotActions->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.HasFireLinkTo
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void ACoverLink::HasFireLinkTo() {
    static UFunction* pFnHasFireLinkTo = NULL;

    if (!pFnHasFireLinkTo)
        pFnHasFireLinkTo = (UFunction*)UObject::GObjObjects()->Data[17195];

    ACoverLink_execHasFireLinkTo_Parms HasFireLinkTo_Parms;

    pFnHasFireLinkTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasFireLinkTo, &HasFireLinkTo_Parms, NULL);

    pFnHasFireLinkTo->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetFireLinkTo
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void ACoverLink::GetFireLinkTo() {
    static UFunction* pFnGetFireLinkTo = NULL;

    if (!pFnGetFireLinkTo)
        pFnGetFireLinkTo = (UFunction*)UObject::GObjObjects()->Data[17186];

    ACoverLink_execGetFireLinkTo_Parms GetFireLinkTo_Parms;

    pFnGetFireLinkTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFireLinkTo, &GetFireLinkTo_Parms, NULL);

    pFnGetFireLinkTo->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.AllowLeftTransition
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ACoverLink::AllowLeftTransition() {
    static UFunction* pFnAllowLeftTransition = NULL;

    if (!pFnAllowLeftTransition)
        pFnAllowLeftTransition =
            (UFunction*)UObject::GObjObjects()->Data[17182];

    ACoverLink_execAllowLeftTransition_Parms AllowLeftTransition_Parms;

    this->ProcessEvent(pFnAllowLeftTransition, &AllowLeftTransition_Parms,
                       NULL);
};

// Function Engine.CoverLink.AllowRightTransition
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ACoverLink::AllowRightTransition() {
    static UFunction* pFnAllowRightTransition = NULL;

    if (!pFnAllowRightTransition)
        pFnAllowRightTransition =
            (UFunction*)UObject::GObjObjects()->Data[17178];

    ACoverLink_execAllowRightTransition_Parms AllowRightTransition_Parms;

    this->ProcessEvent(pFnAllowRightTransition, &AllowRightTransition_Parms,
                       NULL);
};

// Function Engine.CoverLink.GetSlotIdxToRight
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetSlotIdxToRight() {
    static UFunction* pFnGetSlotIdxToRight = NULL;

    if (!pFnGetSlotIdxToRight)
        pFnGetSlotIdxToRight = (UFunction*)UObject::GObjObjects()->Data[17174];

    ACoverLink_execGetSlotIdxToRight_Parms GetSlotIdxToRight_Parms;

    pFnGetSlotIdxToRight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSlotIdxToRight, &GetSlotIdxToRight_Parms, NULL);

    pFnGetSlotIdxToRight->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetSlotIdxToLeft
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetSlotIdxToLeft() {
    static UFunction* pFnGetSlotIdxToLeft = NULL;

    if (!pFnGetSlotIdxToLeft)
        pFnGetSlotIdxToLeft = (UFunction*)UObject::GObjObjects()->Data[17170];

    ACoverLink_execGetSlotIdxToLeft_Parms GetSlotIdxToLeft_Parms;

    pFnGetSlotIdxToLeft->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSlotIdxToLeft, &GetSlotIdxToLeft_Parms, NULL);

    pFnGetSlotIdxToLeft->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.IsRightEdgeSlot
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsRightEdgeSlot() {
    static UFunction* pFnIsRightEdgeSlot = NULL;

    if (!pFnIsRightEdgeSlot)
        pFnIsRightEdgeSlot = (UFunction*)UObject::GObjObjects()->Data[17166];

    ACoverLink_execIsRightEdgeSlot_Parms IsRightEdgeSlot_Parms;

    pFnIsRightEdgeSlot->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsRightEdgeSlot, &IsRightEdgeSlot_Parms, NULL);

    pFnIsRightEdgeSlot->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.IsLeftEdgeSlot
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsLeftEdgeSlot() {
    static UFunction* pFnIsLeftEdgeSlot = NULL;

    if (!pFnIsLeftEdgeSlot)
        pFnIsLeftEdgeSlot = (UFunction*)UObject::GObjObjects()->Data[17162];

    ACoverLink_execIsLeftEdgeSlot_Parms IsLeftEdgeSlot_Parms;

    pFnIsLeftEdgeSlot->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsLeftEdgeSlot, &IsLeftEdgeSlot_Parms, NULL);

    pFnIsLeftEdgeSlot->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.IsEdgeSlot
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsEdgeSlot() {
    static UFunction* pFnIsEdgeSlot = NULL;

    if (!pFnIsEdgeSlot)
        pFnIsEdgeSlot = (UFunction*)UObject::GObjObjects()->Data[17158];

    ACoverLink_execIsEdgeSlot_Parms IsEdgeSlot_Parms;

    pFnIsEdgeSlot->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsEdgeSlot, &IsEdgeSlot_Parms, NULL);

    pFnIsEdgeSlot->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.FindSlots
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::FindSlots() {
    static UFunction* pFnFindSlots = NULL;

    if (!pFnFindSlots)
        pFnFindSlots = (UFunction*)UObject::GObjObjects()->Data[17152];

    ACoverLink_execFindSlots_Parms FindSlots_Parms;

    pFnFindSlots->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSlots, &FindSlots_Parms, NULL);

    pFnFindSlots->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.IsStationarySlot
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void ACoverLink::IsStationarySlot() {
    static UFunction* pFnIsStationarySlot = NULL;

    if (!pFnIsStationarySlot)
        pFnIsStationarySlot = (UFunction*)UObject::GObjObjects()->Data[17149];

    ACoverLink_execIsStationarySlot_Parms IsStationarySlot_Parms;

    this->ProcessEvent(pFnIsStationarySlot, &IsStationarySlot_Parms, NULL);
};

// Function Engine.CoverLink.IsValidClaimBetween
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsValidClaimBetween() {
    static UFunction* pFnIsValidClaimBetween = NULL;

    if (!pFnIsValidClaimBetween)
        pFnIsValidClaimBetween =
            (UFunction*)UObject::GObjObjects()->Data[17142];

    ACoverLink_execIsValidClaimBetween_Parms IsValidClaimBetween_Parms;

    pFnIsValidClaimBetween->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsValidClaimBetween, &IsValidClaimBetween_Parms,
                       NULL);

    pFnIsValidClaimBetween->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.IsValidClaim
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsValidClaim() {
    static UFunction* pFnIsValidClaim = NULL;

    if (!pFnIsValidClaim)
        pFnIsValidClaim = (UFunction*)UObject::GObjObjects()->Data[17136];

    ACoverLink_execIsValidClaim_Parms IsValidClaim_Parms;

    pFnIsValidClaim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsValidClaim, &IsValidClaim_Parms, NULL);

    pFnIsValidClaim->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.UnClaim
// [0x00020903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void ACoverLink::eventUnClaim() {
    static UFunction* pFnUnClaim = NULL;

    if (!pFnUnClaim)
        pFnUnClaim = (UFunction*)UObject::GObjObjects()->Data[17124];

    ACoverLink_eventUnClaim_Parms UnClaim_Parms;

    this->ProcessEvent(pFnUnClaim, &UnClaim_Parms, NULL);
};

// Function Engine.CoverLink.Claim
// [0x00020903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void ACoverLink::eventClaim() {
    static UFunction* pFnClaim = NULL;

    if (!pFnClaim) pFnClaim = (UFunction*)UObject::GObjObjects()->Data[17111];

    ACoverLink_eventClaim_Parms Claim_Parms;

    this->ProcessEvent(pFnClaim, &Claim_Parms, NULL);
};

// Function Engine.CoverLink.SetInvalidUntil
// [0x00020903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void ACoverLink::eventSetInvalidUntil() {
    static UFunction* pFnSetInvalidUntil = NULL;

    if (!pFnSetInvalidUntil)
        pFnSetInvalidUntil = (UFunction*)UObject::GObjObjects()->Data[17108];

    ACoverLink_eventSetInvalidUntil_Parms SetInvalidUntil_Parms;

    this->ProcessEvent(pFnSetInvalidUntil, &SetInvalidUntil_Parms, NULL);
};

// Function Engine.CoverLink.IsExposedTo
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::IsExposedTo() {
    static UFunction* pFnIsExposedTo = NULL;

    if (!pFnIsExposedTo)
        pFnIsExposedTo = (UFunction*)UObject::GObjObjects()->Data[17103];

    ACoverLink_execIsExposedTo_Parms IsExposedTo_Parms;

    pFnIsExposedTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsExposedTo, &IsExposedTo_Parms, NULL);

    pFnIsExposedTo->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetSlotViewPoint
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetSlotViewPoint() {
    static UFunction* pFnGetSlotViewPoint = NULL;

    if (!pFnGetSlotViewPoint)
        pFnGetSlotViewPoint = (UFunction*)UObject::GObjObjects()->Data[17098];

    ACoverLink_execGetSlotViewPoint_Parms GetSlotViewPoint_Parms;

    pFnGetSlotViewPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSlotViewPoint, &GetSlotViewPoint_Parms, NULL);

    pFnGetSlotViewPoint->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetSlotRotation
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetSlotRotation() {
    static UFunction* pFnGetSlotRotation = NULL;

    if (!pFnGetSlotRotation)
        pFnGetSlotRotation = (UFunction*)UObject::GObjObjects()->Data[17094];

    ACoverLink_execGetSlotRotation_Parms GetSlotRotation_Parms;

    pFnGetSlotRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSlotRotation, &GetSlotRotation_Parms, NULL);

    pFnGetSlotRotation->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetSlotLocation
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACoverLink::GetSlotLocation() {
    static UFunction* pFnGetSlotLocation = NULL;

    if (!pFnGetSlotLocation)
        pFnGetSlotLocation = (UFunction*)UObject::GObjObjects()->Data[17090];

    ACoverLink_execGetSlotLocation_Parms GetSlotLocation_Parms;

    pFnGetSlotLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSlotLocation, &GetSlotLocation_Parms, NULL);

    pFnGetSlotLocation->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.UnPackFireLinkInteractionInfo
// [0x00422500] ( FUNC_Native )
// Parameters infos:

void ACoverLink::UnPackFireLinkInteractionInfo() {
    static UFunction* pFnUnPackFireLinkInteractionInfo = NULL;

    if (!pFnUnPackFireLinkInteractionInfo)
        pFnUnPackFireLinkInteractionInfo =
            (UFunction*)UObject::GObjObjects()->Data[17084];

    ACoverLink_execUnPackFireLinkInteractionInfo_Parms
        UnPackFireLinkInteractionInfo_Parms;

    pFnUnPackFireLinkInteractionInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnPackFireLinkInteractionInfo,
                       &UnPackFireLinkInteractionInfo_Parms, NULL);

    pFnUnPackFireLinkInteractionInfo->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.PackFireLinkInteractionInfo
// [0x00022500] ( FUNC_Native )
// Parameters infos:

void ACoverLink::PackFireLinkInteractionInfo() {
    static UFunction* pFnPackFireLinkInteractionInfo = NULL;

    if (!pFnPackFireLinkInteractionInfo)
        pFnPackFireLinkInteractionInfo =
            (UFunction*)UObject::GObjObjects()->Data[17078];

    ACoverLink_execPackFireLinkInteractionInfo_Parms
        PackFireLinkInteractionInfo_Parms;

    pFnPackFireLinkInteractionInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPackFireLinkInteractionInfo,
                       &PackFireLinkInteractionInfo_Parms, NULL);

    pFnPackFireLinkInteractionInfo->FunctionFlags |= 0x400;
};

// Function Engine.CoverLink.GetFireLinkTargetCoverInfo
// [0x00424500] ( FUNC_Native )
// Parameters infos:

void ACoverLink::GetFireLinkTargetCoverInfo() {
    static UFunction* pFnGetFireLinkTargetCoverInfo = NULL;

    if (!pFnGetFireLinkTargetCoverInfo)
        pFnGetFireLinkTargetCoverInfo =
            (UFunction*)UObject::GObjObjects()->Data[17072];

    ACoverLink_execGetFireLinkTargetCoverInfo_Parms
        GetFireLinkTargetCoverInfo_Parms;

    pFnGetFireLinkTargetCoverInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFireLinkTargetCoverInfo,
                       &GetFireLinkTargetCoverInfo_Parms, NULL);

    pFnGetFireLinkTargetCoverInfo->FunctionFlags |= 0x400;
};

// Function Engine.DoorMarker.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADoorMarker::eventSuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[18426];

    ADoorMarker_eventSuggestMovePreparation_Parms SuggestMovePreparation_Parms;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);
};

// Function Engine.DoorMarker.ProceedWithMove
// [0x00020002]
// Parameters infos:

void ADoorMarker::ProceedWithMove() {
    static UFunction* pFnProceedWithMove = NULL;

    if (!pFnProceedWithMove)
        pFnProceedWithMove = (UFunction*)UObject::GObjObjects()->Data[18423];

    ADoorMarker_execProceedWithMove_Parms ProceedWithMove_Parms;

    this->ProcessEvent(pFnProceedWithMove, &ProceedWithMove_Parms, NULL);
};

// Function Engine.DoorMarker.SpecialHandling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADoorMarker::eventSpecialHandling() {
    static UFunction* pFnSpecialHandling = NULL;

    if (!pFnSpecialHandling)
        pFnSpecialHandling = (UFunction*)UObject::GObjObjects()->Data[18419];

    ADoorMarker_eventSpecialHandling_Parms SpecialHandling_Parms;

    this->ProcessEvent(pFnSpecialHandling, &SpecialHandling_Parms, NULL);
};

// Function Engine.DoorMarker.MoverClosed
// [0x00020002]
// Parameters infos:

void ADoorMarker::MoverClosed() {
    static UFunction* pFnMoverClosed = NULL;

    if (!pFnMoverClosed)
        pFnMoverClosed = (UFunction*)UObject::GObjObjects()->Data[18418];

    ADoorMarker_execMoverClosed_Parms MoverClosed_Parms;

    this->ProcessEvent(pFnMoverClosed, &MoverClosed_Parms, NULL);
};

// Function Engine.DoorMarker.MoverOpened
// [0x00020002]
// Parameters infos:

void ADoorMarker::MoverOpened() {
    static UFunction* pFnMoverOpened = NULL;

    if (!pFnMoverOpened)
        pFnMoverOpened = (UFunction*)UObject::GObjObjects()->Data[18417];

    ADoorMarker_execMoverOpened_Parms MoverOpened_Parms;

    this->ProcessEvent(pFnMoverOpened, &MoverOpened_Parms, NULL);
};

// Function Engine.DoorMarker.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADoorMarker::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18416];

    ADoorMarker_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Ladder.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALadder::eventSuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[15187];

    ALadder_eventSuggestMovePreparation_Parms SuggestMovePreparation_Parms;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);
};

// Function Engine.LiftCenter.ProceedWithMove
// [0x00020002]
// Parameters infos:

void ALiftCenter::ProceedWithMove() {
    static UFunction* pFnProceedWithMove = NULL;

    if (!pFnProceedWithMove)
        pFnProceedWithMove = (UFunction*)UObject::GObjObjects()->Data[24709];

    ALiftCenter_execProceedWithMove_Parms ProceedWithMove_Parms;

    this->ProcessEvent(pFnProceedWithMove, &ProceedWithMove_Parms, NULL);
};

// Function Engine.LiftCenter.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALiftCenter::eventSuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[24706];

    ALiftCenter_eventSuggestMovePreparation_Parms SuggestMovePreparation_Parms;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);
};

// Function Engine.LiftCenter.SpecialHandling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALiftCenter::eventSpecialHandling() {
    static UFunction* pFnSpecialHandling = NULL;

    if (!pFnSpecialHandling)
        pFnSpecialHandling = (UFunction*)UObject::GObjObjects()->Data[24703];

    ALiftCenter_eventSpecialHandling_Parms SpecialHandling_Parms;

    this->ProcessEvent(pFnSpecialHandling, &SpecialHandling_Parms, NULL);
};

// Function Engine.LiftCenter.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALiftCenter::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[24702];

    ALiftCenter_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.LiftExit.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALiftExit::eventSuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[24721];

    ALiftExit_eventSuggestMovePreparation_Parms SuggestMovePreparation_Parms;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);
};

// Function Engine.LiftExit.WaitForLift
// [0x00020002]
// Parameters infos:

void ALiftExit::WaitForLift() {
    static UFunction* pFnWaitForLift = NULL;

    if (!pFnWaitForLift)
        pFnWaitForLift = (UFunction*)UObject::GObjObjects()->Data[24719];

    ALiftExit_execWaitForLift_Parms WaitForLift_Parms;

    this->ProcessEvent(pFnWaitForLift, &WaitForLift_Parms, NULL);
};

// Function Engine.LiftExit.CanBeReachedFromLiftBy
// [0x00020002]
// Parameters infos:

void ALiftExit::CanBeReachedFromLiftBy() {
    static UFunction* pFnCanBeReachedFromLiftBy = NULL;

    if (!pFnCanBeReachedFromLiftBy)
        pFnCanBeReachedFromLiftBy =
            (UFunction*)UObject::GObjObjects()->Data[24712];

    ALiftExit_execCanBeReachedFromLiftBy_Parms CanBeReachedFromLiftBy_Parms;

    this->ProcessEvent(pFnCanBeReachedFromLiftBy, &CanBeReachedFromLiftBy_Parms,
                       NULL);
};

// Function Engine.PathNode.GetDebugAbbrev
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APathNode::eventGetDebugAbbrev() {
    static UFunction* pFnGetDebugAbbrev = NULL;

    if (!pFnGetDebugAbbrev)
        pFnGetDebugAbbrev = (UFunction*)UObject::GObjObjects()->Data[30816];

    APathNode_eventGetDebugAbbrev_Parms GetDebugAbbrev_Parms;

    this->ProcessEvent(pFnGetDebugAbbrev, &GetDebugAbbrev_Parms, NULL);
};

// Function Engine.PickupFactory.DelayRespawn
// [0x00020002]
// Parameters infos:

void APickupFactory::DelayRespawn() {
    static UFunction* pFnDelayRespawn = NULL;

    if (!pFnDelayRespawn)
        pFnDelayRespawn = (UFunction*)UObject::GObjObjects()->Data[31348];

    APickupFactory_execDelayRespawn_Parms DelayRespawn_Parms;

    this->ProcessEvent(pFnDelayRespawn, &DelayRespawn_Parms, NULL);
};

// Function Engine.PickupFactory.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APickupFactory::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[31338];

    APickupFactory_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.PickupFactory.SetPickupVisible
// [0x00020102]
// Parameters infos:

void APickupFactory::SetPickupVisible() {
    static UFunction* pFnSetPickupVisible = NULL;

    if (!pFnSetPickupVisible)
        pFnSetPickupVisible = (UFunction*)UObject::GObjObjects()->Data[31337];

    APickupFactory_execSetPickupVisible_Parms SetPickupVisible_Parms;

    this->ProcessEvent(pFnSetPickupVisible, &SetPickupVisible_Parms, NULL);
};

// Function Engine.PickupFactory.SetPickupHidden
// [0x00020102]
// Parameters infos:

void APickupFactory::SetPickupHidden() {
    static UFunction* pFnSetPickupHidden = NULL;

    if (!pFnSetPickupHidden)
        pFnSetPickupHidden = (UFunction*)UObject::GObjObjects()->Data[31336];

    APickupFactory_execSetPickupHidden_Parms SetPickupHidden_Parms;

    this->ProcessEvent(pFnSetPickupHidden, &SetPickupHidden_Parms, NULL);
};

// Function Engine.PickupFactory.RespawnEffect
// [0x00020000]
// Parameters infos:

void APickupFactory::RespawnEffect() {
    static UFunction* pFnRespawnEffect = NULL;

    if (!pFnRespawnEffect)
        pFnRespawnEffect = (UFunction*)UObject::GObjObjects()->Data[31335];

    APickupFactory_execRespawnEffect_Parms RespawnEffect_Parms;

    this->ProcessEvent(pFnRespawnEffect, &RespawnEffect_Parms, NULL);
};

// Function Engine.PickupFactory.GetRespawnTime
// [0x00020002]
// Parameters infos:

void APickupFactory::GetRespawnTime() {
    static UFunction* pFnGetRespawnTime = NULL;

    if (!pFnGetRespawnTime)
        pFnGetRespawnTime = (UFunction*)UObject::GObjObjects()->Data[31333];

    APickupFactory_execGetRespawnTime_Parms GetRespawnTime_Parms;

    this->ProcessEvent(pFnGetRespawnTime, &GetRespawnTime_Parms, NULL);
};

// Function Engine.PickupFactory.RecheckValidTouch
// [0x00020000]
// Parameters infos:

void APickupFactory::RecheckValidTouch() {
    static UFunction* pFnRecheckValidTouch = NULL;

    if (!pFnRecheckValidTouch)
        pFnRecheckValidTouch = (UFunction*)UObject::GObjObjects()->Data[31310];

    APickupFactory_execRecheckValidTouch_Parms RecheckValidTouch_Parms;

    this->ProcessEvent(pFnRecheckValidTouch, &RecheckValidTouch_Parms, NULL);
};

// Function Engine.PickupFactory.PickedUpBy
// [0x00020002]
// Parameters infos:

void APickupFactory::PickedUpBy() {
    static UFunction* pFnPickedUpBy = NULL;

    if (!pFnPickedUpBy)
        pFnPickedUpBy = (UFunction*)UObject::GObjObjects()->Data[31308];

    APickupFactory_execPickedUpBy_Parms PickedUpBy_Parms;

    this->ProcessEvent(pFnPickedUpBy, &PickedUpBy_Parms, NULL);
};

// Function Engine.PickupFactory.GiveTo
// [0x00020002]
// Parameters infos:

void APickupFactory::GiveTo() {
    static UFunction* pFnGiveTo = NULL;

    if (!pFnGiveTo) pFnGiveTo = (UFunction*)UObject::GObjObjects()->Data[31306];

    APickupFactory_execGiveTo_Parms GiveTo_Parms;

    this->ProcessEvent(pFnGiveTo, &GiveTo_Parms, NULL);
};

// Function Engine.PickupFactory.ReadyToPickup
// [0x00020002]
// Parameters infos:

void APickupFactory::ReadyToPickup() {
    static UFunction* pFnReadyToPickup = NULL;

    if (!pFnReadyToPickup)
        pFnReadyToPickup = (UFunction*)UObject::GObjObjects()->Data[31303];

    APickupFactory_execReadyToPickup_Parms ReadyToPickup_Parms;

    this->ProcessEvent(pFnReadyToPickup, &ReadyToPickup_Parms, NULL);
};

// Function Engine.PickupFactory.SpawnCopyFor
// [0x00020002]
// Parameters infos:

void APickupFactory::SpawnCopyFor() {
    static UFunction* pFnSpawnCopyFor = NULL;

    if (!pFnSpawnCopyFor)
        pFnSpawnCopyFor = (UFunction*)UObject::GObjObjects()->Data[31300];

    APickupFactory_execSpawnCopyFor_Parms SpawnCopyFor_Parms;

    this->ProcessEvent(pFnSpawnCopyFor, &SpawnCopyFor_Parms, NULL);
};

// Function Engine.PickupFactory.DetourWeight
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APickupFactory::eventDetourWeight() {
    static UFunction* pFnDetourWeight = NULL;

    if (!pFnDetourWeight)
        pFnDetourWeight = (UFunction*)UObject::GObjObjects()->Data[31296];

    APickupFactory_eventDetourWeight_Parms DetourWeight_Parms;

    this->ProcessEvent(pFnDetourWeight, &DetourWeight_Parms, NULL);
};

// Function Engine.PickupFactory.StartSleeping
// [0x00020002]
// Parameters infos:

void APickupFactory::StartSleeping() {
    static UFunction* pFnStartSleeping = NULL;

    if (!pFnStartSleeping)
        pFnStartSleeping = (UFunction*)UObject::GObjObjects()->Data[31295];

    APickupFactory_execStartSleeping_Parms StartSleeping_Parms;

    this->ProcessEvent(pFnStartSleeping, &StartSleeping_Parms, NULL);
};

// Function Engine.PickupFactory.SetRespawn
// [0x00020002]
// Parameters infos:

void APickupFactory::SetRespawn() {
    static UFunction* pFnSetRespawn = NULL;

    if (!pFnSetRespawn)
        pFnSetRespawn = (UFunction*)UObject::GObjObjects()->Data[31294];

    APickupFactory_execSetRespawn_Parms SetRespawn_Parms;

    this->ProcessEvent(pFnSetRespawn, &SetRespawn_Parms, NULL);
};

// Function Engine.PickupFactory.CheckForErrors
// [0x00820002]
// Parameters infos:

void APickupFactory::CheckForErrors() {
    static UFunction* pFnCheckForErrors = NULL;

    if (!pFnCheckForErrors)
        pFnCheckForErrors = (UFunction*)UObject::GObjObjects()->Data[31289];

    APickupFactory_execCheckForErrors_Parms CheckForErrors_Parms;

    this->ProcessEvent(pFnCheckForErrors, &CheckForErrors_Parms, NULL);
};

// Function Engine.PickupFactory.Reset
// [0x00020002]
// Parameters infos:

void APickupFactory::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[31288];

    APickupFactory_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.PickupFactory.SetPickupMesh
// [0x00020102]
// Parameters infos:

void APickupFactory::SetPickupMesh() {
    static UFunction* pFnSetPickupMesh = NULL;

    if (!pFnSetPickupMesh)
        pFnSetPickupMesh = (UFunction*)UObject::GObjObjects()->Data[31287];

    APickupFactory_execSetPickupMesh_Parms SetPickupMesh_Parms;

    this->ProcessEvent(pFnSetPickupMesh, &SetPickupMesh_Parms, NULL);
};

// Function Engine.PickupFactory.ShutDown
// [0x00020102]
// Parameters infos:

void APickupFactory::ShutDown() {
    static UFunction* pFnShutDown = NULL;

    if (!pFnShutDown)
        pFnShutDown = (UFunction*)UObject::GObjObjects()->Data[31286];

    APickupFactory_execShutDown_Parms ShutDown_Parms;

    this->ProcessEvent(pFnShutDown, &ShutDown_Parms, NULL);
};

// Function Engine.PickupFactory.SetInitialState
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APickupFactory::eventSetInitialState() {
    static UFunction* pFnSetInitialState = NULL;

    if (!pFnSetInitialState)
        pFnSetInitialState = (UFunction*)UObject::GObjObjects()->Data[31285];

    APickupFactory_eventSetInitialState_Parms SetInitialState_Parms;

    this->ProcessEvent(pFnSetInitialState, &SetInitialState_Parms, NULL);
};

// Function Engine.PickupFactory.InitializePickup
// [0x00020102]
// Parameters infos:

void APickupFactory::InitializePickup() {
    static UFunction* pFnInitializePickup = NULL;

    if (!pFnInitializePickup)
        pFnInitializePickup = (UFunction*)UObject::GObjObjects()->Data[31284];

    APickupFactory_execInitializePickup_Parms InitializePickup_Parms;

    this->ProcessEvent(pFnInitializePickup, &InitializePickup_Parms, NULL);
};

// Function Engine.PickupFactory.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APickupFactory::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[31283];

    APickupFactory_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.PickupFactory.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APickupFactory::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[31281];

    APickupFactory_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.PlayerStart.PostRenderFor
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void APlayerStart::eventPostRenderFor() {
    static UFunction* pFnPostRenderFor = NULL;

    if (!pFnPostRenderFor)
        pFnPostRenderFor = (UFunction*)UObject::GObjObjects()->Data[31576];

    APlayerStart_eventPostRenderFor_Parms PostRenderFor_Parms;

    this->ProcessEvent(pFnPostRenderFor, &PostRenderFor_Parms, NULL);
};

// Function Engine.PlayerStart.OnToggle
// [0x00020102]
// Parameters infos:

void APlayerStart::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[31574];

    APlayerStart_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.PortalMarker.CanTeleport
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APortalMarker::CanTeleport() {
    static UFunction* pFnCanTeleport = NULL;

    if (!pFnCanTeleport)
        pFnCanTeleport = (UFunction*)UObject::GObjObjects()->Data[31852];

    APortalMarker_execCanTeleport_Parms CanTeleport_Parms;

    pFnCanTeleport->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanTeleport, &CanTeleport_Parms, NULL);

    pFnCanTeleport->FunctionFlags |= 0x400;
};

// Function Engine.Pylon.CanReachPylon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APylon::CanReachPylon() {
    static UFunction* pFnCanReachPylon = NULL;

    if (!pFnCanReachPylon)
        pFnCanReachPylon = (UFunction*)UObject::GObjObjects()->Data[13110];

    APylon_execCanReachPylon_Parms CanReachPylon_Parms;

    pFnCanReachPylon->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanReachPylon, &CanReachPylon_Parms, NULL);

    pFnCanReachPylon->FunctionFlags |= 0x400;
};

// Function Engine.Pylon.OnToggle
// [0x00020002]
// Parameters infos:

void APylon::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[13108];

    APylon_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.Pylon.IsEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APylon::eventIsEnabled() {
    static UFunction* pFnIsEnabled = NULL;

    if (!pFnIsEnabled)
        pFnIsEnabled = (UFunction*)UObject::GObjObjects()->Data[13106];

    APylon_eventIsEnabled_Parms IsEnabled_Parms;

    this->ProcessEvent(pFnIsEnabled, &IsEnabled_Parms, NULL);
};

// Function Engine.Pylon.SetEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APylon::eventSetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[13104];

    APylon_eventSetEnabled_Parms SetEnabled_Parms;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);
};

// Function Engine.Pylon.PostBeginPlay
// [0x00020002]
// Parameters infos:

void APylon::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[13103];

    APylon_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Pylon.NotifyPathChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APylon::eventNotifyPathChanged() {
    static UFunction* pFnNotifyPathChanged = NULL;

    if (!pFnNotifyPathChanged)
        pFnNotifyPathChanged = (UFunction*)UObject::GObjObjects()->Data[13102];

    APylon_eventNotifyPathChanged_Parms NotifyPathChanged_Parms;

    this->ProcessEvent(pFnNotifyPathChanged, &NotifyPathChanged_Parms, NULL);
};

// Function Engine.Pylon.VerifyTopLevelConnections
// [0x00020002]
// Parameters infos:

void APylon::VerifyTopLevelConnections() {
    static UFunction* pFnVerifyTopLevelConnections = NULL;

    if (!pFnVerifyTopLevelConnections)
        pFnVerifyTopLevelConnections =
            (UFunction*)UObject::GObjObjects()->Data[13092];

    APylon_execVerifyTopLevelConnections_Parms VerifyTopLevelConnections_Parms;

    this->ProcessEvent(pFnVerifyTopLevelConnections,
                       &VerifyTopLevelConnections_Parms, NULL);
};

// Function Engine.Pylon.GetTestPathExtent
// [0x00820002]
// Parameters infos:

void APylon::GetTestPathExtent() {
    static UFunction* pFnGetTestPathExtent = NULL;

    if (!pFnGetTestPathExtent)
        pFnGetTestPathExtent = (UFunction*)UObject::GObjObjects()->Data[13088];

    APylon_execGetTestPathExtent_Parms GetTestPathExtent_Parms;

    this->ProcessEvent(pFnGetTestPathExtent, &GetTestPathExtent_Parms, NULL);
};

// Function Engine.Pylon.FlushDynamicEdges
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APylon::FlushDynamicEdges() {
    static UFunction* pFnFlushDynamicEdges = NULL;

    if (!pFnFlushDynamicEdges)
        pFnFlushDynamicEdges = (UFunction*)UObject::GObjObjects()->Data[13087];

    APylon_execFlushDynamicEdges_Parms FlushDynamicEdges_Parms;

    pFnFlushDynamicEdges->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFlushDynamicEdges, &FlushDynamicEdges_Parms, NULL);

    pFnFlushDynamicEdges->FunctionFlags |= 0x400;
};

// Function Engine.Pylon.UpdateMeshForPreExistingNavMeshObstacles
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APylon::UpdateMeshForPreExistingNavMeshObstacles() {
    static UFunction* pFnUpdateMeshForPreExistingNavMeshObstacles = NULL;

    if (!pFnUpdateMeshForPreExistingNavMeshObstacles)
        pFnUpdateMeshForPreExistingNavMeshObstacles =
            (UFunction*)UObject::GObjObjects()->Data[13086];

    APylon_execUpdateMeshForPreExistingNavMeshObstacles_Parms
        UpdateMeshForPreExistingNavMeshObstacles_Parms;

    pFnUpdateMeshForPreExistingNavMeshObstacles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMeshForPreExistingNavMeshObstacles,
                       &UpdateMeshForPreExistingNavMeshObstacles_Parms, NULL);

    pFnUpdateMeshForPreExistingNavMeshObstacles->FunctionFlags |= 0x400;
};

// Function Engine.Pylon.OnPylonStatusChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APylon::OnPylonStatusChange() {
    static UFunction* pFnOnPylonStatusChange = NULL;

    if (!pFnOnPylonStatusChange)
        pFnOnPylonStatusChange =
            (UFunction*)UObject::GObjObjects()->Data[13085];

    APylon_execOnPylonStatusChange_Parms OnPylonStatusChange_Parms;

    pFnOnPylonStatusChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOnPylonStatusChange, &OnPylonStatusChange_Parms,
                       NULL);

    pFnOnPylonStatusChange->FunctionFlags |= 0x400;
};

// Function Engine.AISwitchablePylon.IsEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAISwitchablePylon::eventIsEnabled() {
    static UFunction* pFnIsEnabled = NULL;

    if (!pFnIsEnabled)
        pFnIsEnabled = (UFunction*)UObject::GObjObjects()->Data[13130];

    AAISwitchablePylon_eventIsEnabled_Parms IsEnabled_Parms;

    this->ProcessEvent(pFnIsEnabled, &IsEnabled_Parms, NULL);
};

// Function Engine.AISwitchablePylon.SetEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAISwitchablePylon::eventSetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[13128];

    AAISwitchablePylon_eventSetEnabled_Parms SetEnabled_Parms;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);
};

// Function Engine.AISwitchablePylon.PostBeginPlay
// [0x00020002]
// Parameters infos:

void AAISwitchablePylon::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[13127];

    AAISwitchablePylon_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.DynamicPylon.StoppedMoving
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADynamicPylon::eventStoppedMoving() {
    static UFunction* pFnStoppedMoving = NULL;

    if (!pFnStoppedMoving)
        pFnStoppedMoving = (UFunction*)UObject::GObjObjects()->Data[18619];

    ADynamicPylon_eventStoppedMoving_Parms StoppedMoving_Parms;

    this->ProcessEvent(pFnStoppedMoving, &StoppedMoving_Parms, NULL);
};

// Function Engine.DynamicPylon.StartedMoving
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADynamicPylon::eventStartedMoving() {
    static UFunction* pFnStartedMoving = NULL;

    if (!pFnStartedMoving)
        pFnStartedMoving = (UFunction*)UObject::GObjObjects()->Data[18618];

    ADynamicPylon_eventStartedMoving_Parms StartedMoving_Parms;

    this->ProcessEvent(pFnStartedMoving, &StartedMoving_Parms, NULL);
};

// Function Engine.DynamicPylon.FlushDynamicEdges
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ADynamicPylon::FlushDynamicEdges() {
    static UFunction* pFnFlushDynamicEdges = NULL;

    if (!pFnFlushDynamicEdges)
        pFnFlushDynamicEdges = (UFunction*)UObject::GObjObjects()->Data[18617];

    ADynamicPylon_execFlushDynamicEdges_Parms FlushDynamicEdges_Parms;

    pFnFlushDynamicEdges->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFlushDynamicEdges, &FlushDynamicEdges_Parms, NULL);

    pFnFlushDynamicEdges->FunctionFlags |= 0x400;
};

// Function Engine.DynamicPylon.RebuildDynamicEdges
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ADynamicPylon::RebuildDynamicEdges() {
    static UFunction* pFnRebuildDynamicEdges = NULL;

    if (!pFnRebuildDynamicEdges)
        pFnRebuildDynamicEdges =
            (UFunction*)UObject::GObjObjects()->Data[18616];

    ADynamicPylon_execRebuildDynamicEdges_Parms RebuildDynamicEdges_Parms;

    pFnRebuildDynamicEdges->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRebuildDynamicEdges, &RebuildDynamicEdges_Parms,
                       NULL);

    pFnRebuildDynamicEdges->FunctionFlags |= 0x400;
};

// Function Engine.DynamicPylon.PostBeginPlay
// [0x00020002]
// Parameters infos:

void ADynamicPylon::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18615];

    ADynamicPylon_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Teleporter.SpecialHandling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATeleporter::eventSpecialHandling() {
    static UFunction* pFnSpecialHandling = NULL;

    if (!pFnSpecialHandling)
        pFnSpecialHandling = (UFunction*)UObject::GObjObjects()->Data[35171];

    ATeleporter_eventSpecialHandling_Parms SpecialHandling_Parms;

    this->ProcessEvent(pFnSpecialHandling, &SpecialHandling_Parms, NULL);
};

// Function Engine.Teleporter.PostTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATeleporter::eventPostTouch() {
    static UFunction* pFnPostTouch = NULL;

    if (!pFnPostTouch)
        pFnPostTouch = (UFunction*)UObject::GObjObjects()->Data[35166];

    ATeleporter_eventPostTouch_Parms PostTouch_Parms;

    this->ProcessEvent(pFnPostTouch, &PostTouch_Parms, NULL);
};

// Function Engine.Teleporter.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATeleporter::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[35161];

    ATeleporter_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.Teleporter.Accept
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void ATeleporter::eventAccept() {
    static UFunction* pFnAccept = NULL;

    if (!pFnAccept) pFnAccept = (UFunction*)UObject::GObjObjects()->Data[35152];

    ATeleporter_eventAccept_Parms Accept_Parms;

    this->ProcessEvent(pFnAccept, &Accept_Parms, NULL);
};

// Function Engine.Teleporter.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATeleporter::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[35151];

    ATeleporter_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Teleporter.CanTeleport
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATeleporter::CanTeleport() {
    static UFunction* pFnCanTeleport = NULL;

    if (!pFnCanTeleport)
        pFnCanTeleport = (UFunction*)UObject::GObjObjects()->Data[35148];

    ATeleporter_execCanTeleport_Parms CanTeleport_Parms;

    pFnCanTeleport->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanTeleport, &CanTeleport_Parms, NULL);

    pFnCanTeleport->FunctionFlags |= 0x400;
};

// Function Engine.Projectile.ApplyFluidSurfaceImpact
// [0x00020102]
// Parameters infos:

void AProjectile::ApplyFluidSurfaceImpact() {
    static UFunction* pFnApplyFluidSurfaceImpact = NULL;

    if (!pFnApplyFluidSurfaceImpact)
        pFnApplyFluidSurfaceImpact =
            (UFunction*)UObject::GObjObjects()->Data[32111];

    AProjectile_execApplyFluidSurfaceImpact_Parms ApplyFluidSurfaceImpact_Parms;

    this->ProcessEvent(pFnApplyFluidSurfaceImpact,
                       &ApplyFluidSurfaceImpact_Parms, NULL);
};

// Function Engine.Projectile.GetRange
// [0x00022102]
// Parameters infos:

void AProjectile::GetRange() {
    static UFunction* pFnGetRange = NULL;

    if (!pFnGetRange)
        pFnGetRange = (UFunction*)UObject::GObjObjects()->Data[32109];

    AProjectile_execGetRange_Parms GetRange_Parms;

    this->ProcessEvent(pFnGetRange, &GetRange_Parms, NULL);
};

// Function Engine.Projectile.StaticGetTimeToLocation
// [0x00022102]
// Parameters infos:

void AProjectile::StaticGetTimeToLocation() {
    static UFunction* pFnStaticGetTimeToLocation = NULL;

    if (!pFnStaticGetTimeToLocation)
        pFnStaticGetTimeToLocation =
            (UFunction*)UObject::GObjObjects()->Data[32104];

    AProjectile_execStaticGetTimeToLocation_Parms StaticGetTimeToLocation_Parms;

    this->ProcessEvent(pFnStaticGetTimeToLocation,
                       &StaticGetTimeToLocation_Parms, NULL);
};

// Function Engine.Projectile.GetTimeToLocation
// [0x00020102]
// Parameters infos:

void AProjectile::GetTimeToLocation() {
    static UFunction* pFnGetTimeToLocation = NULL;

    if (!pFnGetTimeToLocation)
        pFnGetTimeToLocation = (UFunction*)UObject::GObjObjects()->Data[32101];

    AProjectile_execGetTimeToLocation_Parms GetTimeToLocation_Parms;

    this->ProcessEvent(pFnGetTimeToLocation, &GetTimeToLocation_Parms, NULL);
};

// Function Engine.Projectile.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventFellOutOfWorld() {
    static UFunction* pFnFellOutOfWorld = NULL;

    if (!pFnFellOutOfWorld)
        pFnFellOutOfWorld = (UFunction*)UObject::GObjObjects()->Data[32099];

    AProjectile_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;

    this->ProcessEvent(pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL);
};

// Function Engine.Projectile.IsStationary
// [0x00020002]
// Parameters infos:

void AProjectile::IsStationary() {
    static UFunction* pFnIsStationary = NULL;

    if (!pFnIsStationary)
        pFnIsStationary = (UFunction*)UObject::GObjObjects()->Data[32097];

    AProjectile_execIsStationary_Parms IsStationary_Parms;

    this->ProcessEvent(pFnIsStationary, &IsStationary_Parms, NULL);
};

// Function Engine.Projectile.RandSpin
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AProjectile::RandSpin() {
    static UFunction* pFnRandSpin = NULL;

    if (!pFnRandSpin)
        pFnRandSpin = (UFunction*)UObject::GObjObjects()->Data[32095];

    AProjectile_execRandSpin_Parms RandSpin_Parms;

    this->ProcessEvent(pFnRandSpin, &RandSpin_Parms, NULL);
};

// Function Engine.Projectile.Explode
// [0x00020102]
// Parameters infos:

void AProjectile::Explode() {
    static UFunction* pFnExplode = NULL;

    if (!pFnExplode)
        pFnExplode = (UFunction*)UObject::GObjObjects()->Data[32092];

    AProjectile_execExplode_Parms Explode_Parms;

    this->ProcessEvent(pFnExplode, &Explode_Parms, NULL);
};

// Function Engine.Projectile.EncroachedBy
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventEncroachedBy() {
    static UFunction* pFnEncroachedBy = NULL;

    if (!pFnEncroachedBy)
        pFnEncroachedBy = (UFunction*)UObject::GObjObjects()->Data[32090];

    AProjectile_eventEncroachedBy_Parms EncroachedBy_Parms;

    this->ProcessEvent(pFnEncroachedBy, &EncroachedBy_Parms, NULL);
};

// Function Engine.Projectile.HitWall
// [0x00020922] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventHitWall() {
    static UFunction* pFnHitWall = NULL;

    if (!pFnHitWall)
        pFnHitWall = (UFunction*)UObject::GObjObjects()->Data[32084];

    AProjectile_eventHitWall_Parms HitWall_Parms;

    this->ProcessEvent(pFnHitWall, &HitWall_Parms, NULL);
};

// Function Engine.Projectile.ProcessTouch
// [0x00020102]
// Parameters infos:

void AProjectile::ProcessTouch() {
    static UFunction* pFnProcessTouch = NULL;

    if (!pFnProcessTouch)
        pFnProcessTouch = (UFunction*)UObject::GObjObjects()->Data[32080];

    AProjectile_execProcessTouch_Parms ProcessTouch_Parms;

    this->ProcessEvent(pFnProcessTouch, &ProcessTouch_Parms, NULL);
};

// Function Engine.Projectile.Touch
// [0x00020922] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[32075];

    AProjectile_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.Projectile.HurtRadius
// [0x00024102]
// Parameters infos:

void AProjectile::HurtRadius() {
    static UFunction* pFnHurtRadius = NULL;

    if (!pFnHurtRadius)
        pFnHurtRadius = (UFunction*)UObject::GObjObjects()->Data[32063];

    AProjectile_execHurtRadius_Parms HurtRadius_Parms;

    this->ProcessEvent(pFnHurtRadius, &HurtRadius_Parms, NULL);
};

// Function Engine.Projectile.ProjectileHurtRadius
// [0x00820102]
// Parameters infos:

void AProjectile::ProjectileHurtRadius() {
    static UFunction* pFnProjectileHurtRadius = NULL;

    if (!pFnProjectileHurtRadius)
        pFnProjectileHurtRadius =
            (UFunction*)UObject::GObjObjects()->Data[32055];

    AProjectile_execProjectileHurtRadius_Parms ProjectileHurtRadius_Parms;

    this->ProcessEvent(pFnProjectileHurtRadius, &ProjectileHurtRadius_Parms,
                       NULL);
};

// Function Engine.Projectile.Reset
// [0x00020002]
// Parameters infos:

void AProjectile::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[32054];

    AProjectile_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.Projectile.CanSplash
// [0x00020102]
// Parameters infos:

void AProjectile::CanSplash() {
    static UFunction* pFnCanSplash = NULL;

    if (!pFnCanSplash)
        pFnCanSplash = (UFunction*)UObject::GObjObjects()->Data[32052];

    AProjectile_execCanSplash_Parms CanSplash_Parms;

    this->ProcessEvent(pFnCanSplash, &CanSplash_Parms, NULL);
};

// Function Engine.Projectile.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AProjectile::GetTeamNum() {
    static UFunction* pFnGetTeamNum = NULL;

    if (!pFnGetTeamNum)
        pFnGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[32050];

    AProjectile_execGetTeamNum_Parms GetTeamNum_Parms;

    pFnGetTeamNum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTeamNum, &GetTeamNum_Parms, NULL);

    pFnGetTeamNum->FunctionFlags |= 0x400;
};

// Function Engine.Projectile.Init
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AProjectile::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[32048];

    AProjectile_execInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.Projectile.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[32047];

    AProjectile_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Projectile.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[32046];

    AProjectile_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.Projectile.EncroachingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AProjectile::eventEncroachingOn() {
    static UFunction* pFnEncroachingOn = NULL;

    if (!pFnEncroachingOn)
        pFnEncroachingOn = (UFunction*)UObject::GObjObjects()->Data[32043];

    AProjectile_eventEncroachingOn_Parms EncroachingOn_Parms;

    this->ProcessEvent(pFnEncroachingOn, &EncroachingOn_Parms, NULL);
};

// Function Engine.SceneCaptureActor.OnToggle
// [0x00020102]
// Parameters infos:

void ASceneCaptureActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[31857];

    ASceneCaptureActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.PortalTeleporter.StopsProjectile
// [0x00020102]
// Parameters infos:

void APortalTeleporter::StopsProjectile() {
    static UFunction* pFnStopsProjectile = NULL;

    if (!pFnStopsProjectile)
        pFnStopsProjectile = (UFunction*)UObject::GObjObjects()->Data[31917];

    APortalTeleporter_execStopsProjectile_Parms StopsProjectile_Parms;

    this->ProcessEvent(pFnStopsProjectile, &StopsProjectile_Parms, NULL);
};

// Function Engine.PortalTeleporter.CreatePortalTexture
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APortalTeleporter::CreatePortalTexture() {
    static UFunction* pFnCreatePortalTexture = NULL;

    if (!pFnCreatePortalTexture)
        pFnCreatePortalTexture =
            (UFunction*)UObject::GObjObjects()->Data[31915];

    APortalTeleporter_execCreatePortalTexture_Parms CreatePortalTexture_Parms;

    pFnCreatePortalTexture->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreatePortalTexture, &CreatePortalTexture_Parms,
                       NULL);

    pFnCreatePortalTexture->FunctionFlags |= 0x400;
};

// Function Engine.PortalTeleporter.TransformHitLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APortalTeleporter::TransformHitLocation() {
    static UFunction* pFnTransformHitLocation = NULL;

    if (!pFnTransformHitLocation)
        pFnTransformHitLocation =
            (UFunction*)UObject::GObjObjects()->Data[31912];

    APortalTeleporter_execTransformHitLocation_Parms TransformHitLocation_Parms;

    pFnTransformHitLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTransformHitLocation, &TransformHitLocation_Parms,
                       NULL);

    pFnTransformHitLocation->FunctionFlags |= 0x400;
};

// Function Engine.PortalTeleporter.TransformVectorDir
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APortalTeleporter::TransformVectorDir() {
    static UFunction* pFnTransformVectorDir = NULL;

    if (!pFnTransformVectorDir)
        pFnTransformVectorDir = (UFunction*)UObject::GObjObjects()->Data[31909];

    APortalTeleporter_execTransformVectorDir_Parms TransformVectorDir_Parms;

    pFnTransformVectorDir->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTransformVectorDir, &TransformVectorDir_Parms, NULL);

    pFnTransformVectorDir->FunctionFlags |= 0x400;
};

// Function Engine.PortalTeleporter.TransformActor
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APortalTeleporter::TransformActor() {
    static UFunction* pFnTransformActor = NULL;

    if (!pFnTransformActor)
        pFnTransformActor = (UFunction*)UObject::GObjObjects()->Data[31906];

    APortalTeleporter_execTransformActor_Parms TransformActor_Parms;

    pFnTransformActor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTransformActor, &TransformActor_Parms, NULL);

    pFnTransformActor->FunctionFlags |= 0x400;
};

// Function Engine.StaticMeshActor.Reset
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AStaticMeshActor::eventReset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[23495];

    AStaticMeshActor_eventReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.StaticMeshActor.ResetToDefaults
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AStaticMeshActor::ResetToDefaults() {
    static UFunction* pFnResetToDefaults = NULL;

    if (!pFnResetToDefaults)
        pFnResetToDefaults = (UFunction*)UObject::GObjObjects()->Data[23494];

    AStaticMeshActor_execResetToDefaults_Parms ResetToDefaults_Parms;

    pFnResetToDefaults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetToDefaults, &ResetToDefaults_Parms, NULL);

    pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function Engine.StaticMeshActor.PreBeginPlay
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AStaticMeshActor::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[23493];

    AStaticMeshActor_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function
// Engine.StaticMeshActorBasedOnExtremeContent.SetMaterialBasedOnExtremeContent
// [0x00020102]
// Parameters infos:

void AStaticMeshActorBasedOnExtremeContent::SetMaterialBasedOnExtremeContent() {
    static UFunction* pFnSetMaterialBasedOnExtremeContent = NULL;

    if (!pFnSetMaterialBasedOnExtremeContent)
        pFnSetMaterialBasedOnExtremeContent =
            (UFunction*)UObject::GObjObjects()->Data[34608];

    AStaticMeshActorBasedOnExtremeContent_execSetMaterialBasedOnExtremeContent_Parms
        SetMaterialBasedOnExtremeContent_Parms;

    this->ProcessEvent(pFnSetMaterialBasedOnExtremeContent,
                       &SetMaterialBasedOnExtremeContent_Parms, NULL);
};

// Function Engine.StaticMeshActorBasedOnExtremeContent.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AStaticMeshActorBasedOnExtremeContent::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[34607];

    AStaticMeshActorBasedOnExtremeContent_eventPostBeginPlay_Parms
        PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Trigger.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ATrigger::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[35463];

    ATrigger_execApplyCheckpointRecord_Parms ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.Trigger.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ATrigger::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[35461];

    ATrigger_execCreateCheckpointRecord_Parms CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.Trigger.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void ATrigger::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[35459];

    ATrigger_execShouldSaveForCheckpoint_Parms ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.Trigger.StopsProjectile
// [0x00020102]
// Parameters infos:

void ATrigger::StopsProjectile() {
    static UFunction* pFnStopsProjectile = NULL;

    if (!pFnStopsProjectile)
        pFnStopsProjectile = (UFunction*)UObject::GObjObjects()->Data[35456];

    ATrigger_execStopsProjectile_Parms StopsProjectile_Parms;

    this->ProcessEvent(pFnStopsProjectile, &StopsProjectile_Parms, NULL);
};

// Function Engine.Trigger.UnTrigger
// [0x00020002]
// Parameters infos:

void ATrigger::UnTrigger() {
    static UFunction* pFnUnTrigger = NULL;

    if (!pFnUnTrigger)
        pFnUnTrigger = (UFunction*)UObject::GObjObjects()->Data[35455];

    ATrigger_execUnTrigger_Parms UnTrigger_Parms;

    this->ProcessEvent(pFnUnTrigger, &UnTrigger_Parms, NULL);
};

// Function Engine.Trigger.NotifyTriggered
// [0x00020002]
// Parameters infos:

void ATrigger::NotifyTriggered() {
    static UFunction* pFnNotifyTriggered = NULL;

    if (!pFnNotifyTriggered)
        pFnNotifyTriggered = (UFunction*)UObject::GObjObjects()->Data[35454];

    ATrigger_execNotifyTriggered_Parms NotifyTriggered_Parms;

    this->ProcessEvent(pFnNotifyTriggered, &NotifyTriggered_Parms, NULL);
};

// Function Engine.Trigger.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATrigger::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[35449];

    ATrigger_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.Trigger.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATrigger::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[35448];

    ATrigger_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.ActorComponent.DetachFromAny
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UActorComponent::DetachFromAny() {
    static UFunction* pFnDetachFromAny = NULL;

    if (!pFnDetachFromAny)
        pFnDetachFromAny = (UFunction*)UObject::GObjObjects()->Data[6506];

    UActorComponent_execDetachFromAny_Parms DetachFromAny_Parms;

    pFnDetachFromAny->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDetachFromAny, &DetachFromAny_Parms, NULL);

    pFnDetachFromAny->FunctionFlags |= 0x400;
};

// Function Engine.ActorComponent.ForceUpdate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UActorComponent::ForceUpdate() {
    static UFunction* pFnForceUpdate = NULL;

    if (!pFnForceUpdate)
        pFnForceUpdate = (UFunction*)UObject::GObjObjects()->Data[6504];

    UActorComponent_execForceUpdate_Parms ForceUpdate_Parms;

    pFnForceUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceUpdate, &ForceUpdate_Parms, NULL);

    pFnForceUpdate->FunctionFlags |= 0x400;
};

// Function Engine.ActorComponent.SetComponentRBFixed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UActorComponent::SetComponentRBFixed() {
    static UFunction* pFnSetComponentRBFixed = NULL;

    if (!pFnSetComponentRBFixed)
        pFnSetComponentRBFixed = (UFunction*)UObject::GObjObjects()->Data[6502];

    UActorComponent_execSetComponentRBFixed_Parms SetComponentRBFixed_Parms;

    pFnSetComponentRBFixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetComponentRBFixed, &SetComponentRBFixed_Parms,
                       NULL);

    pFnSetComponentRBFixed->FunctionFlags |= 0x400;
};

// Function Engine.ActorComponent.SetTickGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UActorComponent::SetTickGroup() {
    static UFunction* pFnSetTickGroup = NULL;

    if (!pFnSetTickGroup)
        pFnSetTickGroup = (UFunction*)UObject::GObjObjects()->Data[6500];

    UActorComponent_execSetTickGroup_Parms SetTickGroup_Parms;

    pFnSetTickGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTickGroup, &SetTickGroup_Parms, NULL);

    pFnSetTickGroup->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.OcclusionChanged
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UAudioComponent::eventOcclusionChanged() {
    static UFunction* pFnOcclusionChanged = NULL;

    if (!pFnOcclusionChanged)
        pFnOcclusionChanged = (UFunction*)UObject::GObjObjects()->Data[13395];

    UAudioComponent_eventOcclusionChanged_Parms OcclusionChanged_Parms;

    this->ProcessEvent(pFnOcclusionChanged, &OcclusionChanged_Parms, NULL);
};

// Function Engine.AudioComponent.OnQueueSubtitles
// [0x00120000]
// Parameters infos:

void UAudioComponent::OnQueueSubtitles() {
    static UFunction* pFnOnQueueSubtitles = NULL;

    if (!pFnOnQueueSubtitles)
        pFnOnQueueSubtitles = (UFunction*)UObject::GObjObjects()->Data[13391];

    UAudioComponent_execOnQueueSubtitles_Parms OnQueueSubtitles_Parms;

    this->ProcessEvent(pFnOnQueueSubtitles, &OnQueueSubtitles_Parms, NULL);
};

// Function Engine.AudioComponent.OnAudioFinished
// [0x00120000]
// Parameters infos:

void UAudioComponent::OnAudioFinished() {
    static UFunction* pFnOnAudioFinished = NULL;

    if (!pFnOnAudioFinished)
        pFnOnAudioFinished = (UFunction*)UObject::GObjObjects()->Data[13385];

    UAudioComponent_execOnAudioFinished_Parms OnAudioFinished_Parms;

    this->ProcessEvent(pFnOnAudioFinished, &OnAudioFinished_Parms, NULL);
};

// Function Engine.AudioComponent.ResetToDefaults
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::ResetToDefaults() {
    static UFunction* pFnResetToDefaults = NULL;

    if (!pFnResetToDefaults)
        pFnResetToDefaults = (UFunction*)UObject::GObjObjects()->Data[12527];

    UAudioComponent_execResetToDefaults_Parms ResetToDefaults_Parms;

    pFnResetToDefaults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetToDefaults, &ResetToDefaults_Parms, NULL);

    pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.SetWaveParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::SetWaveParameter() {
    static UFunction* pFnSetWaveParameter = NULL;

    if (!pFnSetWaveParameter)
        pFnSetWaveParameter = (UFunction*)UObject::GObjObjects()->Data[13382];

    UAudioComponent_execSetWaveParameter_Parms SetWaveParameter_Parms;

    pFnSetWaveParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetWaveParameter, &SetWaveParameter_Parms, NULL);

    pFnSetWaveParameter->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.SetFloatParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::SetFloatParameter() {
    static UFunction* pFnSetFloatParameter = NULL;

    if (!pFnSetFloatParameter)
        pFnSetFloatParameter = (UFunction*)UObject::GObjObjects()->Data[13379];

    UAudioComponent_execSetFloatParameter_Parms SetFloatParameter_Parms;

    pFnSetFloatParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFloatParameter, &SetFloatParameter_Parms, NULL);

    pFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.AdjustVolume
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::AdjustVolume() {
    static UFunction* pFnAdjustVolume = NULL;

    if (!pFnAdjustVolume)
        pFnAdjustVolume = (UFunction*)UObject::GObjObjects()->Data[13376];

    UAudioComponent_execAdjustVolume_Parms AdjustVolume_Parms;

    pFnAdjustVolume->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAdjustVolume, &AdjustVolume_Parms, NULL);

    pFnAdjustVolume->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.FadeOut
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::FadeOut() {
    static UFunction* pFnFadeOut = NULL;

    if (!pFnFadeOut)
        pFnFadeOut = (UFunction*)UObject::GObjObjects()->Data[12516];

    UAudioComponent_execFadeOut_Parms FadeOut_Parms;

    pFnFadeOut->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFadeOut, &FadeOut_Parms, NULL);

    pFnFadeOut->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.FadeIn
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::FadeIn() {
    static UFunction* pFnFadeIn = NULL;

    if (!pFnFadeIn) pFnFadeIn = (UFunction*)UObject::GObjObjects()->Data[12524];

    UAudioComponent_execFadeIn_Parms FadeIn_Parms;

    pFnFadeIn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFadeIn, &FadeIn_Parms, NULL);

    pFnFadeIn->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.IsFadingOut
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::IsFadingOut() {
    static UFunction* pFnIsFadingOut = NULL;

    if (!pFnIsFadingOut)
        pFnIsFadingOut = (UFunction*)UObject::GObjObjects()->Data[13370];

    UAudioComponent_execIsFadingOut_Parms IsFadingOut_Parms;

    pFnIsFadingOut->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsFadingOut, &IsFadingOut_Parms, NULL);

    pFnIsFadingOut->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.IsFadingIn
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::IsFadingIn() {
    static UFunction* pFnIsFadingIn = NULL;

    if (!pFnIsFadingIn)
        pFnIsFadingIn = (UFunction*)UObject::GObjObjects()->Data[13368];

    UAudioComponent_execIsFadingIn_Parms IsFadingIn_Parms;

    pFnIsFadingIn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsFadingIn, &IsFadingIn_Parms, NULL);

    pFnIsFadingIn->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.IsPlaying
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::IsPlaying() {
    static UFunction* pFnIsPlaying = NULL;

    if (!pFnIsPlaying)
        pFnIsPlaying = (UFunction*)UObject::GObjObjects()->Data[13366];

    UAudioComponent_execIsPlaying_Parms IsPlaying_Parms;

    pFnIsPlaying->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlaying, &IsPlaying_Parms, NULL);

    pFnIsPlaying->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.Stop
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::Stop() {
    static UFunction* pFnStop = NULL;

    if (!pFnStop) pFnStop = (UFunction*)UObject::GObjObjects()->Data[13365];

    UAudioComponent_execStop_Parms Stop_Parms;

    pFnStop->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStop, &Stop_Parms, NULL);

    pFnStop->FunctionFlags |= 0x400;
};

// Function Engine.AudioComponent.Play
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioComponent::Play() {
    static UFunction* pFnPlay = NULL;

    if (!pFnPlay) pFnPlay = (UFunction*)UObject::GObjObjects()->Data[12514];

    UAudioComponent_execPlay_Parms Play_Parms;

    pFnPlay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlay, &Play_Parms, NULL);

    pFnPlay->FunctionFlags |= 0x400;
};

// Function Engine.HeightFogComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UHeightFogComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[22988];

    UHeightFogComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.ClosestPointOnComponentToComponent
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::ClosestPointOnComponentToComponent() {
    static UFunction* pFnClosestPointOnComponentToComponent = NULL;

    if (!pFnClosestPointOnComponentToComponent)
        pFnClosestPointOnComponentToComponent =
            (UFunction*)UObject::GObjObjects()->Data[6658];

    UPrimitiveComponent_execClosestPointOnComponentToComponent_Parms
        ClosestPointOnComponentToComponent_Parms;

    pFnClosestPointOnComponentToComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClosestPointOnComponentToComponent,
                       &ClosestPointOnComponentToComponent_Parms, NULL);

    pFnClosestPointOnComponentToComponent->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.ClosestPointOnComponentToPoint
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::ClosestPointOnComponentToPoint() {
    static UFunction* pFnClosestPointOnComponentToPoint = NULL;

    if (!pFnClosestPointOnComponentToPoint)
        pFnClosestPointOnComponentToPoint =
            (UFunction*)UObject::GObjObjects()->Data[6652];

    UPrimitiveComponent_execClosestPointOnComponentToPoint_Parms
        ClosestPointOnComponentToPoint_Parms;

    pFnClosestPointOnComponentToPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClosestPointOnComponentToPoint,
                       &ClosestPointOnComponentToPoint_Parms, NULL);

    pFnClosestPointOnComponentToPoint->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.GetRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::GetRotation() {
    static UFunction* pFnGetRotation = NULL;

    if (!pFnGetRotation)
        pFnGetRotation = (UFunction*)UObject::GObjObjects()->Data[6650];

    UPrimitiveComponent_execGetRotation_Parms GetRotation_Parms;

    pFnGetRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRotation, &GetRotation_Parms, NULL);

    pFnGetRotation->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.GetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::GetPosition() {
    static UFunction* pFnGetPosition = NULL;

    if (!pFnGetPosition)
        pFnGetPosition = (UFunction*)UObject::GObjObjects()->Data[6648];

    UPrimitiveComponent_execGetPosition_Parms GetPosition_Parms;

    pFnGetPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPosition, &GetPosition_Parms, NULL);

    pFnGetPosition->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetAbsolute
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetAbsolute() {
    static UFunction* pFnSetAbsolute = NULL;

    if (!pFnSetAbsolute)
        pFnSetAbsolute = (UFunction*)UObject::GObjObjects()->Data[6644];

    UPrimitiveComponent_execSetAbsolute_Parms SetAbsolute_Parms;

    pFnSetAbsolute->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAbsolute, &SetAbsolute_Parms, NULL);

    pFnSetAbsolute->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetScale3D
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetScale3D() {
    static UFunction* pFnSetScale3D = NULL;

    if (!pFnSetScale3D)
        pFnSetScale3D = (UFunction*)UObject::GObjObjects()->Data[6642];

    UPrimitiveComponent_execSetScale3D_Parms SetScale3D_Parms;

    pFnSetScale3D->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScale3D, &SetScale3D_Parms, NULL);

    pFnSetScale3D->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetScale() {
    static UFunction* pFnSetScale = NULL;

    if (!pFnSetScale)
        pFnSetScale = (UFunction*)UObject::GObjObjects()->Data[6640];

    UPrimitiveComponent_execSetScale_Parms SetScale_Parms;

    pFnSetScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScale, &SetScale_Parms, NULL);

    pFnSetScale->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRotation() {
    static UFunction* pFnSetRotation = NULL;

    if (!pFnSetRotation)
        pFnSetRotation = (UFunction*)UObject::GObjObjects()->Data[6638];

    UPrimitiveComponent_execSetRotation_Parms SetRotation_Parms;

    pFnSetRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRotation, &SetRotation_Parms, NULL);

    pFnSetRotation->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetTranslation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetTranslation() {
    static UFunction* pFnSetTranslation = NULL;

    if (!pFnSetTranslation)
        pFnSetTranslation = (UFunction*)UObject::GObjObjects()->Data[6636];

    UPrimitiveComponent_execSetTranslation_Parms SetTranslation_Parms;

    pFnSetTranslation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTranslation, &SetTranslation_Parms, NULL);

    pFnSetTranslation->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetActorCollision
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetActorCollision() {
    static UFunction* pFnSetActorCollision = NULL;

    if (!pFnSetActorCollision)
        pFnSetActorCollision = (UFunction*)UObject::GObjObjects()->Data[6632];

    UPrimitiveComponent_execSetActorCollision_Parms SetActorCollision_Parms;

    pFnSetActorCollision->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActorCollision, &SetActorCollision_Parms, NULL);

    pFnSetActorCollision->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetTraceBlocking
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetTraceBlocking() {
    static UFunction* pFnSetTraceBlocking = NULL;

    if (!pFnSetTraceBlocking)
        pFnSetTraceBlocking = (UFunction*)UObject::GObjObjects()->Data[6629];

    UPrimitiveComponent_execSetTraceBlocking_Parms SetTraceBlocking_Parms;

    pFnSetTraceBlocking->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTraceBlocking, &SetTraceBlocking_Parms, NULL);

    pFnSetTraceBlocking->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetViewOwnerDepthPriorityGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetViewOwnerDepthPriorityGroup() {
    static UFunction* pFnSetViewOwnerDepthPriorityGroup = NULL;

    if (!pFnSetViewOwnerDepthPriorityGroup)
        pFnSetViewOwnerDepthPriorityGroup =
            (UFunction*)UObject::GObjObjects()->Data[6626];

    UPrimitiveComponent_execSetViewOwnerDepthPriorityGroup_Parms
        SetViewOwnerDepthPriorityGroup_Parms;

    pFnSetViewOwnerDepthPriorityGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetViewOwnerDepthPriorityGroup,
                       &SetViewOwnerDepthPriorityGroup_Parms, NULL);

    pFnSetViewOwnerDepthPriorityGroup->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetDepthPriorityGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetDepthPriorityGroup() {
    static UFunction* pFnSetDepthPriorityGroup = NULL;

    if (!pFnSetDepthPriorityGroup)
        pFnSetDepthPriorityGroup =
            (UFunction*)UObject::GObjObjects()->Data[6624];

    UPrimitiveComponent_execSetDepthPriorityGroup_Parms
        SetDepthPriorityGroup_Parms;

    pFnSetDepthPriorityGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDepthPriorityGroup, &SetDepthPriorityGroup_Parms,
                       NULL);

    pFnSetDepthPriorityGroup->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetPerObjectShadows
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetPerObjectShadows() {
    static UFunction* pFnSetPerObjectShadows = NULL;

    if (!pFnSetPerObjectShadows)
        pFnSetPerObjectShadows = (UFunction*)UObject::GObjObjects()->Data[6622];

    UPrimitiveComponent_execSetPerObjectShadows_Parms SetPerObjectShadows_Parms;

    pFnSetPerObjectShadows->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPerObjectShadows, &SetPerObjectShadows_Parms,
                       NULL);

    pFnSetPerObjectShadows->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetLightingChannels
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetLightingChannels() {
    static UFunction* pFnSetLightingChannels = NULL;

    if (!pFnSetLightingChannels)
        pFnSetLightingChannels = (UFunction*)UObject::GObjObjects()->Data[6620];

    UPrimitiveComponent_execSetLightingChannels_Parms SetLightingChannels_Parms;

    pFnSetLightingChannels->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLightingChannels, &SetLightingChannels_Parms,
                       NULL);

    pFnSetLightingChannels->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetCullDistance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetCullDistance() {
    static UFunction* pFnSetCullDistance = NULL;

    if (!pFnSetCullDistance)
        pFnSetCullDistance = (UFunction*)UObject::GObjObjects()->Data[6588];

    UPrimitiveComponent_execSetCullDistance_Parms SetCullDistance_Parms;

    pFnSetCullDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCullDistance, &SetCullDistance_Parms, NULL);

    pFnSetCullDistance->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetLightEnvironment
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetLightEnvironment() {
    static UFunction* pFnSetLightEnvironment = NULL;

    if (!pFnSetLightEnvironment)
        pFnSetLightEnvironment = (UFunction*)UObject::GObjObjects()->Data[6586];

    UPrimitiveComponent_execSetLightEnvironment_Parms SetLightEnvironment_Parms;

    pFnSetLightEnvironment->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLightEnvironment, &SetLightEnvironment_Parms,
                       NULL);

    pFnSetLightEnvironment->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetShadowParent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetShadowParent() {
    static UFunction* pFnSetShadowParent = NULL;

    if (!pFnSetShadowParent)
        pFnSetShadowParent = (UFunction*)UObject::GObjObjects()->Data[6584];

    UPrimitiveComponent_execSetShadowParent_Parms SetShadowParent_Parms;

    pFnSetShadowParent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetShadowParent, &SetShadowParent_Parms, NULL);

    pFnSetShadowParent->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetIgnoreOwnerHidden
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetIgnoreOwnerHidden() {
    static UFunction* pFnSetIgnoreOwnerHidden = NULL;

    if (!pFnSetIgnoreOwnerHidden)
        pFnSetIgnoreOwnerHidden =
            (UFunction*)UObject::GObjObjects()->Data[6582];

    UPrimitiveComponent_execSetIgnoreOwnerHidden_Parms
        SetIgnoreOwnerHidden_Parms;

    pFnSetIgnoreOwnerHidden->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetIgnoreOwnerHidden, &SetIgnoreOwnerHidden_Parms,
                       NULL);

    pFnSetIgnoreOwnerHidden->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetOnlyOwnerSee
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetOnlyOwnerSee() {
    static UFunction* pFnSetOnlyOwnerSee = NULL;

    if (!pFnSetOnlyOwnerSee)
        pFnSetOnlyOwnerSee = (UFunction*)UObject::GObjObjects()->Data[6580];

    UPrimitiveComponent_execSetOnlyOwnerSee_Parms SetOnlyOwnerSee_Parms;

    pFnSetOnlyOwnerSee->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOnlyOwnerSee, &SetOnlyOwnerSee_Parms, NULL);

    pFnSetOnlyOwnerSee->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetOwnerNoSee
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetOwnerNoSee() {
    static UFunction* pFnSetOwnerNoSee = NULL;

    if (!pFnSetOwnerNoSee)
        pFnSetOwnerNoSee = (UFunction*)UObject::GObjObjects()->Data[6578];

    UPrimitiveComponent_execSetOwnerNoSee_Parms SetOwnerNoSee_Parms;

    pFnSetOwnerNoSee->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOwnerNoSee, &SetOwnerNoSee_Parms, NULL);

    pFnSetOwnerNoSee->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetHidden
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetHidden() {
    static UFunction* pFnSetHidden = NULL;

    if (!pFnSetHidden)
        pFnSetHidden = (UFunction*)UObject::GObjObjects()->Data[6576];

    UPrimitiveComponent_execSetHidden_Parms SetHidden_Parms;

    pFnSetHidden->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetHidden, &SetHidden_Parms, NULL);

    pFnSetHidden->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.ShouldComponentAddToScene
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::ShouldComponentAddToScene() {
    static UFunction* pFnShouldComponentAddToScene = NULL;

    if (!pFnShouldComponentAddToScene)
        pFnShouldComponentAddToScene =
            (UFunction*)UObject::GObjObjects()->Data[6574];

    UPrimitiveComponent_execShouldComponentAddToScene_Parms
        ShouldComponentAddToScene_Parms;

    pFnShouldComponentAddToScene->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldComponentAddToScene,
                       &ShouldComponentAddToScene_Parms, NULL);

    pFnShouldComponentAddToScene->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBDominanceGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBDominanceGroup() {
    static UFunction* pFnSetRBDominanceGroup = NULL;

    if (!pFnSetRBDominanceGroup)
        pFnSetRBDominanceGroup = (UFunction*)UObject::GObjObjects()->Data[6572];

    UPrimitiveComponent_execSetRBDominanceGroup_Parms SetRBDominanceGroup_Parms;

    pFnSetRBDominanceGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBDominanceGroup, &SetRBDominanceGroup_Parms,
                       NULL);

    pFnSetRBDominanceGroup->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.GetRootBodyInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::GetRootBodyInstance() {
    static UFunction* pFnGetRootBodyInstance = NULL;

    if (!pFnGetRootBodyInstance)
        pFnGetRootBodyInstance = (UFunction*)UObject::GObjObjects()->Data[6570];

    UPrimitiveComponent_execGetRootBodyInstance_Parms GetRootBodyInstance_Parms;

    pFnGetRootBodyInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRootBodyInstance, &GetRootBodyInstance_Parms,
                       NULL);

    pFnGetRootBodyInstance->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetPhysMaterialOverride
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetPhysMaterialOverride() {
    static UFunction* pFnSetPhysMaterialOverride = NULL;

    if (!pFnSetPhysMaterialOverride)
        pFnSetPhysMaterialOverride =
            (UFunction*)UObject::GObjObjects()->Data[6568];

    UPrimitiveComponent_execSetPhysMaterialOverride_Parms
        SetPhysMaterialOverride_Parms;

    pFnSetPhysMaterialOverride->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPhysMaterialOverride,
                       &SetPhysMaterialOverride_Parms, NULL);

    pFnSetPhysMaterialOverride->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.InitRBPhys
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::InitRBPhys() {
    static UFunction* pFnInitRBPhys = NULL;

    if (!pFnInitRBPhys)
        pFnInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[6567];

    UPrimitiveComponent_execInitRBPhys_Parms InitRBPhys_Parms;

    pFnInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitRBPhys, &InitRBPhys_Parms, NULL);

    pFnInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetNotifyRigidBodyCollision
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetNotifyRigidBodyCollision() {
    static UFunction* pFnSetNotifyRigidBodyCollision = NULL;

    if (!pFnSetNotifyRigidBodyCollision)
        pFnSetNotifyRigidBodyCollision =
            (UFunction*)UObject::GObjObjects()->Data[6565];

    UPrimitiveComponent_execSetNotifyRigidBodyCollision_Parms
        SetNotifyRigidBodyCollision_Parms;

    pFnSetNotifyRigidBodyCollision->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNotifyRigidBodyCollision,
                       &SetNotifyRigidBodyCollision_Parms, NULL);

    pFnSetNotifyRigidBodyCollision->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBChannel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBChannel() {
    static UFunction* pFnSetRBChannel = NULL;

    if (!pFnSetRBChannel)
        pFnSetRBChannel = (UFunction*)UObject::GObjObjects()->Data[6563];

    UPrimitiveComponent_execSetRBChannel_Parms SetRBChannel_Parms;

    pFnSetRBChannel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBChannel, &SetRBChannel_Parms, NULL);

    pFnSetRBChannel->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBCollisionChannels
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBCollisionChannels() {
    static UFunction* pFnSetRBCollisionChannels = NULL;

    if (!pFnSetRBCollisionChannels)
        pFnSetRBCollisionChannels =
            (UFunction*)UObject::GObjObjects()->Data[6561];

    UPrimitiveComponent_execSetRBCollisionChannels_Parms
        SetRBCollisionChannels_Parms;

    pFnSetRBCollisionChannels->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBCollisionChannels, &SetRBCollisionChannels_Parms,
                       NULL);

    pFnSetRBCollisionChannels->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBCollidesWithChannel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBCollidesWithChannel() {
    static UFunction* pFnSetRBCollidesWithChannel = NULL;

    if (!pFnSetRBCollidesWithChannel)
        pFnSetRBCollidesWithChannel =
            (UFunction*)UObject::GObjObjects()->Data[6558];

    UPrimitiveComponent_execSetRBCollidesWithChannel_Parms
        SetRBCollidesWithChannel_Parms;

    pFnSetRBCollidesWithChannel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBCollidesWithChannel,
                       &SetRBCollidesWithChannel_Parms, NULL);

    pFnSetRBCollidesWithChannel->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetBlockRigidBody
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetBlockRigidBody() {
    static UFunction* pFnSetBlockRigidBody = NULL;

    if (!pFnSetBlockRigidBody)
        pFnSetBlockRigidBody = (UFunction*)UObject::GObjObjects()->Data[6251];

    UPrimitiveComponent_execSetBlockRigidBody_Parms SetBlockRigidBody_Parms;

    pFnSetBlockRigidBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlockRigidBody, &SetBlockRigidBody_Parms, NULL);

    pFnSetBlockRigidBody->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.RigidBodyIsAwake
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::RigidBodyIsAwake() {
    static UFunction* pFnRigidBodyIsAwake = NULL;

    if (!pFnRigidBodyIsAwake)
        pFnRigidBodyIsAwake = (UFunction*)UObject::GObjObjects()->Data[6554];

    UPrimitiveComponent_execRigidBodyIsAwake_Parms RigidBodyIsAwake_Parms;

    pFnRigidBodyIsAwake->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRigidBodyIsAwake, &RigidBodyIsAwake_Parms, NULL);

    pFnRigidBodyIsAwake->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.PutRigidBodyToSleep
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::PutRigidBodyToSleep() {
    static UFunction* pFnPutRigidBodyToSleep = NULL;

    if (!pFnPutRigidBodyToSleep)
        pFnPutRigidBodyToSleep = (UFunction*)UObject::GObjObjects()->Data[6552];

    UPrimitiveComponent_execPutRigidBodyToSleep_Parms PutRigidBodyToSleep_Parms;

    pFnPutRigidBodyToSleep->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPutRigidBodyToSleep, &PutRigidBodyToSleep_Parms,
                       NULL);

    pFnPutRigidBodyToSleep->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.WakeRigidBody
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::WakeRigidBody() {
    static UFunction* pFnWakeRigidBody = NULL;

    if (!pFnWakeRigidBody)
        pFnWakeRigidBody = (UFunction*)UObject::GObjObjects()->Data[6550];

    UPrimitiveComponent_execWakeRigidBody_Parms WakeRigidBody_Parms;

    pFnWakeRigidBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWakeRigidBody, &WakeRigidBody_Parms, NULL);

    pFnWakeRigidBody->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBRotation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBRotation() {
    static UFunction* pFnSetRBRotation = NULL;

    if (!pFnSetRBRotation)
        pFnSetRBRotation = (UFunction*)UObject::GObjObjects()->Data[6547];

    UPrimitiveComponent_execSetRBRotation_Parms SetRBRotation_Parms;

    pFnSetRBRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBRotation, &SetRBRotation_Parms, NULL);

    pFnSetRBRotation->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBPosition
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBPosition() {
    static UFunction* pFnSetRBPosition = NULL;

    if (!pFnSetRBPosition)
        pFnSetRBPosition = (UFunction*)UObject::GObjObjects()->Data[6544];

    UPrimitiveComponent_execSetRBPosition_Parms SetRBPosition_Parms;

    pFnSetRBPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBPosition, &SetRBPosition_Parms, NULL);

    pFnSetRBPosition->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.RetardRBLinearVelocity
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::RetardRBLinearVelocity() {
    static UFunction* pFnRetardRBLinearVelocity = NULL;

    if (!pFnRetardRBLinearVelocity)
        pFnRetardRBLinearVelocity =
            (UFunction*)UObject::GObjObjects()->Data[6541];

    UPrimitiveComponent_execRetardRBLinearVelocity_Parms
        RetardRBLinearVelocity_Parms;

    pFnRetardRBLinearVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRetardRBLinearVelocity, &RetardRBLinearVelocity_Parms,
                       NULL);

    pFnRetardRBLinearVelocity->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBAngularVelocity
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBAngularVelocity() {
    static UFunction* pFnSetRBAngularVelocity = NULL;

    if (!pFnSetRBAngularVelocity)
        pFnSetRBAngularVelocity =
            (UFunction*)UObject::GObjObjects()->Data[6538];

    UPrimitiveComponent_execSetRBAngularVelocity_Parms
        SetRBAngularVelocity_Parms;

    pFnSetRBAngularVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBAngularVelocity, &SetRBAngularVelocity_Parms,
                       NULL);

    pFnSetRBAngularVelocity->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.SetRBLinearVelocity
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::SetRBLinearVelocity() {
    static UFunction* pFnSetRBLinearVelocity = NULL;

    if (!pFnSetRBLinearVelocity)
        pFnSetRBLinearVelocity = (UFunction*)UObject::GObjObjects()->Data[6257];

    UPrimitiveComponent_execSetRBLinearVelocity_Parms SetRBLinearVelocity_Parms;

    pFnSetRBLinearVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRBLinearVelocity, &SetRBLinearVelocity_Parms,
                       NULL);

    pFnSetRBLinearVelocity->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.AddTorque
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::AddTorque() {
    static UFunction* pFnAddTorque = NULL;

    if (!pFnAddTorque)
        pFnAddTorque = (UFunction*)UObject::GObjObjects()->Data[6533];

    UPrimitiveComponent_execAddTorque_Parms AddTorque_Parms;

    pFnAddTorque->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddTorque, &AddTorque_Parms, NULL);

    pFnAddTorque->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.AddRadialForce
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::AddRadialForce() {
    static UFunction* pFnAddRadialForce = NULL;

    if (!pFnAddRadialForce)
        pFnAddRadialForce = (UFunction*)UObject::GObjObjects()->Data[6528];

    UPrimitiveComponent_execAddRadialForce_Parms AddRadialForce_Parms;

    pFnAddRadialForce->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddRadialForce, &AddRadialForce_Parms, NULL);

    pFnAddRadialForce->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.AddForce
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::AddForce() {
    static UFunction* pFnAddForce = NULL;

    if (!pFnAddForce)
        pFnAddForce = (UFunction*)UObject::GObjObjects()->Data[6524];

    UPrimitiveComponent_execAddForce_Parms AddForce_Parms;

    pFnAddForce->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddForce, &AddForce_Parms, NULL);

    pFnAddForce->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.AddRadialImpulse
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::AddRadialImpulse() {
    static UFunction* pFnAddRadialImpulse = NULL;

    if (!pFnAddRadialImpulse)
        pFnAddRadialImpulse = (UFunction*)UObject::GObjObjects()->Data[6518];

    UPrimitiveComponent_execAddRadialImpulse_Parms AddRadialImpulse_Parms;

    pFnAddRadialImpulse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddRadialImpulse, &AddRadialImpulse_Parms, NULL);

    pFnAddRadialImpulse->FunctionFlags |= 0x400;
};

// Function Engine.PrimitiveComponent.AddImpulse
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrimitiveComponent::AddImpulse() {
    static UFunction* pFnAddImpulse = NULL;

    if (!pFnAddImpulse)
        pFnAddImpulse = (UFunction*)UObject::GObjObjects()->Data[6513];

    UPrimitiveComponent_execAddImpulse_Parms AddImpulse_Parms;

    pFnAddImpulse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddImpulse, &AddImpulse_Parms, NULL);

    pFnAddImpulse->FunctionFlags |= 0x400;
};

// Function Engine.CylinderComponent.SetCylinderSize
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCylinderComponent::SetCylinderSize() {
    static UFunction* pFnSetCylinderSize = NULL;

    if (!pFnSetCylinderSize)
        pFnSetCylinderSize = (UFunction*)UObject::GObjObjects()->Data[8644];

    UCylinderComponent_execSetCylinderSize_Parms SetCylinderSize_Parms;

    pFnSetCylinderSize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCylinderSize, &SetCylinderSize_Parms, NULL);

    pFnSetCylinderSize->FunctionFlags |= 0x400;
};

// Function Engine.SpriteComponent.SetSpriteAndUV
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void USpriteComponent::SetSpriteAndUV() {
    static UFunction* pFnSetSpriteAndUV = NULL;

    if (!pFnSetSpriteAndUV)
        pFnSetSpriteAndUV = (UFunction*)UObject::GObjObjects()->Data[6973];

    USpriteComponent_execSetSpriteAndUV_Parms SetSpriteAndUV_Parms;

    pFnSetSpriteAndUV->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSpriteAndUV, &SetSpriteAndUV_Parms, NULL);

    pFnSetSpriteAndUV->FunctionFlags |= 0x400;
};

// Function Engine.SpriteComponent.SetUV
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void USpriteComponent::SetUV() {
    static UFunction* pFnSetUV = NULL;

    if (!pFnSetUV) pFnSetUV = (UFunction*)UObject::GObjObjects()->Data[6968];

    USpriteComponent_execSetUV_Parms SetUV_Parms;

    pFnSetUV->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetUV, &SetUV_Parms, NULL);

    pFnSetUV->FunctionFlags |= 0x400;
};

// Function Engine.SpriteComponent.SetSprite
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void USpriteComponent::SetSprite() {
    static UFunction* pFnSetSprite = NULL;

    if (!pFnSetSprite)
        pFnSetSprite = (UFunction*)UObject::GObjObjects()->Data[6966];

    USpriteComponent_execSetSprite_Parms SetSprite_Parms;

    pFnSetSprite->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSprite, &SetSprite_Parms, NULL);

    pFnSetSprite->FunctionFlags |= 0x400;
};

// Function Engine.RadialBlurComponent.OnUpdatePropertyBlurOpacity
// [0x00020002]
// Parameters infos:

void URadialBlurComponent::OnUpdatePropertyBlurOpacity() {
    static UFunction* pFnOnUpdatePropertyBlurOpacity = NULL;

    if (!pFnOnUpdatePropertyBlurOpacity)
        pFnOnUpdatePropertyBlurOpacity =
            (UFunction*)UObject::GObjObjects()->Data[32139];

    URadialBlurComponent_execOnUpdatePropertyBlurOpacity_Parms
        OnUpdatePropertyBlurOpacity_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBlurOpacity,
                       &OnUpdatePropertyBlurOpacity_Parms, NULL);
};

// Function Engine.RadialBlurComponent.OnUpdatePropertyBlurFalloffExponent
// [0x00020002]
// Parameters infos:

void URadialBlurComponent::OnUpdatePropertyBlurFalloffExponent() {
    static UFunction* pFnOnUpdatePropertyBlurFalloffExponent = NULL;

    if (!pFnOnUpdatePropertyBlurFalloffExponent)
        pFnOnUpdatePropertyBlurFalloffExponent =
            (UFunction*)UObject::GObjObjects()->Data[32138];

    URadialBlurComponent_execOnUpdatePropertyBlurFalloffExponent_Parms
        OnUpdatePropertyBlurFalloffExponent_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBlurFalloffExponent,
                       &OnUpdatePropertyBlurFalloffExponent_Parms, NULL);
};

// Function Engine.RadialBlurComponent.OnUpdatePropertyBlurScale
// [0x00020002]
// Parameters infos:

void URadialBlurComponent::OnUpdatePropertyBlurScale() {
    static UFunction* pFnOnUpdatePropertyBlurScale = NULL;

    if (!pFnOnUpdatePropertyBlurScale)
        pFnOnUpdatePropertyBlurScale =
            (UFunction*)UObject::GObjObjects()->Data[32137];

    URadialBlurComponent_execOnUpdatePropertyBlurScale_Parms
        OnUpdatePropertyBlurScale_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBlurScale,
                       &OnUpdatePropertyBlurScale_Parms, NULL);
};

// Function Engine.RadialBlurComponent.SetEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URadialBlurComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[32135];

    URadialBlurComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.RadialBlurComponent.SetBlurOpacity
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URadialBlurComponent::SetBlurOpacity() {
    static UFunction* pFnSetBlurOpacity = NULL;

    if (!pFnSetBlurOpacity)
        pFnSetBlurOpacity = (UFunction*)UObject::GObjObjects()->Data[32133];

    URadialBlurComponent_execSetBlurOpacity_Parms SetBlurOpacity_Parms;

    pFnSetBlurOpacity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlurOpacity, &SetBlurOpacity_Parms, NULL);

    pFnSetBlurOpacity->FunctionFlags |= 0x400;
};

// Function Engine.RadialBlurComponent.SetBlurFalloffExponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URadialBlurComponent::SetBlurFalloffExponent() {
    static UFunction* pFnSetBlurFalloffExponent = NULL;

    if (!pFnSetBlurFalloffExponent)
        pFnSetBlurFalloffExponent =
            (UFunction*)UObject::GObjObjects()->Data[32131];

    URadialBlurComponent_execSetBlurFalloffExponent_Parms
        SetBlurFalloffExponent_Parms;

    pFnSetBlurFalloffExponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlurFalloffExponent, &SetBlurFalloffExponent_Parms,
                       NULL);

    pFnSetBlurFalloffExponent->FunctionFlags |= 0x400;
};

// Function Engine.RadialBlurComponent.SetBlurScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URadialBlurComponent::SetBlurScale() {
    static UFunction* pFnSetBlurScale = NULL;

    if (!pFnSetBlurScale)
        pFnSetBlurScale = (UFunction*)UObject::GObjObjects()->Data[32129];

    URadialBlurComponent_execSetBlurScale_Parms SetBlurScale_Parms;

    pFnSetBlurScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlurScale, &SetBlurScale_Parms, NULL);

    pFnSetBlurScale->FunctionFlags |= 0x400;
};

// Function Engine.RadialBlurComponent.SetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URadialBlurComponent::SetMaterial() {
    static UFunction* pFnSetMaterial = NULL;

    if (!pFnSetMaterial)
        pFnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[32127];

    URadialBlurComponent_execSetMaterial_Parms SetMaterial_Parms;

    pFnSetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaterial, &SetMaterial_Parms, NULL);

    pFnSetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.SceneCaptureComponent.SetEnabled
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCaptureComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[31861];

    USceneCaptureComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.SceneCaptureComponent.SetFrameRate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCaptureComponent::SetFrameRate() {
    static UFunction* pFnSetFrameRate = NULL;

    if (!pFnSetFrameRate)
        pFnSetFrameRate = (UFunction*)UObject::GObjObjects()->Data[31881];

    USceneCaptureComponent_execSetFrameRate_Parms SetFrameRate_Parms;

    pFnSetFrameRate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFrameRate, &SetFrameRate_Parms, NULL);

    pFnSetFrameRate->FunctionFlags |= 0x400;
};

// Function Engine.SceneCapture2DComponent.SetView
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCapture2DComponent::SetView() {
    static UFunction* pFnSetView = NULL;

    if (!pFnSetView)
        pFnSetView = (UFunction*)UObject::GObjObjects()->Data[32610];

    USceneCapture2DComponent_execSetView_Parms SetView_Parms;

    pFnSetView->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetView, &SetView_Parms, NULL);

    pFnSetView->FunctionFlags |= 0x400;
};

// Function Engine.SceneCapture2DComponent.SetCaptureParameters
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCapture2DComponent::SetCaptureParameters() {
    static UFunction* pFnSetCaptureParameters = NULL;

    if (!pFnSetCaptureParameters)
        pFnSetCaptureParameters =
            (UFunction*)UObject::GObjObjects()->Data[32605];

    USceneCapture2DComponent_execSetCaptureParameters_Parms
        SetCaptureParameters_Parms;

    pFnSetCaptureParameters->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCaptureParameters, &SetCaptureParameters_Parms,
                       NULL);

    pFnSetCaptureParameters->FunctionFlags |= 0x400;
};

// Function Engine.SceneCapture2DHitMaskComponent.SetFadingStartTimeSinceHit
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCapture2DHitMaskComponent::SetFadingStartTimeSinceHit() {
    static UFunction* pFnSetFadingStartTimeSinceHit = NULL;

    if (!pFnSetFadingStartTimeSinceHit)
        pFnSetFadingStartTimeSinceHit =
            (UFunction*)UObject::GObjObjects()->Data[32632];

    USceneCapture2DHitMaskComponent_execSetFadingStartTimeSinceHit_Parms
        SetFadingStartTimeSinceHit_Parms;

    pFnSetFadingStartTimeSinceHit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFadingStartTimeSinceHit,
                       &SetFadingStartTimeSinceHit_Parms, NULL);

    pFnSetFadingStartTimeSinceHit->FunctionFlags |= 0x400;
};

// Function Engine.SceneCapture2DHitMaskComponent.SetCaptureParameters
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCapture2DHitMaskComponent::SetCaptureParameters() {
    static UFunction* pFnSetCaptureParameters = NULL;

    if (!pFnSetCaptureParameters)
        pFnSetCaptureParameters =
            (UFunction*)UObject::GObjObjects()->Data[32627];

    USceneCapture2DHitMaskComponent_execSetCaptureParameters_Parms
        SetCaptureParameters_Parms;

    pFnSetCaptureParameters->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCaptureParameters, &SetCaptureParameters_Parms,
                       NULL);

    pFnSetCaptureParameters->FunctionFlags |= 0x400;
};

// Function Engine.SceneCapture2DHitMaskComponent.SetCaptureTargetTexture
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCapture2DHitMaskComponent::SetCaptureTargetTexture() {
    static UFunction* pFnSetCaptureTargetTexture = NULL;

    if (!pFnSetCaptureTargetTexture)
        pFnSetCaptureTargetTexture =
            (UFunction*)UObject::GObjObjects()->Data[32625];

    USceneCapture2DHitMaskComponent_execSetCaptureTargetTexture_Parms
        SetCaptureTargetTexture_Parms;

    pFnSetCaptureTargetTexture->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCaptureTargetTexture,
                       &SetCaptureTargetTexture_Parms, NULL);

    pFnSetCaptureTargetTexture->FunctionFlags |= 0x400;
};

// Function Engine.SceneCapturePortalComponent.SetCaptureParameters
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USceneCapturePortalComponent::SetCaptureParameters() {
    static UFunction* pFnSetCaptureParameters = NULL;

    if (!pFnSetCaptureParameters)
        pFnSetCaptureParameters =
            (UFunction*)UObject::GObjObjects()->Data[31893];

    USceneCapturePortalComponent_execSetCaptureParameters_Parms
        SetCaptureParameters_Parms;

    pFnSetCaptureParameters->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCaptureParameters, &SetCaptureParameters_Parms,
                       NULL);

    pFnSetCaptureParameters->FunctionFlags |= 0x400;
};

// Function Engine.ActorFactory.PostCreateActor
// [0x00024900] ( FUNC_Event )
// Parameters infos:

void UActorFactory::eventPostCreateActor() {
    static UFunction* pFnPostCreateActor = NULL;

    if (!pFnPostCreateActor)
        pFnPostCreateActor = (UFunction*)UObject::GObjObjects()->Data[8025];

    UActorFactory_eventPostCreateActor_Parms PostCreateActor_Parms;

    this->ProcessEvent(pFnPostCreateActor, &PostCreateActor_Parms, NULL);
};

// Function Engine.AISubsystem.GetDifficultyValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UAISubsystem::eventGetDifficultyValue() {
    static UFunction* pFnGetDifficultyValue = NULL;

    if (!pFnGetDifficultyValue)
        pFnGetDifficultyValue = (UFunction*)UObject::GObjObjects()->Data[12790];

    UAISubsystem_eventGetDifficultyValue_Parms GetDifficultyValue_Parms;

    this->ProcessEvent(pFnGetDifficultyValue, &GetDifficultyValue_Parms, NULL);
};

// Function Engine.AISubsystem.ToggleNavByCover
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAISubsystem::ToggleNavByCover() {
    static UFunction* pFnToggleNavByCover = NULL;

    if (!pFnToggleNavByCover)
        pFnToggleNavByCover = (UFunction*)UObject::GObjObjects()->Data[12786];

    UAISubsystem_execToggleNavByCover_Parms ToggleNavByCover_Parms;

    pFnToggleNavByCover->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnToggleNavByCover, &ToggleNavByCover_Parms, NULL);

    pFnToggleNavByCover->FunctionFlags |= 0x400;
};

// Function Engine.AISubsystem.ToggleNavByComponent
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAISubsystem::ToggleNavByComponent() {
    static UFunction* pFnToggleNavByComponent = NULL;

    if (!pFnToggleNavByComponent)
        pFnToggleNavByComponent =
            (UFunction*)UObject::GObjObjects()->Data[12783];

    UAISubsystem_execToggleNavByComponent_Parms ToggleNavByComponent_Parms;

    pFnToggleNavByComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnToggleNavByComponent, &ToggleNavByComponent_Parms,
                       NULL);

    pFnToggleNavByComponent->FunctionFlags |= 0x400;
};

// Function Engine.AISubsystem.ToggleNavByActor
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAISubsystem::ToggleNavByActor() {
    static UFunction* pFnToggleNavByActor = NULL;

    if (!pFnToggleNavByActor)
        pFnToggleNavByActor = (UFunction*)UObject::GObjObjects()->Data[12780];

    UAISubsystem_execToggleNavByActor_Parms ToggleNavByActor_Parms;

    pFnToggleNavByActor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnToggleNavByActor, &ToggleNavByActor_Parms, NULL);

    pFnToggleNavByActor->FunctionFlags |= 0x400;
};

// Function Engine.AkEvent.SetCustomRTPC
// [0x00020102]
// Parameters infos:

void UAkEvent::SetCustomRTPC() {
    static UFunction* pFnSetCustomRTPC = NULL;

    if (!pFnSetCustomRTPC)
        pFnSetCustomRTPC = (UFunction*)UObject::GObjObjects()->Data[13164];

    UAkEvent_execSetCustomRTPC_Parms SetCustomRTPC_Parms;

    this->ProcessEvent(pFnSetCustomRTPC, &SetCustomRTPC_Parms, NULL);
};

// Function Engine.SoundCue.GetCueDuration
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USoundCue::GetCueDuration() {
    static UFunction* pFnGetCueDuration = NULL;

    if (!pFnGetCueDuration)
        pFnGetCueDuration = (UFunction*)UObject::GObjObjects()->Data[13488];

    USoundCue_execGetCueDuration_Parms GetCueDuration_Parms;

    pFnGetCueDuration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCueDuration, &GetCueDuration_Parms, NULL);

    pFnGetCueDuration->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawDebugGraphElement
// [0x00020002]
// Parameters infos:

void UCanvas::DrawDebugGraphElement() {
    static UFunction* pFnDrawDebugGraphElement = NULL;

    if (!pFnDrawDebugGraphElement)
        pFnDrawDebugGraphElement =
            (UFunction*)UObject::GObjObjects()->Data[15910];

    UCanvas_execDrawDebugGraphElement_Parms DrawDebugGraphElement_Parms;

    this->ProcessEvent(pFnDrawDebugGraphElement, &DrawDebugGraphElement_Parms,
                       NULL);
};

// Function Engine.Canvas.DrawDebugGraphBackground
// [0x00020002]
// Parameters infos:

void UCanvas::DrawDebugGraphBackground() {
    static UFunction* pFnDrawDebugGraphBackground = NULL;

    if (!pFnDrawDebugGraphBackground)
        pFnDrawDebugGraphBackground =
            (UFunction*)UObject::GObjObjects()->Data[15904];

    UCanvas_execDrawDebugGraphBackground_Parms DrawDebugGraphBackground_Parms;

    this->ProcessEvent(pFnDrawDebugGraphBackground,
                       &DrawDebugGraphBackground_Parms, NULL);
};

// Function Engine.Canvas.DrawDebugGraph
// [0x00020002]
// Parameters infos:

void UCanvas::DrawDebugGraph() {
    static UFunction* pFnDrawDebugGraph = NULL;

    if (!pFnDrawDebugGraph)
        pFnDrawDebugGraph = (UFunction*)UObject::GObjObjects()->Data[15892];

    UCanvas_execDrawDebugGraph_Parms DrawDebugGraph_Parms;

    this->ProcessEvent(pFnDrawDebugGraph, &DrawDebugGraph_Parms, NULL);
};

// Function Engine.Canvas.DrawTextureDoubleLine
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawTextureDoubleLine() {
    static UFunction* pFnDrawTextureDoubleLine = NULL;

    if (!pFnDrawTextureDoubleLine)
        pFnDrawTextureDoubleLine =
            (UFunction*)UObject::GObjObjects()->Data[15879];

    UCanvas_execDrawTextureDoubleLine_Parms DrawTextureDoubleLine_Parms;

    pFnDrawTextureDoubleLine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawTextureDoubleLine, &DrawTextureDoubleLine_Parms,
                       NULL);

    pFnDrawTextureDoubleLine->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawTextureLine
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawTextureLine() {
    static UFunction* pFnDrawTextureLine = NULL;

    if (!pFnDrawTextureLine)
        pFnDrawTextureLine = (UFunction*)UObject::GObjObjects()->Data[15868];

    UCanvas_execDrawTextureLine_Parms DrawTextureLine_Parms;

    pFnDrawTextureLine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawTextureLine, &DrawTextureLine_Parms, NULL);

    pFnDrawTextureLine->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.Draw2DLine
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::Draw2DLine() {
    static UFunction* pFnDraw2DLine = NULL;

    if (!pFnDraw2DLine)
        pFnDraw2DLine = (UFunction*)UObject::GObjObjects()->Data[15862];

    UCanvas_execDraw2DLine_Parms Draw2DLine_Parms;

    pFnDraw2DLine->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDraw2DLine, &Draw2DLine_Parms, NULL);

    pFnDraw2DLine->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.SetDrawColorStruct
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCanvas::SetDrawColorStruct() {
    static UFunction* pFnSetDrawColorStruct = NULL;

    if (!pFnSetDrawColorStruct)
        pFnSetDrawColorStruct = (UFunction*)UObject::GObjObjects()->Data[15860];

    UCanvas_execSetDrawColorStruct_Parms SetDrawColorStruct_Parms;

    this->ProcessEvent(pFnSetDrawColorStruct, &SetDrawColorStruct_Parms, NULL);
};

// Function Engine.Canvas.EnableStencilTest
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::EnableStencilTest() {
    static UFunction* pFnEnableStencilTest = NULL;

    if (!pFnEnableStencilTest)
        pFnEnableStencilTest = (UFunction*)UObject::GObjObjects()->Data[15858];

    UCanvas_execEnableStencilTest_Parms EnableStencilTest_Parms;

    pFnEnableStencilTest->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableStencilTest, &EnableStencilTest_Parms, NULL);

    pFnEnableStencilTest->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.SetDrawColor
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::SetDrawColor() {
    static UFunction* pFnSetDrawColor = NULL;

    if (!pFnSetDrawColor)
        pFnSetDrawColor = (UFunction*)UObject::GObjObjects()->Data[6311];

    UCanvas_execSetDrawColor_Parms SetDrawColor_Parms;

    pFnSetDrawColor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDrawColor, &SetDrawColor_Parms, NULL);

    pFnSetDrawColor->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawBox
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void UCanvas::DrawBox() {
    static UFunction* pFnDrawBox = NULL;

    if (!pFnDrawBox)
        pFnDrawBox = (UFunction*)UObject::GObjObjects()->Data[15849];

    UCanvas_execDrawBox_Parms DrawBox_Parms;

    this->ProcessEvent(pFnDrawBox, &DrawBox_Parms, NULL);
};

// Function Engine.Canvas.DrawRect
// [0x00024003] ( FUNC_Final )
// Parameters infos:

void UCanvas::DrawRect() {
    static UFunction* pFnDrawRect = NULL;

    if (!pFnDrawRect)
        pFnDrawRect = (UFunction*)UObject::GObjObjects()->Data[15845];

    UCanvas_execDrawRect_Parms DrawRect_Parms;

    this->ProcessEvent(pFnDrawRect, &DrawRect_Parms, NULL);
};

// Function Engine.Canvas.DrawIcon
// [0x00024003] ( FUNC_Final )
// Parameters infos:

void UCanvas::DrawIcon() {
    static UFunction* pFnDrawIcon = NULL;

    if (!pFnDrawIcon)
        pFnDrawIcon = (UFunction*)UObject::GObjObjects()->Data[15840];

    UCanvas_execDrawIcon_Parms DrawIcon_Parms;

    this->ProcessEvent(pFnDrawIcon, &DrawIcon_Parms, NULL);
};

// Function Engine.Canvas.DrawScaledIcon
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCanvas::DrawScaledIcon() {
    static UFunction* pFnDrawScaledIcon = NULL;

    if (!pFnDrawScaledIcon)
        pFnDrawScaledIcon = (UFunction*)UObject::GObjObjects()->Data[15835];

    UCanvas_execDrawScaledIcon_Parms DrawScaledIcon_Parms;

    this->ProcessEvent(pFnDrawScaledIcon, &DrawScaledIcon_Parms, NULL);
};

// Function Engine.Canvas.MakeIcon
// [0x00824003] ( FUNC_Final )
// Parameters infos:

void UCanvas::MakeIcon() {
    static UFunction* pFnMakeIcon = NULL;

    if (!pFnMakeIcon)
        pFnMakeIcon = (UFunction*)UObject::GObjObjects()->Data[15827];

    UCanvas_execMakeIcon_Parms MakeIcon_Parms;

    this->ProcessEvent(pFnMakeIcon, &MakeIcon_Parms, NULL);
};

// Function Engine.Canvas.DrawBlendedTile
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawBlendedTile() {
    static UFunction* pFnDrawBlendedTile = NULL;

    if (!pFnDrawBlendedTile)
        pFnDrawBlendedTile = (UFunction*)UObject::GObjObjects()->Data[15818];

    UCanvas_execDrawBlendedTile_Parms DrawBlendedTile_Parms;

    pFnDrawBlendedTile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawBlendedTile, &DrawBlendedTile_Parms, NULL);

    pFnDrawBlendedTile->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawTexture
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCanvas::DrawTexture() {
    static UFunction* pFnDrawTexture = NULL;

    if (!pFnDrawTexture)
        pFnDrawTexture = (UFunction*)UObject::GObjObjects()->Data[15815];

    UCanvas_execDrawTexture_Parms DrawTexture_Parms;

    this->ProcessEvent(pFnDrawTexture, &DrawTexture_Parms, NULL);
};

// Function Engine.Canvas.PopMaskRegion
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::PopMaskRegion() {
    static UFunction* pFnPopMaskRegion = NULL;

    if (!pFnPopMaskRegion)
        pFnPopMaskRegion = (UFunction*)UObject::GObjObjects()->Data[15814];

    UCanvas_execPopMaskRegion_Parms PopMaskRegion_Parms;

    pFnPopMaskRegion->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPopMaskRegion, &PopMaskRegion_Parms, NULL);

    pFnPopMaskRegion->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.PushMaskRegion
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::PushMaskRegion() {
    static UFunction* pFnPushMaskRegion = NULL;

    if (!pFnPushMaskRegion)
        pFnPushMaskRegion = (UFunction*)UObject::GObjObjects()->Data[15809];

    UCanvas_execPushMaskRegion_Parms PushMaskRegion_Parms;

    pFnPushMaskRegion->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPushMaskRegion, &PushMaskRegion_Parms, NULL);

    pFnPushMaskRegion->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.SetClip
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCanvas::SetClip() {
    static UFunction* pFnSetClip = NULL;

    if (!pFnSetClip)
        pFnSetClip = (UFunction*)UObject::GObjObjects()->Data[15806];

    UCanvas_execSetClip_Parms SetClip_Parms;

    this->ProcessEvent(pFnSetClip, &SetClip_Parms, NULL);
};

// Function Engine.Canvas.SetOrigin
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCanvas::SetOrigin() {
    static UFunction* pFnSetOrigin = NULL;

    if (!pFnSetOrigin)
        pFnSetOrigin = (UFunction*)UObject::GObjObjects()->Data[15803];

    UCanvas_execSetOrigin_Parms SetOrigin_Parms;

    this->ProcessEvent(pFnSetOrigin, &SetOrigin_Parms, NULL);
};

// Function Engine.Canvas.SetPos
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::SetPos() {
    static UFunction* pFnSetPos = NULL;

    if (!pFnSetPos) pFnSetPos = (UFunction*)UObject::GObjObjects()->Data[6310];

    UCanvas_execSetPos_Parms SetPos_Parms;

    pFnSetPos->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPos, &SetPos_Parms, NULL);

    pFnSetPos->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.GetDefaultCanvasFont
// [0x00020002]
// Parameters infos:

void UCanvas::GetDefaultCanvasFont() {
    static UFunction* pFnGetDefaultCanvasFont = NULL;

    if (!pFnGetDefaultCanvasFont)
        pFnGetDefaultCanvasFont =
            (UFunction*)UObject::GObjObjects()->Data[15798];

    UCanvas_execGetDefaultCanvasFont_Parms GetDefaultCanvasFont_Parms;

    this->ProcessEvent(pFnGetDefaultCanvasFont, &GetDefaultCanvasFont_Parms,
                       NULL);
};

// Function Engine.Canvas.Reset
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UCanvas::eventReset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[15796];

    UCanvas_eventReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.Canvas.PopTransform
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::PopTransform() {
    static UFunction* pFnPopTransform = NULL;

    if (!pFnPopTransform)
        pFnPopTransform = (UFunction*)UObject::GObjObjects()->Data[15795];

    UCanvas_execPopTransform_Parms PopTransform_Parms;

    pFnPopTransform->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPopTransform, &PopTransform_Parms, NULL);

    pFnPopTransform->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.PushTranslationMatrix
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::PushTranslationMatrix() {
    static UFunction* pFnPushTranslationMatrix = NULL;

    if (!pFnPushTranslationMatrix)
        pFnPushTranslationMatrix =
            (UFunction*)UObject::GObjObjects()->Data[15793];

    UCanvas_execPushTranslationMatrix_Parms PushTranslationMatrix_Parms;

    pFnPushTranslationMatrix->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPushTranslationMatrix, &PushTranslationMatrix_Parms,
                       NULL);

    pFnPushTranslationMatrix->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DeProject
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DeProject() {
    static UFunction* pFnDeProject = NULL;

    if (!pFnDeProject)
        pFnDeProject = (UFunction*)UObject::GObjObjects()->Data[15789];

    UCanvas_execDeProject_Parms DeProject_Parms;

    pFnDeProject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeProject, &DeProject_Parms, NULL);

    pFnDeProject->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.Project
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::Project() {
    static UFunction* pFnProject = NULL;

    if (!pFnProject)
        pFnProject = (UFunction*)UObject::GObjObjects()->Data[12263];

    UCanvas_execProject_Parms Project_Parms;

    pFnProject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProject, &Project_Parms, NULL);

    pFnProject->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawText
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawText() {
    static UFunction* pFnDrawText = NULL;

    if (!pFnDrawText)
        pFnDrawText = (UFunction*)UObject::GObjObjects()->Data[6312];

    UCanvas_execDrawText_Parms DrawText_Parms;

    pFnDrawText->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawText, &DrawText_Parms, NULL);

    pFnDrawText->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.TextSize
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::TextSize() {
    static UFunction* pFnTextSize = NULL;

    if (!pFnTextSize)
        pFnTextSize = (UFunction*)UObject::GObjObjects()->Data[15777];

    UCanvas_execTextSize_Parms TextSize_Parms;

    pFnTextSize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTextSize, &TextSize_Parms, NULL);

    pFnTextSize->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.StrLen
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::StrLen() {
    static UFunction* pFnStrLen = NULL;

    if (!pFnStrLen) pFnStrLen = (UFunction*)UObject::GObjObjects()->Data[15438];

    UCanvas_execStrLen_Parms StrLen_Parms;

    pFnStrLen->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStrLen, &StrLen_Parms, NULL);

    pFnStrLen->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.CreateFontRenderInfo
// [0x00826003] ( FUNC_Final )
// Parameters infos:

void UCanvas::CreateFontRenderInfo() {
    static UFunction* pFnCreateFontRenderInfo = NULL;

    if (!pFnCreateFontRenderInfo)
        pFnCreateFontRenderInfo =
            (UFunction*)UObject::GObjObjects()->Data[15766];

    UCanvas_execCreateFontRenderInfo_Parms CreateFontRenderInfo_Parms;

    this->ProcessEvent(pFnCreateFontRenderInfo, &CreateFontRenderInfo_Parms,
                       NULL);
};

// Function Engine.Canvas.DrawTris
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawTris() {
    static UFunction* pFnDrawTris = NULL;

    if (!pFnDrawTris)
        pFnDrawTris = (UFunction*)UObject::GObjObjects()->Data[15761];

    UCanvas_execDrawTris_Parms DrawTris_Parms;

    pFnDrawTris->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawTris, &DrawTris_Parms, NULL);

    pFnDrawTris->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawTileStretched
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawTileStretched() {
    static UFunction* pFnDrawTileStretched = NULL;

    if (!pFnDrawTileStretched)
        pFnDrawTileStretched = (UFunction*)UObject::GObjObjects()->Data[15749];

    UCanvas_execDrawTileStretched_Parms DrawTileStretched_Parms;

    pFnDrawTileStretched->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawTileStretched, &DrawTileStretched_Parms, NULL);

    pFnDrawTileStretched->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawTimer
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawTimer() {
    static UFunction* pFnDrawTimer = NULL;

    if (!pFnDrawTimer)
        pFnDrawTimer = (UFunction*)UObject::GObjObjects()->Data[15737];

    UCanvas_execDrawTimer_Parms DrawTimer_Parms;

    pFnDrawTimer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawTimer, &DrawTimer_Parms, NULL);

    pFnDrawTimer->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawRotatedMaterialTile
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawRotatedMaterialTile() {
    static UFunction* pFnDrawRotatedMaterialTile = NULL;

    if (!pFnDrawRotatedMaterialTile)
        pFnDrawRotatedMaterialTile =
            (UFunction*)UObject::GObjObjects()->Data[15726];

    UCanvas_execDrawRotatedMaterialTile_Parms DrawRotatedMaterialTile_Parms;

    pFnDrawRotatedMaterialTile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawRotatedMaterialTile,
                       &DrawRotatedMaterialTile_Parms, NULL);

    pFnDrawRotatedMaterialTile->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawRotatedTile
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawRotatedTile() {
    static UFunction* pFnDrawRotatedTile = NULL;

    if (!pFnDrawRotatedTile)
        pFnDrawRotatedTile = (UFunction*)UObject::GObjObjects()->Data[15715];

    UCanvas_execDrawRotatedTile_Parms DrawRotatedTile_Parms;

    pFnDrawRotatedTile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawRotatedTile, &DrawRotatedTile_Parms, NULL);

    pFnDrawRotatedTile->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawMaterialTile
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawMaterialTile() {
    static UFunction* pFnDrawMaterialTile = NULL;

    if (!pFnDrawMaterialTile)
        pFnDrawMaterialTile = (UFunction*)UObject::GObjObjects()->Data[15706];

    UCanvas_execDrawMaterialTile_Parms DrawMaterialTile_Parms;

    pFnDrawMaterialTile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawMaterialTile, &DrawMaterialTile_Parms, NULL);

    pFnDrawMaterialTile->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.PreOptimizeDrawTiles
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::PreOptimizeDrawTiles() {
    static UFunction* pFnPreOptimizeDrawTiles = NULL;

    if (!pFnPreOptimizeDrawTiles)
        pFnPreOptimizeDrawTiles =
            (UFunction*)UObject::GObjObjects()->Data[15702];

    UCanvas_execPreOptimizeDrawTiles_Parms PreOptimizeDrawTiles_Parms;

    pFnPreOptimizeDrawTiles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPreOptimizeDrawTiles, &PreOptimizeDrawTiles_Parms,
                       NULL);

    pFnPreOptimizeDrawTiles->FunctionFlags |= 0x400;
};

// Function Engine.Canvas.DrawTile
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCanvas::DrawTile() {
    static UFunction* pFnDrawTile = NULL;

    if (!pFnDrawTile)
        pFnDrawTile = (UFunction*)UObject::GObjObjects()->Data[15691];

    UCanvas_execDrawTile_Parms DrawTile_Parms;

    pFnDrawTile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawTile, &DrawTile_Parms, NULL);

    pFnDrawTile->FunctionFlags |= 0x400;
};

// Function Engine.Controller.GeneratePathToLocation
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventGeneratePathToLocation() {
    static UFunction* pFnGeneratePathToLocation = NULL;

    if (!pFnGeneratePathToLocation)
        pFnGeneratePathToLocation =
            (UFunction*)UObject::GObjObjects()->Data[8605];

    AController_eventGeneratePathToLocation_Parms GeneratePathToLocation_Parms;

    this->ProcessEvent(pFnGeneratePathToLocation, &GeneratePathToLocation_Parms,
                       NULL);
};

// Function Engine.Controller.GeneratePathToActor
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventGeneratePathToActor() {
    static UFunction* pFnGeneratePathToActor = NULL;

    if (!pFnGeneratePathToActor)
        pFnGeneratePathToActor = (UFunction*)UObject::GObjObjects()->Data[8600];

    AController_eventGeneratePathToActor_Parms GeneratePathToActor_Parms;

    this->ProcessEvent(pFnGeneratePathToActor, &GeneratePathToActor_Parms,
                       NULL);
};

// Function Engine.Controller.InterpolationFinished
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AController::eventInterpolationFinished() {
    static UFunction* pFnInterpolationFinished = NULL;

    if (!pFnInterpolationFinished)
        pFnInterpolationFinished =
            (UFunction*)UObject::GObjObjects()->Data[8598];

    AController_eventInterpolationFinished_Parms InterpolationFinished_Parms;

    this->ProcessEvent(pFnInterpolationFinished, &InterpolationFinished_Parms,
                       NULL);
};

// Function Engine.Controller.InterpolationStarted
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AController::eventInterpolationStarted() {
    static UFunction* pFnInterpolationStarted = NULL;

    if (!pFnInterpolationStarted)
        pFnInterpolationStarted =
            (UFunction*)UObject::GObjObjects()->Data[8595];

    AController_eventInterpolationStarted_Parms InterpolationStarted_Parms;

    this->ProcessEvent(pFnInterpolationStarted, &InterpolationStarted_Parms,
                       NULL);
};

// Function Engine.Controller.InitNavigationHandle
// [0x00020102]
// Parameters infos:

void AController::InitNavigationHandle() {
    static UFunction* pFnInitNavigationHandle = NULL;

    if (!pFnInitNavigationHandle)
        pFnInitNavigationHandle =
            (UFunction*)UObject::GObjObjects()->Data[8594];

    AController_execInitNavigationHandle_Parms InitNavigationHandle_Parms;

    this->ProcessEvent(pFnInitNavigationHandle, &InitNavigationHandle_Parms,
                       NULL);
};

// Function Engine.Controller.ReadyForLift
// [0x00020000]
// Parameters infos:

void AController::ReadyForLift() {
    static UFunction* pFnReadyForLift = NULL;

    if (!pFnReadyForLift)
        pFnReadyForLift = (UFunction*)UObject::GObjObjects()->Data[8593];

    AController_execReadyForLift_Parms ReadyForLift_Parms;

    this->ProcessEvent(pFnReadyForLift, &ReadyForLift_Parms, NULL);
};

// Function Engine.Controller.SendMessage
// [0x00024000]
// Parameters infos:

void AController::SendMessage() {
    static UFunction* pFnSendMessage = NULL;

    if (!pFnSendMessage)
        pFnSendMessage = (UFunction*)UObject::GObjObjects()->Data[8588];

    AController_execSendMessage_Parms SendMessage_Parms;

    this->ProcessEvent(pFnSendMessage, &SendMessage_Parms, NULL);
};

// Function Engine.Controller.CurrentLevelUnloaded
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventCurrentLevelUnloaded() {
    static UFunction* pFnCurrentLevelUnloaded = NULL;

    if (!pFnCurrentLevelUnloaded)
        pFnCurrentLevelUnloaded =
            (UFunction*)UObject::GObjObjects()->Data[8587];

    AController_eventCurrentLevelUnloaded_Parms CurrentLevelUnloaded_Parms;

    this->ProcessEvent(pFnCurrentLevelUnloaded, &CurrentLevelUnloaded_Parms,
                       NULL);
};

// Function Engine.Controller.IsInCombat
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventIsInCombat() {
    static UFunction* pFnIsInCombat = NULL;

    if (!pFnIsInCombat)
        pFnIsInCombat = (UFunction*)UObject::GObjObjects()->Data[8584];

    AController_eventIsInCombat_Parms IsInCombat_Parms;

    this->ProcessEvent(pFnIsInCombat, &IsInCombat_Parms, NULL);
};

// Function Engine.Controller.IsSpectating
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventIsSpectating() {
    static UFunction* pFnIsSpectating = NULL;

    if (!pFnIsSpectating)
        pFnIsSpectating = (UFunction*)UObject::GObjObjects()->Data[8582];

    AController_eventIsSpectating_Parms IsSpectating_Parms;

    this->ProcessEvent(pFnIsSpectating, &IsSpectating_Parms, NULL);
};

// Function Engine.Controller.OnToggleHidden
// [0x00020102]
// Parameters infos:

void AController::OnToggleHidden() {
    static UFunction* pFnOnToggleHidden = NULL;

    if (!pFnOnToggleHidden)
        pFnOnToggleHidden = (UFunction*)UObject::GObjObjects()->Data[8580];

    AController_execOnToggleHidden_Parms OnToggleHidden_Parms;

    this->ProcessEvent(pFnOnToggleHidden, &OnToggleHidden_Parms, NULL);
};

// Function Engine.Controller.NotifyAddInventory
// [0x00020000]
// Parameters infos:

void AController::NotifyAddInventory() {
    static UFunction* pFnNotifyAddInventory = NULL;

    if (!pFnNotifyAddInventory)
        pFnNotifyAddInventory = (UFunction*)UObject::GObjObjects()->Data[8578];

    AController_execNotifyAddInventory_Parms NotifyAddInventory_Parms;

    this->ProcessEvent(pFnNotifyAddInventory, &NotifyAddInventory_Parms, NULL);
};

// Function Engine.Controller.OnModifyHealth
// [0x00020102]
// Parameters infos:

void AController::OnModifyHealth() {
    static UFunction* pFnOnModifyHealth = NULL;

    if (!pFnOnModifyHealth)
        pFnOnModifyHealth = (UFunction*)UObject::GObjObjects()->Data[8576];

    AController_execOnModifyHealth_Parms OnModifyHealth_Parms;

    this->ProcessEvent(pFnOnModifyHealth, &OnModifyHealth_Parms, NULL);
};

// Function Engine.Controller.NotifyCoverClaimViolation
// [0x00020100]
// Parameters infos:

void AController::NotifyCoverClaimViolation() {
    static UFunction* pFnNotifyCoverClaimViolation = NULL;

    if (!pFnNotifyCoverClaimViolation)
        pFnNotifyCoverClaimViolation =
            (UFunction*)UObject::GObjObjects()->Data[8571];

    AController_execNotifyCoverClaimViolation_Parms
        NotifyCoverClaimViolation_Parms;

    this->ProcessEvent(pFnNotifyCoverClaimViolation,
                       &NotifyCoverClaimViolation_Parms, NULL);
};

// Function Engine.Controller.NotifyCoverAdjusted
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyCoverAdjusted() {
    static UFunction* pFnNotifyCoverAdjusted = NULL;

    if (!pFnNotifyCoverAdjusted)
        pFnNotifyCoverAdjusted = (UFunction*)UObject::GObjObjects()->Data[8570];

    AController_eventNotifyCoverAdjusted_Parms NotifyCoverAdjusted_Parms;

    this->ProcessEvent(pFnNotifyCoverAdjusted, &NotifyCoverAdjusted_Parms,
                       NULL);
};

// Function Engine.Controller.NotifyCoverDisabled
// [0x00024100]
// Parameters infos:

void AController::NotifyCoverDisabled() {
    static UFunction* pFnNotifyCoverDisabled = NULL;

    if (!pFnNotifyCoverDisabled)
        pFnNotifyCoverDisabled = (UFunction*)UObject::GObjObjects()->Data[8566];

    AController_execNotifyCoverDisabled_Parms NotifyCoverDisabled_Parms;

    this->ProcessEvent(pFnNotifyCoverDisabled, &NotifyCoverDisabled_Parms,
                       NULL);
};

// Function Engine.Controller.OnSetVelocity
// [0x00020102]
// Parameters infos:

void AController::OnSetVelocity() {
    static UFunction* pFnOnSetVelocity = NULL;

    if (!pFnOnSetVelocity)
        pFnOnSetVelocity = (UFunction*)UObject::GObjObjects()->Data[8564];

    AController_execOnSetVelocity_Parms OnSetVelocity_Parms;

    this->ProcessEvent(pFnOnSetVelocity, &OnSetVelocity_Parms, NULL);
};

// Function Engine.Controller.OnSetPhysics
// [0x00020102]
// Parameters infos:

void AController::OnSetPhysics() {
    static UFunction* pFnOnSetPhysics = NULL;

    if (!pFnOnSetPhysics)
        pFnOnSetPhysics = (UFunction*)UObject::GObjObjects()->Data[8562];

    AController_execOnSetPhysics_Parms OnSetPhysics_Parms;

    this->ProcessEvent(pFnOnSetPhysics, &OnSetPhysics_Parms, NULL);
};

// Function Engine.Controller.OnToggleGodMode
// [0x00020002]
// Parameters infos:

void AController::OnToggleGodMode() {
    static UFunction* pFnOnToggleGodMode = NULL;

    if (!pFnOnToggleGodMode)
        pFnOnToggleGodMode = (UFunction*)UObject::GObjObjects()->Data[8560];

    AController_execOnToggleGodMode_Parms OnToggleGodMode_Parms;

    this->ProcessEvent(pFnOnToggleGodMode, &OnToggleGodMode_Parms, NULL);
};

// Function Engine.Controller.OnAttachToActor
// [0x00020002]
// Parameters infos:

void AController::OnAttachToActor() {
    static UFunction* pFnOnAttachToActor = NULL;

    if (!pFnOnAttachToActor)
        pFnOnAttachToActor = (UFunction*)UObject::GObjObjects()->Data[8558];

    AController_execOnAttachToActor_Parms OnAttachToActor_Parms;

    this->ProcessEvent(pFnOnAttachToActor, &OnAttachToActor_Parms, NULL);
};

// Function Engine.Controller.OnTeleport
// [0x00020102]
// Parameters infos:

void AController::OnTeleport() {
    static UFunction* pFnOnTeleport = NULL;

    if (!pFnOnTeleport)
        pFnOnTeleport = (UFunction*)UObject::GObjObjects()->Data[8556];

    AController_execOnTeleport_Parms OnTeleport_Parms;

    this->ProcessEvent(pFnOnTeleport, &OnTeleport_Parms, NULL);
};

// Function Engine.Controller.IsDead
// [0x00020000]
// Parameters infos:

void AController::IsDead() {
    static UFunction* pFnIsDead = NULL;

    if (!pFnIsDead) pFnIsDead = (UFunction*)UObject::GObjObjects()->Data[8501];

    AController_execIsDead_Parms IsDead_Parms;

    this->ProcessEvent(pFnIsDead, &IsDead_Parms, NULL);
};

// Function Engine.Controller.GetHumanReadableName
// [0x00020102]
// Parameters infos:

void AController::GetHumanReadableName() {
    static UFunction* pFnGetHumanReadableName = NULL;

    if (!pFnGetHumanReadableName)
        pFnGetHumanReadableName =
            (UFunction*)UObject::GObjObjects()->Data[8499];

    AController_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

    this->ProcessEvent(pFnGetHumanReadableName, &GetHumanReadableName_Parms,
                       NULL);
};

// Function Engine.Controller.DisplayDebug
// [0x00420102]
// Parameters infos:

void AController::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[8494];

    AController_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Controller.StopLatentExecution
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::StopLatentExecution() {
    static UFunction* pFnStopLatentExecution = NULL;

    if (!pFnStopLatentExecution)
        pFnStopLatentExecution = (UFunction*)UObject::GObjObjects()->Data[8493];

    AController_execStopLatentExecution_Parms StopLatentExecution_Parms;

    pFnStopLatentExecution->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopLatentExecution, &StopLatentExecution_Parms,
                       NULL);

    pFnStopLatentExecution->FunctionFlags |= 0x400;
};

// Function Engine.Controller.InLatentExecution
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::InLatentExecution() {
    static UFunction* pFnInLatentExecution = NULL;

    if (!pFnInLatentExecution)
        pFnInLatentExecution = (UFunction*)UObject::GObjObjects()->Data[8490];

    AController_execInLatentExecution_Parms InLatentExecution_Parms;

    pFnInLatentExecution->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInLatentExecution, &InLatentExecution_Parms, NULL);

    pFnInLatentExecution->FunctionFlags |= 0x400;
};

// Function Engine.Controller.ReachedPreciseDestination
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventReachedPreciseDestination() {
    static UFunction* pFnReachedPreciseDestination = NULL;

    if (!pFnReachedPreciseDestination)
        pFnReachedPreciseDestination =
            (UFunction*)UObject::GObjObjects()->Data[8489];

    AController_eventReachedPreciseDestination_Parms
        ReachedPreciseDestination_Parms;

    this->ProcessEvent(pFnReachedPreciseDestination,
                       &ReachedPreciseDestination_Parms, NULL);
};

// Function Engine.Controller.NotifyMissedJump
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyMissedJump() {
    static UFunction* pFnNotifyMissedJump = NULL;

    if (!pFnNotifyMissedJump)
        pFnNotifyMissedJump = (UFunction*)UObject::GObjObjects()->Data[8488];

    AController_eventNotifyMissedJump_Parms NotifyMissedJump_Parms;

    this->ProcessEvent(pFnNotifyMissedJump, &NotifyMissedJump_Parms, NULL);
};

// Function Engine.Controller.NotifyJumpApex
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyJumpApex() {
    static UFunction* pFnNotifyJumpApex = NULL;

    if (!pFnNotifyJumpApex)
        pFnNotifyJumpApex = (UFunction*)UObject::GObjObjects()->Data[8487];

    AController_eventNotifyJumpApex_Parms NotifyJumpApex_Parms;

    this->ProcessEvent(pFnNotifyJumpApex, &NotifyJumpApex_Parms, NULL);
};

// Function Engine.Controller.NotifyBump
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyBump() {
    static UFunction* pFnNotifyBump = NULL;

    if (!pFnNotifyBump)
        pFnNotifyBump = (UFunction*)UObject::GObjObjects()->Data[8483];

    AController_eventNotifyBump_Parms NotifyBump_Parms;

    this->ProcessEvent(pFnNotifyBump, &NotifyBump_Parms, NULL);
};

// Function Engine.Controller.NotifyFallingHitWall
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyFallingHitWall() {
    static UFunction* pFnNotifyFallingHitWall = NULL;

    if (!pFnNotifyFallingHitWall)
        pFnNotifyFallingHitWall =
            (UFunction*)UObject::GObjObjects()->Data[8480];

    AController_eventNotifyFallingHitWall_Parms NotifyFallingHitWall_Parms;

    this->ProcessEvent(pFnNotifyFallingHitWall, &NotifyFallingHitWall_Parms,
                       NULL);
};

// Function Engine.Controller.NotifyHitWall
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyHitWall() {
    static UFunction* pFnNotifyHitWall = NULL;

    if (!pFnNotifyHitWall)
        pFnNotifyHitWall = (UFunction*)UObject::GObjObjects()->Data[8476];

    AController_eventNotifyHitWall_Parms NotifyHitWall_Parms;

    this->ProcessEvent(pFnNotifyHitWall, &NotifyHitWall_Parms, NULL);
};

// Function Engine.Controller.NotifyLanded
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyLanded() {
    static UFunction* pFnNotifyLanded = NULL;

    if (!pFnNotifyLanded)
        pFnNotifyLanded = (UFunction*)UObject::GObjObjects()->Data[8472];

    AController_eventNotifyLanded_Parms NotifyLanded_Parms;

    this->ProcessEvent(pFnNotifyLanded, &NotifyLanded_Parms, NULL);
};

// Function Engine.Controller.NotifyHeadVolumeChange
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyHeadVolumeChange() {
    static UFunction* pFnNotifyHeadVolumeChange = NULL;

    if (!pFnNotifyHeadVolumeChange)
        pFnNotifyHeadVolumeChange =
            (UFunction*)UObject::GObjObjects()->Data[8469];

    AController_eventNotifyHeadVolumeChange_Parms NotifyHeadVolumeChange_Parms;

    this->ProcessEvent(pFnNotifyHeadVolumeChange, &NotifyHeadVolumeChange_Parms,
                       NULL);
};

// Function Engine.Controller.NotifyPhysicsVolumeChange
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyPhysicsVolumeChange() {
    static UFunction* pFnNotifyPhysicsVolumeChange = NULL;

    if (!pFnNotifyPhysicsVolumeChange)
        pFnNotifyPhysicsVolumeChange =
            (UFunction*)UObject::GObjObjects()->Data[8467];

    AController_eventNotifyPhysicsVolumeChange_Parms
        NotifyPhysicsVolumeChange_Parms;

    this->ProcessEvent(pFnNotifyPhysicsVolumeChange,
                       &NotifyPhysicsVolumeChange_Parms, NULL);
};

// Function Engine.Controller.LandingShake
// [0x00020102]
// Parameters infos:

void AController::LandingShake() {
    static UFunction* pFnLandingShake = NULL;

    if (!pFnLandingShake)
        pFnLandingShake = (UFunction*)UObject::GObjObjects()->Data[8465];

    AController_execLandingShake_Parms LandingShake_Parms;

    this->ProcessEvent(pFnLandingShake, &LandingShake_Parms, NULL);
};

// Function Engine.Controller.IsAimingAt
// [0x00820102]
// Parameters infos:

void AController::IsAimingAt() {
    static UFunction* pFnIsAimingAt = NULL;

    if (!pFnIsAimingAt)
        pFnIsAimingAt = (UFunction*)UObject::GObjObjects()->Data[8459];

    AController_execIsAimingAt_Parms IsAimingAt_Parms;

    this->ProcessEvent(pFnIsAimingAt, &IsAimingAt_Parms, NULL);
};

// Function Engine.Controller.GetActorEyesViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void AController::eventGetActorEyesViewPoint() {
    static UFunction* pFnGetActorEyesViewPoint = NULL;

    if (!pFnGetActorEyesViewPoint)
        pFnGetActorEyesViewPoint =
            (UFunction*)UObject::GObjObjects()->Data[8456];

    AController_eventGetActorEyesViewPoint_Parms GetActorEyesViewPoint_Parms;

    this->ProcessEvent(pFnGetActorEyesViewPoint, &GetActorEyesViewPoint_Parms,
                       NULL);
};

// Function Engine.Controller.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void AController::eventGetPlayerViewPoint() {
    static UFunction* pFnGetPlayerViewPoint = NULL;

    if (!pFnGetPlayerViewPoint)
        pFnGetPlayerViewPoint = (UFunction*)UObject::GObjObjects()->Data[8453];

    AController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

    this->ProcessEvent(pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL);
};

// Function Engine.Controller.HandlePathObstruction
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventHandlePathObstruction() {
    static UFunction* pFnHandlePathObstruction = NULL;

    if (!pFnHandlePathObstruction)
        pFnHandlePathObstruction =
            (UFunction*)UObject::GObjObjects()->Data[8450];

    AController_eventHandlePathObstruction_Parms HandlePathObstruction_Parms;

    this->ProcessEvent(pFnHandlePathObstruction, &HandlePathObstruction_Parms,
                       NULL);
};

// Function Engine.Controller.UnderLift
// [0x00020000]
// Parameters infos:

void AController::UnderLift() {
    static UFunction* pFnUnderLift = NULL;

    if (!pFnUnderLift)
        pFnUnderLift = (UFunction*)UObject::GObjObjects()->Data[8448];

    AController_execUnderLift_Parms UnderLift_Parms;

    this->ProcessEvent(pFnUnderLift, &UnderLift_Parms, NULL);
};

// Function Engine.Controller.MoverFinished
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventMoverFinished() {
    static UFunction* pFnMoverFinished = NULL;

    if (!pFnMoverFinished)
        pFnMoverFinished = (UFunction*)UObject::GObjObjects()->Data[8446];

    AController_eventMoverFinished_Parms MoverFinished_Parms;

    this->ProcessEvent(pFnMoverFinished, &MoverFinished_Parms, NULL);
};

// Function Engine.Controller.WaitForMover
// [0x00020002]
// Parameters infos:

void AController::WaitForMover() {
    static UFunction* pFnWaitForMover = NULL;

    if (!pFnWaitForMover)
        pFnWaitForMover = (UFunction*)UObject::GObjObjects()->Data[8444];

    AController_execWaitForMover_Parms WaitForMover_Parms;

    this->ProcessEvent(pFnWaitForMover, &WaitForMover_Parms, NULL);
};

// Function Engine.Controller.AllowDetourTo
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventAllowDetourTo() {
    static UFunction* pFnAllowDetourTo = NULL;

    if (!pFnAllowDetourTo)
        pFnAllowDetourTo = (UFunction*)UObject::GObjObjects()->Data[8441];

    AController_eventAllowDetourTo_Parms AllowDetourTo_Parms;

    this->ProcessEvent(pFnAllowDetourTo, &AllowDetourTo_Parms, NULL);
};

// Function Engine.Controller.MayFall
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventMayFall() {
    static UFunction* pFnMayFall = NULL;

    if (!pFnMayFall)
        pFnMayFall = (UFunction*)UObject::GObjObjects()->Data[8438];

    AController_eventMayFall_Parms MayFall_Parms;

    this->ProcessEvent(pFnMayFall, &MayFall_Parms, NULL);
};

// Function Engine.Controller.EndClimbLadder
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AController::EndClimbLadder() {
    static UFunction* pFnEndClimbLadder = NULL;

    if (!pFnEndClimbLadder)
        pFnEndClimbLadder = (UFunction*)UObject::GObjObjects()->Data[8437];

    AController_execEndClimbLadder_Parms EndClimbLadder_Parms;

    pFnEndClimbLadder->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndClimbLadder, &EndClimbLadder_Parms, NULL);

    pFnEndClimbLadder->FunctionFlags |= 0x400;
};

// Function Engine.Controller.LongFall
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventLongFall() {
    static UFunction* pFnLongFall = NULL;

    if (!pFnLongFall)
        pFnLongFall = (UFunction*)UObject::GObjObjects()->Data[8436];

    AController_eventLongFall_Parms LongFall_Parms;

    this->ProcessEvent(pFnLongFall, &LongFall_Parms, NULL);
};

// Function Engine.Controller.WaitForLanding
// [0x00024409] ( FUNC_Final | FUNC_Native ) iNative [0x020F]
// Parameters infos:

void AController::WaitForLanding() {
    static UFunction* pFnWaitForLanding = NULL;

    if (!pFnWaitForLanding)
        pFnWaitForLanding = (UFunction*)UObject::GObjObjects()->Data[8434];

    AController_execWaitForLanding_Parms WaitForLanding_Parms;

    unsigned short NativeIndex = pFnWaitForLanding->iNative;
    pFnWaitForLanding->iNative = 0;

    pFnWaitForLanding->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWaitForLanding, &WaitForLanding_Parms, NULL);

    pFnWaitForLanding->FunctionFlags |= 0x400;

    pFnWaitForLanding->iNative = NativeIndex;
};

// Function Engine.Controller.PickWallAdjust
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x020E]
// Parameters infos:

void AController::PickWallAdjust() {
    static UFunction* pFnPickWallAdjust = NULL;

    if (!pFnPickWallAdjust)
        pFnPickWallAdjust = (UFunction*)UObject::GObjObjects()->Data[8431];

    AController_execPickWallAdjust_Parms PickWallAdjust_Parms;

    unsigned short NativeIndex = pFnPickWallAdjust->iNative;
    pFnPickWallAdjust->iNative = 0;

    pFnPickWallAdjust->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPickWallAdjust, &PickWallAdjust_Parms, NULL);

    pFnPickWallAdjust->FunctionFlags |= 0x400;

    pFnPickWallAdjust->iNative = NativeIndex;
};

// Function Engine.Controller.MoveUnreachable
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventMoveUnreachable() {
    static UFunction* pFnMoveUnreachable = NULL;

    if (!pFnMoveUnreachable)
        pFnMoveUnreachable = (UFunction*)UObject::GObjObjects()->Data[8428];

    AController_eventMoveUnreachable_Parms MoveUnreachable_Parms;

    this->ProcessEvent(pFnMoveUnreachable, &MoveUnreachable_Parms, NULL);
};

// Function Engine.Controller.ActorReachable
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0208]
// Parameters infos:

void AController::ActorReachable() {
    static UFunction* pFnActorReachable = NULL;

    if (!pFnActorReachable)
        pFnActorReachable = (UFunction*)UObject::GObjObjects()->Data[8425];

    AController_execActorReachable_Parms ActorReachable_Parms;

    unsigned short NativeIndex = pFnActorReachable->iNative;
    pFnActorReachable->iNative = 0;

    pFnActorReachable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActorReachable, &ActorReachable_Parms, NULL);

    pFnActorReachable->FunctionFlags |= 0x400;

    pFnActorReachable->iNative = NativeIndex;
};

// Function Engine.Controller.PointReachable
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0209]
// Parameters infos:

void AController::PointReachable() {
    static UFunction* pFnPointReachable = NULL;

    if (!pFnPointReachable)
        pFnPointReachable = (UFunction*)UObject::GObjObjects()->Data[8422];

    AController_execPointReachable_Parms PointReachable_Parms;

    unsigned short NativeIndex = pFnPointReachable->iNative;
    pFnPointReachable->iNative = 0;

    pFnPointReachable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPointReachable, &PointReachable_Parms, NULL);

    pFnPointReachable->FunctionFlags |= 0x400;

    pFnPointReachable->iNative = NativeIndex;
};

// Function Engine.Controller.FindPathToIntercept
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::FindPathToIntercept() {
    static UFunction* pFnFindPathToIntercept = NULL;

    if (!pFnFindPathToIntercept)
        pFnFindPathToIntercept = (UFunction*)UObject::GObjObjects()->Data[8415];

    AController_execFindPathToIntercept_Parms FindPathToIntercept_Parms;

    pFnFindPathToIntercept->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPathToIntercept, &FindPathToIntercept_Parms,
                       NULL);

    pFnFindPathToIntercept->FunctionFlags |= 0x400;
};

// Function Engine.Controller.FindRandomDest
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x020D]
// Parameters infos:

void AController::FindRandomDest() {
    static UFunction* pFnFindRandomDest = NULL;

    if (!pFnFindRandomDest)
        pFnFindRandomDest = (UFunction*)UObject::GObjObjects()->Data[8413];

    AController_execFindRandomDest_Parms FindRandomDest_Parms;

    unsigned short NativeIndex = pFnFindRandomDest->iNative;
    pFnFindRandomDest->iNative = 0;

    pFnFindRandomDest->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindRandomDest, &FindRandomDest_Parms, NULL);

    pFnFindRandomDest->FunctionFlags |= 0x400;

    pFnFindRandomDest->iNative = NativeIndex;
};

// Function Engine.Controller.FindPathTowardNearest
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::FindPathTowardNearest() {
    static UFunction* pFnFindPathTowardNearest = NULL;

    if (!pFnFindPathTowardNearest)
        pFnFindPathTowardNearest =
            (UFunction*)UObject::GObjObjects()->Data[8407];

    AController_execFindPathTowardNearest_Parms FindPathTowardNearest_Parms;

    pFnFindPathTowardNearest->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPathTowardNearest, &FindPathTowardNearest_Parms,
                       NULL);

    pFnFindPathTowardNearest->FunctionFlags |= 0x400;
};

// Function Engine.Controller.FindPathToward
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0205]
// Parameters infos:

void AController::FindPathToward() {
    static UFunction* pFnFindPathToward = NULL;

    if (!pFnFindPathToward)
        pFnFindPathToward = (UFunction*)UObject::GObjObjects()->Data[8401];

    AController_execFindPathToward_Parms FindPathToward_Parms;

    unsigned short NativeIndex = pFnFindPathToward->iNative;
    pFnFindPathToward->iNative = 0;

    pFnFindPathToward->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPathToward, &FindPathToward_Parms, NULL);

    pFnFindPathToward->FunctionFlags |= 0x400;

    pFnFindPathToward->iNative = NativeIndex;
};

// Function Engine.Controller.FindPathTo
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0206]
// Parameters infos:

void AController::FindPathTo() {
    static UFunction* pFnFindPathTo = NULL;

    if (!pFnFindPathTo)
        pFnFindPathTo = (UFunction*)UObject::GObjObjects()->Data[8396];

    AController_execFindPathTo_Parms FindPathTo_Parms;

    unsigned short NativeIndex = pFnFindPathTo->iNative;
    pFnFindPathTo->iNative = 0;

    pFnFindPathTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPathTo, &FindPathTo_Parms, NULL);

    pFnFindPathTo->FunctionFlags |= 0x400;

    pFnFindPathTo->iNative = NativeIndex;
};

// Function Engine.Controller.FinishRotation
// [0x00020409] ( FUNC_Final | FUNC_Native ) iNative [0x01FC]
// Parameters infos:

void AController::FinishRotation() {
    static UFunction* pFnFinishRotation = NULL;

    if (!pFnFinishRotation)
        pFnFinishRotation = (UFunction*)UObject::GObjObjects()->Data[8395];

    AController_execFinishRotation_Parms FinishRotation_Parms;

    unsigned short NativeIndex = pFnFinishRotation->iNative;
    pFnFinishRotation->iNative = 0;

    pFnFinishRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFinishRotation, &FinishRotation_Parms, NULL);

    pFnFinishRotation->FunctionFlags |= 0x400;

    pFnFinishRotation->iNative = NativeIndex;
};

// Function Engine.Controller.SetupSpecialPathAbilities
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventSetupSpecialPathAbilities() {
    static UFunction* pFnSetupSpecialPathAbilities = NULL;

    if (!pFnSetupSpecialPathAbilities)
        pFnSetupSpecialPathAbilities =
            (UFunction*)UObject::GObjObjects()->Data[8394];

    AController_eventSetupSpecialPathAbilities_Parms
        SetupSpecialPathAbilities_Parms;

    this->ProcessEvent(pFnSetupSpecialPathAbilities,
                       &SetupSpecialPathAbilities_Parms, NULL);
};

// Function Engine.Controller.MoveToward
// [0x00024409] ( FUNC_Final | FUNC_Native ) iNative [0x01F6]
// Parameters infos:

void AController::MoveToward() {
    static UFunction* pFnMoveToward = NULL;

    if (!pFnMoveToward)
        pFnMoveToward = (UFunction*)UObject::GObjObjects()->Data[8388];

    AController_execMoveToward_Parms MoveToward_Parms;

    unsigned short NativeIndex = pFnMoveToward->iNative;
    pFnMoveToward->iNative = 0;

    pFnMoveToward->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveToward, &MoveToward_Parms, NULL);

    pFnMoveToward->FunctionFlags |= 0x400;

    pFnMoveToward->iNative = NativeIndex;
};

// Function Engine.Controller.MoveToDirectNonPathPos
// [0x00024409] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::MoveToDirectNonPathPos() {
    static UFunction* pFnMoveToDirectNonPathPos = NULL;

    if (!pFnMoveToDirectNonPathPos)
        pFnMoveToDirectNonPathPos =
            (UFunction*)UObject::GObjObjects()->Data[8383];

    AController_execMoveToDirectNonPathPos_Parms MoveToDirectNonPathPos_Parms;

    pFnMoveToDirectNonPathPos->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveToDirectNonPathPos, &MoveToDirectNonPathPos_Parms,
                       NULL);

    pFnMoveToDirectNonPathPos->FunctionFlags |= 0x400;
};

// Function Engine.Controller.MoveTo
// [0x00024409] ( FUNC_Final | FUNC_Native ) iNative [0x01F4]
// Parameters infos:

void AController::MoveTo() {
    static UFunction* pFnMoveTo = NULL;

    if (!pFnMoveTo) pFnMoveTo = (UFunction*)UObject::GObjObjects()->Data[8378];

    AController_execMoveTo_Parms MoveTo_Parms;

    unsigned short NativeIndex = pFnMoveTo->iNative;
    pFnMoveTo->iNative = 0;

    pFnMoveTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveTo, &MoveTo_Parms, NULL);

    pFnMoveTo->FunctionFlags |= 0x400;

    pFnMoveTo->iNative = NativeIndex;
};

// Function Engine.Controller.EnemyNotVisible
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventEnemyNotVisible() {
    static UFunction* pFnEnemyNotVisible = NULL;

    if (!pFnEnemyNotVisible)
        pFnEnemyNotVisible = (UFunction*)UObject::GObjObjects()->Data[8377];

    AController_eventEnemyNotVisible_Parms EnemyNotVisible_Parms;

    this->ProcessEvent(pFnEnemyNotVisible, &EnemyNotVisible_Parms, NULL);
};

// Function Engine.Controller.SeeMonster
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventSeeMonster() {
    static UFunction* pFnSeeMonster = NULL;

    if (!pFnSeeMonster)
        pFnSeeMonster = (UFunction*)UObject::GObjObjects()->Data[8375];

    AController_eventSeeMonster_Parms SeeMonster_Parms;

    this->ProcessEvent(pFnSeeMonster, &SeeMonster_Parms, NULL);
};

// Function Engine.Controller.SeePlayer
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventSeePlayer() {
    static UFunction* pFnSeePlayer = NULL;

    if (!pFnSeePlayer)
        pFnSeePlayer = (UFunction*)UObject::GObjObjects()->Data[8373];

    AController_eventSeePlayer_Parms SeePlayer_Parms;

    this->ProcessEvent(pFnSeePlayer, &SeePlayer_Parms, NULL);
};

// Function Engine.Controller.HearNoise
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventHearNoise() {
    static UFunction* pFnHearNoise = NULL;

    if (!pFnHearNoise)
        pFnHearNoise = (UFunction*)UObject::GObjObjects()->Data[8369];

    AController_eventHearNoise_Parms HearNoise_Parms;

    this->ProcessEvent(pFnHearNoise, &HearNoise_Parms, NULL);
};

// Function Engine.Controller.PickTarget
// [0x00424401] ( FUNC_Final | FUNC_Native ) iNative [0x0213]
// Parameters infos:

void AController::PickTarget() {
    static UFunction* pFnPickTarget = NULL;

    if (!pFnPickTarget)
        pFnPickTarget = (UFunction*)UObject::GObjObjects()->Data[8360];

    AController_execPickTarget_Parms PickTarget_Parms;

    unsigned short NativeIndex = pFnPickTarget->iNative;
    pFnPickTarget->iNative = 0;

    pFnPickTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPickTarget, &PickTarget_Parms, NULL);

    pFnPickTarget->FunctionFlags |= 0x400;

    pFnPickTarget->iNative = NativeIndex;
};

// Function Engine.Controller.CanSeeByPoints
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0219]
// Parameters infos:

void AController::CanSeeByPoints() {
    static UFunction* pFnCanSeeByPoints = NULL;

    if (!pFnCanSeeByPoints)
        pFnCanSeeByPoints = (UFunction*)UObject::GObjObjects()->Data[8355];

    AController_execCanSeeByPoints_Parms CanSeeByPoints_Parms;

    unsigned short NativeIndex = pFnCanSeeByPoints->iNative;
    pFnCanSeeByPoints->iNative = 0;

    pFnCanSeeByPoints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanSeeByPoints, &CanSeeByPoints_Parms, NULL);

    pFnCanSeeByPoints->FunctionFlags |= 0x400;

    pFnCanSeeByPoints->iNative = NativeIndex;
};

// Function Engine.Controller.CanSee
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0215]
// Parameters infos:

void AController::CanSee() {
    static UFunction* pFnCanSee = NULL;

    if (!pFnCanSee) pFnCanSee = (UFunction*)UObject::GObjObjects()->Data[8352];

    AController_execCanSee_Parms CanSee_Parms;

    unsigned short NativeIndex = pFnCanSee->iNative;
    pFnCanSee->iNative = 0;

    pFnCanSee->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanSee, &CanSee_Parms, NULL);

    pFnCanSee->FunctionFlags |= 0x400;

    pFnCanSee->iNative = NativeIndex;
};

// Function Engine.Controller.LineOfSightTo
// [0x00024401] ( FUNC_Final | FUNC_Native ) iNative [0x0202]
// Parameters infos:

void AController::LineOfSightTo() {
    static UFunction* pFnLineOfSightTo = NULL;

    if (!pFnLineOfSightTo)
        pFnLineOfSightTo = (UFunction*)UObject::GObjObjects()->Data[8347];

    AController_execLineOfSightTo_Parms LineOfSightTo_Parms;

    unsigned short NativeIndex = pFnLineOfSightTo->iNative;
    pFnLineOfSightTo->iNative = 0;

    pFnLineOfSightTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLineOfSightTo, &LineOfSightTo_Parms, NULL);

    pFnLineOfSightTo->FunctionFlags |= 0x400;

    pFnLineOfSightTo->iNative = NativeIndex;
};

// Function Engine.Controller.NotifyChangedWeapon
// [0x00020000]
// Parameters infos:

void AController::NotifyChangedWeapon() {
    static UFunction* pFnNotifyChangedWeapon = NULL;

    if (!pFnNotifyChangedWeapon)
        pFnNotifyChangedWeapon = (UFunction*)UObject::GObjObjects()->Data[8344];

    AController_execNotifyChangedWeapon_Parms NotifyChangedWeapon_Parms;

    this->ProcessEvent(pFnNotifyChangedWeapon, &NotifyChangedWeapon_Parms,
                       NULL);
};

// Function Engine.Controller.ClientSwitchToBestWeapon
// [0x010241C2]
// Parameters infos:

void AController::ClientSwitchToBestWeapon() {
    static UFunction* pFnClientSwitchToBestWeapon = NULL;

    if (!pFnClientSwitchToBestWeapon)
        pFnClientSwitchToBestWeapon =
            (UFunction*)UObject::GObjObjects()->Data[8342];

    AController_execClientSwitchToBestWeapon_Parms
        ClientSwitchToBestWeapon_Parms;

    this->ProcessEvent(pFnClientSwitchToBestWeapon,
                       &ClientSwitchToBestWeapon_Parms, NULL);
};

// Function Engine.Controller.SwitchToBestWeapon
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void AController::SwitchToBestWeapon() {
    static UFunction* pFnSwitchToBestWeapon = NULL;

    if (!pFnSwitchToBestWeapon)
        pFnSwitchToBestWeapon = (UFunction*)UObject::GObjObjects()->Data[8340];

    AController_execSwitchToBestWeapon_Parms SwitchToBestWeapon_Parms;

    this->ProcessEvent(pFnSwitchToBestWeapon, &SwitchToBestWeapon_Parms, NULL);
};

// Function Engine.Controller.ReceiveProjectileWarning
// [0x00020000]
// Parameters infos:

void AController::ReceiveProjectileWarning() {
    static UFunction* pFnReceiveProjectileWarning = NULL;

    if (!pFnReceiveProjectileWarning)
        pFnReceiveProjectileWarning =
            (UFunction*)UObject::GObjObjects()->Data[8338];

    AController_execReceiveProjectileWarning_Parms
        ReceiveProjectileWarning_Parms;

    this->ProcessEvent(pFnReceiveProjectileWarning,
                       &ReceiveProjectileWarning_Parms, NULL);
};

// Function Engine.Controller.ReceiveWarning
// [0x00020000]
// Parameters infos:

void AController::ReceiveWarning() {
    static UFunction* pFnReceiveWarning = NULL;

    if (!pFnReceiveWarning)
        pFnReceiveWarning = (UFunction*)UObject::GObjObjects()->Data[8334];

    AController_execReceiveWarning_Parms ReceiveWarning_Parms;

    this->ProcessEvent(pFnReceiveWarning, &ReceiveWarning_Parms, NULL);
};

// Function Engine.Controller.InstantWarnTarget
// [0x00020002]
// Parameters infos:

void AController::InstantWarnTarget() {
    static UFunction* pFnInstantWarnTarget = NULL;

    if (!pFnInstantWarnTarget)
        pFnInstantWarnTarget = (UFunction*)UObject::GObjObjects()->Data[8329];

    AController_execInstantWarnTarget_Parms InstantWarnTarget_Parms;

    this->ProcessEvent(pFnInstantWarnTarget, &InstantWarnTarget_Parms, NULL);
};

// Function Engine.Controller.GetAdjustedAimFor
// [0x00020002]
// Parameters infos:

void AController::GetAdjustedAimFor() {
    static UFunction* pFnGetAdjustedAimFor = NULL;

    if (!pFnGetAdjustedAimFor)
        pFnGetAdjustedAimFor = (UFunction*)UObject::GObjObjects()->Data[8325];

    AController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;

    this->ProcessEvent(pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL);
};

// Function Engine.Controller.HandlePickup
// [0x00020000]
// Parameters infos:

void AController::HandlePickup() {
    static UFunction* pFnHandlePickup = NULL;

    if (!pFnHandlePickup)
        pFnHandlePickup = (UFunction*)UObject::GObjObjects()->Data[8323];

    AController_execHandlePickup_Parms HandlePickup_Parms;

    this->ProcessEvent(pFnHandlePickup, &HandlePickup_Parms, NULL);
};

// Function Engine.Controller.RoundHasEnded
// [0x00024002]
// Parameters infos:

void AController::RoundHasEnded() {
    static UFunction* pFnRoundHasEnded = NULL;

    if (!pFnRoundHasEnded)
        pFnRoundHasEnded = (UFunction*)UObject::GObjObjects()->Data[8321];

    AController_execRoundHasEnded_Parms RoundHasEnded_Parms;

    this->ProcessEvent(pFnRoundHasEnded, &RoundHasEnded_Parms, NULL);
};

// Function Engine.Controller.StopFiring
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventStopFiring() {
    static UFunction* pFnStopFiring = NULL;

    if (!pFnStopFiring)
        pFnStopFiring = (UFunction*)UObject::GObjObjects()->Data[8320];

    AController_eventStopFiring_Parms StopFiring_Parms;

    this->ProcessEvent(pFnStopFiring, &StopFiring_Parms, NULL);
};

// Function Engine.Controller.FireWeaponAt
// [0x00020000]
// Parameters infos:

void AController::FireWeaponAt() {
    static UFunction* pFnFireWeaponAt = NULL;

    if (!pFnFireWeaponAt)
        pFnFireWeaponAt = (UFunction*)UObject::GObjObjects()->Data[8317];

    AController_execFireWeaponAt_Parms FireWeaponAt_Parms;

    this->ProcessEvent(pFnFireWeaponAt, &FireWeaponAt_Parms, NULL);
};

// Function Engine.Controller.RatePickup
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventRatePickup() {
    static UFunction* pFnRatePickup = NULL;

    if (!pFnRatePickup)
        pFnRatePickup = (UFunction*)UObject::GObjObjects()->Data[8313];

    AController_eventRatePickup_Parms RatePickup_Parms;

    this->ProcessEvent(pFnRatePickup, &RatePickup_Parms, NULL);
};

// Function Engine.Controller.WarnProjExplode
// [0x00020000]
// Parameters infos:

void AController::WarnProjExplode() {
    static UFunction* pFnWarnProjExplode = NULL;

    if (!pFnWarnProjExplode)
        pFnWarnProjExplode = (UFunction*)UObject::GObjObjects()->Data[8311];

    AController_execWarnProjExplode_Parms WarnProjExplode_Parms;

    this->ProcessEvent(pFnWarnProjExplode, &WarnProjExplode_Parms, NULL);
};

// Function Engine.Controller.NotifyProjLanded
// [0x00020002]
// Parameters infos:

void AController::NotifyProjLanded() {
    static UFunction* pFnNotifyProjLanded = NULL;

    if (!pFnNotifyProjLanded)
        pFnNotifyProjLanded = (UFunction*)UObject::GObjObjects()->Data[8309];

    AController_execNotifyProjLanded_Parms NotifyProjLanded_Parms;

    this->ProcessEvent(pFnNotifyProjLanded, &NotifyProjLanded_Parms, NULL);
};

// Function Engine.Controller.NotifyKilled
// [0x00020002]
// Parameters infos:

void AController::NotifyKilled() {
    static UFunction* pFnNotifyKilled = NULL;

    if (!pFnNotifyKilled)
        pFnNotifyKilled = (UFunction*)UObject::GObjObjects()->Data[8304];

    AController_execNotifyKilled_Parms NotifyKilled_Parms;

    this->ProcessEvent(pFnNotifyKilled, &NotifyKilled_Parms, NULL);
};

// Function Engine.Controller.GameHasEnded
// [0x00024002]
// Parameters infos:

void AController::GameHasEnded() {
    static UFunction* pFnGameHasEnded = NULL;

    if (!pFnGameHasEnded)
        pFnGameHasEnded = (UFunction*)UObject::GObjObjects()->Data[8301];

    AController_execGameHasEnded_Parms GameHasEnded_Parms;

    this->ProcessEvent(pFnGameHasEnded, &GameHasEnded_Parms, NULL);
};

// Function Engine.Controller.SetCharacter
// [0x00020000]
// Parameters infos:

void AController::SetCharacter() {
    static UFunction* pFnSetCharacter = NULL;

    if (!pFnSetCharacter)
        pFnSetCharacter = (UFunction*)UObject::GObjObjects()->Data[8299];

    AController_execSetCharacter_Parms SetCharacter_Parms;

    this->ProcessEvent(pFnSetCharacter, &SetCharacter_Parms, NULL);
};

// Function Engine.Controller.ServerGivePawn
// [0x00020000]
// Parameters infos:

void AController::ServerGivePawn() {
    static UFunction* pFnServerGivePawn = NULL;

    if (!pFnServerGivePawn)
        pFnServerGivePawn = (UFunction*)UObject::GObjObjects()->Data[8298];

    AController_execServerGivePawn_Parms ServerGivePawn_Parms;

    this->ProcessEvent(pFnServerGivePawn, &ServerGivePawn_Parms, NULL);
};

// Function Engine.Controller.ServerRestartPlayer
// [0x002200C2]
// Parameters infos:

void AController::ServerRestartPlayer() {
    static UFunction* pFnServerRestartPlayer = NULL;

    if (!pFnServerRestartPlayer)
        pFnServerRestartPlayer = (UFunction*)UObject::GObjObjects()->Data[8297];

    AController_execServerRestartPlayer_Parms ServerRestartPlayer_Parms;

    this->ProcessEvent(pFnServerRestartPlayer, &ServerRestartPlayer_Parms,
                       NULL);
};

// Function Engine.Controller.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AController::GetTeamNum() {
    static UFunction* pFnGetTeamNum = NULL;

    if (!pFnGetTeamNum)
        pFnGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[8295];

    AController_execGetTeamNum_Parms GetTeamNum_Parms;

    pFnGetTeamNum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTeamNum, &GetTeamNum_Parms, NULL);

    pFnGetTeamNum->FunctionFlags |= 0x400;
};

// Function Engine.Controller.InitPlayerReplicationInfo
// [0x00020002]
// Parameters infos:

void AController::InitPlayerReplicationInfo() {
    static UFunction* pFnInitPlayerReplicationInfo = NULL;

    if (!pFnInitPlayerReplicationInfo)
        pFnInitPlayerReplicationInfo =
            (UFunction*)UObject::GObjObjects()->Data[8294];

    AController_execInitPlayerReplicationInfo_Parms
        InitPlayerReplicationInfo_Parms;

    this->ProcessEvent(pFnInitPlayerReplicationInfo,
                       &InitPlayerReplicationInfo_Parms, NULL);
};

// Function Engine.Controller.NotifyTakeHit
// [0x00020000]
// Parameters infos:

void AController::NotifyTakeHit() {
    static UFunction* pFnNotifyTakeHit = NULL;

    if (!pFnNotifyTakeHit)
        pFnNotifyTakeHit = (UFunction*)UObject::GObjObjects()->Data[8288];

    AController_execNotifyTakeHit_Parms NotifyTakeHit_Parms;

    this->ProcessEvent(pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL);
};

// Function Engine.Controller.EnemyJustTeleported
// [0x00020002]
// Parameters infos:

void AController::EnemyJustTeleported() {
    static UFunction* pFnEnemyJustTeleported = NULL;

    if (!pFnEnemyJustTeleported)
        pFnEnemyJustTeleported = (UFunction*)UObject::GObjObjects()->Data[8287];

    AController_execEnemyJustTeleported_Parms EnemyJustTeleported_Parms;

    this->ProcessEvent(pFnEnemyJustTeleported, &EnemyJustTeleported_Parms,
                       NULL);
};

// Function Engine.Controller.BeyondFogDistance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::BeyondFogDistance() {
    static UFunction* pFnBeyondFogDistance = NULL;

    if (!pFnBeyondFogDistance)
        pFnBeyondFogDistance = (UFunction*)UObject::GObjObjects()->Data[8283];

    AController_execBeyondFogDistance_Parms BeyondFogDistance_Parms;

    pFnBeyondFogDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBeyondFogDistance, &BeyondFogDistance_Parms, NULL);

    pFnBeyondFogDistance->FunctionFlags |= 0x400;
};

// Function Engine.Controller.Restart
// [0x00020002]
// Parameters infos:

void AController::Restart() {
    static UFunction* pFnRestart = NULL;

    if (!pFnRestart)
        pFnRestart = (UFunction*)UObject::GObjObjects()->Data[8281];

    AController_execRestart_Parms Restart_Parms;

    this->ProcessEvent(pFnRestart, &Restart_Parms, NULL);
};

// Function Engine.Controller.CleanupPRI
// [0x00020002]
// Parameters infos:

void AController::CleanupPRI() {
    static UFunction* pFnCleanupPRI = NULL;

    if (!pFnCleanupPRI)
        pFnCleanupPRI = (UFunction*)UObject::GObjObjects()->Data[8280];

    AController_execCleanupPRI_Parms CleanupPRI_Parms;

    this->ProcessEvent(pFnCleanupPRI, &CleanupPRI_Parms, NULL);
};

// Function Engine.Controller.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[8279];

    AController_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Controller.NotifyPostLanded
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyPostLanded() {
    static UFunction* pFnNotifyPostLanded = NULL;

    if (!pFnNotifyPostLanded)
        pFnNotifyPostLanded = (UFunction*)UObject::GObjObjects()->Data[8278];

    AController_eventNotifyPostLanded_Parms NotifyPostLanded_Parms;

    this->ProcessEvent(pFnNotifyPostLanded, &NotifyPostLanded_Parms, NULL);
};

// Function Engine.Controller.GamePlayEndedState
// [0x00020002]
// Parameters infos:

void AController::GamePlayEndedState() {
    static UFunction* pFnGamePlayEndedState = NULL;

    if (!pFnGamePlayEndedState)
        pFnGamePlayEndedState = (UFunction*)UObject::GObjObjects()->Data[8276];

    AController_execGamePlayEndedState_Parms GamePlayEndedState_Parms;

    this->ProcessEvent(pFnGamePlayEndedState, &GamePlayEndedState_Parms, NULL);
};

// Function Engine.Controller.PawnDied
// [0x00020002]
// Parameters infos:

void AController::PawnDied() {
    static UFunction* pFnPawnDied = NULL;

    if (!pFnPawnDied)
        pFnPawnDied = (UFunction*)UObject::GObjObjects()->Data[8273];

    AController_execPawnDied_Parms PawnDied_Parms;

    this->ProcessEvent(pFnPawnDied, &PawnDied_Parms, NULL);
};

// Function Engine.Controller.UnPossess
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventUnPossess() {
    static UFunction* pFnUnPossess = NULL;

    if (!pFnUnPossess)
        pFnUnPossess = (UFunction*)UObject::GObjObjects()->Data[8272];

    AController_eventUnPossess_Parms UnPossess_Parms;

    this->ProcessEvent(pFnUnPossess, &UnPossess_Parms, NULL);
};

// Function Engine.Controller.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventPossess() {
    static UFunction* pFnPossess = NULL;

    if (!pFnPossess)
        pFnPossess = (UFunction*)UObject::GObjObjects()->Data[8269];

    AController_eventPossess_Parms Possess_Parms;

    this->ProcessEvent(pFnPossess, &Possess_Parms, NULL);
};

// Function Engine.Controller.OnPossess
// [0x00020002]
// Parameters infos:

void AController::OnPossess() {
    static UFunction* pFnOnPossess = NULL;

    if (!pFnOnPossess)
        pFnOnPossess = (UFunction*)UObject::GObjObjects()->Data[8265];

    AController_execOnPossess_Parms OnPossess_Parms;

    this->ProcessEvent(pFnOnPossess, &OnPossess_Parms, NULL);
};

// Function Engine.Controller.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AController::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[8263];

    AController_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Controller.ClientSetRotation
// [0x010241C2]
// Parameters infos:

void AController::ClientSetRotation() {
    static UFunction* pFnClientSetRotation = NULL;

    if (!pFnClientSetRotation)
        pFnClientSetRotation = (UFunction*)UObject::GObjObjects()->Data[8260];

    AController_execClientSetRotation_Parms ClientSetRotation_Parms;

    this->ProcessEvent(pFnClientSetRotation, &ClientSetRotation_Parms, NULL);
};

// Function Engine.Controller.ClientSetLocation
// [0x010201C2]
// Parameters infos:

void AController::ClientSetLocation() {
    static UFunction* pFnClientSetLocation = NULL;

    if (!pFnClientSetLocation)
        pFnClientSetLocation = (UFunction*)UObject::GObjObjects()->Data[8257];

    AController_execClientSetLocation_Parms ClientSetLocation_Parms;

    this->ProcessEvent(pFnClientSetLocation, &ClientSetLocation_Parms, NULL);
};

// Function Engine.Controller.Reset
// [0x00020002]
// Parameters infos:

void AController::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[8256];

    AController_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.Controller.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[8255];

    AController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Controller.SetSkelControlScale
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventSetSkelControlScale() {
    static UFunction* pFnSetSkelControlScale = NULL;

    if (!pFnSetSkelControlScale)
        pFnSetSkelControlScale = (UFunction*)UObject::GObjObjects()->Data[8252];

    AController_eventSetSkelControlScale_Parms SetSkelControlScale_Parms;

    this->ProcessEvent(pFnSetSkelControlScale, &SetSkelControlScale_Parms,
                       NULL);
};

// Function Engine.Controller.SetMorphWeight
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventSetMorphWeight() {
    static UFunction* pFnSetMorphWeight = NULL;

    if (!pFnSetMorphWeight)
        pFnSetMorphWeight = (UFunction*)UObject::GObjObjects()->Data[8249];

    AController_eventSetMorphWeight_Parms SetMorphWeight_Parms;

    this->ProcessEvent(pFnSetMorphWeight, &SetMorphWeight_Parms, NULL);
};

// Function Engine.Controller.StopActorFaceFXAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventStopActorFaceFXAnim() {
    static UFunction* pFnStopActorFaceFXAnim = NULL;

    if (!pFnStopActorFaceFXAnim)
        pFnStopActorFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[8248];

    AController_eventStopActorFaceFXAnim_Parms StopActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnStopActorFaceFXAnim, &StopActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Controller.PlayActorFaceFXAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AController::eventPlayActorFaceFXAnim() {
    static UFunction* pFnPlayActorFaceFXAnim = NULL;

    if (!pFnPlayActorFaceFXAnim)
        pFnPlayActorFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[8241];

    AController_eventPlayActorFaceFXAnim_Parms PlayActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnPlayActorFaceFXAnim, &PlayActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Controller.FinishAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AController::eventFinishAnimControl() {
    static UFunction* pFnFinishAnimControl = NULL;

    if (!pFnFinishAnimControl)
        pFnFinishAnimControl = (UFunction*)UObject::GObjObjects()->Data[8239];

    AController_eventFinishAnimControl_Parms FinishAnimControl_Parms;

    this->ProcessEvent(pFnFinishAnimControl, &FinishAnimControl_Parms, NULL);
};

// Function Engine.Controller.SetAnimPosition
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AController::eventSetAnimPosition() {
    static UFunction* pFnSetAnimPosition = NULL;

    if (!pFnSetAnimPosition)
        pFnSetAnimPosition = (UFunction*)UObject::GObjObjects()->Data[8231];

    AController_eventSetAnimPosition_Parms SetAnimPosition_Parms;

    this->ProcessEvent(pFnSetAnimPosition, &SetAnimPosition_Parms, NULL);
};

// Function Engine.Controller.BeginAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AController::eventBeginAnimControl() {
    static UFunction* pFnBeginAnimControl = NULL;

    if (!pFnBeginAnimControl)
        pFnBeginAnimControl = (UFunction*)UObject::GObjObjects()->Data[8229];

    AController_eventBeginAnimControl_Parms BeginAnimControl_Parms;

    this->ProcessEvent(pFnBeginAnimControl, &BeginAnimControl_Parms, NULL);
};

// Function Engine.Controller.PauseAndShowMsg
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventPauseAndShowMsg() {
    static UFunction* pFnPauseAndShowMsg = NULL;

    if (!pFnPauseAndShowMsg)
        pFnPauseAndShowMsg = (UFunction*)UObject::GObjObjects()->Data[8226];

    AController_eventPauseAndShowMsg_Parms PauseAndShowMsg_Parms;

    this->ProcessEvent(pFnPauseAndShowMsg, &PauseAndShowMsg_Parms, NULL);
};

// Function Engine.Controller.AILog_Internal
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventAILog_Internal() {
    static UFunction* pFnAILog_Internal = NULL;

    if (!pFnAILog_Internal)
        pFnAILog_Internal = (UFunction*)UObject::GObjObjects()->Data[8220];

    AController_eventAILog_Internal_Parms AILog_Internal_Parms;

    this->ProcessEvent(pFnAILog_Internal, &AILog_Internal_Parms, NULL);
};

// Function Engine.Controller.NotifyFailMove
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyFailMove() {
    static UFunction* pFnNotifyFailMove = NULL;

    if (!pFnNotifyFailMove)
        pFnNotifyFailMove = (UFunction*)UObject::GObjObjects()->Data[8218];

    AController_eventNotifyFailMove_Parms NotifyFailMove_Parms;

    this->ProcessEvent(pFnNotifyFailMove, &NotifyFailMove_Parms, NULL);
};

// Function Engine.Controller.JumpedOverWall
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AController::eventJumpedOverWall() {
    static UFunction* pFnJumpedOverWall = NULL;

    if (!pFnJumpedOverWall)
        pFnJumpedOverWall = (UFunction*)UObject::GObjObjects()->Data[8215];

    AController_eventJumpedOverWall_Parms JumpedOverWall_Parms;

    this->ProcessEvent(pFnJumpedOverWall, &JumpedOverWall_Parms, NULL);
};

// Function Engine.Controller.FailedToFindAnchor
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventFailedToFindAnchor() {
    static UFunction* pFnFailedToFindAnchor = NULL;

    if (!pFnFailedToFindAnchor)
        pFnFailedToFindAnchor = (UFunction*)UObject::GObjObjects()->Data[8214];

    AController_eventFailedToFindAnchor_Parms FailedToFindAnchor_Parms;

    this->ProcessEvent(pFnFailedToFindAnchor, &FailedToFindAnchor_Parms, NULL);
};

// Function Engine.Controller.NotifyPathChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AController::eventNotifyPathChanged() {
    static UFunction* pFnNotifyPathChanged = NULL;

    if (!pFnNotifyPathChanged)
        pFnNotifyPathChanged = (UFunction*)UObject::GObjObjects()->Data[8213];

    AController_eventNotifyPathChanged_Parms NotifyPathChanged_Parms;

    this->ProcessEvent(pFnNotifyPathChanged, &NotifyPathChanged_Parms, NULL);
};

// Function Engine.Controller.GetAdjustLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::GetAdjustLocation() {
    static UFunction* pFnGetAdjustLocation = NULL;

    if (!pFnGetAdjustLocation)
        pFnGetAdjustLocation = (UFunction*)UObject::GObjObjects()->Data[8211];

    AController_execGetAdjustLocation_Parms GetAdjustLocation_Parms;

    pFnGetAdjustLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAdjustLocation, &GetAdjustLocation_Parms, NULL);

    pFnGetAdjustLocation->FunctionFlags |= 0x400;
};

// Function Engine.Controller.SetAdjustLocation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::SetAdjustLocation() {
    static UFunction* pFnSetAdjustLocation = NULL;

    if (!pFnSetAdjustLocation)
        pFnSetAdjustLocation = (UFunction*)UObject::GObjObjects()->Data[8207];

    AController_execSetAdjustLocation_Parms SetAdjustLocation_Parms;

    pFnSetAdjustLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAdjustLocation, &SetAdjustLocation_Parms, NULL);

    pFnSetAdjustLocation->FunctionFlags |= 0x400;
};

// Function Engine.Controller.GetDestinationPosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::GetDestinationPosition() {
    static UFunction* pFnGetDestinationPosition = NULL;

    if (!pFnGetDestinationPosition)
        pFnGetDestinationPosition =
            (UFunction*)UObject::GObjObjects()->Data[8205];

    AController_execGetDestinationPosition_Parms GetDestinationPosition_Parms;

    pFnGetDestinationPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDestinationPosition, &GetDestinationPosition_Parms,
                       NULL);

    pFnGetDestinationPosition->FunctionFlags |= 0x400;
};

// Function Engine.Controller.SetDestinationPosition
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::SetDestinationPosition() {
    static UFunction* pFnSetDestinationPosition = NULL;

    if (!pFnSetDestinationPosition)
        pFnSetDestinationPosition =
            (UFunction*)UObject::GObjObjects()->Data[8202];

    AController_execSetDestinationPosition_Parms SetDestinationPosition_Parms;

    pFnSetDestinationPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDestinationPosition, &SetDestinationPosition_Parms,
                       NULL);

    pFnSetDestinationPosition->FunctionFlags |= 0x400;
};

// Function Engine.Controller.GetFocalPoint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::GetFocalPoint() {
    static UFunction* pFnGetFocalPoint = NULL;

    if (!pFnGetFocalPoint)
        pFnGetFocalPoint = (UFunction*)UObject::GObjObjects()->Data[8200];

    AController_execGetFocalPoint_Parms GetFocalPoint_Parms;

    pFnGetFocalPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFocalPoint, &GetFocalPoint_Parms, NULL);

    pFnGetFocalPoint->FunctionFlags |= 0x400;
};

// Function Engine.Controller.SetFocalPoint
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AController::SetFocalPoint() {
    static UFunction* pFnSetFocalPoint = NULL;

    if (!pFnSetFocalPoint)
        pFnSetFocalPoint = (UFunction*)UObject::GObjObjects()->Data[8197];

    AController_execSetFocalPoint_Parms SetFocalPoint_Parms;

    pFnSetFocalPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFocalPoint, &SetFocalPoint_Parms, NULL);

    pFnSetFocalPoint->FunctionFlags |= 0x400;
};

// Function Engine.Controller.RouteCache_RemoveIndex
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AController::RouteCache_RemoveIndex() {
    static UFunction* pFnRouteCache_RemoveIndex = NULL;

    if (!pFnRouteCache_RemoveIndex)
        pFnRouteCache_RemoveIndex =
            (UFunction*)UObject::GObjObjects()->Data[8194];

    AController_execRouteCache_RemoveIndex_Parms RouteCache_RemoveIndex_Parms;

    pFnRouteCache_RemoveIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRouteCache_RemoveIndex, &RouteCache_RemoveIndex_Parms,
                       NULL);

    pFnRouteCache_RemoveIndex->FunctionFlags |= 0x400;
};

// Function Engine.Controller.RouteCache_RemoveItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AController::RouteCache_RemoveItem() {
    static UFunction* pFnRouteCache_RemoveItem = NULL;

    if (!pFnRouteCache_RemoveItem)
        pFnRouteCache_RemoveItem =
            (UFunction*)UObject::GObjObjects()->Data[8192];

    AController_execRouteCache_RemoveItem_Parms RouteCache_RemoveItem_Parms;

    pFnRouteCache_RemoveItem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRouteCache_RemoveItem, &RouteCache_RemoveItem_Parms,
                       NULL);

    pFnRouteCache_RemoveItem->FunctionFlags |= 0x400;
};

// Function Engine.Controller.RouteCache_InsertItem
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void AController::RouteCache_InsertItem() {
    static UFunction* pFnRouteCache_InsertItem = NULL;

    if (!pFnRouteCache_InsertItem)
        pFnRouteCache_InsertItem =
            (UFunction*)UObject::GObjObjects()->Data[8189];

    AController_execRouteCache_InsertItem_Parms RouteCache_InsertItem_Parms;

    pFnRouteCache_InsertItem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRouteCache_InsertItem, &RouteCache_InsertItem_Parms,
                       NULL);

    pFnRouteCache_InsertItem->FunctionFlags |= 0x400;
};

// Function Engine.Controller.RouteCache_AddItem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AController::RouteCache_AddItem() {
    static UFunction* pFnRouteCache_AddItem = NULL;

    if (!pFnRouteCache_AddItem)
        pFnRouteCache_AddItem = (UFunction*)UObject::GObjObjects()->Data[8187];

    AController_execRouteCache_AddItem_Parms RouteCache_AddItem_Parms;

    pFnRouteCache_AddItem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRouteCache_AddItem, &RouteCache_AddItem_Parms, NULL);

    pFnRouteCache_AddItem->FunctionFlags |= 0x400;
};

// Function Engine.Controller.RouteCache_Empty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AController::RouteCache_Empty() {
    static UFunction* pFnRouteCache_Empty = NULL;

    if (!pFnRouteCache_Empty)
        pFnRouteCache_Empty = (UFunction*)UObject::GObjObjects()->Data[8186];

    AController_execRouteCache_Empty_Parms RouteCache_Empty_Parms;

    pFnRouteCache_Empty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRouteCache_Empty, &RouteCache_Empty_Parms, NULL);

    pFnRouteCache_Empty->FunctionFlags |= 0x400;
};

// Function Engine.Controller.IsLocalController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AController::IsLocalController() {
    static UFunction* pFnIsLocalController = NULL;

    if (!pFnIsLocalController)
        pFnIsLocalController = (UFunction*)UObject::GObjObjects()->Data[8184];

    AController_execIsLocalController_Parms IsLocalController_Parms;

    pFnIsLocalController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsLocalController, &IsLocalController_Parms, NULL);

    pFnIsLocalController->FunctionFlags |= 0x400;
};

// Function Engine.Controller.IsLocalPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AController::IsLocalPlayerController() {
    static UFunction* pFnIsLocalPlayerController = NULL;

    if (!pFnIsLocalPlayerController)
        pFnIsLocalPlayerController =
            (UFunction*)UObject::GObjObjects()->Data[8182];

    AController_execIsLocalPlayerController_Parms IsLocalPlayerController_Parms;

    pFnIsLocalPlayerController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsLocalPlayerController,
                       &IsLocalPlayerController_Parms, NULL);

    pFnIsLocalPlayerController->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientReceiveReliableVoicePacket
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientReceiveReliableVoicePacket() {
    static UFunction* pFnClientReceiveReliableVoicePacket = NULL;

    if (!pFnClientReceiveReliableVoicePacket)
        pFnClientReceiveReliableVoicePacket =
            (UFunction*)UObject::GObjObjects()->Data[12178];

    APlayerController_execClientReceiveReliableVoicePacket_Parms
        ClientReceiveReliableVoicePacket_Parms;

    this->ProcessEvent(pFnClientReceiveReliableVoicePacket,
                       &ClientReceiveReliableVoicePacket_Parms, NULL);
};

// Function Engine.PlayerController.ServerReceiveReliableVoicePacket
// [0x00A200C2]
// Parameters infos:

void APlayerController::ServerReceiveReliableVoicePacket() {
    static UFunction* pFnServerReceiveReliableVoicePacket = NULL;

    if (!pFnServerReceiveReliableVoicePacket)
        pFnServerReceiveReliableVoicePacket =
            (UFunction*)UObject::GObjObjects()->Data[12171];

    APlayerController_execServerReceiveReliableVoicePacket_Parms
        ServerReceiveReliableVoicePacket_Parms;

    this->ProcessEvent(pFnServerReceiveReliableVoicePacket,
                       &ServerReceiveReliableVoicePacket_Parms, NULL);
};

// Function Engine.PlayerController.SendReliableVoicePacketToServer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventSendReliableVoicePacketToServer() {
    static UFunction* pFnSendReliableVoicePacketToServer = NULL;

    if (!pFnSendReliableVoicePacketToServer)
        pFnSendReliableVoicePacketToServer =
            (UFunction*)UObject::GObjObjects()->Data[12166];

    APlayerController_eventSendReliableVoicePacketToServer_Parms
        SendReliableVoicePacketToServer_Parms;

    this->ProcessEvent(pFnSendReliableVoicePacketToServer,
                       &SendReliableVoicePacketToServer_Parms, NULL);
};

// Function Engine.PlayerController.ClientReplicationDebug
// [0x01020940] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientReplicationDebug() {
    static UFunction* pFnClientReplicationDebug = NULL;

    if (!pFnClientReplicationDebug)
        pFnClientReplicationDebug =
            (UFunction*)UObject::GObjObjects()->Data[12161];

    APlayerController_eventClientReplicationDebug_Parms
        ClientReplicationDebug_Parms;

    this->ProcessEvent(pFnClientReplicationDebug, &ClientReplicationDebug_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnLobbyStatusChanged
// [0x00020000]
// Parameters infos:

void APlayerController::OnLobbyStatusChanged() {
    static UFunction* pFnOnLobbyStatusChanged = NULL;

    if (!pFnOnLobbyStatusChanged)
        pFnOnLobbyStatusChanged =
            (UFunction*)UObject::GObjObjects()->Data[12159];

    APlayerController_execOnLobbyStatusChanged_Parms OnLobbyStatusChanged_Parms;

    this->ProcessEvent(pFnOnLobbyStatusChanged, &OnLobbyStatusChanged_Parms,
                       NULL);
};

// Function Engine.PlayerController.NotifyUnsuccessfulSearch
// [0x00020000]
// Parameters infos:

void APlayerController::NotifyUnsuccessfulSearch() {
    static UFunction* pFnNotifyUnsuccessfulSearch = NULL;

    if (!pFnNotifyUnsuccessfulSearch)
        pFnNotifyUnsuccessfulSearch =
            (UFunction*)UObject::GObjObjects()->Data[12158];

    APlayerController_execNotifyUnsuccessfulSearch_Parms
        NotifyUnsuccessfulSearch_Parms;

    this->ProcessEvent(pFnNotifyUnsuccessfulSearch,
                       &NotifyUnsuccessfulSearch_Parms, NULL);
};

// Function Engine.PlayerController.SetUIScale
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventSetUIScale() {
    static UFunction* pFnSetUIScale = NULL;

    if (!pFnSetUIScale)
        pFnSetUIScale = (UFunction*)UObject::GObjObjects()->Data[12156];

    APlayerController_eventSetUIScale_Parms SetUIScale_Parms;

    this->ProcessEvent(pFnSetUIScale, &SetUIScale_Parms, NULL);
};

// Function Engine.PlayerController.SetMatineeConstantCameraAnim
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventSetMatineeConstantCameraAnim() {
    static UFunction* pFnSetMatineeConstantCameraAnim = NULL;

    if (!pFnSetMatineeConstantCameraAnim)
        pFnSetMatineeConstantCameraAnim =
            (UFunction*)UObject::GObjObjects()->Data[12152];

    APlayerController_eventSetMatineeConstantCameraAnim_Parms
        SetMatineeConstantCameraAnim_Parms;

    this->ProcessEvent(pFnSetMatineeConstantCameraAnim,
                       &SetMatineeConstantCameraAnim_Parms, NULL);
};

// Function Engine.PlayerController.NotifyDisconnect
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventNotifyDisconnect() {
    static UFunction* pFnNotifyDisconnect = NULL;

    if (!pFnNotifyDisconnect)
        pFnNotifyDisconnect = (UFunction*)UObject::GObjObjects()->Data[12149];

    APlayerController_eventNotifyDisconnect_Parms NotifyDisconnect_Parms;

    this->ProcessEvent(pFnNotifyDisconnect, &NotifyDisconnect_Parms, NULL);
};

// Function Engine.PlayerController.ReceivedGameClass
// [0x00020102]
// Parameters infos:

void APlayerController::ReceivedGameClass() {
    static UFunction* pFnReceivedGameClass = NULL;

    if (!pFnReceivedGameClass)
        pFnReceivedGameClass = (UFunction*)UObject::GObjObjects()->Data[12147];

    APlayerController_execReceivedGameClass_Parms ReceivedGameClass_Parms;

    this->ProcessEvent(pFnReceivedGameClass, &ReceivedGameClass_Parms, NULL);
};

// Function Engine.PlayerController.LogOutBugItAIGoToLogFile
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::LogOutBugItAIGoToLogFile() {
    static UFunction* pFnLogOutBugItAIGoToLogFile = NULL;

    if (!pFnLogOutBugItAIGoToLogFile)
        pFnLogOutBugItAIGoToLogFile =
            (UFunction*)UObject::GObjObjects()->Data[12143];

    APlayerController_execLogOutBugItAIGoToLogFile_Parms
        LogOutBugItAIGoToLogFile_Parms;

    pFnLogOutBugItAIGoToLogFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogOutBugItAIGoToLogFile,
                       &LogOutBugItAIGoToLogFile_Parms, NULL);

    pFnLogOutBugItAIGoToLogFile->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.LogOutBugItGoToLogFile
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::LogOutBugItGoToLogFile() {
    static UFunction* pFnLogOutBugItGoToLogFile = NULL;

    if (!pFnLogOutBugItGoToLogFile)
        pFnLogOutBugItGoToLogFile =
            (UFunction*)UObject::GObjObjects()->Data[12139];

    APlayerController_execLogOutBugItGoToLogFile_Parms
        LogOutBugItGoToLogFile_Parms;

    pFnLogOutBugItGoToLogFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogOutBugItGoToLogFile, &LogOutBugItGoToLogFile_Parms,
                       NULL);

    pFnLogOutBugItGoToLogFile->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.DisableDebugAI
// [0x00020002]
// Parameters infos:

void APlayerController::DisableDebugAI() {
    static UFunction* pFnDisableDebugAI = NULL;

    if (!pFnDisableDebugAI)
        pFnDisableDebugAI = (UFunction*)UObject::GObjObjects()->Data[12138];

    APlayerController_execDisableDebugAI_Parms DisableDebugAI_Parms;

    this->ProcessEvent(pFnDisableDebugAI, &DisableDebugAI_Parms, NULL);
};

// Function Engine.PlayerController.ReadFriendsList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ReadFriendsList() {
    static UFunction* pFnReadFriendsList = NULL;

    if (!pFnReadFriendsList)
        pFnReadFriendsList = (UFunction*)UObject::GObjObjects()->Data[12136];

    APlayerController_execReadFriendsList_Parms ReadFriendsList_Parms;

    this->ProcessEvent(pFnReadFriendsList, &ReadFriendsList_Parms, NULL);
};

// Function Engine.PlayerController.OnFriendsReadComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnFriendsReadComplete() {
    static UFunction* pFnOnFriendsReadComplete = NULL;

    if (!pFnOnFriendsReadComplete)
        pFnOnFriendsReadComplete =
            (UFunction*)UObject::GObjObjects()->Data[12131];

    APlayerController_execOnFriendsReadComplete_Parms
        OnFriendsReadComplete_Parms;

    this->ProcessEvent(pFnOnFriendsReadComplete, &OnFriendsReadComplete_Parms,
                       NULL);
};

// Function Engine.PlayerController.SetCallback
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SetCallback() {
    static UFunction* pFnSetCallback = NULL;

    if (!pFnSetCallback)
        pFnSetCallback = (UFunction*)UObject::GObjObjects()->Data[12130];

    APlayerController_execSetCallback_Parms SetCallback_Parms;

    this->ProcessEvent(pFnSetCallback, &SetCallback_Parms, NULL);
};

// Function Engine.PlayerController.DumpPeers
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::DumpPeers() {
    static UFunction* pFnDumpPeers = NULL;

    if (!pFnDumpPeers)
        pFnDumpPeers = (UFunction*)UObject::GObjObjects()->Data[12125];

    APlayerController_execDumpPeers_Parms DumpPeers_Parms;

    this->ProcessEvent(pFnDumpPeers, &DumpPeers_Parms, NULL);
};

// Function Engine.PlayerController.DumpVoiceMutingState
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::DumpVoiceMutingState() {
    static UFunction* pFnDumpVoiceMutingState = NULL;

    if (!pFnDumpVoiceMutingState)
        pFnDumpVoiceMutingState =
            (UFunction*)UObject::GObjObjects()->Data[12121];

    APlayerController_execDumpVoiceMutingState_Parms DumpVoiceMutingState_Parms;

    this->ProcessEvent(pFnDumpVoiceMutingState, &DumpVoiceMutingState_Parms,
                       NULL);
};

// Function Engine.PlayerController.DumpOnlineSessionState
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::DumpOnlineSessionState() {
    static UFunction* pFnDumpOnlineSessionState = NULL;

    if (!pFnDumpOnlineSessionState)
        pFnDumpOnlineSessionState =
            (UFunction*)UObject::GObjObjects()->Data[12120];

    APlayerController_execDumpOnlineSessionState_Parms
        DumpOnlineSessionState_Parms;

    this->ProcessEvent(pFnDumpOnlineSessionState, &DumpOnlineSessionState_Parms,
                       NULL);
};

// Function Engine.PlayerController.DebugLogPRIs
// [0x00820002]
// Parameters infos:

void APlayerController::DebugLogPRIs() {
    static UFunction* pFnDebugLogPRIs = NULL;

    if (!pFnDebugLogPRIs)
        pFnDebugLogPRIs = (UFunction*)UObject::GObjObjects()->Data[12117];

    APlayerController_execDebugLogPRIs_Parms DebugLogPRIs_Parms;

    this->ProcessEvent(pFnDebugLogPRIs, &DebugLogPRIs_Parms, NULL);
};

// Function Engine.PlayerController.OnEngineInitialTick
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventOnEngineInitialTick() {
    static UFunction* pFnOnEngineInitialTick = NULL;

    if (!pFnOnEngineInitialTick)
        pFnOnEngineInitialTick =
            (UFunction*)UObject::GObjObjects()->Data[12116];

    APlayerController_eventOnEngineInitialTick_Parms OnEngineInitialTick_Parms;

    this->ProcessEvent(pFnOnEngineInitialTick, &OnEngineInitialTick_Parms,
                       NULL);
};

// Function Engine.PlayerController.BugItStringCreator
// [0x00420A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:

void APlayerController::BugItStringCreator() {
    static UFunction* pFnBugItStringCreator = NULL;

    if (!pFnBugItStringCreator)
        pFnBugItStringCreator = (UFunction*)UObject::GObjObjects()->Data[12111];

    APlayerController_execBugItStringCreator_Parms BugItStringCreator_Parms;

    this->ProcessEvent(pFnBugItStringCreator, &BugItStringCreator_Parms, NULL);
};

// Function Engine.PlayerController.BugItAI
// [0x00824A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:

void APlayerController::BugItAI() {
    static UFunction* pFnBugItAI = NULL;

    if (!pFnBugItAI)
        pFnBugItAI = (UFunction*)UObject::GObjObjects()->Data[12105];

    APlayerController_execBugItAI_Parms BugItAI_Parms;

    this->ProcessEvent(pFnBugItAI, &BugItAI_Parms, NULL);
};

// Function Engine.PlayerController.LogLoc
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::LogLoc() {
    static UFunction* pFnLogLoc = NULL;

    if (!pFnLogLoc) pFnLogLoc = (UFunction*)UObject::GObjObjects()->Data[12100];

    APlayerController_execLogLoc_Parms LogLoc_Parms;

    this->ProcessEvent(pFnLogLoc, &LogLoc_Parms, NULL);
};

// Function Engine.PlayerController.BugIt
// [0x00824A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:

void APlayerController::BugIt() {
    static UFunction* pFnBugIt = NULL;

    if (!pFnBugIt) pFnBugIt = (UFunction*)UObject::GObjObjects()->Data[12094];

    APlayerController_execBugIt_Parms BugIt_Parms;

    this->ProcessEvent(pFnBugIt, &BugIt_Parms, NULL);
};

// Function Engine.PlayerController.BugItWorker
// [0x00020002]
// Parameters infos:

void APlayerController::BugItWorker() {
    static UFunction* pFnBugItWorker = NULL;

    if (!pFnBugItWorker)
        pFnBugItWorker = (UFunction*)UObject::GObjObjects()->Data[12091];

    APlayerController_execBugItWorker_Parms BugItWorker_Parms;

    this->ProcessEvent(pFnBugItWorker, &BugItWorker_Parms, NULL);
};

// Function Engine.PlayerController.BugItGoString
// [0x00020002]
// Parameters infos:

void APlayerController::BugItGoString() {
    static UFunction* pFnBugItGoString = NULL;

    if (!pFnBugItGoString)
        pFnBugItGoString = (UFunction*)UObject::GObjObjects()->Data[12088];

    APlayerController_execBugItGoString_Parms BugItGoString_Parms;

    this->ProcessEvent(pFnBugItGoString, &BugItGoString_Parms, NULL);
};

// Function Engine.PlayerController.BugItGo
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::BugItGo() {
    static UFunction* pFnBugItGo = NULL;

    if (!pFnBugItGo)
        pFnBugItGo = (UFunction*)UObject::GObjObjects()->Data[12079];

    APlayerController_execBugItGo_Parms BugItGo_Parms;

    this->ProcessEvent(pFnBugItGo, &BugItGo_Parms, NULL);
};

// Function Engine.PlayerController.HasPeerConnection
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void APlayerController::HasPeerConnection() {
    static UFunction* pFnHasPeerConnection = NULL;

    if (!pFnHasPeerConnection)
        pFnHasPeerConnection = (UFunction*)UObject::GObjObjects()->Data[12076];

    APlayerController_execHasPeerConnection_Parms HasPeerConnection_Parms;

    pFnHasPeerConnection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasPeerConnection, &HasPeerConnection_Parms, NULL);

    pFnHasPeerConnection->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.OnSetSoundMode
// [0x00020002]
// Parameters infos:

void APlayerController::OnSetSoundMode() {
    static UFunction* pFnOnSetSoundMode = NULL;

    if (!pFnOnSetSoundMode)
        pFnOnSetSoundMode = (UFunction*)UObject::GObjObjects()->Data[12073];

    APlayerController_execOnSetSoundMode_Parms OnSetSoundMode_Parms;

    this->ProcessEvent(pFnOnSetSoundMode, &OnSetSoundMode_Parms, NULL);
};

// Function Engine.PlayerController.ClientSpawnCameraLensEffect
// [0x01020942] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientSpawnCameraLensEffect() {
    static UFunction* pFnClientSpawnCameraLensEffect = NULL;

    if (!pFnClientSpawnCameraLensEffect)
        pFnClientSpawnCameraLensEffect =
            (UFunction*)UObject::GObjObjects()->Data[12071];

    APlayerController_eventClientSpawnCameraLensEffect_Parms
        ClientSpawnCameraLensEffect_Parms;

    this->ProcessEvent(pFnClientSpawnCameraLensEffect,
                       &ClientSpawnCameraLensEffect_Parms, NULL);
};

// Function Engine.PlayerController.DebugCameraAnims
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::DebugCameraAnims() {
    static UFunction* pFnDebugCameraAnims = NULL;

    if (!pFnDebugCameraAnims)
        pFnDebugCameraAnims = (UFunction*)UObject::GObjObjects()->Data[12070];

    APlayerController_execDebugCameraAnims_Parms DebugCameraAnims_Parms;

    this->ProcessEvent(pFnDebugCameraAnims, &DebugCameraAnims_Parms, NULL);
};

// Function Engine.PlayerController.ClientStopCameraAnim
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientStopCameraAnim() {
    static UFunction* pFnClientStopCameraAnim = NULL;

    if (!pFnClientStopCameraAnim)
        pFnClientStopCameraAnim =
            (UFunction*)UObject::GObjObjects()->Data[12067];

    APlayerController_eventClientStopCameraAnim_Parms
        ClientStopCameraAnim_Parms;

    this->ProcessEvent(pFnClientStopCameraAnim, &ClientStopCameraAnim_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientPlayCameraAnim
// [0x01024942] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientPlayCameraAnim() {
    static UFunction* pFnClientPlayCameraAnim = NULL;

    if (!pFnClientPlayCameraAnim)
        pFnClientPlayCameraAnim =
            (UFunction*)UObject::GObjObjects()->Data[12056];

    APlayerController_eventClientPlayCameraAnim_Parms
        ClientPlayCameraAnim_Parms;

    this->ProcessEvent(pFnClientPlayCameraAnim, &ClientPlayCameraAnim_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnCameraShake
// [0x00020002]
// Parameters infos:

void APlayerController::OnCameraShake() {
    static UFunction* pFnOnCameraShake = NULL;

    if (!pFnOnCameraShake)
        pFnOnCameraShake = (UFunction*)UObject::GObjObjects()->Data[12054];

    APlayerController_execOnCameraShake_Parms OnCameraShake_Parms;

    this->ProcessEvent(pFnOnCameraShake, &OnCameraShake_Parms, NULL);
};

// Function Engine.PlayerController.ClientStopCameraShake
// [0x01020142]
// Parameters infos:

void APlayerController::ClientStopCameraShake() {
    static UFunction* pFnClientStopCameraShake = NULL;

    if (!pFnClientStopCameraShake)
        pFnClientStopCameraShake =
            (UFunction*)UObject::GObjObjects()->Data[12052];

    APlayerController_execClientStopCameraShake_Parms
        ClientStopCameraShake_Parms;

    this->ProcessEvent(pFnClientStopCameraShake, &ClientStopCameraShake_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientPlayCameraShake
// [0x01024142]
// Parameters infos:

void APlayerController::ClientPlayCameraShake() {
    static UFunction* pFnClientPlayCameraShake = NULL;

    if (!pFnClientPlayCameraShake)
        pFnClientPlayCameraShake =
            (UFunction*)UObject::GObjObjects()->Data[12046];

    APlayerController_execClientPlayCameraShake_Parms
        ClientPlayCameraShake_Parms;

    this->ProcessEvent(pFnClientPlayCameraShake, &ClientPlayCameraShake_Parms,
                       NULL);
};

// Function Engine.PlayerController.DoForceFeedbackForScreenShake
// [0x00080100]
// Parameters infos:

void APlayerController::DoForceFeedbackForScreenShake() {
    static UFunction* pFnDoForceFeedbackForScreenShake = NULL;

    if (!pFnDoForceFeedbackForScreenShake)
        pFnDoForceFeedbackForScreenShake =
            (UFunction*)UObject::GObjObjects()->Data[12043];

    APlayerController_execDoForceFeedbackForScreenShake_Parms
        DoForceFeedbackForScreenShake_Parms;

    this->ProcessEvent(pFnDoForceFeedbackForScreenShake,
                       &DoForceFeedbackForScreenShake_Parms, NULL);
};

// Function Engine.PlayerController.InputMatchDelegate
// [0x00120000]
// Parameters infos:

void APlayerController::InputMatchDelegate() {
    static UFunction* pFnInputMatchDelegate = NULL;

    if (!pFnInputMatchDelegate)
        pFnInputMatchDelegate = (UFunction*)UObject::GObjObjects()->Data[12042];

    APlayerController_execInputMatchDelegate_Parms InputMatchDelegate_Parms;

    this->ProcessEvent(pFnInputMatchDelegate, &InputMatchDelegate_Parms, NULL);
};

// Function Engine.PlayerController.Sentinel_PostAcquireTravelTheWorldPoints
// [0x00020000]
// Parameters infos:

void APlayerController::Sentinel_PostAcquireTravelTheWorldPoints() {
    static UFunction* pFnSentinel_PostAcquireTravelTheWorldPoints = NULL;

    if (!pFnSentinel_PostAcquireTravelTheWorldPoints)
        pFnSentinel_PostAcquireTravelTheWorldPoints =
            (UFunction*)UObject::GObjObjects()->Data[12041];

    APlayerController_execSentinel_PostAcquireTravelTheWorldPoints_Parms
        Sentinel_PostAcquireTravelTheWorldPoints_Parms;

    this->ProcessEvent(pFnSentinel_PostAcquireTravelTheWorldPoints,
                       &Sentinel_PostAcquireTravelTheWorldPoints_Parms, NULL);
};

// Function Engine.PlayerController.Sentinel_PreAcquireTravelTheWorldPoints
// [0x00020000]
// Parameters infos:

void APlayerController::Sentinel_PreAcquireTravelTheWorldPoints() {
    static UFunction* pFnSentinel_PreAcquireTravelTheWorldPoints = NULL;

    if (!pFnSentinel_PreAcquireTravelTheWorldPoints)
        pFnSentinel_PreAcquireTravelTheWorldPoints =
            (UFunction*)UObject::GObjObjects()->Data[12040];

    APlayerController_execSentinel_PreAcquireTravelTheWorldPoints_Parms
        Sentinel_PreAcquireTravelTheWorldPoints_Parms;

    this->ProcessEvent(pFnSentinel_PreAcquireTravelTheWorldPoints,
                       &Sentinel_PreAcquireTravelTheWorldPoints_Parms, NULL);
};

// Function Engine.PlayerController.Sentinel_SetupForGamebasedTravelTheWorld
// [0x00020000]
// Parameters infos:

void APlayerController::Sentinel_SetupForGamebasedTravelTheWorld() {
    static UFunction* pFnSentinel_SetupForGamebasedTravelTheWorld = NULL;

    if (!pFnSentinel_SetupForGamebasedTravelTheWorld)
        pFnSentinel_SetupForGamebasedTravelTheWorld =
            (UFunction*)UObject::GObjObjects()->Data[12039];

    APlayerController_execSentinel_SetupForGamebasedTravelTheWorld_Parms
        Sentinel_SetupForGamebasedTravelTheWorld_Parms;

    this->ProcessEvent(pFnSentinel_SetupForGamebasedTravelTheWorld,
                       &Sentinel_SetupForGamebasedTravelTheWorld_Parms, NULL);
};

// Function Engine.PlayerController.OnFlyThroughHasEnded
// [0x00020102]
// Parameters infos:

void APlayerController::OnFlyThroughHasEnded() {
    static UFunction* pFnOnFlyThroughHasEnded = NULL;

    if (!pFnOnFlyThroughHasEnded)
        pFnOnFlyThroughHasEnded =
            (UFunction*)UObject::GObjObjects()->Data[12036];

    APlayerController_execOnFlyThroughHasEnded_Parms OnFlyThroughHasEnded_Parms;

    this->ProcessEvent(pFnOnFlyThroughHasEnded, &OnFlyThroughHasEnded_Parms,
                       NULL);
};

// Function Engine.PlayerController.GetAchievementProgression
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventGetAchievementProgression() {
    static UFunction* pFnGetAchievementProgression = NULL;

    if (!pFnGetAchievementProgression)
        pFnGetAchievementProgression =
            (UFunction*)UObject::GObjObjects()->Data[12031];

    APlayerController_eventGetAchievementProgression_Parms
        GetAchievementProgression_Parms;

    this->ProcessEvent(pFnGetAchievementProgression,
                       &GetAchievementProgression_Parms, NULL);
};

// Function Engine.PlayerController.GetPartyGameTypeName
// [0x00022000]
// Parameters infos:

void APlayerController::GetPartyGameTypeName() {
    static UFunction* pFnGetPartyGameTypeName = NULL;

    if (!pFnGetPartyGameTypeName)
        pFnGetPartyGameTypeName =
            (UFunction*)UObject::GObjObjects()->Data[12029];

    APlayerController_execGetPartyGameTypeName_Parms GetPartyGameTypeName_Parms;

    this->ProcessEvent(pFnGetPartyGameTypeName, &GetPartyGameTypeName_Parms,
                       NULL);
};

// Function Engine.PlayerController.GetPartyMapName
// [0x00022000]
// Parameters infos:

void APlayerController::GetPartyMapName() {
    static UFunction* pFnGetPartyMapName = NULL;

    if (!pFnGetPartyMapName)
        pFnGetPartyMapName = (UFunction*)UObject::GObjObjects()->Data[12027];

    APlayerController_execGetPartyMapName_Parms GetPartyMapName_Parms;

    this->ProcessEvent(pFnGetPartyMapName, &GetPartyMapName_Parms, NULL);
};

// Function Engine.PlayerController.IsPartyLeader
// [0x00020102]
// Parameters infos:

void APlayerController::IsPartyLeader() {
    static UFunction* pFnIsPartyLeader = NULL;

    if (!pFnIsPartyLeader)
        pFnIsPartyLeader = (UFunction*)UObject::GObjObjects()->Data[12024];

    APlayerController_execIsPartyLeader_Parms IsPartyLeader_Parms;

    this->ProcessEvent(pFnIsPartyLeader, &IsPartyLeader_Parms, NULL);
};

// Function Engine.PlayerController.ClientAddTextureStreamingLoc
// [0x01020DC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventClientAddTextureStreamingLoc() {
    static UFunction* pFnClientAddTextureStreamingLoc = NULL;

    if (!pFnClientAddTextureStreamingLoc)
        pFnClientAddTextureStreamingLoc =
            (UFunction*)UObject::GObjObjects()->Data[12020];

    APlayerController_eventClientAddTextureStreamingLoc_Parms
        ClientAddTextureStreamingLoc_Parms;

    pFnClientAddTextureStreamingLoc->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClientAddTextureStreamingLoc,
                       &ClientAddTextureStreamingLoc_Parms, NULL);

    pFnClientAddTextureStreamingLoc->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientPrestreamTextures
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientPrestreamTextures() {
    static UFunction* pFnClientPrestreamTextures = NULL;

    if (!pFnClientPrestreamTextures)
        pFnClientPrestreamTextures =
            (UFunction*)UObject::GObjObjects()->Data[12015];

    APlayerController_eventClientPrestreamTextures_Parms
        ClientPrestreamTextures_Parms;

    this->ProcessEvent(pFnClientPrestreamTextures,
                       &ClientPrestreamTextures_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetForceMipLevelsToBeResident
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientSetForceMipLevelsToBeResident() {
    static UFunction* pFnClientSetForceMipLevelsToBeResident = NULL;

    if (!pFnClientSetForceMipLevelsToBeResident)
        pFnClientSetForceMipLevelsToBeResident =
            (UFunction*)UObject::GObjObjects()->Data[12011];

    APlayerController_eventClientSetForceMipLevelsToBeResident_Parms
        ClientSetForceMipLevelsToBeResident_Parms;

    this->ProcessEvent(pFnClientSetForceMipLevelsToBeResident,
                       &ClientSetForceMipLevelsToBeResident_Parms, NULL);
};

// Function Engine.PlayerController.ClientControlMovieTexture
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientControlMovieTexture() {
    static UFunction* pFnClientControlMovieTexture = NULL;

    if (!pFnClientControlMovieTexture)
        pFnClientControlMovieTexture =
            (UFunction*)UObject::GObjObjects()->Data[12008];

    APlayerController_execClientControlMovieTexture_Parms
        ClientControlMovieTexture_Parms;

    this->ProcessEvent(pFnClientControlMovieTexture,
                       &ClientControlMovieTexture_Parms, NULL);
};

// Function Engine.PlayerController.GetSplitscreenPlayerCount
// [0x00020102]
// Parameters infos:

void APlayerController::GetSplitscreenPlayerCount() {
    static UFunction* pFnGetSplitscreenPlayerCount = NULL;

    if (!pFnGetSplitscreenPlayerCount)
        pFnGetSplitscreenPlayerCount =
            (UFunction*)UObject::GObjObjects()->Data[12003];

    APlayerController_execGetSplitscreenPlayerCount_Parms
        GetSplitscreenPlayerCount_Parms;

    this->ProcessEvent(pFnGetSplitscreenPlayerCount,
                       &GetSplitscreenPlayerCount_Parms, NULL);
};

// Function Engine.PlayerController.GetSplitscreenPlayerByIndex
// [0x00024102]
// Parameters infos:

void APlayerController::GetSplitscreenPlayerByIndex() {
    static UFunction* pFnGetSplitscreenPlayerByIndex = NULL;

    if (!pFnGetSplitscreenPlayerByIndex)
        pFnGetSplitscreenPlayerByIndex =
            (UFunction*)UObject::GObjObjects()->Data[11994];

    APlayerController_execGetSplitscreenPlayerByIndex_Parms
        GetSplitscreenPlayerByIndex_Parms;

    this->ProcessEvent(pFnGetSplitscreenPlayerByIndex,
                       &GetSplitscreenPlayerByIndex_Parms, NULL);
};

// Function Engine.PlayerController.IsSplitscreenPlayer
// [0x00424103] ( FUNC_Final )
// Parameters infos:

void APlayerController::IsSplitscreenPlayer() {
    static UFunction* pFnIsSplitscreenPlayer = NULL;

    if (!pFnIsSplitscreenPlayer)
        pFnIsSplitscreenPlayer =
            (UFunction*)UObject::GObjObjects()->Data[11987];

    APlayerController_execIsSplitscreenPlayer_Parms IsSplitscreenPlayer_Parms;

    this->ProcessEvent(pFnIsSplitscreenPlayer, &IsSplitscreenPlayer_Parms,
                       NULL);
};

// Function Engine.PlayerController.IsPrimaryPlayer
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void APlayerController::IsPrimaryPlayer() {
    static UFunction* pFnIsPrimaryPlayer = NULL;

    if (!pFnIsPrimaryPlayer)
        pFnIsPrimaryPlayer = (UFunction*)UObject::GObjObjects()->Data[9251];

    APlayerController_execIsPrimaryPlayer_Parms IsPrimaryPlayer_Parms;

    this->ProcessEvent(pFnIsPrimaryPlayer, &IsPrimaryPlayer_Parms, NULL);
};

// Function Engine.PlayerController.ServerNotifyPartyHostLeaving
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerNotifyPartyHostLeaving() {
    static UFunction* pFnServerNotifyPartyHostLeaving = NULL;

    if (!pFnServerNotifyPartyHostLeaving)
        pFnServerNotifyPartyHostLeaving =
            (UFunction*)UObject::GObjObjects()->Data[11984];

    APlayerController_execServerNotifyPartyHostLeaving_Parms
        ServerNotifyPartyHostLeaving_Parms;

    this->ProcessEvent(pFnServerNotifyPartyHostLeaving,
                       &ServerNotifyPartyHostLeaving_Parms, NULL);
};

// Function Engine.PlayerController.ClientNotifyPartyHostLeaving
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientNotifyPartyHostLeaving() {
    static UFunction* pFnClientNotifyPartyHostLeaving = NULL;

    if (!pFnClientNotifyPartyHostLeaving)
        pFnClientNotifyPartyHostLeaving =
            (UFunction*)UObject::GObjObjects()->Data[11982];

    APlayerController_execClientNotifyPartyHostLeaving_Parms
        ClientNotifyPartyHostLeaving_Parms;

    this->ProcessEvent(pFnClientNotifyPartyHostLeaving,
                       &ClientNotifyPartyHostLeaving_Parms, NULL);
};

// Function Engine.PlayerController.ClientReturnToParty
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientReturnToParty() {
    static UFunction* pFnClientReturnToParty = NULL;

    if (!pFnClientReturnToParty)
        pFnClientReturnToParty =
            (UFunction*)UObject::GObjObjects()->Data[11979];

    APlayerController_execClientReturnToParty_Parms ClientReturnToParty_Parms;

    this->ProcessEvent(pFnClientReturnToParty, &ClientReturnToParty_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnJoinTravelToSessionComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnJoinTravelToSessionComplete() {
    static UFunction* pFnOnJoinTravelToSessionComplete = NULL;

    if (!pFnOnJoinTravelToSessionComplete)
        pFnOnJoinTravelToSessionComplete =
            (UFunction*)UObject::GObjObjects()->Data[11975];

    APlayerController_execOnJoinTravelToSessionComplete_Parms
        OnJoinTravelToSessionComplete_Parms;

    this->ProcessEvent(pFnOnJoinTravelToSessionComplete,
                       &OnJoinTravelToSessionComplete_Parms, NULL);
};

// Function Engine.PlayerController.PreJoinUpdateGameSettings
// [0x00020100]
// Parameters infos:

void APlayerController::PreJoinUpdateGameSettings() {
    static UFunction* pFnPreJoinUpdateGameSettings = NULL;

    if (!pFnPreJoinUpdateGameSettings)
        pFnPreJoinUpdateGameSettings =
            (UFunction*)UObject::GObjObjects()->Data[11972];

    APlayerController_execPreJoinUpdateGameSettings_Parms
        PreJoinUpdateGameSettings_Parms;

    this->ProcessEvent(pFnPreJoinUpdateGameSettings,
                       &PreJoinUpdateGameSettings_Parms, NULL);
};

// Function Engine.PlayerController.ClientTravelToSession
// [0x018201C2]
// Parameters infos:

void APlayerController::ClientTravelToSession() {
    static UFunction* pFnClientTravelToSession = NULL;

    if (!pFnClientTravelToSession)
        pFnClientTravelToSession =
            (UFunction*)UObject::GObjObjects()->Data[11965];

    APlayerController_execClientTravelToSession_Parms
        ClientTravelToSession_Parms;

    this->ProcessEvent(pFnClientTravelToSession, &ClientTravelToSession_Parms,
                       NULL);
};

// Function Engine.PlayerController.PathClear
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::PathClear() {
    static UFunction* pFnPathClear = NULL;

    if (!pFnPathClear)
        pFnPathClear = (UFunction*)UObject::GObjObjects()->Data[11964];

    APlayerController_execPathClear_Parms PathClear_Parms;

    this->ProcessEvent(pFnPathClear, &PathClear_Parms, NULL);
};

// Function Engine.PlayerController.PathChild
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::PathChild() {
    static UFunction* pFnPathChild = NULL;

    if (!pFnPathChild)
        pFnPathChild = (UFunction*)UObject::GObjObjects()->Data[11962];

    APlayerController_execPathChild_Parms PathChild_Parms;

    this->ProcessEvent(pFnPathChild, &PathChild_Parms, NULL);
};

// Function Engine.PlayerController.PathStep
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::PathStep() {
    static UFunction* pFnPathStep = NULL;

    if (!pFnPathStep)
        pFnPathStep = (UFunction*)UObject::GObjObjects()->Data[11960];

    APlayerController_execPathStep_Parms PathStep_Parms;

    this->ProcessEvent(pFnPathStep, &PathStep_Parms, NULL);
};

// Function Engine.PlayerController.SoakPause
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventSoakPause() {
    static UFunction* pFnSoakPause = NULL;

    if (!pFnSoakPause)
        pFnSoakPause = (UFunction*)UObject::GObjObjects()->Data[11958];

    APlayerController_eventSoakPause_Parms SoakPause_Parms;

    this->ProcessEvent(pFnSoakPause, &SoakPause_Parms, NULL);
};

// Function Engine.PlayerController.IncrementNumberOfMatchesPlayed
// [0x00020002]
// Parameters infos:

void APlayerController::IncrementNumberOfMatchesPlayed() {
    static UFunction* pFnIncrementNumberOfMatchesPlayed = NULL;

    if (!pFnIncrementNumberOfMatchesPlayed)
        pFnIncrementNumberOfMatchesPlayed =
            (UFunction*)UObject::GObjObjects()->Data[11957];

    APlayerController_execIncrementNumberOfMatchesPlayed_Parms
        IncrementNumberOfMatchesPlayed_Parms;

    this->ProcessEvent(pFnIncrementNumberOfMatchesPlayed,
                       &IncrementNumberOfMatchesPlayed_Parms, NULL);
};

// Function Engine.PlayerController.CanViewUserCreatedContent
// [0x00020002]
// Parameters infos:

void APlayerController::CanViewUserCreatedContent() {
    static UFunction* pFnCanViewUserCreatedContent = NULL;

    if (!pFnCanViewUserCreatedContent)
        pFnCanViewUserCreatedContent =
            (UFunction*)UObject::GObjObjects()->Data[11955];

    APlayerController_execCanViewUserCreatedContent_Parms
        CanViewUserCreatedContent_Parms;

    this->ProcessEvent(pFnCanViewUserCreatedContent,
                       &CanViewUserCreatedContent_Parms, NULL);
};

// Function Engine.PlayerController.ClientEndOnlineGame
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientEndOnlineGame() {
    static UFunction* pFnClientEndOnlineGame = NULL;

    if (!pFnClientEndOnlineGame)
        pFnClientEndOnlineGame =
            (UFunction*)UObject::GObjObjects()->Data[11953];

    APlayerController_execClientEndOnlineGame_Parms ClientEndOnlineGame_Parms;

    this->ProcessEvent(pFnClientEndOnlineGame, &ClientEndOnlineGame_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientStartOnlineGame
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientStartOnlineGame() {
    static UFunction* pFnClientStartOnlineGame = NULL;

    if (!pFnClientStartOnlineGame)
        pFnClientStartOnlineGame =
            (UFunction*)UObject::GObjObjects()->Data[11951];

    APlayerController_execClientStartOnlineGame_Parms
        ClientStartOnlineGame_Parms;

    this->ProcessEvent(pFnClientStartOnlineGame, &ClientStartOnlineGame_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerRegisterClientStatGuid
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerRegisterClientStatGuid() {
    static UFunction* pFnServerRegisterClientStatGuid = NULL;

    if (!pFnServerRegisterClientStatGuid)
        pFnServerRegisterClientStatGuid =
            (UFunction*)UObject::GObjObjects()->Data[11949];

    APlayerController_execServerRegisterClientStatGuid_Parms
        ServerRegisterClientStatGuid_Parms;

    this->ProcessEvent(pFnServerRegisterClientStatGuid,
                       &ServerRegisterClientStatGuid_Parms, NULL);
};

// Function Engine.PlayerController.OnRegisterHostStatGuidComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnRegisterHostStatGuidComplete() {
    static UFunction* pFnOnRegisterHostStatGuidComplete = NULL;

    if (!pFnOnRegisterHostStatGuidComplete)
        pFnOnRegisterHostStatGuidComplete =
            (UFunction*)UObject::GObjObjects()->Data[11946];

    APlayerController_execOnRegisterHostStatGuidComplete_Parms
        OnRegisterHostStatGuidComplete_Parms;

    this->ProcessEvent(pFnOnRegisterHostStatGuidComplete,
                       &OnRegisterHostStatGuidComplete_Parms, NULL);
};

// Function Engine.PlayerController.ClientRegisterHostStatGuid
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientRegisterHostStatGuid() {
    static UFunction* pFnClientRegisterHostStatGuid = NULL;

    if (!pFnClientRegisterHostStatGuid)
        pFnClientRegisterHostStatGuid =
            (UFunction*)UObject::GObjObjects()->Data[11944];

    APlayerController_execClientRegisterHostStatGuid_Parms
        ClientRegisterHostStatGuid_Parms;

    this->ProcessEvent(pFnClientRegisterHostStatGuid,
                       &ClientRegisterHostStatGuid_Parms, NULL);
};

// Function Engine.PlayerController.RemoveAllDebugStrings
// [0x010209C3] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APlayerController::eventRemoveAllDebugStrings() {
    static UFunction* pFnRemoveAllDebugStrings = NULL;

    if (!pFnRemoveAllDebugStrings)
        pFnRemoveAllDebugStrings =
            (UFunction*)UObject::GObjObjects()->Data[11943];

    APlayerController_eventRemoveAllDebugStrings_Parms
        RemoveAllDebugStrings_Parms;

    this->ProcessEvent(pFnRemoveAllDebugStrings, &RemoveAllDebugStrings_Parms,
                       NULL);
};

// Function Engine.PlayerController.RemoveDebugText
// [0x010209C3] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APlayerController::eventRemoveDebugText() {
    static UFunction* pFnRemoveDebugText = NULL;

    if (!pFnRemoveDebugText)
        pFnRemoveDebugText = (UFunction*)UObject::GObjObjects()->Data[11940];

    APlayerController_eventRemoveDebugText_Parms RemoveDebugText_Parms;

    this->ProcessEvent(pFnRemoveDebugText, &RemoveDebugText_Parms, NULL);
};

// Function Engine.PlayerController.AddDebugText
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventAddDebugText() {
    static UFunction* pFnAddDebugText = NULL;

    if (!pFnAddDebugText)
        pFnAddDebugText = (UFunction*)UObject::GObjObjects()->Data[11928];

    APlayerController_eventAddDebugText_Parms AddDebugText_Parms;

    this->ProcessEvent(pFnAddDebugText, &AddDebugText_Parms, NULL);
};

// Function Engine.PlayerController.DrawDebugTextList
// [0x00820103] ( FUNC_Final )
// Parameters infos:

void APlayerController::DrawDebugTextList() {
    static UFunction* pFnDrawDebugTextList = NULL;

    if (!pFnDrawDebugTextList)
        pFnDrawDebugTextList = (UFunction*)UObject::GObjObjects()->Data[11919];

    APlayerController_execDrawDebugTextList_Parms DrawDebugTextList_Parms;

    this->ProcessEvent(pFnDrawDebugTextList, &DrawDebugTextList_Parms, NULL);
};

// Function Engine.PlayerController.OnDestroy
// [0x00020102]
// Parameters infos:

void APlayerController::OnDestroy() {
    static UFunction* pFnOnDestroy = NULL;

    if (!pFnOnDestroy)
        pFnOnDestroy = (UFunction*)UObject::GObjObjects()->Data[11917];

    APlayerController_execOnDestroy_Parms OnDestroy_Parms;

    this->ProcessEvent(pFnOnDestroy, &OnDestroy_Parms, NULL);
};

// Function Engine.PlayerController.ClientStartNetworkedVoice
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientStartNetworkedVoice() {
    static UFunction* pFnClientStartNetworkedVoice = NULL;

    if (!pFnClientStartNetworkedVoice)
        pFnClientStartNetworkedVoice =
            (UFunction*)UObject::GObjObjects()->Data[11915];

    APlayerController_execClientStartNetworkedVoice_Parms
        ClientStartNetworkedVoice_Parms;

    this->ProcessEvent(pFnClientStartNetworkedVoice,
                       &ClientStartNetworkedVoice_Parms, NULL);
};

// Function Engine.PlayerController.ClientStopNetworkedVoice
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientStopNetworkedVoice() {
    static UFunction* pFnClientStopNetworkedVoice = NULL;

    if (!pFnClientStopNetworkedVoice)
        pFnClientStopNetworkedVoice =
            (UFunction*)UObject::GObjObjects()->Data[11913];

    APlayerController_execClientStopNetworkedVoice_Parms
        ClientStopNetworkedVoice_Parms;

    this->ProcessEvent(pFnClientStopNetworkedVoice,
                       &ClientStopNetworkedVoice_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetHostUniqueId
// [0x010201C0]
// Parameters infos:

void APlayerController::ClientSetHostUniqueId() {
    static UFunction* pFnClientSetHostUniqueId = NULL;

    if (!pFnClientSetHostUniqueId)
        pFnClientSetHostUniqueId =
            (UFunction*)UObject::GObjObjects()->Data[11911];

    APlayerController_execClientSetHostUniqueId_Parms
        ClientSetHostUniqueId_Parms;

    this->ProcessEvent(pFnClientSetHostUniqueId, &ClientSetHostUniqueId_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientWriteLeaderboardStats
// [0x010241C0]
// Parameters infos:

void APlayerController::ClientWriteLeaderboardStats() {
    static UFunction* pFnClientWriteLeaderboardStats = NULL;

    if (!pFnClientWriteLeaderboardStats)
        pFnClientWriteLeaderboardStats =
            (UFunction*)UObject::GObjObjects()->Data[11908];

    APlayerController_execClientWriteLeaderboardStats_Parms
        ClientWriteLeaderboardStats_Parms;

    this->ProcessEvent(pFnClientWriteLeaderboardStats,
                       &ClientWriteLeaderboardStats_Parms, NULL);
};

// Function Engine.PlayerController.ClientWriteOnlinePlayerScores
// [0x018201C2]
// Parameters infos:

void APlayerController::ClientWriteOnlinePlayerScores() {
    static UFunction* pFnClientWriteOnlinePlayerScores = NULL;

    if (!pFnClientWriteOnlinePlayerScores)
        pFnClientWriteOnlinePlayerScores =
            (UFunction*)UObject::GObjObjects()->Data[11899];

    APlayerController_execClientWriteOnlinePlayerScores_Parms
        ClientWriteOnlinePlayerScores_Parms;

    this->ProcessEvent(pFnClientWriteOnlinePlayerScores,
                       &ClientWriteOnlinePlayerScores_Parms, NULL);
};

// Function Engine.PlayerController.ClientArbitratedMatchEnded
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientArbitratedMatchEnded() {
    static UFunction* pFnClientArbitratedMatchEnded = NULL;

    if (!pFnClientArbitratedMatchEnded)
        pFnClientArbitratedMatchEnded =
            (UFunction*)UObject::GObjObjects()->Data[11898];

    APlayerController_execClientArbitratedMatchEnded_Parms
        ClientArbitratedMatchEnded_Parms;

    this->ProcessEvent(pFnClientArbitratedMatchEnded,
                       &ClientArbitratedMatchEnded_Parms, NULL);
};

// Function Engine.PlayerController.NotifyNotEnoughSpaceInInvite
// [0x00020002]
// Parameters infos:

void APlayerController::NotifyNotEnoughSpaceInInvite() {
    static UFunction* pFnNotifyNotEnoughSpaceInInvite = NULL;

    if (!pFnNotifyNotEnoughSpaceInInvite)
        pFnNotifyNotEnoughSpaceInInvite =
            (UFunction*)UObject::GObjObjects()->Data[11897];

    APlayerController_execNotifyNotEnoughSpaceInInvite_Parms
        NotifyNotEnoughSpaceInInvite_Parms;

    this->ProcessEvent(pFnNotifyNotEnoughSpaceInInvite,
                       &NotifyNotEnoughSpaceInInvite_Parms, NULL);
};

// Function Engine.PlayerController.NotifyNotAllPlayersCanJoinInvite
// [0x00020002]
// Parameters infos:

void APlayerController::NotifyNotAllPlayersCanJoinInvite() {
    static UFunction* pFnNotifyNotAllPlayersCanJoinInvite = NULL;

    if (!pFnNotifyNotAllPlayersCanJoinInvite)
        pFnNotifyNotAllPlayersCanJoinInvite =
            (UFunction*)UObject::GObjObjects()->Data[11896];

    APlayerController_execNotifyNotAllPlayersCanJoinInvite_Parms
        NotifyNotAllPlayersCanJoinInvite_Parms;

    this->ProcessEvent(pFnNotifyNotAllPlayersCanJoinInvite,
                       &NotifyNotAllPlayersCanJoinInvite_Parms, NULL);
};

// Function Engine.PlayerController.NotifyInviteFailed
// [0x00024002]
// Parameters infos:

void APlayerController::NotifyInviteFailed() {
    static UFunction* pFnNotifyInviteFailed = NULL;

    if (!pFnNotifyInviteFailed)
        pFnNotifyInviteFailed = (UFunction*)UObject::GObjObjects()->Data[11894];

    APlayerController_execNotifyInviteFailed_Parms NotifyInviteFailed_Parms;

    this->ProcessEvent(pFnNotifyInviteFailed, &NotifyInviteFailed_Parms, NULL);
};

// Function Engine.PlayerController.OnInviteJoinComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnInviteJoinComplete() {
    static UFunction* pFnOnInviteJoinComplete = NULL;

    if (!pFnOnInviteJoinComplete)
        pFnOnInviteJoinComplete =
            (UFunction*)UObject::GObjObjects()->Data[11890];

    APlayerController_execOnInviteJoinComplete_Parms OnInviteJoinComplete_Parms;

    this->ProcessEvent(pFnOnInviteJoinComplete, &OnInviteJoinComplete_Parms,
                       NULL);
};

// Function Engine.PlayerController.ModifyClientURL
// [0x00020002]
// Parameters infos:

void APlayerController::ModifyClientURL() {
    static UFunction* pFnModifyClientURL = NULL;

    if (!pFnModifyClientURL)
        pFnModifyClientURL = (UFunction*)UObject::GObjObjects()->Data[11887];

    APlayerController_execModifyClientURL_Parms ModifyClientURL_Parms;

    this->ProcessEvent(pFnModifyClientURL, &ModifyClientURL_Parms, NULL);
};

// Function Engine.PlayerController.OnDestroyForInviteComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnDestroyForInviteComplete() {
    static UFunction* pFnOnDestroyForInviteComplete = NULL;

    if (!pFnOnDestroyForInviteComplete)
        pFnOnDestroyForInviteComplete =
            (UFunction*)UObject::GObjObjects()->Data[11884];

    APlayerController_execOnDestroyForInviteComplete_Parms
        OnDestroyForInviteComplete_Parms;

    this->ProcessEvent(pFnOnDestroyForInviteComplete,
                       &OnDestroyForInviteComplete_Parms, NULL);
};

// Function Engine.PlayerController.OnEndForInviteComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnEndForInviteComplete() {
    static UFunction* pFnOnEndForInviteComplete = NULL;

    if (!pFnOnEndForInviteComplete)
        pFnOnEndForInviteComplete =
            (UFunction*)UObject::GObjObjects()->Data[11881];

    APlayerController_execOnEndForInviteComplete_Parms
        OnEndForInviteComplete_Parms;

    this->ProcessEvent(pFnOnEndForInviteComplete, &OnEndForInviteComplete_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClearInviteDelegates
// [0x00020002]
// Parameters infos:

void APlayerController::ClearInviteDelegates() {
    static UFunction* pFnClearInviteDelegates = NULL;

    if (!pFnClearInviteDelegates)
        pFnClearInviteDelegates =
            (UFunction*)UObject::GObjObjects()->Data[11880];

    APlayerController_execClearInviteDelegates_Parms ClearInviteDelegates_Parms;

    this->ProcessEvent(pFnClearInviteDelegates, &ClearInviteDelegates_Parms,
                       NULL);
};

// Function Engine.PlayerController.CanAllPlayersPlayOnline
// [0x00020002]
// Parameters infos:

void APlayerController::CanAllPlayersPlayOnline() {
    static UFunction* pFnCanAllPlayersPlayOnline = NULL;

    if (!pFnCanAllPlayersPlayOnline)
        pFnCanAllPlayersPlayOnline =
            (UFunction*)UObject::GObjObjects()->Data[11876];

    APlayerController_execCanAllPlayersPlayOnline_Parms
        CanAllPlayersPlayOnline_Parms;

    this->ProcessEvent(pFnCanAllPlayersPlayOnline,
                       &CanAllPlayersPlayOnline_Parms, NULL);
};

// Function Engine.PlayerController.InviteHasEnoughSpace
// [0x00020002]
// Parameters infos:

void APlayerController::InviteHasEnoughSpace() {
    static UFunction* pFnInviteHasEnoughSpace = NULL;

    if (!pFnInviteHasEnoughSpace)
        pFnInviteHasEnoughSpace =
            (UFunction*)UObject::GObjObjects()->Data[11871];

    APlayerController_execInviteHasEnoughSpace_Parms InviteHasEnoughSpace_Parms;

    this->ProcessEvent(pFnInviteHasEnoughSpace, &InviteHasEnoughSpace_Parms,
                       NULL);
};

// Function Engine.PlayerController.JoinPlayfabServer
// [0x00020000]
// Parameters infos:

void APlayerController::JoinPlayfabServer() {
    static UFunction* pFnJoinPlayfabServer = NULL;

    if (!pFnJoinPlayfabServer)
        pFnJoinPlayfabServer = (UFunction*)UObject::GObjObjects()->Data[11868];

    APlayerController_execJoinPlayfabServer_Parms JoinPlayfabServer_Parms;

    this->ProcessEvent(pFnJoinPlayfabServer, &JoinPlayfabServer_Parms, NULL);
};

// Function Engine.PlayerController.OnPlayTogetherStarted
// [0x00020000]
// Parameters infos:

void APlayerController::OnPlayTogetherStarted() {
    static UFunction* pFnOnPlayTogetherStarted = NULL;

    if (!pFnOnPlayTogetherStarted)
        pFnOnPlayTogetherStarted =
            (UFunction*)UObject::GObjObjects()->Data[11867];

    APlayerController_execOnPlayTogetherStarted_Parms
        OnPlayTogetherStarted_Parms;

    this->ProcessEvent(pFnOnPlayTogetherStarted, &OnPlayTogetherStarted_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnConnectionStatusChange
// [0x00020000]
// Parameters infos:

void APlayerController::OnConnectionStatusChange() {
    static UFunction* pFnOnConnectionStatusChange = NULL;

    if (!pFnOnConnectionStatusChange)
        pFnOnConnectionStatusChange =
            (UFunction*)UObject::GObjObjects()->Data[11865];

    APlayerController_execOnConnectionStatusChange_Parms
        OnConnectionStatusChange_Parms;

    this->ProcessEvent(pFnOnConnectionStatusChange,
                       &OnConnectionStatusChange_Parms, NULL);
};

// Function Engine.PlayerController.OnGameInviteAccepted
// [0x00420002]
// Parameters infos:

void APlayerController::OnGameInviteAccepted() {
    static UFunction* pFnOnGameInviteAccepted = NULL;

    if (!pFnOnGameInviteAccepted)
        pFnOnGameInviteAccepted =
            (UFunction*)UObject::GObjObjects()->Data[11861];

    APlayerController_execOnGameInviteAccepted_Parms OnGameInviteAccepted_Parms;

    this->ProcessEvent(pFnOnGameInviteAccepted, &OnGameInviteAccepted_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerRegisteredForArbitration
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerRegisteredForArbitration() {
    static UFunction* pFnServerRegisteredForArbitration = NULL;

    if (!pFnServerRegisteredForArbitration)
        pFnServerRegisteredForArbitration =
            (UFunction*)UObject::GObjObjects()->Data[11859];

    APlayerController_execServerRegisteredForArbitration_Parms
        ServerRegisteredForArbitration_Parms;

    this->ProcessEvent(pFnServerRegisteredForArbitration,
                       &ServerRegisteredForArbitration_Parms, NULL);
};

// Function Engine.PlayerController.OnArbitrationRegisterComplete
// [0x00020002]
// Parameters infos:

void APlayerController::OnArbitrationRegisterComplete() {
    static UFunction* pFnOnArbitrationRegisterComplete = NULL;

    if (!pFnOnArbitrationRegisterComplete)
        pFnOnArbitrationRegisterComplete =
            (UFunction*)UObject::GObjObjects()->Data[11856];

    APlayerController_execOnArbitrationRegisterComplete_Parms
        OnArbitrationRegisterComplete_Parms;

    this->ProcessEvent(pFnOnArbitrationRegisterComplete,
                       &OnArbitrationRegisterComplete_Parms, NULL);
};

// Function Engine.PlayerController.ClientRegisterForArbitration
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientRegisterForArbitration() {
    static UFunction* pFnClientRegisterForArbitration = NULL;

    if (!pFnClientRegisterForArbitration)
        pFnClientRegisterForArbitration =
            (UFunction*)UObject::GObjObjects()->Data[11855];

    APlayerController_execClientRegisterForArbitration_Parms
        ClientRegisterForArbitration_Parms;

    this->ProcessEvent(pFnClientRegisterForArbitration,
                       &ClientRegisterForArbitration_Parms, NULL);
};

// Function Engine.PlayerController.ClientWasKicked
// [0x010209C0] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientWasKicked() {
    static UFunction* pFnClientWasKicked = NULL;

    if (!pFnClientWasKicked)
        pFnClientWasKicked = (UFunction*)UObject::GObjObjects()->Data[11854];

    APlayerController_eventClientWasKicked_Parms ClientWasKicked_Parms;

    this->ProcessEvent(pFnClientWasKicked, &ClientWasKicked_Parms, NULL);
};

// Function Engine.PlayerController.IsShowingSubtitles
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::IsShowingSubtitles() {
    static UFunction* pFnIsShowingSubtitles = NULL;

    if (!pFnIsShowingSubtitles)
        pFnIsShowingSubtitles = (UFunction*)UObject::GObjObjects()->Data[11852];

    APlayerController_execIsShowingSubtitles_Parms IsShowingSubtitles_Parms;

    pFnIsShowingSubtitles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsShowingSubtitles, &IsShowingSubtitles_Parms, NULL);

    pFnIsShowingSubtitles->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetShowSubtitles
// [0x00020700] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APlayerController::SetShowSubtitles() {
    static UFunction* pFnSetShowSubtitles = NULL;

    if (!pFnSetShowSubtitles)
        pFnSetShowSubtitles = (UFunction*)UObject::GObjObjects()->Data[11850];

    APlayerController_execSetShowSubtitles_Parms SetShowSubtitles_Parms;

    pFnSetShowSubtitles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetShowSubtitles, &SetShowSubtitles_Parms, NULL);

    pFnSetShowSubtitles->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.NotifyDirectorControl
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventNotifyDirectorControl() {
    static UFunction* pFnNotifyDirectorControl = NULL;

    if (!pFnNotifyDirectorControl)
        pFnNotifyDirectorControl =
            (UFunction*)UObject::GObjObjects()->Data[11847];

    APlayerController_eventNotifyDirectorControl_Parms
        NotifyDirectorControl_Parms;

    this->ProcessEvent(pFnNotifyDirectorControl, &NotifyDirectorControl_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerUnmutePlayer
// [0x002248C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventServerUnmutePlayer() {
    static UFunction* pFnServerUnmutePlayer = NULL;

    if (!pFnServerUnmutePlayer)
        pFnServerUnmutePlayer = (UFunction*)UObject::GObjObjects()->Data[11842];

    APlayerController_eventServerUnmutePlayer_Parms ServerUnmutePlayer_Parms;

    this->ProcessEvent(pFnServerUnmutePlayer, &ServerUnmutePlayer_Parms, NULL);
};

// Function Engine.PlayerController.ServerMutePlayer
// [0x002248C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventServerMutePlayer() {
    static UFunction* pFnServerMutePlayer = NULL;

    if (!pFnServerMutePlayer)
        pFnServerMutePlayer = (UFunction*)UObject::GObjObjects()->Data[11838];

    APlayerController_eventServerMutePlayer_Parms ServerMutePlayer_Parms;

    this->ProcessEvent(pFnServerMutePlayer, &ServerMutePlayer_Parms, NULL);
};

// Function Engine.PlayerController.GameplayUnmutePlayer
// [0x00020002]
// Parameters infos:

void APlayerController::GameplayUnmutePlayer() {
    static UFunction* pFnGameplayUnmutePlayer = NULL;

    if (!pFnGameplayUnmutePlayer)
        pFnGameplayUnmutePlayer =
            (UFunction*)UObject::GObjObjects()->Data[11834];

    APlayerController_execGameplayUnmutePlayer_Parms GameplayUnmutePlayer_Parms;

    this->ProcessEvent(pFnGameplayUnmutePlayer, &GameplayUnmutePlayer_Parms,
                       NULL);
};

// Function Engine.PlayerController.GameplayMutePlayer
// [0x00020002]
// Parameters infos:

void APlayerController::GameplayMutePlayer() {
    static UFunction* pFnGameplayMutePlayer = NULL;

    if (!pFnGameplayMutePlayer)
        pFnGameplayMutePlayer = (UFunction*)UObject::GObjObjects()->Data[11832];

    APlayerController_execGameplayMutePlayer_Parms GameplayMutePlayer_Parms;

    this->ProcessEvent(pFnGameplayMutePlayer, &GameplayMutePlayer_Parms, NULL);
};

// Function Engine.PlayerController.ClientUnmutePlayer
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientUnmutePlayer() {
    static UFunction* pFnClientUnmutePlayer = NULL;

    if (!pFnClientUnmutePlayer)
        pFnClientUnmutePlayer = (UFunction*)UObject::GObjObjects()->Data[11828];

    APlayerController_eventClientUnmutePlayer_Parms ClientUnmutePlayer_Parms;

    this->ProcessEvent(pFnClientUnmutePlayer, &ClientUnmutePlayer_Parms, NULL);
};

// Function Engine.PlayerController.ClientMutePlayer
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientMutePlayer() {
    static UFunction* pFnClientMutePlayer = NULL;

    if (!pFnClientMutePlayer)
        pFnClientMutePlayer = (UFunction*)UObject::GObjObjects()->Data[11825];

    APlayerController_eventClientMutePlayer_Parms ClientMutePlayer_Parms;

    this->ProcessEvent(pFnClientMutePlayer, &ClientMutePlayer_Parms, NULL);
};

// Function Engine.PlayerController.ClientVoiceHandshakeComplete
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientVoiceHandshakeComplete() {
    static UFunction* pFnClientVoiceHandshakeComplete = NULL;

    if (!pFnClientVoiceHandshakeComplete)
        pFnClientVoiceHandshakeComplete =
            (UFunction*)UObject::GObjObjects()->Data[11823];

    APlayerController_execClientVoiceHandshakeComplete_Parms
        ClientVoiceHandshakeComplete_Parms;

    this->ProcessEvent(pFnClientVoiceHandshakeComplete,
                       &ClientVoiceHandshakeComplete_Parms, NULL);
};

// Function Engine.PlayerController.GetPlayerControllerFromNetId
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void APlayerController::GetPlayerControllerFromNetId() {
    static UFunction* pFnGetPlayerControllerFromNetId = NULL;

    if (!pFnGetPlayerControllerFromNetId)
        pFnGetPlayerControllerFromNetId =
            (UFunction*)UObject::GObjObjects()->Data[11820];

    APlayerController_execGetPlayerControllerFromNetId_Parms
        GetPlayerControllerFromNetId_Parms;

    pFnGetPlayerControllerFromNetId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerControllerFromNetId,
                       &GetPlayerControllerFromNetId_Parms, NULL);

    pFnGetPlayerControllerFromNetId->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientSetOnlineStatus
// [0x010201C0]
// Parameters infos:

void APlayerController::ClientSetOnlineStatus() {
    static UFunction* pFnClientSetOnlineStatus = NULL;

    if (!pFnClientSetOnlineStatus)
        pFnClientSetOnlineStatus =
            (UFunction*)UObject::GObjObjects()->Data[11819];

    APlayerController_execClientSetOnlineStatus_Parms
        ClientSetOnlineStatus_Parms;

    this->ProcessEvent(pFnClientSetOnlineStatus, &ClientSetOnlineStatus_Parms,
                       NULL);
};

// Function Engine.PlayerController.SeamlessTravelFrom
// [0x00020002]
// Parameters infos:

void APlayerController::SeamlessTravelFrom() {
    static UFunction* pFnSeamlessTravelFrom = NULL;

    if (!pFnSeamlessTravelFrom)
        pFnSeamlessTravelFrom = (UFunction*)UObject::GObjObjects()->Data[11817];

    APlayerController_execSeamlessTravelFrom_Parms SeamlessTravelFrom_Parms;

    this->ProcessEvent(pFnSeamlessTravelFrom, &SeamlessTravelFrom_Parms, NULL);
};

// Function Engine.PlayerController.SeamlessTravelTo
// [0x00020000]
// Parameters infos:

void APlayerController::SeamlessTravelTo() {
    static UFunction* pFnSeamlessTravelTo = NULL;

    if (!pFnSeamlessTravelTo)
        pFnSeamlessTravelTo = (UFunction*)UObject::GObjObjects()->Data[11815];

    APlayerController_execSeamlessTravelTo_Parms SeamlessTravelTo_Parms;

    this->ProcessEvent(pFnSeamlessTravelTo, &SeamlessTravelTo_Parms, NULL);
};

// Function Engine.PlayerController.GetSeamlessTravelActorList
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventGetSeamlessTravelActorList() {
    static UFunction* pFnGetSeamlessTravelActorList = NULL;

    if (!pFnGetSeamlessTravelActorList)
        pFnGetSeamlessTravelActorList =
            (UFunction*)UObject::GObjObjects()->Data[11811];

    APlayerController_eventGetSeamlessTravelActorList_Parms
        GetSeamlessTravelActorList_Parms;

    this->ProcessEvent(pFnGetSeamlessTravelActorList,
                       &GetSeamlessTravelActorList_Parms, NULL);
};

// Function Engine.PlayerController.ForceDisconnect
// [0x00020000]
// Parameters infos:

void APlayerController::ForceDisconnect() {
    static UFunction* pFnForceDisconnect = NULL;

    if (!pFnForceDisconnect)
        pFnForceDisconnect = (UFunction*)UObject::GObjObjects()->Data[11810];

    APlayerController_execForceDisconnect_Parms ForceDisconnect_Parms;

    this->ProcessEvent(pFnForceDisconnect, &ForceDisconnect_Parms, NULL);
};

// Function Engine.PlayerController.ShouldReplicateVoicePacketTo
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::ShouldReplicateVoicePacketTo() {
    static UFunction* pFnShouldReplicateVoicePacketTo = NULL;

    if (!pFnShouldReplicateVoicePacketTo)
        pFnShouldReplicateVoicePacketTo =
            (UFunction*)UObject::GObjObjects()->Data[11807];

    APlayerController_execShouldReplicateVoicePacketTo_Parms
        ShouldReplicateVoicePacketTo_Parms;

    pFnShouldReplicateVoicePacketTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldReplicateVoicePacketTo,
                       &ShouldReplicateVoicePacketTo_Parms, NULL);

    pFnShouldReplicateVoicePacketTo->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ShouldReplicateVoicePacketFrom
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::ShouldReplicateVoicePacketFrom() {
    static UFunction* pFnShouldReplicateVoicePacketFrom = NULL;

    if (!pFnShouldReplicateVoicePacketFrom)
        pFnShouldReplicateVoicePacketFrom =
            (UFunction*)UObject::GObjObjects()->Data[11804];

    APlayerController_execShouldReplicateVoicePacketFrom_Parms
        ShouldReplicateVoicePacketFrom_Parms;

    pFnShouldReplicateVoicePacketFrom->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldReplicateVoicePacketFrom,
                       &ShouldReplicateVoicePacketFrom_Parms, NULL);

    pFnShouldReplicateVoicePacketFrom->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.IsPlayerMuted
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::IsPlayerMuted() {
    static UFunction* pFnIsPlayerMuted = NULL;

    if (!pFnIsPlayerMuted)
        pFnIsPlayerMuted = (UFunction*)UObject::GObjObjects()->Data[11801];

    APlayerController_execIsPlayerMuted_Parms IsPlayerMuted_Parms;

    pFnIsPlayerMuted->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayerMuted, &IsPlayerMuted_Parms, NULL);

    pFnIsPlayerMuted->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.GetUIController
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void APlayerController::GetUIController() {
    static UFunction* pFnGetUIController = NULL;

    if (!pFnGetUIController)
        pFnGetUIController = (UFunction*)UObject::GObjObjects()->Data[11797];

    APlayerController_execGetUIController_Parms GetUIController_Parms;

    this->ProcessEvent(pFnGetUIController, &GetUIController_Parms, NULL);
};

// Function Engine.PlayerController.SaveActorConfig
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SaveActorConfig() {
    static UFunction* pFnSaveActorConfig = NULL;

    if (!pFnSaveActorConfig)
        pFnSaveActorConfig = (UFunction*)UObject::GObjObjects()->Data[11794];

    APlayerController_execSaveActorConfig_Parms SaveActorConfig_Parms;

    this->ProcessEvent(pFnSaveActorConfig, &SaveActorConfig_Parms, NULL);
};

// Function Engine.PlayerController.SaveClassConfig
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SaveClassConfig() {
    static UFunction* pFnSaveClassConfig = NULL;

    if (!pFnSaveClassConfig)
        pFnSaveClassConfig = (UFunction*)UObject::GObjObjects()->Data[11791];

    APlayerController_execSaveClassConfig_Parms SaveClassConfig_Parms;

    this->ProcessEvent(pFnSaveClassConfig, &SaveClassConfig_Parms, NULL);
};

// Function Engine.PlayerController.ClientWaitForLevelsVisible
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientWaitForLevelsVisible() {
    static UFunction* pFnClientWaitForLevelsVisible = NULL;

    if (!pFnClientWaitForLevelsVisible)
        pFnClientWaitForLevelsVisible =
            (UFunction*)UObject::GObjObjects()->Data[11789];

    APlayerController_execClientWaitForLevelsVisible_Parms
        ClientWaitForLevelsVisible_Parms;

    this->ProcessEvent(pFnClientWaitForLevelsVisible,
                       &ClientWaitForLevelsVisible_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetBlockOnAsyncLoading
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientSetBlockOnAsyncLoading() {
    static UFunction* pFnClientSetBlockOnAsyncLoading = NULL;

    if (!pFnClientSetBlockOnAsyncLoading)
        pFnClientSetBlockOnAsyncLoading =
            (UFunction*)UObject::GObjObjects()->Data[11788];

    APlayerController_eventClientSetBlockOnAsyncLoading_Parms
        ClientSetBlockOnAsyncLoading_Parms;

    this->ProcessEvent(pFnClientSetBlockOnAsyncLoading,
                       &ClientSetBlockOnAsyncLoading_Parms, NULL);
};

// Function Engine.PlayerController.ClientFlushLevelStreaming
// [0x01020DC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventClientFlushLevelStreaming() {
    static UFunction* pFnClientFlushLevelStreaming = NULL;

    if (!pFnClientFlushLevelStreaming)
        pFnClientFlushLevelStreaming =
            (UFunction*)UObject::GObjObjects()->Data[11787];

    APlayerController_eventClientFlushLevelStreaming_Parms
        ClientFlushLevelStreaming_Parms;

    pFnClientFlushLevelStreaming->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClientFlushLevelStreaming,
                       &ClientFlushLevelStreaming_Parms, NULL);

    pFnClientFlushLevelStreaming->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientCancelPendingMapChange
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientCancelPendingMapChange() {
    static UFunction* pFnClientCancelPendingMapChange = NULL;

    if (!pFnClientCancelPendingMapChange)
        pFnClientCancelPendingMapChange =
            (UFunction*)UObject::GObjObjects()->Data[11786];

    APlayerController_eventClientCancelPendingMapChange_Parms
        ClientCancelPendingMapChange_Parms;

    this->ProcessEvent(pFnClientCancelPendingMapChange,
                       &ClientCancelPendingMapChange_Parms, NULL);
};

// Function Engine.PlayerController.ClientCommitMapChange
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientCommitMapChange() {
    static UFunction* pFnClientCommitMapChange = NULL;

    if (!pFnClientCommitMapChange)
        pFnClientCommitMapChange =
            (UFunction*)UObject::GObjObjects()->Data[11785];

    APlayerController_eventClientCommitMapChange_Parms
        ClientCommitMapChange_Parms;

    this->ProcessEvent(pFnClientCommitMapChange, &ClientCommitMapChange_Parms,
                       NULL);
};

// Function Engine.PlayerController.DelayedPrepareMapChange
// [0x00020002]
// Parameters infos:

void APlayerController::DelayedPrepareMapChange() {
    static UFunction* pFnDelayedPrepareMapChange = NULL;

    if (!pFnDelayedPrepareMapChange)
        pFnDelayedPrepareMapChange =
            (UFunction*)UObject::GObjObjects()->Data[11784];

    APlayerController_execDelayedPrepareMapChange_Parms
        DelayedPrepareMapChange_Parms;

    this->ProcessEvent(pFnDelayedPrepareMapChange,
                       &DelayedPrepareMapChange_Parms, NULL);
};

// Function Engine.PlayerController.ClientPrepareMapChange
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientPrepareMapChange() {
    static UFunction* pFnClientPrepareMapChange = NULL;

    if (!pFnClientPrepareMapChange)
        pFnClientPrepareMapChange =
            (UFunction*)UObject::GObjObjects()->Data[11779];

    APlayerController_eventClientPrepareMapChange_Parms
        ClientPrepareMapChange_Parms;

    this->ProcessEvent(pFnClientPrepareMapChange, &ClientPrepareMapChange_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerUpdateLevelVisibility
// [0x00220CC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventServerUpdateLevelVisibility() {
    static UFunction* pFnServerUpdateLevelVisibility = NULL;

    if (!pFnServerUpdateLevelVisibility)
        pFnServerUpdateLevelVisibility =
            (UFunction*)UObject::GObjObjects()->Data[11776];

    APlayerController_eventServerUpdateLevelVisibility_Parms
        ServerUpdateLevelVisibility_Parms;

    pFnServerUpdateLevelVisibility->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerUpdateLevelVisibility,
                       &ServerUpdateLevelVisibility_Parms, NULL);

    pFnServerUpdateLevelVisibility->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientUpdateLevelStreamingStatus
// [0x010205C0] ( FUNC_Native )
// Parameters infos:

void APlayerController::ClientUpdateLevelStreamingStatus() {
    static UFunction* pFnClientUpdateLevelStreamingStatus = NULL;

    if (!pFnClientUpdateLevelStreamingStatus)
        pFnClientUpdateLevelStreamingStatus =
            (UFunction*)UObject::GObjObjects()->Data[11771];

    APlayerController_execClientUpdateLevelStreamingStatus_Parms
        ClientUpdateLevelStreamingStatus_Parms;

    pFnClientUpdateLevelStreamingStatus->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClientUpdateLevelStreamingStatus,
                       &ClientUpdateLevelStreamingStatus_Parms, NULL);

    pFnClientUpdateLevelStreamingStatus->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.LevelStreamingStatusChanged
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APlayerController::eventLevelStreamingStatusChanged() {
    static UFunction* pFnLevelStreamingStatusChanged = NULL;

    if (!pFnLevelStreamingStatusChanged)
        pFnLevelStreamingStatusChanged =
            (UFunction*)UObject::GObjObjects()->Data[11766];

    APlayerController_eventLevelStreamingStatusChanged_Parms
        LevelStreamingStatusChanged_Parms;

    this->ProcessEvent(pFnLevelStreamingStatusChanged,
                       &LevelStreamingStatusChanged_Parms, NULL);
};

// Function Engine.PlayerController.ClientForceGarbageCollection
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientForceGarbageCollection() {
    static UFunction* pFnClientForceGarbageCollection = NULL;

    if (!pFnClientForceGarbageCollection)
        pFnClientForceGarbageCollection =
            (UFunction*)UObject::GObjObjects()->Data[11765];

    APlayerController_eventClientForceGarbageCollection_Parms
        ClientForceGarbageCollection_Parms;

    this->ProcessEvent(pFnClientForceGarbageCollection,
                       &ClientForceGarbageCollection_Parms, NULL);
};

// Function Engine.PlayerController.OnConsoleCommand
// [0x00020002]
// Parameters infos:

void APlayerController::OnConsoleCommand() {
    static UFunction* pFnOnConsoleCommand = NULL;

    if (!pFnOnConsoleCommand)
        pFnOnConsoleCommand = (UFunction*)UObject::GObjObjects()->Data[11762];

    APlayerController_execOnConsoleCommand_Parms OnConsoleCommand_Parms;

    this->ProcessEvent(pFnOnConsoleCommand, &OnConsoleCommand_Parms, NULL);
};

// Function Engine.PlayerController.ResetPlayerMovementInput
// [0x00020002]
// Parameters infos:

void APlayerController::ResetPlayerMovementInput() {
    static UFunction* pFnResetPlayerMovementInput = NULL;

    if (!pFnResetPlayerMovementInput)
        pFnResetPlayerMovementInput =
            (UFunction*)UObject::GObjObjects()->Data[11761];

    APlayerController_execResetPlayerMovementInput_Parms
        ResetPlayerMovementInput_Parms;

    this->ProcessEvent(pFnResetPlayerMovementInput,
                       &ResetPlayerMovementInput_Parms, NULL);
};

// Function Engine.PlayerController.IsLookInputIgnored
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventIsLookInputIgnored() {
    static UFunction* pFnIsLookInputIgnored = NULL;

    if (!pFnIsLookInputIgnored)
        pFnIsLookInputIgnored = (UFunction*)UObject::GObjObjects()->Data[11759];

    APlayerController_eventIsLookInputIgnored_Parms IsLookInputIgnored_Parms;

    this->ProcessEvent(pFnIsLookInputIgnored, &IsLookInputIgnored_Parms, NULL);
};

// Function Engine.PlayerController.IgnoreLookInput
// [0x00020002]
// Parameters infos:

void APlayerController::IgnoreLookInput() {
    static UFunction* pFnIgnoreLookInput = NULL;

    if (!pFnIgnoreLookInput)
        pFnIgnoreLookInput = (UFunction*)UObject::GObjObjects()->Data[11757];

    APlayerController_execIgnoreLookInput_Parms IgnoreLookInput_Parms;

    this->ProcessEvent(pFnIgnoreLookInput, &IgnoreLookInput_Parms, NULL);
};

// Function Engine.PlayerController.IsMoveInputIgnored
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventIsMoveInputIgnored() {
    static UFunction* pFnIsMoveInputIgnored = NULL;

    if (!pFnIsMoveInputIgnored)
        pFnIsMoveInputIgnored = (UFunction*)UObject::GObjObjects()->Data[11755];

    APlayerController_eventIsMoveInputIgnored_Parms IsMoveInputIgnored_Parms;

    this->ProcessEvent(pFnIsMoveInputIgnored, &IsMoveInputIgnored_Parms, NULL);
};

// Function Engine.PlayerController.IgnoreMoveInput
// [0x00020002]
// Parameters infos:

void APlayerController::IgnoreMoveInput() {
    static UFunction* pFnIgnoreMoveInput = NULL;

    if (!pFnIgnoreMoveInput)
        pFnIgnoreMoveInput = (UFunction*)UObject::GObjObjects()->Data[11753];

    APlayerController_execIgnoreMoveInput_Parms IgnoreMoveInput_Parms;

    this->ProcessEvent(pFnIgnoreMoveInput, &IgnoreMoveInput_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetCinematicMode
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientSetCinematicMode() {
    static UFunction* pFnClientSetCinematicMode = NULL;

    if (!pFnClientSetCinematicMode)
        pFnClientSetCinematicMode =
            (UFunction*)UObject::GObjObjects()->Data[11748];

    APlayerController_execClientSetCinematicMode_Parms
        ClientSetCinematicMode_Parms;

    this->ProcessEvent(pFnClientSetCinematicMode, &ClientSetCinematicMode_Parms,
                       NULL);
};

// Function Engine.PlayerController.SetCinematicMode
// [0x00020002]
// Parameters infos:

void APlayerController::SetCinematicMode() {
    static UFunction* pFnSetCinematicMode = NULL;

    if (!pFnSetCinematicMode)
        pFnSetCinematicMode = (UFunction*)UObject::GObjObjects()->Data[11739];

    APlayerController_execSetCinematicMode_Parms SetCinematicMode_Parms;

    this->ProcessEvent(pFnSetCinematicMode, &SetCinematicMode_Parms, NULL);
};

// Function Engine.PlayerController.OnToggleCinematicMode
// [0x00020002]
// Parameters infos:

void APlayerController::OnToggleCinematicMode() {
    static UFunction* pFnOnToggleCinematicMode = NULL;

    if (!pFnOnToggleCinematicMode)
        pFnOnToggleCinematicMode =
            (UFunction*)UObject::GObjObjects()->Data[11736];

    APlayerController_execOnToggleCinematicMode_Parms
        OnToggleCinematicMode_Parms;

    this->ProcessEvent(pFnOnToggleCinematicMode, &OnToggleCinematicMode_Parms,
                       NULL);
};

// Function Engine.PlayerController.IsForceFeedbackAllowed
// [0x00020102]
// Parameters infos:

void APlayerController::IsForceFeedbackAllowed() {
    static UFunction* pFnIsForceFeedbackAllowed = NULL;

    if (!pFnIsForceFeedbackAllowed)
        pFnIsForceFeedbackAllowed =
            (UFunction*)UObject::GObjObjects()->Data[11734];

    APlayerController_execIsForceFeedbackAllowed_Parms
        IsForceFeedbackAllowed_Parms;

    this->ProcessEvent(pFnIsForceFeedbackAllowed, &IsForceFeedbackAllowed_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientStopForceFeedbackWaveform
// [0x010249C3] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APlayerController::eventClientStopForceFeedbackWaveform() {
    static UFunction* pFnClientStopForceFeedbackWaveform = NULL;

    if (!pFnClientStopForceFeedbackWaveform)
        pFnClientStopForceFeedbackWaveform =
            (UFunction*)UObject::GObjObjects()->Data[11732];

    APlayerController_eventClientStopForceFeedbackWaveform_Parms
        ClientStopForceFeedbackWaveform_Parms;

    this->ProcessEvent(pFnClientStopForceFeedbackWaveform,
                       &ClientStopForceFeedbackWaveform_Parms, NULL);
};

// Function Engine.PlayerController.ClientPlayForceFeedbackWaveform
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientPlayForceFeedbackWaveform() {
    static UFunction* pFnClientPlayForceFeedbackWaveform = NULL;

    if (!pFnClientPlayForceFeedbackWaveform)
        pFnClientPlayForceFeedbackWaveform =
            (UFunction*)UObject::GObjObjects()->Data[11729];

    APlayerController_eventClientPlayForceFeedbackWaveform_Parms
        ClientPlayForceFeedbackWaveform_Parms;

    this->ProcessEvent(pFnClientPlayForceFeedbackWaveform,
                       &ClientPlayForceFeedbackWaveform_Parms, NULL);
};

// Function Engine.PlayerController.PlayRumble
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPlayRumble() {
    static UFunction* pFnPlayRumble = NULL;

    if (!pFnPlayRumble)
        pFnPlayRumble = (UFunction*)UObject::GObjObjects()->Data[11727];

    APlayerController_eventPlayRumble_Parms PlayRumble_Parms;

    this->ProcessEvent(pFnPlayRumble, &PlayRumble_Parms, NULL);
};

// Function Engine.PlayerController.OnForceFeedback
// [0x00020002]
// Parameters infos:

void APlayerController::OnForceFeedback() {
    static UFunction* pFnOnForceFeedback = NULL;

    if (!pFnOnForceFeedback)
        pFnOnForceFeedback = (UFunction*)UObject::GObjObjects()->Data[11725];

    APlayerController_execOnForceFeedback_Parms OnForceFeedback_Parms;

    this->ProcessEvent(pFnOnForceFeedback, &OnForceFeedback_Parms, NULL);
};

// Function Engine.PlayerController.NotifyTakeHit
// [0x00020002]
// Parameters infos:

void APlayerController::NotifyTakeHit() {
    static UFunction* pFnNotifyTakeHit = NULL;

    if (!pFnNotifyTakeHit)
        pFnNotifyTakeHit = (UFunction*)UObject::GObjObjects()->Data[11719];

    APlayerController_execNotifyTakeHit_Parms NotifyTakeHit_Parms;

    this->ProcessEvent(pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL);
};

// Function Engine.PlayerController.ShowGameState
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ShowGameState() {
    static UFunction* pFnShowGameState = NULL;

    if (!pFnShowGameState)
        pFnShowGameState = (UFunction*)UObject::GObjObjects()->Data[11718];

    APlayerController_execShowGameState_Parms ShowGameState_Parms;

    this->ProcessEvent(pFnShowGameState, &ShowGameState_Parms, NULL);
};

// Function Engine.PlayerController.ShowPlayerState
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ShowPlayerState() {
    static UFunction* pFnShowPlayerState = NULL;

    if (!pFnShowPlayerState)
        pFnShowPlayerState = (UFunction*)UObject::GObjObjects()->Data[11717];

    APlayerController_execShowPlayerState_Parms ShowPlayerState_Parms;

    this->ProcessEvent(pFnShowPlayerState, &ShowPlayerState_Parms, NULL);
};

// Function Engine.PlayerController.ServerRemoteEvent
// [0x00220042]
// Parameters infos:

void APlayerController::ServerRemoteEvent() {
    static UFunction* pFnServerRemoteEvent = NULL;

    if (!pFnServerRemoteEvent)
        pFnServerRemoteEvent = (UFunction*)UObject::GObjObjects()->Data[11709];

    APlayerController_execServerRemoteEvent_Parms ServerRemoteEvent_Parms;

    this->ProcessEvent(pFnServerRemoteEvent, &ServerRemoteEvent_Parms, NULL);
};

// Function Engine.PlayerController.RE
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::RE() {
    static UFunction* pFnRE = NULL;

    if (!pFnRE) pFnRE = (UFunction*)UObject::GObjObjects()->Data[11707];

    APlayerController_execRE_Parms RE_Parms;

    this->ProcessEvent(pFnRE, &RE_Parms, NULL);
};

// Function Engine.PlayerController.RemoteEvent
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::RemoteEvent() {
    static UFunction* pFnRemoteEvent = NULL;

    if (!pFnRemoteEvent)
        pFnRemoteEvent = (UFunction*)UObject::GObjObjects()->Data[11705];

    APlayerController_execRemoteEvent_Parms RemoteEvent_Parms;

    this->ProcessEvent(pFnRemoteEvent, &RemoteEvent_Parms, NULL);
};

// Function Engine.PlayerController.ListCE
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ListCE() {
    static UFunction* pFnListCE = NULL;

    if (!pFnListCE) pFnListCE = (UFunction*)UObject::GObjObjects()->Data[11704];

    APlayerController_execListCE_Parms ListCE_Parms;

    this->ProcessEvent(pFnListCE, &ListCE_Parms, NULL);
};

// Function Engine.PlayerController.ListConsoleEvents
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ListConsoleEvents() {
    static UFunction* pFnListConsoleEvents = NULL;

    if (!pFnListConsoleEvents)
        pFnListConsoleEvents = (UFunction*)UObject::GObjObjects()->Data[11698];

    APlayerController_execListConsoleEvents_Parms ListConsoleEvents_Parms;

    this->ProcessEvent(pFnListConsoleEvents, &ListConsoleEvents_Parms, NULL);
};

// Function Engine.PlayerController.CE
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::CE() {
    static UFunction* pFnCE = NULL;

    if (!pFnCE) pFnCE = (UFunction*)UObject::GObjObjects()->Data[11696];

    APlayerController_execCE_Parms CE_Parms;

    this->ProcessEvent(pFnCE, &CE_Parms, NULL);
};

// Function Engine.PlayerController.CauseEvent
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::CauseEvent() {
    static UFunction* pFnCauseEvent = NULL;

    if (!pFnCauseEvent)
        pFnCauseEvent = (UFunction*)UObject::GObjObjects()->Data[11694];

    APlayerController_execCauseEvent_Parms CauseEvent_Parms;

    this->ProcessEvent(pFnCauseEvent, &CauseEvent_Parms, NULL);
};

// Function Engine.PlayerController.ServerCauseEvent
// [0x00220042]
// Parameters infos:

void APlayerController::ServerCauseEvent() {
    static UFunction* pFnServerCauseEvent = NULL;

    if (!pFnServerCauseEvent)
        pFnServerCauseEvent = (UFunction*)UObject::GObjObjects()->Data[11686];

    APlayerController_execServerCauseEvent_Parms ServerCauseEvent_Parms;

    this->ProcessEvent(pFnServerCauseEvent, &ServerCauseEvent_Parms, NULL);
};

// Function Engine.PlayerController.OnToggleHUD
// [0x00020102]
// Parameters infos:

void APlayerController::OnToggleHUD() {
    static UFunction* pFnOnToggleHUD = NULL;

    if (!pFnOnToggleHUD)
        pFnOnToggleHUD = (UFunction*)UObject::GObjObjects()->Data[11684];

    APlayerController_execOnToggleHUD_Parms OnToggleHUD_Parms;

    this->ProcessEvent(pFnOnToggleHUD, &OnToggleHUD_Parms, NULL);
};

// Function Engine.PlayerController.OnSetCameraTarget
// [0x00020102]
// Parameters infos:

void APlayerController::OnSetCameraTarget() {
    static UFunction* pFnOnSetCameraTarget = NULL;

    if (!pFnOnSetCameraTarget)
        pFnOnSetCameraTarget = (UFunction*)UObject::GObjObjects()->Data[11681];

    APlayerController_execOnSetCameraTarget_Parms OnSetCameraTarget_Parms;

    this->ProcessEvent(pFnOnSetCameraTarget, &OnSetCameraTarget_Parms, NULL);
};

// Function Engine.PlayerController.ClientClearKismetText
// [0x010201C3] ( FUNC_Final )
// Parameters infos:

void APlayerController::ClientClearKismetText() {
    static UFunction* pFnClientClearKismetText = NULL;

    if (!pFnClientClearKismetText)
        pFnClientClearKismetText =
            (UFunction*)UObject::GObjObjects()->Data[11678];

    APlayerController_execClientClearKismetText_Parms
        ClientClearKismetText_Parms;

    this->ProcessEvent(pFnClientClearKismetText, &ClientClearKismetText_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientDrawKismetText
// [0x010201C3] ( FUNC_Final )
// Parameters infos:

void APlayerController::ClientDrawKismetText() {
    static UFunction* pFnClientDrawKismetText = NULL;

    if (!pFnClientDrawKismetText)
        pFnClientDrawKismetText =
            (UFunction*)UObject::GObjObjects()->Data[11675];

    APlayerController_execClientDrawKismetText_Parms ClientDrawKismetText_Parms;

    this->ProcessEvent(pFnClientDrawKismetText, &ClientDrawKismetText_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnDrawText
// [0x00020002]
// Parameters infos:

void APlayerController::OnDrawText() {
    static UFunction* pFnOnDrawText = NULL;

    if (!pFnOnDrawText)
        pFnOnDrawText = (UFunction*)UObject::GObjObjects()->Data[11605];

    APlayerController_execOnDrawText_Parms OnDrawText_Parms;

    this->ProcessEvent(pFnOnDrawText, &OnDrawText_Parms, NULL);
};

// Function Engine.PlayerController.DisplayDebug
// [0x00420102]
// Parameters infos:

void APlayerController::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[11601];

    APlayerController_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.PlayerController.ClientIgnoreLookInput
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientIgnoreLookInput() {
    static UFunction* pFnClientIgnoreLookInput = NULL;

    if (!pFnClientIgnoreLookInput)
        pFnClientIgnoreLookInput =
            (UFunction*)UObject::GObjObjects()->Data[11599];

    APlayerController_execClientIgnoreLookInput_Parms
        ClientIgnoreLookInput_Parms;

    this->ProcessEvent(pFnClientIgnoreLookInput, &ClientIgnoreLookInput_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientIgnoreMoveInput
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientIgnoreMoveInput() {
    static UFunction* pFnClientIgnoreMoveInput = NULL;

    if (!pFnClientIgnoreMoveInput)
        pFnClientIgnoreMoveInput =
            (UFunction*)UObject::GObjObjects()->Data[11597];

    APlayerController_execClientIgnoreMoveInput_Parms
        ClientIgnoreMoveInput_Parms;

    this->ProcessEvent(pFnClientIgnoreMoveInput, &ClientIgnoreMoveInput_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnToggleInput
// [0x00020002]
// Parameters infos:

void APlayerController::OnToggleInput() {
    static UFunction* pFnOnToggleInput = NULL;

    if (!pFnOnToggleInput)
        pFnOnToggleInput = (UFunction*)UObject::GObjObjects()->Data[11594];

    APlayerController_execOnToggleInput_Parms OnToggleInput_Parms;

    this->ProcessEvent(pFnOnToggleInput, &OnToggleInput_Parms, NULL);
};

// Function Engine.PlayerController.AdjustHUDRenderSize
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventAdjustHUDRenderSize() {
    static UFunction* pFnAdjustHUDRenderSize = NULL;

    if (!pFnAdjustHUDRenderSize)
        pFnAdjustHUDRenderSize =
            (UFunction*)UObject::GObjObjects()->Data[11586];

    APlayerController_eventAdjustHUDRenderSize_Parms AdjustHUDRenderSize_Parms;

    this->ProcessEvent(pFnAdjustHUDRenderSize, &AdjustHUDRenderSize_Parms,
                       NULL);
};

// Function Engine.PlayerController.DrawHUD
// [0x00020002]
// Parameters infos:

void APlayerController::DrawHUD() {
    static UFunction* pFnDrawHUD = NULL;

    if (!pFnDrawHUD)
        pFnDrawHUD = (UFunction*)UObject::GObjObjects()->Data[11584];

    APlayerController_execDrawHUD_Parms DrawHUD_Parms;

    this->ProcessEvent(pFnDrawHUD, &DrawHUD_Parms, NULL);
};

// Function Engine.PlayerController.CanRestartPlayer
// [0x00020002]
// Parameters infos:

void APlayerController::CanRestartPlayer() {
    static UFunction* pFnCanRestartPlayer = NULL;

    if (!pFnCanRestartPlayer)
        pFnCanRestartPlayer = (UFunction*)UObject::GObjObjects()->Data[11582];

    APlayerController_execCanRestartPlayer_Parms CanRestartPlayer_Parms;

    this->ProcessEvent(pFnCanRestartPlayer, &CanRestartPlayer_Parms, NULL);
};

// Function Engine.PlayerController.ServerViewSelf
// [0x00224042]
// Parameters infos:

void APlayerController::ServerViewSelf() {
    static UFunction* pFnServerViewSelf = NULL;

    if (!pFnServerViewSelf)
        pFnServerViewSelf = (UFunction*)UObject::GObjObjects()->Data[11355];

    APlayerController_execServerViewSelf_Parms ServerViewSelf_Parms;

    this->ProcessEvent(pFnServerViewSelf, &ServerViewSelf_Parms, NULL);
};

// Function Engine.PlayerController.ViewAPlayer
// [0x00020002]
// Parameters infos:

void APlayerController::ViewAPlayer() {
    static UFunction* pFnViewAPlayer = NULL;

    if (!pFnViewAPlayer)
        pFnViewAPlayer = (UFunction*)UObject::GObjObjects()->Data[11352];

    APlayerController_execViewAPlayer_Parms ViewAPlayer_Parms;

    this->ProcessEvent(pFnViewAPlayer, &ViewAPlayer_Parms, NULL);
};

// Function Engine.PlayerController.GetNextViewablePlayer
// [0x00020002]
// Parameters infos:

void APlayerController::GetNextViewablePlayer() {
    static UFunction* pFnGetNextViewablePlayer = NULL;

    if (!pFnGetNextViewablePlayer)
        pFnGetNextViewablePlayer =
            (UFunction*)UObject::GObjObjects()->Data[11345];

    APlayerController_execGetNextViewablePlayer_Parms
        GetNextViewablePlayer_Parms;

    this->ProcessEvent(pFnGetNextViewablePlayer, &GetNextViewablePlayer_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerViewPrevPlayer
// [0x00220042]
// Parameters infos:

void APlayerController::ServerViewPrevPlayer() {
    static UFunction* pFnServerViewPrevPlayer = NULL;

    if (!pFnServerViewPrevPlayer)
        pFnServerViewPrevPlayer =
            (UFunction*)UObject::GObjObjects()->Data[11344];

    APlayerController_execServerViewPrevPlayer_Parms ServerViewPrevPlayer_Parms;

    this->ProcessEvent(pFnServerViewPrevPlayer, &ServerViewPrevPlayer_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerViewNextPlayer
// [0x00220042]
// Parameters infos:

void APlayerController::ServerViewNextPlayer() {
    static UFunction* pFnServerViewNextPlayer = NULL;

    if (!pFnServerViewNextPlayer)
        pFnServerViewNextPlayer =
            (UFunction*)UObject::GObjObjects()->Data[11343];

    APlayerController_execServerViewNextPlayer_Parms ServerViewNextPlayer_Parms;

    this->ProcessEvent(pFnServerViewNextPlayer, &ServerViewNextPlayer_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerSetSpectatorLocation
// [0x00220042]
// Parameters infos:

void APlayerController::ServerSetSpectatorLocation() {
    static UFunction* pFnServerSetSpectatorLocation = NULL;

    if (!pFnServerSetSpectatorLocation)
        pFnServerSetSpectatorLocation =
            (UFunction*)UObject::GObjObjects()->Data[11314];

    APlayerController_execServerSetSpectatorLocation_Parms
        ServerSetSpectatorLocation_Parms;

    this->ProcessEvent(pFnServerSetSpectatorLocation,
                       &ServerSetSpectatorLocation_Parms, NULL);
};

// Function Engine.PlayerController.IsSpectating
// [0x00020002]
// Parameters infos:

void APlayerController::IsSpectating() {
    static UFunction* pFnIsSpectating = NULL;

    if (!pFnIsSpectating)
        pFnIsSpectating = (UFunction*)UObject::GObjObjects()->Data[11312];

    APlayerController_execIsSpectating_Parms IsSpectating_Parms;

    this->ProcessEvent(pFnIsSpectating, &IsSpectating_Parms, NULL);
};

// Function Engine.PlayerController.AdjustPlayerWalkingMoveAccel
// [0x00420000]
// Parameters infos:

void APlayerController::AdjustPlayerWalkingMoveAccel() {
    static UFunction* pFnAdjustPlayerWalkingMoveAccel = NULL;

    if (!pFnAdjustPlayerWalkingMoveAccel)
        pFnAdjustPlayerWalkingMoveAccel =
            (UFunction*)UObject::GObjObjects()->Data[11162];

    APlayerController_execAdjustPlayerWalkingMoveAccel_Parms
        AdjustPlayerWalkingMoveAccel_Parms;

    this->ProcessEvent(pFnAdjustPlayerWalkingMoveAccel,
                       &AdjustPlayerWalkingMoveAccel_Parms, NULL);
};

// Function Engine.PlayerController.CheckJumpOrDuck
// [0x00020002]
// Parameters infos:

void APlayerController::CheckJumpOrDuck() {
    static UFunction* pFnCheckJumpOrDuck = NULL;

    if (!pFnCheckJumpOrDuck)
        pFnCheckJumpOrDuck = (UFunction*)UObject::GObjObjects()->Data[11161];

    APlayerController_execCheckJumpOrDuck_Parms CheckJumpOrDuck_Parms;

    this->ProcessEvent(pFnCheckJumpOrDuck, &CheckJumpOrDuck_Parms, NULL);
};

// Function Engine.PlayerController.LimitViewRotation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventLimitViewRotation() {
    static UFunction* pFnLimitViewRotation = NULL;

    if (!pFnLimitViewRotation)
        pFnLimitViewRotation = (UFunction*)UObject::GObjObjects()->Data[11156];

    APlayerController_eventLimitViewRotation_Parms LimitViewRotation_Parms;

    this->ProcessEvent(pFnLimitViewRotation, &LimitViewRotation_Parms, NULL);
};

// Function Engine.PlayerController.ProcessViewRotation
// [0x00420002]
// Parameters infos:

void APlayerController::ProcessViewRotation() {
    static UFunction* pFnProcessViewRotation = NULL;

    if (!pFnProcessViewRotation)
        pFnProcessViewRotation =
            (UFunction*)UObject::GObjObjects()->Data[11152];

    APlayerController_execProcessViewRotation_Parms ProcessViewRotation_Parms;

    this->ProcessEvent(pFnProcessViewRotation, &ProcessViewRotation_Parms,
                       NULL);
};

// Function Engine.PlayerController.ModifyUpdateRotation
// [0x00420000]
// Parameters infos:

void APlayerController::ModifyUpdateRotation() {
    static UFunction* pFnModifyUpdateRotation = NULL;

    if (!pFnModifyUpdateRotation)
        pFnModifyUpdateRotation =
            (UFunction*)UObject::GObjObjects()->Data[11149];

    APlayerController_execModifyUpdateRotation_Parms ModifyUpdateRotation_Parms;

    this->ProcessEvent(pFnModifyUpdateRotation, &ModifyUpdateRotation_Parms,
                       NULL);
};

// Function Engine.PlayerController.UpdateRotation
// [0x00820002]
// Parameters infos:

void APlayerController::UpdateRotation() {
    static UFunction* pFnUpdateRotation = NULL;

    if (!pFnUpdateRotation)
        pFnUpdateRotation = (UFunction*)UObject::GObjObjects()->Data[11144];

    APlayerController_execUpdateRotation_Parms UpdateRotation_Parms;

    this->ProcessEvent(pFnUpdateRotation, &UpdateRotation_Parms, NULL);
};

// Function Engine.PlayerController.ViewShake
// [0x00020000]
// Parameters infos:

void APlayerController::ViewShake() {
    static UFunction* pFnViewShake = NULL;

    if (!pFnViewShake)
        pFnViewShake = (UFunction*)UObject::GObjObjects()->Data[11142];

    APlayerController_execViewShake_Parms ViewShake_Parms;

    this->ProcessEvent(pFnViewShake, &ViewShake_Parms, NULL);
};

// Function Engine.PlayerController.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventGetPlayerViewPoint() {
    static UFunction* pFnGetPlayerViewPoint = NULL;

    if (!pFnGetPlayerViewPoint)
        pFnGetPlayerViewPoint = (UFunction*)UObject::GObjObjects()->Data[11138];

    APlayerController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

    this->ProcessEvent(pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL);
};

// Function Engine.PlayerController.SpawnPlayerCamera
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventSpawnPlayerCamera() {
    static UFunction* pFnSpawnPlayerCamera = NULL;

    if (!pFnSpawnPlayerCamera)
        pFnSpawnPlayerCamera = (UFunction*)UObject::GObjObjects()->Data[11137];

    APlayerController_eventSpawnPlayerCamera_Parms SpawnPlayerCamera_Parms;

    this->ProcessEvent(pFnSpawnPlayerCamera, &SpawnPlayerCamera_Parms, NULL);
};

// Function Engine.PlayerController.ServerVerifyViewTarget
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerVerifyViewTarget() {
    static UFunction* pFnServerVerifyViewTarget = NULL;

    if (!pFnServerVerifyViewTarget)
        pFnServerVerifyViewTarget =
            (UFunction*)UObject::GObjObjects()->Data[11135];

    APlayerController_execServerVerifyViewTarget_Parms
        ServerVerifyViewTarget_Parms;

    this->ProcessEvent(pFnServerVerifyViewTarget, &ServerVerifyViewTarget_Parms,
                       NULL);
};

// Function Engine.PlayerController.GetViewTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::GetViewTarget() {
    static UFunction* pFnGetViewTarget = NULL;

    if (!pFnGetViewTarget)
        pFnGetViewTarget = (UFunction*)UObject::GObjObjects()->Data[6298];

    APlayerController_execGetViewTarget_Parms GetViewTarget_Parms;

    pFnGetViewTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetViewTarget, &GetViewTarget_Parms, NULL);

    pFnGetViewTarget->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientSetViewTarget
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientSetViewTarget() {
    static UFunction* pFnClientSetViewTarget = NULL;

    if (!pFnClientSetViewTarget)
        pFnClientSetViewTarget =
            (UFunction*)UObject::GObjObjects()->Data[11132];

    APlayerController_eventClientSetViewTarget_Parms ClientSetViewTarget_Parms;

    this->ProcessEvent(pFnClientSetViewTarget, &ClientSetViewTarget_Parms,
                       NULL);
};

// Function Engine.PlayerController.SetViewTargetWithBlend
// [0x00824003] ( FUNC_Final )
// Parameters infos:

void APlayerController::SetViewTargetWithBlend() {
    static UFunction* pFnSetViewTargetWithBlend = NULL;

    if (!pFnSetViewTargetWithBlend)
        pFnSetViewTargetWithBlend =
            (UFunction*)UObject::GObjObjects()->Data[11125];

    APlayerController_execSetViewTargetWithBlend_Parms
        SetViewTargetWithBlend_Parms;

    this->ProcessEvent(pFnSetViewTargetWithBlend, &SetViewTargetWithBlend_Parms,
                       NULL);
};

// Function Engine.PlayerController.SetViewTarget
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void APlayerController::SetViewTarget() {
    static UFunction* pFnSetViewTarget = NULL;

    if (!pFnSetViewTarget)
        pFnSetViewTarget = (UFunction*)UObject::GObjObjects()->Data[11122];

    APlayerController_execSetViewTarget_Parms SetViewTarget_Parms;

    pFnSetViewTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetViewTarget, &SetViewTarget_Parms, NULL);

    pFnSetViewTarget->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.IsLocalController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::IsLocalController() {
    static UFunction* pFnIsLocalController = NULL;

    if (!pFnIsLocalController)
        pFnIsLocalController = (UFunction*)UObject::GObjObjects()->Data[11120];

    APlayerController_execIsLocalController_Parms IsLocalController_Parms;

    pFnIsLocalController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsLocalController, &IsLocalController_Parms, NULL);

    pFnIsLocalController->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.IsLocalPlayerController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::IsLocalPlayerController() {
    static UFunction* pFnIsLocalPlayerController = NULL;

    if (!pFnIsLocalPlayerController)
        pFnIsLocalPlayerController =
            (UFunction*)UObject::GObjObjects()->Data[9065];

    APlayerController_execIsLocalPlayerController_Parms
        IsLocalPlayerController_Parms;

    pFnIsLocalPlayerController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsLocalPlayerController,
                       &IsLocalPlayerController_Parms, NULL);

    pFnIsLocalPlayerController->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.GetFOVAngle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventGetFOVAngle() {
    static UFunction* pFnGetFOVAngle = NULL;

    if (!pFnGetFOVAngle)
        pFnGetFOVAngle = (UFunction*)UObject::GObjObjects()->Data[6296];

    APlayerController_eventGetFOVAngle_Parms GetFOVAngle_Parms;

    this->ProcessEvent(pFnGetFOVAngle, &GetFOVAngle_Parms, NULL);
};

// Function Engine.PlayerController.AdjustFOV
// [0x00020002]
// Parameters infos:

void APlayerController::AdjustFOV() {
    static UFunction* pFnAdjustFOV = NULL;

    if (!pFnAdjustFOV)
        pFnAdjustFOV = (UFunction*)UObject::GObjObjects()->Data[11118];

    APlayerController_execAdjustFOV_Parms AdjustFOV_Parms;

    this->ProcessEvent(pFnAdjustFOV, &AdjustFOV_Parms, NULL);
};

// Function Engine.PlayerController.NotifyLanded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventNotifyLanded() {
    static UFunction* pFnNotifyLanded = NULL;

    if (!pFnNotifyLanded)
        pFnNotifyLanded = (UFunction*)UObject::GObjObjects()->Data[11114];

    APlayerController_eventNotifyLanded_Parms NotifyLanded_Parms;

    this->ProcessEvent(pFnNotifyLanded, &NotifyLanded_Parms, NULL);
};

// Function Engine.PlayerController.AimHelpDot
// [0x00020002]
// Parameters infos:

void APlayerController::AimHelpDot() {
    static UFunction* pFnAimHelpDot = NULL;

    if (!pFnAimHelpDot)
        pFnAimHelpDot = (UFunction*)UObject::GObjObjects()->Data[11111];

    APlayerController_execAimHelpDot_Parms AimHelpDot_Parms;

    this->ProcessEvent(pFnAimHelpDot, &AimHelpDot_Parms, NULL);
};

// Function Engine.PlayerController.GetAdjustedAimFor
// [0x00820002]
// Parameters infos:

void APlayerController::GetAdjustedAimFor() {
    static UFunction* pFnGetAdjustedAimFor = NULL;

    if (!pFnGetAdjustedAimFor)
        pFnGetAdjustedAimFor = (UFunction*)UObject::GObjObjects()->Data[11093];

    APlayerController_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;

    this->ProcessEvent(pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL);
};

// Function Engine.PlayerController.CameraLookAtFinished
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventCameraLookAtFinished() {
    static UFunction* pFnCameraLookAtFinished = NULL;

    if (!pFnCameraLookAtFinished)
        pFnCameraLookAtFinished =
            (UFunction*)UObject::GObjObjects()->Data[11091];

    APlayerController_eventCameraLookAtFinished_Parms
        CameraLookAtFinished_Parms;

    this->ProcessEvent(pFnCameraLookAtFinished, &CameraLookAtFinished_Parms,
                       NULL);
};

// Function Engine.PlayerController.AimingHelp
// [0x00020002]
// Parameters infos:

void APlayerController::AimingHelp() {
    static UFunction* pFnAimingHelp = NULL;

    if (!pFnAimingHelp)
        pFnAimingHelp = (UFunction*)UObject::GObjObjects()->Data[11088];

    APlayerController_execAimingHelp_Parms AimingHelp_Parms;

    this->ProcessEvent(pFnAimingHelp, &AimingHelp_Parms, NULL);
};

// Function Engine.PlayerController.PlayerMove
// [0x00020000]
// Parameters infos:

void APlayerController::PlayerMove() {
    static UFunction* pFnPlayerMove = NULL;

    if (!pFnPlayerMove)
        pFnPlayerMove = (UFunction*)UObject::GObjObjects()->Data[11086];

    APlayerController_execPlayerMove_Parms PlayerMove_Parms;

    this->ProcessEvent(pFnPlayerMove, &PlayerMove_Parms, NULL);
};

// Function Engine.PlayerController.PlayerTick
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPlayerTick() {
    static UFunction* pFnPlayerTick = NULL;

    if (!pFnPlayerTick)
        pFnPlayerTick = (UFunction*)UObject::GObjObjects()->Data[11084];

    APlayerController_eventPlayerTick_Parms PlayerTick_Parms;

    this->ProcessEvent(pFnPlayerTick, &PlayerTick_Parms, NULL);
};

// Function Engine.PlayerController.NotifyChangedWeapon
// [0x00020000]
// Parameters infos:

void APlayerController::NotifyChangedWeapon() {
    static UFunction* pFnNotifyChangedWeapon = NULL;

    if (!pFnNotifyChangedWeapon)
        pFnNotifyChangedWeapon =
            (UFunction*)UObject::GObjObjects()->Data[11081];

    APlayerController_execNotifyChangedWeapon_Parms NotifyChangedWeapon_Parms;

    this->ProcessEvent(pFnNotifyChangedWeapon, &NotifyChangedWeapon_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientGameEnded
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientGameEnded() {
    static UFunction* pFnClientGameEnded = NULL;

    if (!pFnClientGameEnded)
        pFnClientGameEnded = (UFunction*)UObject::GObjObjects()->Data[11078];

    APlayerController_execClientGameEnded_Parms ClientGameEnded_Parms;

    this->ProcessEvent(pFnClientGameEnded, &ClientGameEnded_Parms, NULL);
};

// Function Engine.PlayerController.GameHasEnded
// [0x00024002]
// Parameters infos:

void APlayerController::GameHasEnded() {
    static UFunction* pFnGameHasEnded = NULL;

    if (!pFnGameHasEnded)
        pFnGameHasEnded = (UFunction*)UObject::GObjObjects()->Data[11075];

    APlayerController_execGameHasEnded_Parms GameHasEnded_Parms;

    this->ProcessEvent(pFnGameHasEnded, &GameHasEnded_Parms, NULL);
};

// Function Engine.PlayerController.ClientRestart
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientRestart() {
    static UFunction* pFnClientRestart = NULL;

    if (!pFnClientRestart)
        pFnClientRestart = (UFunction*)UObject::GObjObjects()->Data[11073];

    APlayerController_execClientRestart_Parms ClientRestart_Parms;

    this->ProcessEvent(pFnClientRestart, &ClientRestart_Parms, NULL);
};

// Function Engine.PlayerController.EnterStartState
// [0x00020002]
// Parameters infos:

void APlayerController::EnterStartState() {
    static UFunction* pFnEnterStartState = NULL;

    if (!pFnEnterStartState)
        pFnEnterStartState = (UFunction*)UObject::GObjObjects()->Data[11071];

    APlayerController_execEnterStartState_Parms EnterStartState_Parms;

    this->ProcessEvent(pFnEnterStartState, &EnterStartState_Parms, NULL);
};

// Function Engine.PlayerController.ForceSingleNetUpdateFor
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::ForceSingleNetUpdateFor() {
    static UFunction* pFnForceSingleNetUpdateFor = NULL;

    if (!pFnForceSingleNetUpdateFor)
        pFnForceSingleNetUpdateFor =
            (UFunction*)UObject::GObjObjects()->Data[11069];

    APlayerController_execForceSingleNetUpdateFor_Parms
        ForceSingleNetUpdateFor_Parms;

    pFnForceSingleNetUpdateFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceSingleNetUpdateFor,
                       &ForceSingleNetUpdateFor_Parms, NULL);

    pFnForceSingleNetUpdateFor->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.HasClientLoadedCurrentWorld
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::HasClientLoadedCurrentWorld() {
    static UFunction* pFnHasClientLoadedCurrentWorld = NULL;

    if (!pFnHasClientLoadedCurrentWorld)
        pFnHasClientLoadedCurrentWorld =
            (UFunction*)UObject::GObjObjects()->Data[11067];

    APlayerController_execHasClientLoadedCurrentWorld_Parms
        HasClientLoadedCurrentWorld_Parms;

    pFnHasClientLoadedCurrentWorld->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasClientLoadedCurrentWorld,
                       &HasClientLoadedCurrentWorld_Parms, NULL);

    pFnHasClientLoadedCurrentWorld->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.NotifyLoadedWorld
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventNotifyLoadedWorld() {
    static UFunction* pFnNotifyLoadedWorld = NULL;

    if (!pFnNotifyLoadedWorld)
        pFnNotifyLoadedWorld = (UFunction*)UObject::GObjObjects()->Data[11062];

    APlayerController_eventNotifyLoadedWorld_Parms NotifyLoadedWorld_Parms;

    this->ProcessEvent(pFnNotifyLoadedWorld, &NotifyLoadedWorld_Parms, NULL);
};

// Function Engine.PlayerController.ServerNotifyLoadedWorld
// [0x00220CC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventServerNotifyLoadedWorld() {
    static UFunction* pFnServerNotifyLoadedWorld = NULL;

    if (!pFnServerNotifyLoadedWorld)
        pFnServerNotifyLoadedWorld =
            (UFunction*)UObject::GObjObjects()->Data[11060];

    APlayerController_eventServerNotifyLoadedWorld_Parms
        ServerNotifyLoadedWorld_Parms;

    pFnServerNotifyLoadedWorld->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerNotifyLoadedWorld,
                       &ServerNotifyLoadedWorld_Parms, NULL);

    pFnServerNotifyLoadedWorld->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.Restart
// [0x00020002]
// Parameters infos:

void APlayerController::Restart() {
    static UFunction* pFnRestart = NULL;

    if (!pFnRestart)
        pFnRestart = (UFunction*)UObject::GObjObjects()->Data[11058];

    APlayerController_execRestart_Parms Restart_Parms;

    this->ProcessEvent(pFnRestart, &Restart_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetProgressMessage
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientSetProgressMessage() {
    static UFunction* pFnClientSetProgressMessage = NULL;

    if (!pFnClientSetProgressMessage)
        pFnClientSetProgressMessage =
            (UFunction*)UObject::GObjObjects()->Data[11053];

    APlayerController_eventClientSetProgressMessage_Parms
        ClientSetProgressMessage_Parms;

    this->ProcessEvent(pFnClientSetProgressMessage,
                       &ClientSetProgressMessage_Parms, NULL);
};

// Function Engine.PlayerController.SwitchLevel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SwitchLevel() {
    static UFunction* pFnSwitchLevel = NULL;

    if (!pFnSwitchLevel)
        pFnSwitchLevel = (UFunction*)UObject::GObjObjects()->Data[11051];

    APlayerController_execSwitchLevel_Parms SwitchLevel_Parms;

    this->ProcessEvent(pFnSwitchLevel, &SwitchLevel_Parms, NULL);
};

// Function Engine.PlayerController.ServerChangeTeam
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerChangeTeam() {
    static UFunction* pFnServerChangeTeam = NULL;

    if (!pFnServerChangeTeam)
        pFnServerChangeTeam = (UFunction*)UObject::GObjObjects()->Data[11048];

    APlayerController_execServerChangeTeam_Parms ServerChangeTeam_Parms;

    this->ProcessEvent(pFnServerChangeTeam, &ServerChangeTeam_Parms, NULL);
};

// Function Engine.PlayerController.ChangeTeam
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ChangeTeam() {
    static UFunction* pFnChangeTeam = NULL;

    if (!pFnChangeTeam)
        pFnChangeTeam = (UFunction*)UObject::GObjObjects()->Data[11045];

    APlayerController_execChangeTeam_Parms ChangeTeam_Parms;

    this->ProcessEvent(pFnChangeTeam, &ChangeTeam_Parms, NULL);
};

// Function Engine.PlayerController.SwitchTeam
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SwitchTeam() {
    static UFunction* pFnSwitchTeam = NULL;

    if (!pFnSwitchTeam)
        pFnSwitchTeam = (UFunction*)UObject::GObjObjects()->Data[11044];

    APlayerController_execSwitchTeam_Parms SwitchTeam_Parms;

    this->ProcessEvent(pFnSwitchTeam, &SwitchTeam_Parms, NULL);
};

// Function Engine.PlayerController.ServerChangeName
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerChangeName() {
    static UFunction* pFnServerChangeName = NULL;

    if (!pFnServerChangeName)
        pFnServerChangeName = (UFunction*)UObject::GObjObjects()->Data[11042];

    APlayerController_execServerChangeName_Parms ServerChangeName_Parms;

    this->ProcessEvent(pFnServerChangeName, &ServerChangeName_Parms, NULL);
};

// Function Engine.PlayerController.SetName
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SetName() {
    static UFunction* pFnSetName = NULL;

    if (!pFnSetName)
        pFnSetName = (UFunction*)UObject::GObjObjects()->Data[11038];

    APlayerController_execSetName_Parms SetName_Parms;

    this->ProcessEvent(pFnSetName, &SetName_Parms, NULL);
};

// Function Engine.PlayerController.ServerSuicide
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerSuicide() {
    static UFunction* pFnServerSuicide = NULL;

    if (!pFnServerSuicide)
        pFnServerSuicide = (UFunction*)UObject::GObjObjects()->Data[11037];

    APlayerController_execServerSuicide_Parms ServerSuicide_Parms;

    this->ProcessEvent(pFnServerSuicide, &ServerSuicide_Parms, NULL);
};

// Function Engine.PlayerController.Suicide
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Suicide() {
    static UFunction* pFnSuicide = NULL;

    if (!pFnSuicide)
        pFnSuicide = (UFunction*)UObject::GObjObjects()->Data[11036];

    APlayerController_execSuicide_Parms Suicide_Parms;

    this->ProcessEvent(pFnSuicide, &Suicide_Parms, NULL);
};

// Function Engine.PlayerController.TriggerInteracted
// [0x00820002]
// Parameters infos:

void APlayerController::TriggerInteracted() {
    static UFunction* pFnTriggerInteracted = NULL;

    if (!pFnTriggerInteracted)
        pFnTriggerInteracted = (UFunction*)UObject::GObjObjects()->Data[11022];

    APlayerController_execTriggerInteracted_Parms TriggerInteracted_Parms;

    this->ProcessEvent(pFnTriggerInteracted, &TriggerInteracted_Parms, NULL);
};

// Function Engine.PlayerController.FindVehicleToDrive
// [0x00820002]
// Parameters infos:

void APlayerController::FindVehicleToDrive() {
    static UFunction* pFnFindVehicleToDrive = NULL;

    if (!pFnFindVehicleToDrive)
        pFnFindVehicleToDrive = (UFunction*)UObject::GObjObjects()->Data[11013];

    APlayerController_execFindVehicleToDrive_Parms FindVehicleToDrive_Parms;

    this->ProcessEvent(pFnFindVehicleToDrive, &FindVehicleToDrive_Parms, NULL);
};

// Function Engine.PlayerController.PerformedUseAction
// [0x00020002]
// Parameters infos:

void APlayerController::PerformedUseAction() {
    static UFunction* pFnPerformedUseAction = NULL;

    if (!pFnPerformedUseAction)
        pFnPerformedUseAction = (UFunction*)UObject::GObjObjects()->Data[11011];

    APlayerController_execPerformedUseAction_Parms PerformedUseAction_Parms;

    this->ProcessEvent(pFnPerformedUseAction, &PerformedUseAction_Parms, NULL);
};

// Function Engine.PlayerController.ServerUse
// [0x00220042]
// Parameters infos:

void APlayerController::ServerUse() {
    static UFunction* pFnServerUse = NULL;

    if (!pFnServerUse)
        pFnServerUse = (UFunction*)UObject::GObjObjects()->Data[11010];

    APlayerController_execServerUse_Parms ServerUse_Parms;

    this->ProcessEvent(pFnServerUse, &ServerUse_Parms, NULL);
};

// Function Engine.PlayerController.Use
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Use() {
    static UFunction* pFnUse = NULL;

    if (!pFnUse) pFnUse = (UFunction*)UObject::GObjObjects()->Data[11009];

    APlayerController_execUse_Parms Use_Parms;

    this->ProcessEvent(pFnUse, &Use_Parms, NULL);
};

// Function Engine.PlayerController.GetTriggerUseList
// [0x00C20002]
// Parameters infos:

void APlayerController::GetTriggerUseList() {
    static UFunction* pFnGetTriggerUseList = NULL;

    if (!pFnGetTriggerUseList)
        pFnGetTriggerUseList = (UFunction*)UObject::GObjObjects()->Data[10997];

    APlayerController_execGetTriggerUseList_Parms GetTriggerUseList_Parms;

    this->ProcessEvent(pFnGetTriggerUseList, &GetTriggerUseList_Parms, NULL);
};

// Function Engine.PlayerController.StopAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::StopAltFire() {
    static UFunction* pFnStopAltFire = NULL;

    if (!pFnStopAltFire)
        pFnStopAltFire = (UFunction*)UObject::GObjObjects()->Data[10995];

    APlayerController_execStopAltFire_Parms StopAltFire_Parms;

    this->ProcessEvent(pFnStopAltFire, &StopAltFire_Parms, NULL);
};

// Function Engine.PlayerController.StartAltFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::StartAltFire() {
    static UFunction* pFnStartAltFire = NULL;

    if (!pFnStartAltFire)
        pFnStartAltFire = (UFunction*)UObject::GObjObjects()->Data[10993];

    APlayerController_execStartAltFire_Parms StartAltFire_Parms;

    this->ProcessEvent(pFnStartAltFire, &StartAltFire_Parms, NULL);
};

// Function Engine.PlayerController.StopFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::StopFire() {
    static UFunction* pFnStopFire = NULL;

    if (!pFnStopFire)
        pFnStopFire = (UFunction*)UObject::GObjObjects()->Data[10991];

    APlayerController_execStopFire_Parms StopFire_Parms;

    this->ProcessEvent(pFnStopFire, &StopFire_Parms, NULL);
};

// Function Engine.PlayerController.StartFire
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::StartFire() {
    static UFunction* pFnStartFire = NULL;

    if (!pFnStartFire)
        pFnStartFire = (UFunction*)UObject::GObjObjects()->Data[10989];

    APlayerController_execStartFire_Parms StartFire_Parms;

    this->ProcessEvent(pFnStartFire, &StartFire_Parms, NULL);
};

// Function Engine.PlayerController.NextWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::NextWeapon() {
    static UFunction* pFnNextWeapon = NULL;

    if (!pFnNextWeapon)
        pFnNextWeapon = (UFunction*)UObject::GObjObjects()->Data[10988];

    APlayerController_execNextWeapon_Parms NextWeapon_Parms;

    this->ProcessEvent(pFnNextWeapon, &NextWeapon_Parms, NULL);
};

// Function Engine.PlayerController.PrevWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::PrevWeapon() {
    static UFunction* pFnPrevWeapon = NULL;

    if (!pFnPrevWeapon)
        pFnPrevWeapon = (UFunction*)UObject::GObjObjects()->Data[10987];

    APlayerController_execPrevWeapon_Parms PrevWeapon_Parms;

    this->ProcessEvent(pFnPrevWeapon, &PrevWeapon_Parms, NULL);
};

// Function Engine.PlayerController.ServerThrowWeapon
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerThrowWeapon() {
    static UFunction* pFnServerThrowWeapon = NULL;

    if (!pFnServerThrowWeapon)
        pFnServerThrowWeapon = (UFunction*)UObject::GObjObjects()->Data[10986];

    APlayerController_execServerThrowWeapon_Parms ServerThrowWeapon_Parms;

    this->ProcessEvent(pFnServerThrowWeapon, &ServerThrowWeapon_Parms, NULL);
};

// Function Engine.PlayerController.ThrowWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::ThrowWeapon() {
    static UFunction* pFnThrowWeapon = NULL;

    if (!pFnThrowWeapon)
        pFnThrowWeapon = (UFunction*)UObject::GObjObjects()->Data[10985];

    APlayerController_execThrowWeapon_Parms ThrowWeapon_Parms;

    this->ProcessEvent(pFnThrowWeapon, &ThrowWeapon_Parms, NULL);
};

// Function Engine.PlayerController.UTrace
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::UTrace() {
    static UFunction* pFnUTrace = NULL;

    if (!pFnUTrace) pFnUTrace = (UFunction*)UObject::GObjObjects()->Data[10984];

    APlayerController_execUTrace_Parms UTrace_Parms;

    this->ProcessEvent(pFnUTrace, &UTrace_Parms, NULL);
};

// Function Engine.PlayerController.ServerUTrace
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerUTrace() {
    static UFunction* pFnServerUTrace = NULL;

    if (!pFnServerUTrace)
        pFnServerUTrace = (UFunction*)UObject::GObjObjects()->Data[10983];

    APlayerController_execServerUTrace_Parms ServerUTrace_Parms;

    this->ProcessEvent(pFnServerUTrace, &ServerUTrace_Parms, NULL);
};

// Function Engine.PlayerController.ConditionalPause
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventConditionalPause() {
    static UFunction* pFnConditionalPause = NULL;

    if (!pFnConditionalPause)
        pFnConditionalPause = (UFunction*)UObject::GObjObjects()->Data[10981];

    APlayerController_eventConditionalPause_Parms ConditionalPause_Parms;

    this->ProcessEvent(pFnConditionalPause, &ConditionalPause_Parms, NULL);
};

// Function Engine.PlayerController.ServerPause
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerPause() {
    static UFunction* pFnServerPause = NULL;

    if (!pFnServerPause)
        pFnServerPause = (UFunction*)UObject::GObjObjects()->Data[10980];

    APlayerController_execServerPause_Parms ServerPause_Parms;

    this->ProcessEvent(pFnServerPause, &ServerPause_Parms, NULL);
};

// Function Engine.PlayerController.Pause
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Pause() {
    static UFunction* pFnPause = NULL;

    if (!pFnPause) pFnPause = (UFunction*)UObject::GObjObjects()->Data[10979];

    APlayerController_execPause_Parms Pause_Parms;

    this->ProcessEvent(pFnPause, &Pause_Parms, NULL);
};

// Function Engine.PlayerController.IsPaused
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void APlayerController::IsPaused() {
    static UFunction* pFnIsPaused = NULL;

    if (!pFnIsPaused)
        pFnIsPaused = (UFunction*)UObject::GObjObjects()->Data[10977];

    APlayerController_execIsPaused_Parms IsPaused_Parms;

    this->ProcessEvent(pFnIsPaused, &IsPaused_Parms, NULL);
};

// Function Engine.PlayerController.SetPause
// [0x00024002]
// Parameters infos:

void APlayerController::SetPause() {
    static UFunction* pFnSetPause = NULL;

    if (!pFnSetPause)
        pFnSetPause = (UFunction*)UObject::GObjObjects()->Data[10972];

    APlayerController_execSetPause_Parms SetPause_Parms;

    this->ProcessEvent(pFnSetPause, &SetPause_Parms, NULL);
};

// Function Engine.PlayerController.CanUnpause
// [0x00120002]
// Parameters infos:

void APlayerController::CanUnpause() {
    static UFunction* pFnCanUnpause = NULL;

    if (!pFnCanUnpause)
        pFnCanUnpause = (UFunction*)UObject::GObjObjects()->Data[10970];

    APlayerController_execCanUnpause_Parms CanUnpause_Parms;

    this->ProcessEvent(pFnCanUnpause, &CanUnpause_Parms, NULL);
};

// Function Engine.PlayerController.ClientPauseRumble
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientPauseRumble() {
    static UFunction* pFnClientPauseRumble = NULL;

    if (!pFnClientPauseRumble)
        pFnClientPauseRumble = (UFunction*)UObject::GObjObjects()->Data[10968];

    APlayerController_execClientPauseRumble_Parms ClientPauseRumble_Parms;

    this->ProcessEvent(pFnClientPauseRumble, &ClientPauseRumble_Parms, NULL);
};

// Function Engine.PlayerController.PauseRumbleForAllPlayers
// [0x00024002]
// Parameters infos:

void APlayerController::PauseRumbleForAllPlayers() {
    static UFunction* pFnPauseRumbleForAllPlayers = NULL;

    if (!pFnPauseRumbleForAllPlayers)
        pFnPauseRumbleForAllPlayers =
            (UFunction*)UObject::GObjObjects()->Data[10965];

    APlayerController_execPauseRumbleForAllPlayers_Parms
        PauseRumbleForAllPlayers_Parms;

    this->ProcessEvent(pFnPauseRumbleForAllPlayers,
                       &PauseRumbleForAllPlayers_Parms, NULL);
};

// Function Engine.PlayerController.LocalTravel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::LocalTravel() {
    static UFunction* pFnLocalTravel = NULL;

    if (!pFnLocalTravel)
        pFnLocalTravel = (UFunction*)UObject::GObjObjects()->Data[10963];

    APlayerController_execLocalTravel_Parms LocalTravel_Parms;

    this->ProcessEvent(pFnLocalTravel, &LocalTravel_Parms, NULL);
};

// Function Engine.PlayerController.RestartLevel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::RestartLevel() {
    static UFunction* pFnRestartLevel = NULL;

    if (!pFnRestartLevel)
        pFnRestartLevel = (UFunction*)UObject::GObjObjects()->Data[10962];

    APlayerController_execRestartLevel_Parms RestartLevel_Parms;

    this->ProcessEvent(pFnRestartLevel, &RestartLevel_Parms, NULL);
};

// Function Engine.PlayerController.ServerSpeech
// [0x002200C0]
// Parameters infos:

void APlayerController::ServerSpeech() {
    static UFunction* pFnServerSpeech = NULL;

    if (!pFnServerSpeech)
        pFnServerSpeech = (UFunction*)UObject::GObjObjects()->Data[10958];

    APlayerController_execServerSpeech_Parms ServerSpeech_Parms;

    this->ProcessEvent(pFnServerSpeech, &ServerSpeech_Parms, NULL);
};

// Function Engine.PlayerController.Speech
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Speech() {
    static UFunction* pFnSpeech = NULL;

    if (!pFnSpeech) pFnSpeech = (UFunction*)UObject::GObjObjects()->Data[10954];

    APlayerController_execSpeech_Parms Speech_Parms;

    this->ProcessEvent(pFnSpeech, &Speech_Parms, NULL);
};

// Function Engine.PlayerController.ServerRestartGame
// [0x002200C0]
// Parameters infos:

void APlayerController::ServerRestartGame() {
    static UFunction* pFnServerRestartGame = NULL;

    if (!pFnServerRestartGame)
        pFnServerRestartGame = (UFunction*)UObject::GObjObjects()->Data[10953];

    APlayerController_execServerRestartGame_Parms ServerRestartGame_Parms;

    this->ProcessEvent(pFnServerRestartGame, &ServerRestartGame_Parms, NULL);
};

// Function Engine.PlayerController.HandleWalking
// [0x00020002]
// Parameters infos:

void APlayerController::HandleWalking() {
    static UFunction* pFnHandleWalking = NULL;

    if (!pFnHandleWalking)
        pFnHandleWalking = (UFunction*)UObject::GObjObjects()->Data[10952];

    APlayerController_execHandleWalking_Parms HandleWalking_Parms;

    this->ProcessEvent(pFnHandleWalking, &HandleWalking_Parms, NULL);
};

// Function Engine.PlayerController.ServerUpdateCamera
// [0x00A20042]
// Parameters infos:

void APlayerController::ServerUpdateCamera() {
    static UFunction* pFnServerUpdateCamera = NULL;

    if (!pFnServerUpdateCamera)
        pFnServerUpdateCamera = (UFunction*)UObject::GObjObjects()->Data[10948];

    APlayerController_execServerUpdateCamera_Parms ServerUpdateCamera_Parms;

    this->ProcessEvent(pFnServerUpdateCamera, &ServerUpdateCamera_Parms, NULL);
};

// Function Engine.PlayerController.CallServerMove
// [0x00820002]
// Parameters infos:

void APlayerController::CallServerMove() {
    static UFunction* pFnCallServerMove = NULL;

    if (!pFnCallServerMove)
        pFnCallServerMove = (UFunction*)UObject::GObjObjects()->Data[10938];

    APlayerController_execCallServerMove_Parms CallServerMove_Parms;

    this->ProcessEvent(pFnCallServerMove, &CallServerMove_Parms, NULL);
};

// Function Engine.PlayerController.ReplicateMove
// [0x00020002]
// Parameters infos:

void APlayerController::ReplicateMove() {
    static UFunction* pFnReplicateMove = NULL;

    if (!pFnReplicateMove)
        pFnReplicateMove = (UFunction*)UObject::GObjObjects()->Data[10927];

    APlayerController_execReplicateMove_Parms ReplicateMove_Parms;

    this->ProcessEvent(pFnReplicateMove, &ReplicateMove_Parms, NULL);
};

// Function Engine.PlayerController.CompressAccel
// [0x00020002]
// Parameters infos:

void APlayerController::CompressAccel() {
    static UFunction* pFnCompressAccel = NULL;

    if (!pFnCompressAccel)
        pFnCompressAccel = (UFunction*)UObject::GObjObjects()->Data[10924];

    APlayerController_execCompressAccel_Parms CompressAccel_Parms;

    this->ProcessEvent(pFnCompressAccel, &CompressAccel_Parms, NULL);
};

// Function Engine.PlayerController.GetFreeMove
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void APlayerController::GetFreeMove() {
    static UFunction* pFnGetFreeMove = NULL;

    if (!pFnGetFreeMove)
        pFnGetFreeMove = (UFunction*)UObject::GObjObjects()->Data[10919];

    APlayerController_execGetFreeMove_Parms GetFreeMove_Parms;

    this->ProcessEvent(pFnGetFreeMove, &GetFreeMove_Parms, NULL);
};

// Function Engine.PlayerController.ClientUpdatePosition
// [0x00820002]
// Parameters infos:

void APlayerController::ClientUpdatePosition() {
    static UFunction* pFnClientUpdatePosition = NULL;

    if (!pFnClientUpdatePosition)
        pFnClientUpdatePosition =
            (UFunction*)UObject::GObjObjects()->Data[10909];

    APlayerController_execClientUpdatePosition_Parms ClientUpdatePosition_Parms;

    this->ProcessEvent(pFnClientUpdatePosition, &ClientUpdatePosition_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClearAckedMoves
// [0x00020002]
// Parameters infos:

void APlayerController::ClearAckedMoves() {
    static UFunction* pFnClearAckedMoves = NULL;

    if (!pFnClearAckedMoves)
        pFnClearAckedMoves = (UFunction*)UObject::GObjObjects()->Data[10907];

    APlayerController_execClearAckedMoves_Parms ClearAckedMoves_Parms;

    this->ProcessEvent(pFnClearAckedMoves, &ClearAckedMoves_Parms, NULL);
};

// Function Engine.PlayerController.ServerUpdatePing
// [0x00220042]
// Parameters infos:

void APlayerController::ServerUpdatePing() {
    static UFunction* pFnServerUpdatePing = NULL;

    if (!pFnServerUpdatePing)
        pFnServerUpdatePing = (UFunction*)UObject::GObjObjects()->Data[10905];

    APlayerController_execServerUpdatePing_Parms ServerUpdatePing_Parms;

    this->ProcessEvent(pFnServerUpdatePing, &ServerUpdatePing_Parms, NULL);
};

// Function Engine.PlayerController.UpdateStateFromAdjustment
// [0x00020002]
// Parameters infos:

void APlayerController::UpdateStateFromAdjustment() {
    static UFunction* pFnUpdateStateFromAdjustment = NULL;

    if (!pFnUpdateStateFromAdjustment)
        pFnUpdateStateFromAdjustment =
            (UFunction*)UObject::GObjObjects()->Data[10903];

    APlayerController_execUpdateStateFromAdjustment_Parms
        UpdateStateFromAdjustment_Parms;

    this->ProcessEvent(pFnUpdateStateFromAdjustment,
                       &UpdateStateFromAdjustment_Parms, NULL);
};

// Function Engine.PlayerController.LongClientAdjustPosition
// [0x01820142]
// Parameters infos:

void APlayerController::LongClientAdjustPosition() {
    static UFunction* pFnLongClientAdjustPosition = NULL;

    if (!pFnLongClientAdjustPosition)
        pFnLongClientAdjustPosition =
            (UFunction*)UObject::GObjObjects()->Data[10882];

    APlayerController_execLongClientAdjustPosition_Parms
        LongClientAdjustPosition_Parms;

    this->ProcessEvent(pFnLongClientAdjustPosition,
                       &LongClientAdjustPosition_Parms, NULL);
};

// Function Engine.PlayerController.SkipPositionUpdateForRM
// [0x00020002]
// Parameters infos:

void APlayerController::SkipPositionUpdateForRM() {
    static UFunction* pFnSkipPositionUpdateForRM = NULL;

    if (!pFnSkipPositionUpdateForRM)
        pFnSkipPositionUpdateForRM =
            (UFunction*)UObject::GObjObjects()->Data[10879];

    APlayerController_execSkipPositionUpdateForRM_Parms
        SkipPositionUpdateForRM_Parms;

    this->ProcessEvent(pFnSkipPositionUpdateForRM,
                       &SkipPositionUpdateForRM_Parms, NULL);
};

// Function Engine.PlayerController.UpdatePing
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void APlayerController::UpdatePing() {
    static UFunction* pFnUpdatePing = NULL;

    if (!pFnUpdatePing)
        pFnUpdatePing = (UFunction*)UObject::GObjObjects()->Data[10877];

    APlayerController_execUpdatePing_Parms UpdatePing_Parms;

    this->ProcessEvent(pFnUpdatePing, &UpdatePing_Parms, NULL);
};

// Function Engine.PlayerController.ClientAdjustPosition
// [0x01820142]
// Parameters infos:

void APlayerController::ClientAdjustPosition() {
    static UFunction* pFnClientAdjustPosition = NULL;

    if (!pFnClientAdjustPosition)
        pFnClientAdjustPosition =
            (UFunction*)UObject::GObjObjects()->Data[10865];

    APlayerController_execClientAdjustPosition_Parms ClientAdjustPosition_Parms;

    this->ProcessEvent(pFnClientAdjustPosition, &ClientAdjustPosition_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientAckGoodMove
// [0x01020142]
// Parameters infos:

void APlayerController::ClientAckGoodMove() {
    static UFunction* pFnClientAckGoodMove = NULL;

    if (!pFnClientAckGoodMove)
        pFnClientAckGoodMove = (UFunction*)UObject::GObjObjects()->Data[10863];

    APlayerController_execClientAckGoodMove_Parms ClientAckGoodMove_Parms;

    this->ProcessEvent(pFnClientAckGoodMove, &ClientAckGoodMove_Parms, NULL);
};

// Function Engine.PlayerController.ClientCapBandwidth
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientCapBandwidth() {
    static UFunction* pFnClientCapBandwidth = NULL;

    if (!pFnClientCapBandwidth)
        pFnClientCapBandwidth = (UFunction*)UObject::GObjObjects()->Data[10861];

    APlayerController_execClientCapBandwidth_Parms ClientCapBandwidth_Parms;

    this->ProcessEvent(pFnClientCapBandwidth, &ClientCapBandwidth_Parms, NULL);
};

// Function Engine.PlayerController.ShortClientAdjustPosition
// [0x01820142]
// Parameters infos:

void APlayerController::ShortClientAdjustPosition() {
    static UFunction* pFnShortClientAdjustPosition = NULL;

    if (!pFnShortClientAdjustPosition)
        pFnShortClientAdjustPosition =
            (UFunction*)UObject::GObjObjects()->Data[10852];

    APlayerController_execShortClientAdjustPosition_Parms
        ShortClientAdjustPosition_Parms;

    this->ProcessEvent(pFnShortClientAdjustPosition,
                       &ShortClientAdjustPosition_Parms, NULL);
};

// Function Engine.PlayerController.VeryShortClientAdjustPosition
// [0x01820142]
// Parameters infos:

void APlayerController::VeryShortClientAdjustPosition() {
    static UFunction* pFnVeryShortClientAdjustPosition = NULL;

    if (!pFnVeryShortClientAdjustPosition)
        pFnVeryShortClientAdjustPosition =
            (UFunction*)UObject::GObjObjects()->Data[10845];

    APlayerController_execVeryShortClientAdjustPosition_Parms
        VeryShortClientAdjustPosition_Parms;

    this->ProcessEvent(pFnVeryShortClientAdjustPosition,
                       &VeryShortClientAdjustPosition_Parms, NULL);
};

// Function Engine.PlayerController.MoveAutonomous
// [0x00020002]
// Parameters infos:

void APlayerController::MoveAutonomous() {
    static UFunction* pFnMoveAutonomous = NULL;

    if (!pFnMoveAutonomous)
        pFnMoveAutonomous = (UFunction*)UObject::GObjObjects()->Data[10839];

    APlayerController_execMoveAutonomous_Parms MoveAutonomous_Parms;

    this->ProcessEvent(pFnMoveAutonomous, &MoveAutonomous_Parms, NULL);
};

// Function Engine.PlayerController.ProcessMove
// [0x00020002]
// Parameters infos:

void APlayerController::ProcessMove() {
    static UFunction* pFnProcessMove = NULL;

    if (!pFnProcessMove)
        pFnProcessMove = (UFunction*)UObject::GObjObjects()->Data[10834];

    APlayerController_execProcessMove_Parms ProcessMove_Parms;

    this->ProcessEvent(pFnProcessMove, &ProcessMove_Parms, NULL);
};

// Function Engine.PlayerController.ProcessDrive
// [0x00020002]
// Parameters infos:

void APlayerController::ProcessDrive() {
    static UFunction* pFnProcessDrive = NULL;

    if (!pFnProcessDrive)
        pFnProcessDrive = (UFunction*)UObject::GObjObjects()->Data[10829];

    APlayerController_execProcessDrive_Parms ProcessDrive_Parms;

    this->ProcessEvent(pFnProcessDrive, &ProcessDrive_Parms, NULL);
};

// Function Engine.PlayerController.ServerDrive
// [0x00A20042]
// Parameters infos:

void APlayerController::ServerDrive() {
    static UFunction* pFnServerDrive = NULL;

    if (!pFnServerDrive)
        pFnServerDrive = (UFunction*)UObject::GObjObjects()->Data[10822];

    APlayerController_execServerDrive_Parms ServerDrive_Parms;

    this->ProcessEvent(pFnServerDrive, &ServerDrive_Parms, NULL);
};

// Function Engine.PlayerController.SendClientAdjustment
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventSendClientAdjustment() {
    static UFunction* pFnSendClientAdjustment = NULL;

    if (!pFnSendClientAdjustment)
        pFnSendClientAdjustment =
            (UFunction*)UObject::GObjObjects()->Data[10821];

    APlayerController_eventSendClientAdjustment_Parms
        SendClientAdjustment_Parms;

    this->ProcessEvent(pFnSendClientAdjustment, &SendClientAdjustment_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerMove
// [0x00A24042]
// Parameters infos:

void APlayerController::ServerMove() {
    static UFunction* pFnServerMove = NULL;

    if (!pFnServerMove)
        pFnServerMove = (UFunction*)UObject::GObjObjects()->Data[10805];

    APlayerController_execServerMove_Parms ServerMove_Parms;

    this->ProcessEvent(pFnServerMove, &ServerMove_Parms, NULL);
};

// Function Engine.PlayerController.ServerMoveHandleClientError
// [0x00820002]
// Parameters infos:

void APlayerController::ServerMoveHandleClientError() {
    static UFunction* pFnServerMoveHandleClientError = NULL;

    if (!pFnServerMoveHandleClientError)
        pFnServerMoveHandleClientError =
            (UFunction*)UObject::GObjObjects()->Data[10799];

    APlayerController_execServerMoveHandleClientError_Parms
        ServerMoveHandleClientError_Parms;

    this->ProcessEvent(pFnServerMoveHandleClientError,
                       &ServerMoveHandleClientError_Parms, NULL);
};

// Function Engine.PlayerController.GetServerMoveDeltaTime
// [0x00020002]
// Parameters infos:

void APlayerController::GetServerMoveDeltaTime() {
    static UFunction* pFnGetServerMoveDeltaTime = NULL;

    if (!pFnGetServerMoveDeltaTime)
        pFnGetServerMoveDeltaTime =
            (UFunction*)UObject::GObjObjects()->Data[10795];

    APlayerController_execGetServerMoveDeltaTime_Parms
        GetServerMoveDeltaTime_Parms;

    this->ProcessEvent(pFnGetServerMoveDeltaTime, &GetServerMoveDeltaTime_Parms,
                       NULL);
};

// Function Engine.PlayerController.OldServerMove
// [0x00A20042]
// Parameters infos:

void APlayerController::OldServerMove() {
    static UFunction* pFnOldServerMove = NULL;

    if (!pFnOldServerMove)
        pFnOldServerMove = (UFunction*)UObject::GObjObjects()->Data[10788];

    APlayerController_execOldServerMove_Parms OldServerMove_Parms;

    this->ProcessEvent(pFnOldServerMove, &OldServerMove_Parms, NULL);
};

// Function Engine.PlayerController.DualServerMove
// [0x00224042]
// Parameters infos:

void APlayerController::DualServerMove() {
    static UFunction* pFnDualServerMove = NULL;

    if (!pFnDualServerMove)
        pFnDualServerMove = (UFunction*)UObject::GObjObjects()->Data[10775];

    APlayerController_execDualServerMove_Parms DualServerMove_Parms;

    this->ProcessEvent(pFnDualServerMove, &DualServerMove_Parms, NULL);
};

// Function Engine.PlayerController.ForceDeathUpdate
// [0x00020002]
// Parameters infos:

void APlayerController::ForceDeathUpdate() {
    static UFunction* pFnForceDeathUpdate = NULL;

    if (!pFnForceDeathUpdate)
        pFnForceDeathUpdate = (UFunction*)UObject::GObjObjects()->Data[10774];

    APlayerController_execForceDeathUpdate_Parms ForceDeathUpdate_Parms;

    this->ProcessEvent(pFnForceDeathUpdate, &ForceDeathUpdate_Parms, NULL);
};

// Function Engine.PlayerController.UsingFirstPersonCamera
// [0x00020002]
// Parameters infos:

void APlayerController::UsingFirstPersonCamera() {
    static UFunction* pFnUsingFirstPersonCamera = NULL;

    if (!pFnUsingFirstPersonCamera)
        pFnUsingFirstPersonCamera =
            (UFunction*)UObject::GObjObjects()->Data[10772];

    APlayerController_execUsingFirstPersonCamera_Parms
        UsingFirstPersonCamera_Parms;

    this->ProcessEvent(pFnUsingFirstPersonCamera, &UsingFirstPersonCamera_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientSetCameraFade
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientSetCameraFade() {
    static UFunction* pFnClientSetCameraFade = NULL;

    if (!pFnClientSetCameraFade)
        pFnClientSetCameraFade =
            (UFunction*)UObject::GObjObjects()->Data[10766];

    APlayerController_eventClientSetCameraFade_Parms ClientSetCameraFade_Parms;

    this->ProcessEvent(pFnClientSetCameraFade, &ClientSetCameraFade_Parms,
                       NULL);
};

// Function Engine.PlayerController.ResetCameraMode
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventResetCameraMode() {
    static UFunction* pFnResetCameraMode = NULL;

    if (!pFnResetCameraMode)
        pFnResetCameraMode = (UFunction*)UObject::GObjObjects()->Data[10765];

    APlayerController_eventResetCameraMode_Parms ResetCameraMode_Parms;

    this->ProcessEvent(pFnResetCameraMode, &ResetCameraMode_Parms, NULL);
};

// Function Engine.PlayerController.SetCameraMode
// [0x00020002]
// Parameters infos:

void APlayerController::SetCameraMode() {
    static UFunction* pFnSetCameraMode = NULL;

    if (!pFnSetCameraMode)
        pFnSetCameraMode = (UFunction*)UObject::GObjObjects()->Data[10763];

    APlayerController_execSetCameraMode_Parms SetCameraMode_Parms;

    this->ProcessEvent(pFnSetCameraMode, &SetCameraMode_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetCameraMode
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientSetCameraMode() {
    static UFunction* pFnClientSetCameraMode = NULL;

    if (!pFnClientSetCameraMode)
        pFnClientSetCameraMode =
            (UFunction*)UObject::GObjObjects()->Data[10761];

    APlayerController_execClientSetCameraMode_Parms ClientSetCameraMode_Parms;

    this->ProcessEvent(pFnClientSetCameraMode, &ClientSetCameraMode_Parms,
                       NULL);
};

// Function Engine.PlayerController.ServerCamera
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerCamera() {
    static UFunction* pFnServerCamera = NULL;

    if (!pFnServerCamera)
        pFnServerCamera = (UFunction*)UObject::GObjObjects()->Data[10759];

    APlayerController_execServerCamera_Parms ServerCamera_Parms;

    this->ProcessEvent(pFnServerCamera, &ServerCamera_Parms, NULL);
};

// Function Engine.PlayerController.Camera
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Camera() {
    static UFunction* pFnCamera = NULL;

    if (!pFnCamera) pFnCamera = (UFunction*)UObject::GObjObjects()->Data[10757];

    APlayerController_execCamera_Parms Camera_Parms;

    this->ProcessEvent(pFnCamera, &Camera_Parms, NULL);
};

// Function Engine.PlayerController.PreClientTravel
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPreClientTravel() {
    static UFunction* pFnPreClientTravel = NULL;

    if (!pFnPreClientTravel)
        pFnPreClientTravel = (UFunction*)UObject::GObjObjects()->Data[10751];

    APlayerController_eventPreClientTravel_Parms PreClientTravel_Parms;

    this->ProcessEvent(pFnPreClientTravel, &PreClientTravel_Parms, NULL);
};

// Function Engine.PlayerController.ServerTeamSay
// [0x00220042]
// Parameters infos:

void APlayerController::ServerTeamSay() {
    static UFunction* pFnServerTeamSay = NULL;

    if (!pFnServerTeamSay)
        pFnServerTeamSay = (UFunction*)UObject::GObjObjects()->Data[10749];

    APlayerController_execServerTeamSay_Parms ServerTeamSay_Parms;

    this->ProcessEvent(pFnServerTeamSay, &ServerTeamSay_Parms, NULL);
};

// Function Engine.PlayerController.TeamSay
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::TeamSay() {
    static UFunction* pFnTeamSay = NULL;

    if (!pFnTeamSay)
        pFnTeamSay = (UFunction*)UObject::GObjObjects()->Data[10747];

    APlayerController_execTeamSay_Parms TeamSay_Parms;

    this->ProcessEvent(pFnTeamSay, &TeamSay_Parms, NULL);
};

// Function Engine.PlayerController.ClientAdminMessage
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientAdminMessage() {
    static UFunction* pFnClientAdminMessage = NULL;

    if (!pFnClientAdminMessage)
        pFnClientAdminMessage = (UFunction*)UObject::GObjObjects()->Data[10744];

    APlayerController_execClientAdminMessage_Parms ClientAdminMessage_Parms;

    this->ProcessEvent(pFnClientAdminMessage, &ClientAdminMessage_Parms, NULL);
};

// Function Engine.PlayerController.ServerSay
// [0x00220042]
// Parameters infos:

void APlayerController::ServerSay() {
    static UFunction* pFnServerSay = NULL;

    if (!pFnServerSay)
        pFnServerSay = (UFunction*)UObject::GObjObjects()->Data[10741];

    APlayerController_execServerSay_Parms ServerSay_Parms;

    this->ProcessEvent(pFnServerSay, &ServerSay_Parms, NULL);
};

// Function Engine.PlayerController.Say
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Say() {
    static UFunction* pFnSay = NULL;

    if (!pFnSay) pFnSay = (UFunction*)UObject::GObjObjects()->Data[10739];

    APlayerController_execSay_Parms Say_Parms;

    this->ProcessEvent(pFnSay, &Say_Parms, NULL);
};

// Function Engine.PlayerController.AllowTextMessage
// [0x00020002]
// Parameters infos:

void APlayerController::AllowTextMessage() {
    static UFunction* pFnAllowTextMessage = NULL;

    if (!pFnAllowTextMessage)
        pFnAllowTextMessage = (UFunction*)UObject::GObjObjects()->Data[10735];

    APlayerController_execAllowTextMessage_Parms AllowTextMessage_Parms;

    this->ProcessEvent(pFnAllowTextMessage, &AllowTextMessage_Parms, NULL);
};

// Function Engine.PlayerController.ServerMutate
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerMutate() {
    static UFunction* pFnServerMutate = NULL;

    if (!pFnServerMutate)
        pFnServerMutate = (UFunction*)UObject::GObjObjects()->Data[10733];

    APlayerController_execServerMutate_Parms ServerMutate_Parms;

    this->ProcessEvent(pFnServerMutate, &ServerMutate_Parms, NULL);
};

// Function Engine.PlayerController.Mutate
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Mutate() {
    static UFunction* pFnMutate = NULL;

    if (!pFnMutate) pFnMutate = (UFunction*)UObject::GObjObjects()->Data[10731];

    APlayerController_execMutate_Parms Mutate_Parms;

    this->ProcessEvent(pFnMutate, &Mutate_Parms, NULL);
};

// Function Engine.PlayerController.FOV
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::FOV() {
    static UFunction* pFnFOV = NULL;

    if (!pFnFOV) pFnFOV = (UFunction*)UObject::GObjObjects()->Data[10729];

    APlayerController_execFOV_Parms FOV_Parms;

    this->ProcessEvent(pFnFOV, &FOV_Parms, NULL);
};

// Function Engine.PlayerController.ResetFOV
// [0x00020002]
// Parameters infos:

void APlayerController::ResetFOV() {
    static UFunction* pFnResetFOV = NULL;

    if (!pFnResetFOV)
        pFnResetFOV = (UFunction*)UObject::GObjObjects()->Data[10728];

    APlayerController_execResetFOV_Parms ResetFOV_Parms;

    this->ProcessEvent(pFnResetFOV, &ResetFOV_Parms, NULL);
};

// Function Engine.PlayerController.SetFOV
// [0x00020002]
// Parameters infos:

void APlayerController::SetFOV() {
    static UFunction* pFnSetFOV = NULL;

    if (!pFnSetFOV) pFnSetFOV = (UFunction*)UObject::GObjObjects()->Data[10726];

    APlayerController_execSetFOV_Parms SetFOV_Parms;

    this->ProcessEvent(pFnSetFOV, &SetFOV_Parms, NULL);
};

// Function Engine.PlayerController.FixFOV
// [0x00020002]
// Parameters infos:

void APlayerController::FixFOV() {
    static UFunction* pFnFixFOV = NULL;

    if (!pFnFixFOV) pFnFixFOV = (UFunction*)UObject::GObjObjects()->Data[10725];

    APlayerController_execFixFOV_Parms FixFOV_Parms;

    this->ProcessEvent(pFnFixFOV, &FixFOV_Parms, NULL);
};

// Function Engine.PlayerController.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[10720];

    APlayerController_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.PlayerController.CleanupPawn
// [0x00020002]
// Parameters infos:

void APlayerController::CleanupPawn() {
    static UFunction* pFnCleanupPawn = NULL;

    if (!pFnCleanupPawn)
        pFnCleanupPawn = (UFunction*)UObject::GObjObjects()->Data[10717];

    APlayerController_execCleanupPawn_Parms CleanupPawn_Parms;

    this->ProcessEvent(pFnCleanupPawn, &CleanupPawn_Parms, NULL);
};

// Function Engine.PlayerController.ClearOnlineDelegates
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClearOnlineDelegates() {
    static UFunction* pFnClearOnlineDelegates = NULL;

    if (!pFnClearOnlineDelegates)
        pFnClearOnlineDelegates =
            (UFunction*)UObject::GObjObjects()->Data[10715];

    APlayerController_eventClearOnlineDelegates_Parms
        ClearOnlineDelegates_Parms;

    this->ProcessEvent(pFnClearOnlineDelegates, &ClearOnlineDelegates_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnPartyMembersInfoChanged
// [0x00020000]
// Parameters infos:

void APlayerController::OnPartyMembersInfoChanged() {
    static UFunction* pFnOnPartyMembersInfoChanged = NULL;

    if (!pFnOnPartyMembersInfoChanged)
        pFnOnPartyMembersInfoChanged =
            (UFunction*)UObject::GObjObjects()->Data[10708];

    APlayerController_execOnPartyMembersInfoChanged_Parms
        OnPartyMembersInfoChanged_Parms;

    this->ProcessEvent(pFnOnPartyMembersInfoChanged,
                       &OnPartyMembersInfoChanged_Parms, NULL);
};

// Function Engine.PlayerController.OnPartyMemberListChanged
// [0x00020000]
// Parameters infos:

void APlayerController::OnPartyMemberListChanged() {
    static UFunction* pFnOnPartyMemberListChanged = NULL;

    if (!pFnOnPartyMemberListChanged)
        pFnOnPartyMemberListChanged =
            (UFunction*)UObject::GObjObjects()->Data[10704];

    APlayerController_execOnPartyMemberListChanged_Parms
        OnPartyMemberListChanged_Parms;

    this->ProcessEvent(pFnOnPartyMemberListChanged,
                       &OnPartyMemberListChanged_Parms, NULL);
};

// Function Engine.PlayerController.RegisterOnlineDelegates
// [0x00020002]
// Parameters infos:

void APlayerController::RegisterOnlineDelegates() {
    static UFunction* pFnRegisterOnlineDelegates = NULL;

    if (!pFnRegisterOnlineDelegates)
        pFnRegisterOnlineDelegates =
            (UFunction*)UObject::GObjObjects()->Data[10702];

    APlayerController_execRegisterOnlineDelegates_Parms
        RegisterOnlineDelegates_Parms;

    this->ProcessEvent(pFnRegisterOnlineDelegates,
                       &RegisterOnlineDelegates_Parms, NULL);
};

// Function Engine.PlayerController.PlayBeepSound
// [0x00020000]
// Parameters infos:

void APlayerController::PlayBeepSound() {
    static UFunction* pFnPlayBeepSound = NULL;

    if (!pFnPlayBeepSound)
        pFnPlayBeepSound = (UFunction*)UObject::GObjObjects()->Data[10701];

    APlayerController_execPlayBeepSound_Parms PlayBeepSound_Parms;

    this->ProcessEvent(pFnPlayBeepSound, &PlayBeepSound_Parms, NULL);
};

// Function Engine.PlayerController.TeamMessage
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventTeamMessage() {
    static UFunction* pFnTeamMessage = NULL;

    if (!pFnTeamMessage)
        pFnTeamMessage = (UFunction*)UObject::GObjObjects()->Data[10695];

    APlayerController_eventTeamMessage_Parms TeamMessage_Parms;

    this->ProcessEvent(pFnTeamMessage, &TeamMessage_Parms, NULL);
};

// Function Engine.PlayerController.SpeakTTS
// [0x00024102]
// Parameters infos:

void APlayerController::SpeakTTS() {
    static UFunction* pFnSpeakTTS = NULL;

    if (!pFnSpeakTTS)
        pFnSpeakTTS = (UFunction*)UObject::GObjObjects()->Data[10690];

    APlayerController_execSpeakTTS_Parms SpeakTTS_Parms;

    this->ProcessEvent(pFnSpeakTTS, &SpeakTTS_Parms, NULL);
};

// Function Engine.PlayerController.TeamTalk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::TeamTalk() {
    static UFunction* pFnTeamTalk = NULL;

    if (!pFnTeamTalk)
        pFnTeamTalk = (UFunction*)UObject::GObjObjects()->Data[10687];

    APlayerController_execTeamTalk_Parms TeamTalk_Parms;

    this->ProcessEvent(pFnTeamTalk, &TeamTalk_Parms, NULL);
};

// Function Engine.PlayerController.Talk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::Talk() {
    static UFunction* pFnTalk = NULL;

    if (!pFnTalk) pFnTalk = (UFunction*)UObject::GObjObjects()->Data[10684];

    APlayerController_execTalk_Parms Talk_Parms;

    this->ProcessEvent(pFnTalk, &Talk_Parms, NULL);
};

// Function Engine.PlayerController.CreateTTSSoundCue
// [0x00040501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::CreateTTSSoundCue() {
    static UFunction* pFnCreateTTSSoundCue = NULL;

    if (!pFnCreateTTSSoundCue)
        pFnCreateTTSSoundCue = (UFunction*)UObject::GObjObjects()->Data[10680];

    APlayerController_execCreateTTSSoundCue_Parms CreateTTSSoundCue_Parms;

    pFnCreateTTSSoundCue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreateTTSSoundCue, &CreateTTSSoundCue_Parms, NULL);

    pFnCreateTTSSoundCue->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.AllowTTSMessageFrom
// [0x00040103] ( FUNC_Final )
// Parameters infos:

void APlayerController::AllowTTSMessageFrom() {
    static UFunction* pFnAllowTTSMessageFrom = NULL;

    if (!pFnAllowTTSMessageFrom)
        pFnAllowTTSMessageFrom =
            (UFunction*)UObject::GObjObjects()->Data[10677];

    APlayerController_execAllowTTSMessageFrom_Parms AllowTTSMessageFrom_Parms;

    this->ProcessEvent(pFnAllowTTSMessageFrom, &AllowTTSMessageFrom_Parms,
                       NULL);
};

// Function Engine.PlayerController.CanCommunicate
// [0x00040103] ( FUNC_Final )
// Parameters infos:

void APlayerController::CanCommunicate() {
    static UFunction* pFnCanCommunicate = NULL;

    if (!pFnCanCommunicate)
        pFnCanCommunicate = (UFunction*)UObject::GObjObjects()->Data[10675];

    APlayerController_execCanCommunicate_Parms CanCommunicate_Parms;

    this->ProcessEvent(pFnCanCommunicate, &CanCommunicate_Parms, NULL);
};

// Function Engine.PlayerController.ClientMessage
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientMessage() {
    static UFunction* pFnClientMessage = NULL;

    if (!pFnClientMessage)
        pFnClientMessage = (UFunction*)UObject::GObjObjects()->Data[10671];

    APlayerController_eventClientMessage_Parms ClientMessage_Parms;

    this->ProcessEvent(pFnClientMessage, &ClientMessage_Parms, NULL);
};

// Function Engine.PlayerController.ClientPlayActorFaceFXAnim
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientPlayActorFaceFXAnim() {
    static UFunction* pFnClientPlayActorFaceFXAnim = NULL;

    if (!pFnClientPlayActorFaceFXAnim)
        pFnClientPlayActorFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[10664];

    APlayerController_execClientPlayActorFaceFXAnim_Parms
        ClientPlayActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnClientPlayActorFaceFXAnim,
                       &ClientPlayActorFaceFXAnim_Parms, NULL);
};

// Function Engine.PlayerController.Kismet_ClientStopSound
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventKismet_ClientStopSound() {
    static UFunction* pFnKismet_ClientStopSound = NULL;

    if (!pFnKismet_ClientStopSound)
        pFnKismet_ClientStopSound =
            (UFunction*)UObject::GObjObjects()->Data[10658];

    APlayerController_eventKismet_ClientStopSound_Parms
        Kismet_ClientStopSound_Parms;

    this->ProcessEvent(pFnKismet_ClientStopSound, &Kismet_ClientStopSound_Parms,
                       NULL);
};

// Function Engine.PlayerController.Kismet_ClientPlaySound
// [0x010209C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventKismet_ClientPlaySound() {
    static UFunction* pFnKismet_ClientPlaySound = NULL;

    if (!pFnKismet_ClientPlaySound)
        pFnKismet_ClientPlaySound =
            (UFunction*)UObject::GObjObjects()->Data[10649];

    APlayerController_eventKismet_ClientPlaySound_Parms
        Kismet_ClientPlaySound_Parms;

    this->ProcessEvent(pFnKismet_ClientPlaySound, &Kismet_ClientPlaySound_Parms,
                       NULL);
};

// Function Engine.PlayerController.IsClosestLocalPlayerToActor
// [0x00020102]
// Parameters infos:

void APlayerController::IsClosestLocalPlayerToActor() {
    static UFunction* pFnIsClosestLocalPlayerToActor = NULL;

    if (!pFnIsClosestLocalPlayerToActor)
        pFnIsClosestLocalPlayerToActor =
            (UFunction*)UObject::GObjObjects()->Data[10644];

    APlayerController_execIsClosestLocalPlayerToActor_Parms
        IsClosestLocalPlayerToActor_Parms;

    this->ProcessEvent(pFnIsClosestLocalPlayerToActor,
                       &IsClosestLocalPlayerToActor_Parms, NULL);
};

// Function Engine.PlayerController.WwiseClientHearSound
// [0x01024D40] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventWwiseClientHearSound() {
    static UFunction* pFnWwiseClientHearSound = NULL;

    if (!pFnWwiseClientHearSound)
        pFnWwiseClientHearSound =
            (UFunction*)UObject::GObjObjects()->Data[10638];

    APlayerController_eventWwiseClientHearSound_Parms
        WwiseClientHearSound_Parms;

    pFnWwiseClientHearSound->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWwiseClientHearSound, &WwiseClientHearSound_Parms,
                       NULL);

    pFnWwiseClientHearSound->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientHearSoundAdvancedRelevant
// [0x01024942] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientHearSoundAdvancedRelevant() {
    static UFunction* pFnClientHearSoundAdvancedRelevant = NULL;

    if (!pFnClientHearSoundAdvancedRelevant)
        pFnClientHearSoundAdvancedRelevant =
            (UFunction*)UObject::GObjObjects()->Data[10631];

    APlayerController_eventClientHearSoundAdvancedRelevant_Parms
        ClientHearSoundAdvancedRelevant_Parms;

    this->ProcessEvent(pFnClientHearSoundAdvancedRelevant,
                       &ClientHearSoundAdvancedRelevant_Parms, NULL);
};

// Function Engine.PlayerController.ClientHearSoundAdvanced
// [0x01024942] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientHearSoundAdvanced() {
    static UFunction* pFnClientHearSoundAdvanced = NULL;

    if (!pFnClientHearSoundAdvanced)
        pFnClientHearSoundAdvanced =
            (UFunction*)UObject::GObjObjects()->Data[10622];

    APlayerController_eventClientHearSoundAdvanced_Parms
        ClientHearSoundAdvanced_Parms;

    this->ProcessEvent(pFnClientHearSoundAdvanced,
                       &ClientHearSoundAdvanced_Parms, NULL);
};

// Function Engine.PlayerController.ClientHearSound
// [0x01024942] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientHearSound() {
    static UFunction* pFnClientHearSound = NULL;

    if (!pFnClientHearSound)
        pFnClientHearSound = (UFunction*)UObject::GObjObjects()->Data[10615];

    APlayerController_eventClientHearSound_Parms ClientHearSound_Parms;

    this->ProcessEvent(pFnClientHearSound, &ClientHearSound_Parms, NULL);
};

// Function Engine.PlayerController.GetPooledAudioComponent
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void APlayerController::GetPooledAudioComponent() {
    static UFunction* pFnGetPooledAudioComponent = NULL;

    if (!pFnGetPooledAudioComponent)
        pFnGetPooledAudioComponent =
            (UFunction*)UObject::GObjObjects()->Data[10608];

    APlayerController_execGetPooledAudioComponent_Parms
        GetPooledAudioComponent_Parms;

    pFnGetPooledAudioComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPooledAudioComponent,
                       &GetPooledAudioComponent_Parms, NULL);

    pFnGetPooledAudioComponent->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.HearSoundFinished
// [0x00020102]
// Parameters infos:

void APlayerController::HearSoundFinished() {
    static UFunction* pFnHearSoundFinished = NULL;

    if (!pFnHearSoundFinished)
        pFnHearSoundFinished = (UFunction*)UObject::GObjObjects()->Data[10606];

    APlayerController_execHearSoundFinished_Parms HearSoundFinished_Parms;

    this->ProcessEvent(pFnHearSoundFinished, &HearSoundFinished_Parms, NULL);
};

// Function Engine.PlayerController.ClientPlaySound
// [0x01020942] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventClientPlaySound() {
    static UFunction* pFnClientPlaySound = NULL;

    if (!pFnClientPlaySound)
        pFnClientPlaySound = (UFunction*)UObject::GObjObjects()->Data[10604];

    APlayerController_eventClientPlaySound_Parms ClientPlaySound_Parms;

    this->ProcessEvent(pFnClientPlaySound, &ClientPlaySound_Parms, NULL);
};

// Function Engine.PlayerController.ReceiveLocalizedMessage
// [0x010249C2] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventReceiveLocalizedMessage() {
    static UFunction* pFnReceiveLocalizedMessage = NULL;

    if (!pFnReceiveLocalizedMessage)
        pFnReceiveLocalizedMessage =
            (UFunction*)UObject::GObjObjects()->Data[10598];

    APlayerController_eventReceiveLocalizedMessage_Parms
        ReceiveLocalizedMessage_Parms;

    this->ProcessEvent(pFnReceiveLocalizedMessage,
                       &ReceiveLocalizedMessage_Parms, NULL);
};

// Function Engine.PlayerController.CleanupPRI
// [0x00020002]
// Parameters infos:

void APlayerController::CleanupPRI() {
    static UFunction* pFnCleanupPRI = NULL;

    if (!pFnCleanupPRI)
        pFnCleanupPRI = (UFunction*)UObject::GObjObjects()->Data[10597];

    APlayerController_execCleanupPRI_Parms CleanupPRI_Parms;

    this->ProcessEvent(pFnCleanupPRI, &CleanupPRI_Parms, NULL);
};

// Function Engine.PlayerController.HandlePickup
// [0x00020002]
// Parameters infos:

void APlayerController::HandlePickup() {
    static UFunction* pFnHandlePickup = NULL;

    if (!pFnHandlePickup)
        pFnHandlePickup = (UFunction*)UObject::GObjObjects()->Data[10595];

    APlayerController_execHandlePickup_Parms HandlePickup_Parms;

    this->ProcessEvent(pFnHandlePickup, &HandlePickup_Parms, NULL);
};

// Function Engine.PlayerController.ClientSetSecondaryHUD
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientSetSecondaryHUD() {
    static UFunction* pFnClientSetSecondaryHUD = NULL;

    if (!pFnClientSetSecondaryHUD)
        pFnClientSetSecondaryHUD =
            (UFunction*)UObject::GObjObjects()->Data[10593];

    APlayerController_execClientSetSecondaryHUD_Parms
        ClientSetSecondaryHUD_Parms;

    this->ProcessEvent(pFnClientSetSecondaryHUD, &ClientSetSecondaryHUD_Parms,
                       NULL);
};

// Function Engine.PlayerController.ClientSetHUD
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientSetHUD() {
    static UFunction* pFnClientSetHUD = NULL;

    if (!pFnClientSetHUD)
        pFnClientSetHUD = (UFunction*)UObject::GObjObjects()->Data[10591];

    APlayerController_execClientSetHUD_Parms ClientSetHUD_Parms;

    this->ProcessEvent(pFnClientSetHUD, &ClientSetHUD_Parms, NULL);
};

// Function Engine.PlayerController.PawnDied
// [0x00020002]
// Parameters infos:

void APlayerController::PawnDied() {
    static UFunction* pFnPawnDied = NULL;

    if (!pFnPawnDied)
        pFnPawnDied = (UFunction*)UObject::GObjObjects()->Data[10589];

    APlayerController_execPawnDied_Parms PawnDied_Parms;

    this->ProcessEvent(pFnPawnDied, &PawnDied_Parms, NULL);
};

// Function Engine.PlayerController.UnPossess
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventUnPossess() {
    static UFunction* pFnUnPossess = NULL;

    if (!pFnUnPossess)
        pFnUnPossess = (UFunction*)UObject::GObjObjects()->Data[10588];

    APlayerController_eventUnPossess_Parms UnPossess_Parms;

    this->ProcessEvent(pFnUnPossess, &UnPossess_Parms, NULL);
};

// Function Engine.PlayerController.ServerAcknowledgePossession
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerAcknowledgePossession() {
    static UFunction* pFnServerAcknowledgePossession = NULL;

    if (!pFnServerAcknowledgePossession)
        pFnServerAcknowledgePossession =
            (UFunction*)UObject::GObjObjects()->Data[10586];

    APlayerController_execServerAcknowledgePossession_Parms
        ServerAcknowledgePossession_Parms;

    this->ProcessEvent(pFnServerAcknowledgePossession,
                       &ServerAcknowledgePossession_Parms, NULL);
};

// Function Engine.PlayerController.AcknowledgePossession
// [0x00020002]
// Parameters infos:

void APlayerController::AcknowledgePossession() {
    static UFunction* pFnAcknowledgePossession = NULL;

    if (!pFnAcknowledgePossession)
        pFnAcknowledgePossession =
            (UFunction*)UObject::GObjObjects()->Data[10584];

    APlayerController_execAcknowledgePossession_Parms
        AcknowledgePossession_Parms;

    this->ProcessEvent(pFnAcknowledgePossession, &AcknowledgePossession_Parms,
                       NULL);
};

// Function Engine.PlayerController.Possess
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPossess() {
    static UFunction* pFnPossess = NULL;

    if (!pFnPossess)
        pFnPossess = (UFunction*)UObject::GObjObjects()->Data[10578];

    APlayerController_eventPossess_Parms Possess_Parms;

    this->ProcessEvent(pFnPossess, &Possess_Parms, NULL);
};

// Function Engine.PlayerController.GivePawn
// [0x010201C2]
// Parameters infos:

void APlayerController::GivePawn() {
    static UFunction* pFnGivePawn = NULL;

    if (!pFnGivePawn)
        pFnGivePawn = (UFunction*)UObject::GObjObjects()->Data[10576];

    APlayerController_execGivePawn_Parms GivePawn_Parms;

    this->ProcessEvent(pFnGivePawn, &GivePawn_Parms, NULL);
};

// Function Engine.PlayerController.AskForPawn
// [0x002200C2]
// Parameters infos:

void APlayerController::AskForPawn() {
    static UFunction* pFnAskForPawn = NULL;

    if (!pFnAskForPawn)
        pFnAskForPawn = (UFunction*)UObject::GObjObjects()->Data[10575];

    APlayerController_execAskForPawn_Parms AskForPawn_Parms;

    this->ProcessEvent(pFnAskForPawn, &AskForPawn_Parms, NULL);
};

// Function Engine.PlayerController.ClientGotoState
// [0x010241C2]
// Parameters infos:

void APlayerController::ClientGotoState() {
    static UFunction* pFnClientGotoState = NULL;

    if (!pFnClientGotoState)
        pFnClientGotoState = (UFunction*)UObject::GObjObjects()->Data[10572];

    APlayerController_execClientGotoState_Parms ClientGotoState_Parms;

    this->ProcessEvent(pFnClientGotoState, &ClientGotoState_Parms, NULL);
};

// Function Engine.PlayerController.SetTiltActive
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::SetTiltActive() {
    static UFunction* pFnSetTiltActive = NULL;

    if (!pFnSetTiltActive)
        pFnSetTiltActive = (UFunction*)UObject::GObjObjects()->Data[10570];

    APlayerController_execSetTiltActive_Parms SetTiltActive_Parms;

    this->ProcessEvent(pFnSetTiltActive, &SetTiltActive_Parms, NULL);
};

// Function Engine.PlayerController.IsMouseAvailable
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::IsMouseAvailable() {
    static UFunction* pFnIsMouseAvailable = NULL;

    if (!pFnIsMouseAvailable)
        pFnIsMouseAvailable = (UFunction*)UObject::GObjObjects()->Data[10568];

    APlayerController_execIsMouseAvailable_Parms IsMouseAvailable_Parms;

    pFnIsMouseAvailable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsMouseAvailable, &IsMouseAvailable_Parms, NULL);

    pFnIsMouseAvailable->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.IsKeyboardAvailable
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::IsKeyboardAvailable() {
    static UFunction* pFnIsKeyboardAvailable = NULL;

    if (!pFnIsKeyboardAvailable)
        pFnIsKeyboardAvailable =
            (UFunction*)UObject::GObjObjects()->Data[10566];

    APlayerController_execIsKeyboardAvailable_Parms IsKeyboardAvailable_Parms;

    pFnIsKeyboardAvailable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsKeyboardAvailable, &IsKeyboardAvailable_Parms,
                       NULL);

    pFnIsKeyboardAvailable->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetUseTiltForwardAndBack
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::SetUseTiltForwardAndBack() {
    static UFunction* pFnSetUseTiltForwardAndBack = NULL;

    if (!pFnSetUseTiltForwardAndBack)
        pFnSetUseTiltForwardAndBack =
            (UFunction*)UObject::GObjObjects()->Data[10564];

    APlayerController_execSetUseTiltForwardAndBack_Parms
        SetUseTiltForwardAndBack_Parms;

    pFnSetUseTiltForwardAndBack->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetUseTiltForwardAndBack,
                       &SetUseTiltForwardAndBack_Parms, NULL);

    pFnSetUseTiltForwardAndBack->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetOnlyUseControllerTiltInput
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::SetOnlyUseControllerTiltInput() {
    static UFunction* pFnSetOnlyUseControllerTiltInput = NULL;

    if (!pFnSetOnlyUseControllerTiltInput)
        pFnSetOnlyUseControllerTiltInput =
            (UFunction*)UObject::GObjObjects()->Data[10562];

    APlayerController_execSetOnlyUseControllerTiltInput_Parms
        SetOnlyUseControllerTiltInput_Parms;

    pFnSetOnlyUseControllerTiltInput->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOnlyUseControllerTiltInput,
                       &SetOnlyUseControllerTiltInput_Parms, NULL);

    pFnSetOnlyUseControllerTiltInput->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetControllerTiltActive
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::SetControllerTiltActive() {
    static UFunction* pFnSetControllerTiltActive = NULL;

    if (!pFnSetControllerTiltActive)
        pFnSetControllerTiltActive =
            (UFunction*)UObject::GObjObjects()->Data[10560];

    APlayerController_execSetControllerTiltActive_Parms
        SetControllerTiltActive_Parms;

    pFnSetControllerTiltActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetControllerTiltActive,
                       &SetControllerTiltActive_Parms, NULL);

    pFnSetControllerTiltActive->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.IsControllerTiltActive
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerController::IsControllerTiltActive() {
    static UFunction* pFnIsControllerTiltActive = NULL;

    if (!pFnIsControllerTiltActive)
        pFnIsControllerTiltActive =
            (UFunction*)UObject::GObjObjects()->Data[10558];

    APlayerController_execIsControllerTiltActive_Parms
        IsControllerTiltActive_Parms;

    pFnIsControllerTiltActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsControllerTiltActive, &IsControllerTiltActive_Parms,
                       NULL);

    pFnIsControllerTiltActive->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetRumbleScale
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void APlayerController::SetRumbleScale() {
    static UFunction* pFnSetRumbleScale = NULL;

    if (!pFnSetRumbleScale)
        pFnSetRumbleScale = (UFunction*)UObject::GObjObjects()->Data[10556];

    APlayerController_execSetRumbleScale_Parms SetRumbleScale_Parms;

    this->ProcessEvent(pFnSetRumbleScale, &SetRumbleScale_Parms, NULL);
};

// Function Engine.PlayerController.ReloadProfileSettings
// [0x00020102]
// Parameters infos:

void APlayerController::ReloadProfileSettings() {
    static UFunction* pFnReloadProfileSettings = NULL;

    if (!pFnReloadProfileSettings)
        pFnReloadProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[10555];

    APlayerController_execReloadProfileSettings_Parms
        ReloadProfileSettings_Parms;

    this->ProcessEvent(pFnReloadProfileSettings, &ReloadProfileSettings_Parms,
                       NULL);
};

// Function Engine.PlayerController.UnregisterStandardPlayerDataStores
// [0x00020102]
// Parameters infos:

void APlayerController::UnregisterStandardPlayerDataStores() {
    static UFunction* pFnUnregisterStandardPlayerDataStores = NULL;

    if (!pFnUnregisterStandardPlayerDataStores)
        pFnUnregisterStandardPlayerDataStores =
            (UFunction*)UObject::GObjObjects()->Data[10546];

    APlayerController_execUnregisterStandardPlayerDataStores_Parms
        UnregisterStandardPlayerDataStores_Parms;

    this->ProcessEvent(pFnUnregisterStandardPlayerDataStores,
                       &UnregisterStandardPlayerDataStores_Parms, NULL);
};

// Function Engine.PlayerController.UnregisterPlayerDataStores
// [0x00020102]
// Parameters infos:

void APlayerController::UnregisterPlayerDataStores() {
    static UFunction* pFnUnregisterPlayerDataStores = NULL;

    if (!pFnUnregisterPlayerDataStores)
        pFnUnregisterPlayerDataStores =
            (UFunction*)UObject::GObjObjects()->Data[10541];

    APlayerController_execUnregisterPlayerDataStores_Parms
        UnregisterPlayerDataStores_Parms;

    this->ProcessEvent(pFnUnregisterPlayerDataStores,
                       &UnregisterPlayerDataStores_Parms, NULL);
};

// Function Engine.PlayerController.RegisterStandardPlayerDataStores
// [0x00080102]
// Parameters infos:

void APlayerController::RegisterStandardPlayerDataStores() {
    static UFunction* pFnRegisterStandardPlayerDataStores = NULL;

    if (!pFnRegisterStandardPlayerDataStores)
        pFnRegisterStandardPlayerDataStores =
            (UFunction*)UObject::GObjObjects()->Data[10532];

    APlayerController_execRegisterStandardPlayerDataStores_Parms
        RegisterStandardPlayerDataStores_Parms;

    this->ProcessEvent(pFnRegisterStandardPlayerDataStores,
                       &RegisterStandardPlayerDataStores_Parms, NULL);
};

// Function Engine.PlayerController.RegisterCustomPlayerDataStores
// [0x00080102]
// Parameters infos:

void APlayerController::RegisterCustomPlayerDataStores() {
    static UFunction* pFnRegisterCustomPlayerDataStores = NULL;

    if (!pFnRegisterCustomPlayerDataStores)
        pFnRegisterCustomPlayerDataStores =
            (UFunction*)UObject::GObjObjects()->Data[10527];

    APlayerController_execRegisterCustomPlayerDataStores_Parms
        RegisterCustomPlayerDataStores_Parms;

    this->ProcessEvent(pFnRegisterCustomPlayerDataStores,
                       &RegisterCustomPlayerDataStores_Parms, NULL);
};

// Function Engine.PlayerController.RegisterPlayerDataStores
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void APlayerController::RegisterPlayerDataStores() {
    static UFunction* pFnRegisterPlayerDataStores = NULL;

    if (!pFnRegisterPlayerDataStores)
        pFnRegisterPlayerDataStores =
            (UFunction*)UObject::GObjObjects()->Data[10526];

    APlayerController_execRegisterPlayerDataStores_Parms
        RegisterPlayerDataStores_Parms;

    this->ProcessEvent(pFnRegisterPlayerDataStores,
                       &RegisterPlayerDataStores_Parms, NULL);
};

// Function Engine.PlayerController.ClientInitializeDataStores
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientInitializeDataStores() {
    static UFunction* pFnClientInitializeDataStores = NULL;

    if (!pFnClientInitializeDataStores)
        pFnClientInitializeDataStores =
            (UFunction*)UObject::GObjObjects()->Data[10525];

    APlayerController_execClientInitializeDataStores_Parms
        ClientInitializeDataStores_Parms;

    this->ProcessEvent(pFnClientInitializeDataStores,
                       &ClientInitializeDataStores_Parms, NULL);
};

// Function Engine.PlayerController.InitInputSystem
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventInitInputSystem() {
    static UFunction* pFnInitInputSystem = NULL;

    if (!pFnInitInputSystem)
        pFnInitInputSystem = (UFunction*)UObject::GObjObjects()->Data[10519];

    APlayerController_eventInitInputSystem_Parms InitInputSystem_Parms;

    this->ProcessEvent(pFnInitInputSystem, &InitInputSystem_Parms, NULL);
};

// Function Engine.PlayerController.GetOnlineSubsystem
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void APlayerController::GetOnlineSubsystem() {
    static UFunction* pFnGetOnlineSubsystem = NULL;

    if (!pFnGetOnlineSubsystem)
        pFnGetOnlineSubsystem = (UFunction*)UObject::GObjObjects()->Data[10517];

    APlayerController_execGetOnlineSubsystem_Parms GetOnlineSubsystem_Parms;

    this->ProcessEvent(pFnGetOnlineSubsystem, &GetOnlineSubsystem_Parms, NULL);
};

// Function Engine.PlayerController.PostControllerIdChange
// [0x00820002]
// Parameters infos:

void APlayerController::PostControllerIdChange() {
    static UFunction* pFnPostControllerIdChange = NULL;

    if (!pFnPostControllerIdChange)
        pFnPostControllerIdChange =
            (UFunction*)UObject::GObjObjects()->Data[10514];

    APlayerController_execPostControllerIdChange_Parms
        PostControllerIdChange_Parms;

    this->ProcessEvent(pFnPostControllerIdChange, &PostControllerIdChange_Parms,
                       NULL);
};

// Function Engine.PlayerController.PreControllerIdChange
// [0x00020002]
// Parameters infos:

void APlayerController::PreControllerIdChange() {
    static UFunction* pFnPreControllerIdChange = NULL;

    if (!pFnPreControllerIdChange)
        pFnPreControllerIdChange =
            (UFunction*)UObject::GObjObjects()->Data[10512];

    APlayerController_execPreControllerIdChange_Parms
        PreControllerIdChange_Parms;

    this->ProcessEvent(pFnPreControllerIdChange, &PreControllerIdChange_Parms,
                       NULL);
};

// Function Engine.PlayerController.CleanOutSavedMoves
// [0x00020002]
// Parameters infos:

void APlayerController::CleanOutSavedMoves() {
    static UFunction* pFnCleanOutSavedMoves = NULL;

    if (!pFnCleanOutSavedMoves)
        pFnCleanOutSavedMoves = (UFunction*)UObject::GObjObjects()->Data[10511];

    APlayerController_execCleanOutSavedMoves_Parms CleanOutSavedMoves_Parms;

    this->ProcessEvent(pFnCleanOutSavedMoves, &CleanOutSavedMoves_Parms, NULL);
};

// Function Engine.PlayerController.ClientReset
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientReset() {
    static UFunction* pFnClientReset = NULL;

    if (!pFnClientReset)
        pFnClientReset = (UFunction*)UObject::GObjObjects()->Data[10510];

    APlayerController_execClientReset_Parms ClientReset_Parms;

    this->ProcessEvent(pFnClientReset, &ClientReset_Parms, NULL);
};

// Function Engine.PlayerController.Reset
// [0x00020002]
// Parameters infos:

void APlayerController::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[10508];

    APlayerController_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.PlayerController.SpawnDefaultHUD
// [0x00020002]
// Parameters infos:

void APlayerController::SpawnDefaultHUD() {
    static UFunction* pFnSpawnDefaultHUD = NULL;

    if (!pFnSpawnDefaultHUD)
        pFnSpawnDefaultHUD = (UFunction*)UObject::GObjObjects()->Data[10507];

    APlayerController_execSpawnDefaultHUD_Parms SpawnDefaultHUD_Parms;

    this->ProcessEvent(pFnSpawnDefaultHUD, &SpawnDefaultHUD_Parms, NULL);
};

// Function Engine.PlayerController.EnableCheats
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void APlayerController::EnableCheats() {
    static UFunction* pFnEnableCheats = NULL;

    if (!pFnEnableCheats)
        pFnEnableCheats = (UFunction*)UObject::GObjObjects()->Data[10506];

    APlayerController_execEnableCheats_Parms EnableCheats_Parms;

    this->ProcessEvent(pFnEnableCheats, &EnableCheats_Parms, NULL);
};

// Function Engine.PlayerController.AddCheats
// [0x00024002]
// Parameters infos:

void APlayerController::AddCheats() {
    static UFunction* pFnAddCheats = NULL;

    if (!pFnAddCheats)
        pFnAddCheats = (UFunction*)UObject::GObjObjects()->Data[10504];

    APlayerController_execAddCheats_Parms AddCheats_Parms;

    this->ProcessEvent(pFnAddCheats, &AddCheats_Parms, NULL);
};

// Function Engine.PlayerController.KickWarning
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventKickWarning() {
    static UFunction* pFnKickWarning = NULL;

    if (!pFnKickWarning)
        pFnKickWarning = (UFunction*)UObject::GObjObjects()->Data[10503];

    APlayerController_eventKickWarning_Parms KickWarning_Parms;

    this->ProcessEvent(pFnKickWarning, &KickWarning_Parms, NULL);
};

// Function Engine.PlayerController.ServerGivePawn
// [0x00020002]
// Parameters infos:

void APlayerController::ServerGivePawn() {
    static UFunction* pFnServerGivePawn = NULL;

    if (!pFnServerGivePawn)
        pFnServerGivePawn = (UFunction*)UObject::GObjObjects()->Data[10502];

    APlayerController_execServerGivePawn_Parms ServerGivePawn_Parms;

    this->ProcessEvent(pFnServerGivePawn, &ServerGivePawn_Parms, NULL);
};

// Function Engine.PlayerController.ServerShortTimeout
// [0x002200C2]
// Parameters infos:

void APlayerController::ServerShortTimeout() {
    static UFunction* pFnServerShortTimeout = NULL;

    if (!pFnServerShortTimeout)
        pFnServerShortTimeout = (UFunction*)UObject::GObjObjects()->Data[10500];

    APlayerController_execServerShortTimeout_Parms ServerShortTimeout_Parms;

    this->ProcessEvent(pFnServerShortTimeout, &ServerShortTimeout_Parms, NULL);
};

// Function Engine.PlayerController.ResetTimeMargin
// [0x00020002]
// Parameters infos:

void APlayerController::ResetTimeMargin() {
    static UFunction* pFnResetTimeMargin = NULL;

    if (!pFnResetTimeMargin)
        pFnResetTimeMargin = (UFunction*)UObject::GObjObjects()->Data[10499];

    APlayerController_execResetTimeMargin_Parms ResetTimeMargin_Parms;

    this->ProcessEvent(pFnResetTimeMargin, &ResetTimeMargin_Parms, NULL);
};

// Function Engine.PlayerController.PreRender
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPreRender() {
    static UFunction* pFnPreRender = NULL;

    if (!pFnPreRender)
        pFnPreRender = (UFunction*)UObject::GObjObjects()->Data[10497];

    APlayerController_eventPreRender_Parms PreRender_Parms;

    this->ProcessEvent(pFnPreRender, &PreRender_Parms, NULL);
};

// Function Engine.PlayerController.OnJoinMigratedGame
// [0x00020002]
// Parameters infos:

void APlayerController::OnJoinMigratedGame() {
    static UFunction* pFnOnJoinMigratedGame = NULL;

    if (!pFnOnJoinMigratedGame)
        pFnOnJoinMigratedGame = (UFunction*)UObject::GObjObjects()->Data[10494];

    APlayerController_execOnJoinMigratedGame_Parms OnJoinMigratedGame_Parms;

    this->ProcessEvent(pFnOnJoinMigratedGame, &OnJoinMigratedGame_Parms, NULL);
};

// Function Engine.PlayerController.PeerDesignatedAsClient
// [0x00020002]
// Parameters infos:

void APlayerController::PeerDesignatedAsClient() {
    static UFunction* pFnPeerDesignatedAsClient = NULL;

    if (!pFnPeerDesignatedAsClient)
        pFnPeerDesignatedAsClient =
            (UFunction*)UObject::GObjObjects()->Data[10491];

    APlayerController_execPeerDesignatedAsClient_Parms
        PeerDesignatedAsClient_Parms;

    this->ProcessEvent(pFnPeerDesignatedAsClient, &PeerDesignatedAsClient_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnUnregisterPlayerCompleteForJoinMigrate
// [0x00020002]
// Parameters infos:

void APlayerController::OnUnregisterPlayerCompleteForJoinMigrate() {
    static UFunction* pFnOnUnregisterPlayerCompleteForJoinMigrate = NULL;

    if (!pFnOnUnregisterPlayerCompleteForJoinMigrate)
        pFnOnUnregisterPlayerCompleteForJoinMigrate =
            (UFunction*)UObject::GObjObjects()->Data[10487];

    APlayerController_execOnUnregisterPlayerCompleteForJoinMigrate_Parms
        OnUnregisterPlayerCompleteForJoinMigrate_Parms;

    this->ProcessEvent(pFnOnUnregisterPlayerCompleteForJoinMigrate,
                       &OnUnregisterPlayerCompleteForJoinMigrate_Parms, NULL);
};

// Function Engine.PlayerController.PeerReceivedMigratedSession
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPeerReceivedMigratedSession() {
    static UFunction* pFnPeerReceivedMigratedSession = NULL;

    if (!pFnPeerReceivedMigratedSession)
        pFnPeerReceivedMigratedSession =
            (UFunction*)UObject::GObjObjects()->Data[10480];

    APlayerController_eventPeerReceivedMigratedSession_Parms
        PeerReceivedMigratedSession_Parms;

    this->ProcessEvent(pFnPeerReceivedMigratedSession,
                       &PeerReceivedMigratedSession_Parms, NULL);
};

// Function Engine.PlayerController.TellPeerToTravelToSession
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::TellPeerToTravelToSession() {
    static UFunction* pFnTellPeerToTravelToSession = NULL;

    if (!pFnTellPeerToTravelToSession)
        pFnTellPeerToTravelToSession =
            (UFunction*)UObject::GObjObjects()->Data[10474];

    APlayerController_execTellPeerToTravelToSession_Parms
        TellPeerToTravelToSession_Parms;

    pFnTellPeerToTravelToSession->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTellPeerToTravelToSession,
                       &TellPeerToTravelToSession_Parms, NULL);

    pFnTellPeerToTravelToSession->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.TellPeerToTravel
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::TellPeerToTravel() {
    static UFunction* pFnTellPeerToTravel = NULL;

    if (!pFnTellPeerToTravel)
        pFnTellPeerToTravel = (UFunction*)UObject::GObjObjects()->Data[10472];

    APlayerController_execTellPeerToTravel_Parms TellPeerToTravel_Parms;

    pFnTellPeerToTravel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTellPeerToTravel, &TellPeerToTravel_Parms, NULL);

    pFnTellPeerToTravel->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.PeerTravelAsHost
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::PeerTravelAsHost() {
    static UFunction* pFnPeerTravelAsHost = NULL;

    if (!pFnPeerTravelAsHost)
        pFnPeerTravelAsHost = (UFunction*)UObject::GObjObjects()->Data[10469];

    APlayerController_execPeerTravelAsHost_Parms PeerTravelAsHost_Parms;

    pFnPeerTravelAsHost->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPeerTravelAsHost, &PeerTravelAsHost_Parms, NULL);

    pFnPeerTravelAsHost->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.GetNewPeerHostURL
// [0x00020002]
// Parameters infos:

void APlayerController::GetNewPeerHostURL() {
    static UFunction* pFnGetNewPeerHostURL = NULL;

    if (!pFnGetNewPeerHostURL)
        pFnGetNewPeerHostURL = (UFunction*)UObject::GObjObjects()->Data[10467];

    APlayerController_execGetNewPeerHostURL_Parms GetNewPeerHostURL_Parms;

    this->ProcessEvent(pFnGetNewPeerHostURL, &GetNewPeerHostURL_Parms, NULL);
};

// Function Engine.PlayerController.PeerDesignatedAsHost
// [0x00020002]
// Parameters infos:

void APlayerController::PeerDesignatedAsHost() {
    static UFunction* pFnPeerDesignatedAsHost = NULL;

    if (!pFnPeerDesignatedAsHost)
        pFnPeerDesignatedAsHost =
            (UFunction*)UObject::GObjObjects()->Data[10463];

    APlayerController_execPeerDesignatedAsHost_Parms PeerDesignatedAsHost_Parms;

    this->ProcessEvent(pFnPeerDesignatedAsHost, &PeerDesignatedAsHost_Parms,
                       NULL);
};

// Function Engine.PlayerController.GetCurrentSearchClass
// [0x00020002]
// Parameters infos:

void APlayerController::GetCurrentSearchClass() {
    static UFunction* pFnGetCurrentSearchClass = NULL;

    if (!pFnGetCurrentSearchClass)
        pFnGetCurrentSearchClass =
            (UFunction*)UObject::GObjObjects()->Data[10461];

    APlayerController_execGetCurrentSearchClass_Parms
        GetCurrentSearchClass_Parms;

    this->ProcessEvent(pFnGetCurrentSearchClass, &GetCurrentSearchClass_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnHostMigratedOnlineGame
// [0x00020002]
// Parameters infos:

void APlayerController::OnHostMigratedOnlineGame() {
    static UFunction* pFnOnHostMigratedOnlineGame = NULL;

    if (!pFnOnHostMigratedOnlineGame)
        pFnOnHostMigratedOnlineGame =
            (UFunction*)UObject::GObjObjects()->Data[10458];

    APlayerController_execOnHostMigratedOnlineGame_Parms
        OnHostMigratedOnlineGame_Parms;

    this->ProcessEvent(pFnOnHostMigratedOnlineGame,
                       &OnHostMigratedOnlineGame_Parms, NULL);
};

// Function Engine.PlayerController.OnUnregisterPlayerCompleteForHostMigrate
// [0x00020002]
// Parameters infos:

void APlayerController::OnUnregisterPlayerCompleteForHostMigrate() {
    static UFunction* pFnOnUnregisterPlayerCompleteForHostMigrate = NULL;

    if (!pFnOnUnregisterPlayerCompleteForHostMigrate)
        pFnOnUnregisterPlayerCompleteForHostMigrate =
            (UFunction*)UObject::GObjObjects()->Data[10454];

    APlayerController_execOnUnregisterPlayerCompleteForHostMigrate_Parms
        OnUnregisterPlayerCompleteForHostMigrate_Parms;

    this->ProcessEvent(pFnOnUnregisterPlayerCompleteForHostMigrate,
                       &OnUnregisterPlayerCompleteForHostMigrate_Parms, NULL);
};

// Function Engine.PlayerController.RemoveMissingPeersFromSession
// [0x00820002]
// Parameters infos:

void APlayerController::RemoveMissingPeersFromSession() {
    static UFunction* pFnRemoveMissingPeersFromSession = NULL;

    if (!pFnRemoveMissingPeersFromSession)
        pFnRemoveMissingPeersFromSession =
            (UFunction*)UObject::GObjObjects()->Data[10445];

    APlayerController_execRemoveMissingPeersFromSession_Parms
        RemoveMissingPeersFromSession_Parms;

    this->ProcessEvent(pFnRemoveMissingPeersFromSession,
                       &RemoveMissingPeersFromSession_Parms, NULL);
};

// Function Engine.PlayerController.GetPRIFromNetId
// [0x00020002]
// Parameters infos:

void APlayerController::GetPRIFromNetId() {
    static UFunction* pFnGetPRIFromNetId = NULL;

    if (!pFnGetPRIFromNetId)
        pFnGetPRIFromNetId = (UFunction*)UObject::GObjObjects()->Data[10441];

    APlayerController_execGetPRIFromNetId_Parms GetPRIFromNetId_Parms;

    this->ProcessEvent(pFnGetPRIFromNetId, &GetPRIFromNetId_Parms, NULL);
};

// Function Engine.PlayerController.OnMissingPeersUnregistered
// [0x00120000]
// Parameters infos:

void APlayerController::OnMissingPeersUnregistered() {
    static UFunction* pFnOnMissingPeersUnregistered = NULL;

    if (!pFnOnMissingPeersUnregistered)
        pFnOnMissingPeersUnregistered =
            (UFunction*)UObject::GObjObjects()->Data[10437];

    APlayerController_execOnMissingPeersUnregistered_Parms
        OnMissingPeersUnregistered_Parms;

    this->ProcessEvent(pFnOnMissingPeersUnregistered,
                       &OnMissingPeersUnregistered_Parms, NULL);
};

// Function Engine.PlayerController.GetRegisteredPlayersInSession
// [0x00420000]
// Parameters infos:

void APlayerController::GetRegisteredPlayersInSession() {
    static UFunction* pFnGetRegisteredPlayersInSession = NULL;

    if (!pFnGetRegisteredPlayersInSession)
        pFnGetRegisteredPlayersInSession =
            (UFunction*)UObject::GObjObjects()->Data[10433];

    APlayerController_execGetRegisteredPlayersInSession_Parms
        GetRegisteredPlayersInSession_Parms;

    this->ProcessEvent(pFnGetRegisteredPlayersInSession,
                       &GetRegisteredPlayersInSession_Parms, NULL);
};

// Function Engine.PlayerController.NotifyHostMigrationStarted
// [0x00020100]
// Parameters infos:

void APlayerController::NotifyHostMigrationStarted() {
    static UFunction* pFnNotifyHostMigrationStarted = NULL;

    if (!pFnNotifyHostMigrationStarted)
        pFnNotifyHostMigrationStarted =
            (UFunction*)UObject::GObjObjects()->Data[10432];

    APlayerController_execNotifyHostMigrationStarted_Parms
        NotifyHostMigrationStarted_Parms;

    this->ProcessEvent(pFnNotifyHostMigrationStarted,
                       &NotifyHostMigrationStarted_Parms, NULL);
};

// Function Engine.PlayerController.MigrateNewHost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventMigrateNewHost() {
    static UFunction* pFnMigrateNewHost = NULL;

    if (!pFnMigrateNewHost)
        pFnMigrateNewHost = (UFunction*)UObject::GObjObjects()->Data[10429];

    APlayerController_eventMigrateNewHost_Parms MigrateNewHost_Parms;

    this->ProcessEvent(pFnMigrateNewHost, &MigrateNewHost_Parms, NULL);
};

// Function Engine.PlayerController.IsBestHostPeer
// [0x00020002]
// Parameters infos:

void APlayerController::IsBestHostPeer() {
    static UFunction* pFnIsBestHostPeer = NULL;

    if (!pFnIsBestHostPeer)
        pFnIsBestHostPeer = (UFunction*)UObject::GObjObjects()->Data[10424];

    APlayerController_execIsBestHostPeer_Parms IsBestHostPeer_Parms;

    this->ProcessEvent(pFnIsBestHostPeer, &IsBestHostPeer_Parms, NULL);
};

// Function Engine.PlayerController.NotifyPeerDisconnectHost
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventNotifyPeerDisconnectHost() {
    static UFunction* pFnNotifyPeerDisconnectHost = NULL;

    if (!pFnNotifyPeerDisconnectHost)
        pFnNotifyPeerDisconnectHost =
            (UFunction*)UObject::GObjObjects()->Data[10421];

    APlayerController_eventNotifyPeerDisconnectHost_Parms
        NotifyPeerDisconnectHost_Parms;

    this->ProcessEvent(pFnNotifyPeerDisconnectHost,
                       &NotifyPeerDisconnectHost_Parms, NULL);
};

// Function Engine.PlayerController.ClientUpdateBestNextHosts
// [0x010201C2]
// Parameters infos:

void APlayerController::ClientUpdateBestNextHosts() {
    static UFunction* pFnClientUpdateBestNextHosts = NULL;

    if (!pFnClientUpdateBestNextHosts)
        pFnClientUpdateBestNextHosts =
            (UFunction*)UObject::GObjObjects()->Data[10417];

    APlayerController_execClientUpdateBestNextHosts_Parms
        ClientUpdateBestNextHosts_Parms;

    this->ProcessEvent(pFnClientUpdateBestNextHosts,
                       &ClientUpdateBestNextHosts_Parms, NULL);
};

// Function Engine.PlayerController.ServerRemovePeer
// [0x00A200C2]
// Parameters infos:

void APlayerController::ServerRemovePeer() {
    static UFunction* pFnServerRemovePeer = NULL;

    if (!pFnServerRemovePeer)
        pFnServerRemovePeer = (UFunction*)UObject::GObjObjects()->Data[10413];

    APlayerController_execServerRemovePeer_Parms ServerRemovePeer_Parms;

    this->ProcessEvent(pFnServerRemovePeer, &ServerRemovePeer_Parms, NULL);
};

// Function Engine.PlayerController.ServerAddPeer
// [0x00A200C2]
// Parameters infos:

void APlayerController::ServerAddPeer() {
    static UFunction* pFnServerAddPeer = NULL;

    if (!pFnServerAddPeer)
        pFnServerAddPeer = (UFunction*)UObject::GObjObjects()->Data[10408];

    APlayerController_execServerAddPeer_Parms ServerAddPeer_Parms;

    this->ProcessEvent(pFnServerAddPeer, &ServerAddPeer_Parms, NULL);
};

// Function Engine.PlayerController.RemovePeer
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventRemovePeer() {
    static UFunction* pFnRemovePeer = NULL;

    if (!pFnRemovePeer)
        pFnRemovePeer = (UFunction*)UObject::GObjObjects()->Data[10404];

    APlayerController_eventRemovePeer_Parms RemovePeer_Parms;

    this->ProcessEvent(pFnRemovePeer, &RemovePeer_Parms, NULL);
};

// Function Engine.PlayerController.AddPeer
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventAddPeer() {
    static UFunction* pFnAddPeer = NULL;

    if (!pFnAddPeer)
        pFnAddPeer = (UFunction*)UObject::GObjObjects()->Data[10399];

    APlayerController_eventAddPeer_Parms AddPeer_Parms;

    this->ProcessEvent(pFnAddPeer, &AddPeer_Parms, NULL);
};

// Function Engine.PlayerController.BestNextHostSort
// [0x00020000]
// Parameters infos:

void APlayerController::BestNextHostSort() {
    static UFunction* pFnBestNextHostSort = NULL;

    if (!pFnBestNextHostSort)
        pFnBestNextHostSort = (UFunction*)UObject::GObjObjects()->Data[10398];

    APlayerController_execBestNextHostSort_Parms BestNextHostSort_Parms;

    this->ProcessEvent(pFnBestNextHostSort, &BestNextHostSort_Parms, NULL);
};

// Function Engine.PlayerController.FindConnectedPeerIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void APlayerController::FindConnectedPeerIndex() {
    static UFunction* pFnFindConnectedPeerIndex = NULL;

    if (!pFnFindConnectedPeerIndex)
        pFnFindConnectedPeerIndex =
            (UFunction*)UObject::GObjObjects()->Data[10394];

    APlayerController_execFindConnectedPeerIndex_Parms
        FindConnectedPeerIndex_Parms;

    this->ProcessEvent(pFnFindConnectedPeerIndex, &FindConnectedPeerIndex_Parms,
                       NULL);
};

// Function Engine.PlayerController.ReceivedPlayer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventReceivedPlayer() {
    static UFunction* pFnReceivedPlayer = NULL;

    if (!pFnReceivedPlayer)
        pFnReceivedPlayer = (UFunction*)UObject::GObjObjects()->Data[10393];

    APlayerController_eventReceivedPlayer_Parms ReceivedPlayer_Parms;

    this->ProcessEvent(pFnReceivedPlayer, &ReceivedPlayer_Parms, NULL);
};

// Function Engine.PlayerController.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[10392];

    APlayerController_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.PlayerController.SpawnCoverReplicator
// [0x00020002]
// Parameters infos:

void APlayerController::SpawnCoverReplicator() {
    static UFunction* pFnSpawnCoverReplicator = NULL;

    if (!pFnSpawnCoverReplicator)
        pFnSpawnCoverReplicator =
            (UFunction*)UObject::GObjObjects()->Data[10390];

    APlayerController_execSpawnCoverReplicator_Parms SpawnCoverReplicator_Parms;

    this->ProcessEvent(pFnSpawnCoverReplicator, &SpawnCoverReplicator_Parms,
                       NULL);
};

// Function Engine.PlayerController.CanUnpauseControllerConnected
// [0x00020002]
// Parameters infos:

void APlayerController::CanUnpauseControllerConnected() {
    static UFunction* pFnCanUnpauseControllerConnected = NULL;

    if (!pFnCanUnpauseControllerConnected)
        pFnCanUnpauseControllerConnected =
            (UFunction*)UObject::GObjObjects()->Data[10388];

    APlayerController_execCanUnpauseControllerConnected_Parms
        CanUnpauseControllerConnected_Parms;

    this->ProcessEvent(pFnCanUnpauseControllerConnected,
                       &CanUnpauseControllerConnected_Parms, NULL);
};

// Function Engine.PlayerController.ControllerChangedUnpause
// [0x00020002]
// Parameters infos:

void APlayerController::ControllerChangedUnpause() {
    static UFunction* pFnControllerChangedUnpause = NULL;

    if (!pFnControllerChangedUnpause)
        pFnControllerChangedUnpause =
            (UFunction*)UObject::GObjObjects()->Data[10387];

    APlayerController_execControllerChangedUnpause_Parms
        ControllerChangedUnpause_Parms;

    this->ProcessEvent(pFnControllerChangedUnpause,
                       &ControllerChangedUnpause_Parms, NULL);
};

// Function Engine.PlayerController.ControllerChangedPause
// [0x00020002]
// Parameters infos:

void APlayerController::ControllerChangedPause() {
    static UFunction* pFnControllerChangedPause = NULL;

    if (!pFnControllerChangedPause)
        pFnControllerChangedPause =
            (UFunction*)UObject::GObjObjects()->Data[10386];

    APlayerController_execControllerChangedPause_Parms
        ControllerChangedPause_Parms;

    this->ProcessEvent(pFnControllerChangedPause, &ControllerChangedPause_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnControllerChanged
// [0x00020002]
// Parameters infos:

void APlayerController::OnControllerChanged() {
    static UFunction* pFnOnControllerChanged = NULL;

    if (!pFnOnControllerChanged)
        pFnOnControllerChanged =
            (UFunction*)UObject::GObjObjects()->Data[10381];

    APlayerController_execOnControllerChanged_Parms OnControllerChanged_Parms;

    this->ProcessEvent(pFnOnControllerChanged, &OnControllerChanged_Parms,
                       NULL);
};

// Function Engine.PlayerController.CanUnpauseExternalUI
// [0x00020002]
// Parameters infos:

void APlayerController::CanUnpauseExternalUI() {
    static UFunction* pFnCanUnpauseExternalUI = NULL;

    if (!pFnCanUnpauseExternalUI)
        pFnCanUnpauseExternalUI =
            (UFunction*)UObject::GObjObjects()->Data[10379];

    APlayerController_execCanUnpauseExternalUI_Parms CanUnpauseExternalUI_Parms;

    this->ProcessEvent(pFnCanUnpauseExternalUI, &CanUnpauseExternalUI_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnExternalUIChanged
// [0x00020002]
// Parameters infos:

void APlayerController::OnExternalUIChanged() {
    static UFunction* pFnOnExternalUIChanged = NULL;

    if (!pFnOnExternalUIChanged)
        pFnOnExternalUIChanged =
            (UFunction*)UObject::GObjObjects()->Data[10377];

    APlayerController_execOnExternalUIChanged_Parms OnExternalUIChanged_Parms;

    this->ProcessEvent(pFnOnExternalUIChanged, &OnExternalUIChanged_Parms,
                       NULL);
};

// Function Engine.PlayerController.OnPrivilegeLevelChecked
// [0x00020002]
// Parameters infos:

void APlayerController::OnPrivilegeLevelChecked() {
    static UFunction* pFnOnPrivilegeLevelChecked = NULL;

    if (!pFnOnPrivilegeLevelChecked)
        pFnOnPrivilegeLevelChecked =
            (UFunction*)UObject::GObjObjects()->Data[10372];

    APlayerController_execOnPrivilegeLevelChecked_Parms
        OnPrivilegeLevelChecked_Parms;

    this->ProcessEvent(pFnOnPrivilegeLevelChecked,
                       &OnPrivilegeLevelChecked_Parms, NULL);
};

// Function Engine.PlayerController.CheckPrivileges
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventCheckPrivileges() {
    static UFunction* pFnCheckPrivileges = NULL;

    if (!pFnCheckPrivileges)
        pFnCheckPrivileges = (UFunction*)UObject::GObjObjects()->Data[10368];

    APlayerController_eventCheckPrivileges_Parms CheckPrivileges_Parms;

    this->ProcessEvent(pFnCheckPrivileges, &CheckPrivileges_Parms, NULL);
};

// Function Engine.PlayerController.ForceClearUnpauseDelegates
// [0x00020002]
// Parameters infos:

void APlayerController::ForceClearUnpauseDelegates() {
    static UFunction* pFnForceClearUnpauseDelegates = NULL;

    if (!pFnForceClearUnpauseDelegates)
        pFnForceClearUnpauseDelegates =
            (UFunction*)UObject::GObjObjects()->Data[10367];

    APlayerController_execForceClearUnpauseDelegates_Parms
        ForceClearUnpauseDelegates_Parms;

    this->ProcessEvent(pFnForceClearUnpauseDelegates,
                       &ForceClearUnpauseDelegates_Parms, NULL);
};

// Function Engine.PlayerController.DisableActorHeadTracking
// [0x01020140]
// Parameters infos:

void APlayerController::DisableActorHeadTracking() {
    static UFunction* pFnDisableActorHeadTracking = NULL;

    if (!pFnDisableActorHeadTracking)
        pFnDisableActorHeadTracking =
            (UFunction*)UObject::GObjObjects()->Data[10365];

    APlayerController_execDisableActorHeadTracking_Parms
        DisableActorHeadTracking_Parms;

    this->ProcessEvent(pFnDisableActorHeadTracking,
                       &DisableActorHeadTracking_Parms, NULL);
};

// Function Engine.PlayerController.EnableActorHeadTracking
// [0x01020140]
// Parameters infos:

void APlayerController::EnableActorHeadTracking() {
    static UFunction* pFnEnableActorHeadTracking = NULL;

    if (!pFnEnableActorHeadTracking)
        pFnEnableActorHeadTracking =
            (UFunction*)UObject::GObjObjects()->Data[10355];

    APlayerController_execEnableActorHeadTracking_Parms
        EnableActorHeadTracking_Parms;

    this->ProcessEvent(pFnEnableActorHeadTracking,
                       &EnableActorHeadTracking_Parms, NULL);
};

// Function Engine.PlayerController.FellOutOfWorld
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void APlayerController::eventFellOutOfWorld() {
    static UFunction* pFnFellOutOfWorld = NULL;

    if (!pFnFellOutOfWorld)
        pFnFellOutOfWorld = (UFunction*)UObject::GObjObjects()->Data[10353];

    APlayerController_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;

    this->ProcessEvent(pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL);
};

// Function Engine.PlayerController.CleanUpAudioComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::CleanUpAudioComponents() {
    static UFunction* pFnCleanUpAudioComponents = NULL;

    if (!pFnCleanUpAudioComponents)
        pFnCleanUpAudioComponents =
            (UFunction*)UObject::GObjObjects()->Data[10352];

    APlayerController_execCleanUpAudioComponents_Parms
        CleanUpAudioComponents_Parms;

    pFnCleanUpAudioComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCleanUpAudioComponents, &CleanUpAudioComponents_Parms,
                       NULL);

    pFnCleanUpAudioComponents->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.FindStairRotation
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x020C]
// Parameters infos:

void APlayerController::FindStairRotation() {
    static UFunction* pFnFindStairRotation = NULL;

    if (!pFnFindStairRotation)
        pFnFindStairRotation = (UFunction*)UObject::GObjObjects()->Data[10349];

    APlayerController_execFindStairRotation_Parms FindStairRotation_Parms;

    unsigned short NativeIndex = pFnFindStairRotation->iNative;
    pFnFindStairRotation->iNative = 0;

    pFnFindStairRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindStairRotation, &FindStairRotation_Parms, NULL);

    pFnFindStairRotation->FunctionFlags |= 0x400;

    pFnFindStairRotation->iNative = NativeIndex;
};

// Function Engine.PlayerController.CheckSpeedHack
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::CheckSpeedHack() {
    static UFunction* pFnCheckSpeedHack = NULL;

    if (!pFnCheckSpeedHack)
        pFnCheckSpeedHack = (UFunction*)UObject::GObjObjects()->Data[10346];

    APlayerController_execCheckSpeedHack_Parms CheckSpeedHack_Parms;

    pFnCheckSpeedHack->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckSpeedHack, &CheckSpeedHack_Parms, NULL);

    pFnCheckSpeedHack->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ServerProcessConvolve
// [0x00240CC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventServerProcessConvolve() {
    static UFunction* pFnServerProcessConvolve = NULL;

    if (!pFnServerProcessConvolve)
        pFnServerProcessConvolve =
            (UFunction*)UObject::GObjObjects()->Data[10343];

    APlayerController_eventServerProcessConvolve_Parms
        ServerProcessConvolve_Parms;

    pFnServerProcessConvolve->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerProcessConvolve, &ServerProcessConvolve_Parms,
                       NULL);

    pFnServerProcessConvolve->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ClientConvolve
// [0x01040DC1] ( FUNC_Final | FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventClientConvolve() {
    static UFunction* pFnClientConvolve = NULL;

    if (!pFnClientConvolve)
        pFnClientConvolve = (UFunction*)UObject::GObjObjects()->Data[10340];

    APlayerController_eventClientConvolve_Parms ClientConvolve_Parms;

    pFnClientConvolve->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClientConvolve, &ClientConvolve_Parms, NULL);

    pFnClientConvolve->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetAudioGroupVolume
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void APlayerController::SetAudioGroupVolume() {
    static UFunction* pFnSetAudioGroupVolume = NULL;

    if (!pFnSetAudioGroupVolume)
        pFnSetAudioGroupVolume =
            (UFunction*)UObject::GObjObjects()->Data[10337];

    APlayerController_execSetAudioGroupVolume_Parms SetAudioGroupVolume_Parms;

    pFnSetAudioGroupVolume->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAudioGroupVolume, &SetAudioGroupVolume_Parms,
                       NULL);

    pFnSetAudioGroupVolume->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetAllowMatureLanguage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::SetAllowMatureLanguage() {
    static UFunction* pFnSetAllowMatureLanguage = NULL;

    if (!pFnSetAllowMatureLanguage)
        pFnSetAllowMatureLanguage =
            (UFunction*)UObject::GObjObjects()->Data[10335];

    APlayerController_execSetAllowMatureLanguage_Parms
        SetAllowMatureLanguage_Parms;

    pFnSetAllowMatureLanguage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAllowMatureLanguage, &SetAllowMatureLanguage_Parms,
                       NULL);

    pFnSetAllowMatureLanguage->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.PasteFromClipboard
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::PasteFromClipboard() {
    static UFunction* pFnPasteFromClipboard = NULL;

    if (!pFnPasteFromClipboard)
        pFnPasteFromClipboard = (UFunction*)UObject::GObjObjects()->Data[10333];

    APlayerController_execPasteFromClipboard_Parms PasteFromClipboard_Parms;

    pFnPasteFromClipboard->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPasteFromClipboard, &PasteFromClipboard_Parms, NULL);

    pFnPasteFromClipboard->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.CopyToClipboard
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APlayerController::CopyToClipboard() {
    static UFunction* pFnCopyToClipboard = NULL;

    if (!pFnCopyToClipboard)
        pFnCopyToClipboard = (UFunction*)UObject::GObjObjects()->Data[10331];

    APlayerController_execCopyToClipboard_Parms CopyToClipboard_Parms;

    pFnCopyToClipboard->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCopyToClipboard, &CopyToClipboard_Parms, NULL);

    pFnCopyToClipboard->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.GetDefaultURL
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::GetDefaultURL() {
    static UFunction* pFnGetDefaultURL = NULL;

    if (!pFnGetDefaultURL)
        pFnGetDefaultURL = (UFunction*)UObject::GObjObjects()->Data[10328];

    APlayerController_execGetDefaultURL_Parms GetDefaultURL_Parms;

    pFnGetDefaultURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDefaultURL, &GetDefaultURL_Parms, NULL);

    pFnGetDefaultURL->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.UpdateURL
// [0x00020401] ( FUNC_Final | FUNC_Native ) iNative [0x0222]
// Parameters infos:

void APlayerController::UpdateURL() {
    static UFunction* pFnUpdateURL = NULL;

    if (!pFnUpdateURL)
        pFnUpdateURL = (UFunction*)UObject::GObjObjects()->Data[10324];

    APlayerController_execUpdateURL_Parms UpdateURL_Parms;

    unsigned short NativeIndex = pFnUpdateURL->iNative;
    pFnUpdateURL->iNative = 0;

    pFnUpdateURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateURL, &UpdateURL_Parms, NULL);

    pFnUpdateURL->FunctionFlags |= 0x400;

    pFnUpdateURL->iNative = NativeIndex;
};

// Function Engine.PlayerController.ClientTravel
// [0x01024DC0] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APlayerController::eventClientTravel() {
    static UFunction* pFnClientTravel = NULL;

    if (!pFnClientTravel)
        pFnClientTravel = (UFunction*)UObject::GObjObjects()->Data[10319];

    APlayerController_eventClientTravel_Parms ClientTravel_Parms;

    pFnClientTravel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClientTravel, &ClientTravel_Parms, NULL);

    pFnClientTravel->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.ConsoleCommand
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void APlayerController::ConsoleCommand() {
    static UFunction* pFnConsoleCommand = NULL;

    if (!pFnConsoleCommand)
        pFnConsoleCommand = (UFunction*)UObject::GObjObjects()->Data[6325];

    APlayerController_execConsoleCommand_Parms ConsoleCommand_Parms;

    pFnConsoleCommand->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnConsoleCommand, &ConsoleCommand_Parms, NULL);

    pFnConsoleCommand->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.GetServerNetworkAddress
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::GetServerNetworkAddress() {
    static UFunction* pFnGetServerNetworkAddress = NULL;

    if (!pFnGetServerNetworkAddress)
        pFnGetServerNetworkAddress =
            (UFunction*)UObject::GObjObjects()->Data[10315];

    APlayerController_execGetServerNetworkAddress_Parms
        GetServerNetworkAddress_Parms;

    pFnGetServerNetworkAddress->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetServerNetworkAddress,
                       &GetServerNetworkAddress_Parms, NULL);

    pFnGetServerNetworkAddress->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.GetPlayerNetworkAddress
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::GetPlayerNetworkAddress() {
    static UFunction* pFnGetPlayerNetworkAddress = NULL;

    if (!pFnGetPlayerNetworkAddress)
        pFnGetPlayerNetworkAddress =
            (UFunction*)UObject::GObjObjects()->Data[8009];

    APlayerController_execGetPlayerNetworkAddress_Parms
        GetPlayerNetworkAddress_Parms;

    pFnGetPlayerNetworkAddress->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerNetworkAddress,
                       &GetPlayerNetworkAddress_Parms, NULL);

    pFnGetPlayerNetworkAddress->FunctionFlags |= 0x400;
};

// Function Engine.PlayerController.SetNetSpeed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerController::SetNetSpeed() {
    static UFunction* pFnSetNetSpeed = NULL;

    if (!pFnSetNetSpeed)
        pFnSetNetSpeed = (UFunction*)UObject::GObjObjects()->Data[10313];

    APlayerController_execSetNetSpeed_Parms SetNetSpeed_Parms;

    pFnSetNetSpeed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNetSpeed, &SetNetSpeed_Parms, NULL);

    pFnSetNetSpeed->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.AnalyticsEndSession
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::AnalyticsEndSession() {
    static UFunction* pFnAnalyticsEndSession = NULL;

    if (!pFnAnalyticsEndSession)
        pFnAnalyticsEndSession =
            (UFunction*)UObject::GObjObjects()->Data[16210];

    UCheatManager_execAnalyticsEndSession_Parms AnalyticsEndSession_Parms;

    this->ProcessEvent(pFnAnalyticsEndSession, &AnalyticsEndSession_Parms,
                       NULL);
};

// Function Engine.CheatManager.AnalyticsStartSession
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::AnalyticsStartSession() {
    static UFunction* pFnAnalyticsStartSession = NULL;

    if (!pFnAnalyticsStartSession)
        pFnAnalyticsStartSession =
            (UFunction*)UObject::GObjObjects()->Data[16209];

    UCheatManager_execAnalyticsStartSession_Parms AnalyticsStartSession_Parms;

    this->ProcessEvent(pFnAnalyticsStartSession, &AnalyticsStartSession_Parms,
                       NULL);
};

// Function Engine.CheatManager.GetAnalyticsUserId
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::GetAnalyticsUserId() {
    static UFunction* pFnGetAnalyticsUserId = NULL;

    if (!pFnGetAnalyticsUserId)
        pFnGetAnalyticsUserId = (UFunction*)UObject::GObjObjects()->Data[16208];

    UCheatManager_execGetAnalyticsUserId_Parms GetAnalyticsUserId_Parms;

    pFnGetAnalyticsUserId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAnalyticsUserId, &GetAnalyticsUserId_Parms, NULL);

    pFnGetAnalyticsUserId->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.SetAnalyticsUserId
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SetAnalyticsUserId() {
    static UFunction* pFnSetAnalyticsUserId = NULL;

    if (!pFnSetAnalyticsUserId)
        pFnSetAnalyticsUserId = (UFunction*)UObject::GObjObjects()->Data[16206];

    UCheatManager_execSetAnalyticsUserId_Parms SetAnalyticsUserId_Parms;

    this->ProcessEvent(pFnSetAnalyticsUserId, &SetAnalyticsUserId_Parms, NULL);
};

// Function Engine.CheatManager.SendAnalyticsCachedEvents
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SendAnalyticsCachedEvents() {
    static UFunction* pFnSendAnalyticsCachedEvents = NULL;

    if (!pFnSendAnalyticsCachedEvents)
        pFnSendAnalyticsCachedEvents =
            (UFunction*)UObject::GObjObjects()->Data[16205];

    UCheatManager_execSendAnalyticsCachedEvents_Parms
        SendAnalyticsCachedEvents_Parms;

    this->ProcessEvent(pFnSendAnalyticsCachedEvents,
                       &SendAnalyticsCachedEvents_Parms, NULL);
};

// Function Engine.CheatManager.SendAnalyticsCurrencyGivenEvent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SendAnalyticsCurrencyGivenEvent() {
    static UFunction* pFnSendAnalyticsCurrencyGivenEvent = NULL;

    if (!pFnSendAnalyticsCurrencyGivenEvent)
        pFnSendAnalyticsCurrencyGivenEvent =
            (UFunction*)UObject::GObjObjects()->Data[16202];

    UCheatManager_execSendAnalyticsCurrencyGivenEvent_Parms
        SendAnalyticsCurrencyGivenEvent_Parms;

    this->ProcessEvent(pFnSendAnalyticsCurrencyGivenEvent,
                       &SendAnalyticsCurrencyGivenEvent_Parms, NULL);
};

// Function Engine.CheatManager.SendAnalyticsCurrencyPurchaseEvent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SendAnalyticsCurrencyPurchaseEvent() {
    static UFunction* pFnSendAnalyticsCurrencyPurchaseEvent = NULL;

    if (!pFnSendAnalyticsCurrencyPurchaseEvent)
        pFnSendAnalyticsCurrencyPurchaseEvent =
            (UFunction*)UObject::GObjObjects()->Data[16196];

    UCheatManager_execSendAnalyticsCurrencyPurchaseEvent_Parms
        SendAnalyticsCurrencyPurchaseEvent_Parms;

    this->ProcessEvent(pFnSendAnalyticsCurrencyPurchaseEvent,
                       &SendAnalyticsCurrencyPurchaseEvent_Parms, NULL);
};

// Function Engine.CheatManager.SendAnalyticsItemPurchaseEvent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SendAnalyticsItemPurchaseEvent() {
    static UFunction* pFnSendAnalyticsItemPurchaseEvent = NULL;

    if (!pFnSendAnalyticsItemPurchaseEvent)
        pFnSendAnalyticsItemPurchaseEvent =
            (UFunction*)UObject::GObjObjects()->Data[16191];

    UCheatManager_execSendAnalyticsItemPurchaseEvent_Parms
        SendAnalyticsItemPurchaseEvent_Parms;

    this->ProcessEvent(pFnSendAnalyticsItemPurchaseEvent,
                       &SendAnalyticsItemPurchaseEvent_Parms, NULL);
};

// Function Engine.CheatManager.SendAnalyticsUserAttributeEvent
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SendAnalyticsUserAttributeEvent() {
    static UFunction* pFnSendAnalyticsUserAttributeEvent = NULL;

    if (!pFnSendAnalyticsUserAttributeEvent)
        pFnSendAnalyticsUserAttributeEvent =
            (UFunction*)UObject::GObjObjects()->Data[16188];

    UCheatManager_execSendAnalyticsUserAttributeEvent_Parms
        SendAnalyticsUserAttributeEvent_Parms;

    this->ProcessEvent(pFnSendAnalyticsUserAttributeEvent,
                       &SendAnalyticsUserAttributeEvent_Parms, NULL);
};

// Function Engine.CheatManager.SendAnalyticsEvent
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SendAnalyticsEvent() {
    static UFunction* pFnSendAnalyticsEvent = NULL;

    if (!pFnSendAnalyticsEvent)
        pFnSendAnalyticsEvent = (UFunction*)UObject::GObjObjects()->Data[16183];

    UCheatManager_execSendAnalyticsEvent_Parms SendAnalyticsEvent_Parms;

    this->ProcessEvent(pFnSendAnalyticsEvent, &SendAnalyticsEvent_Parms, NULL);
};

// Function Engine.CheatManager.OnRequestComplete
// [0x00020002]
// Parameters infos:

void UCheatManager::OnRequestComplete() {
    static UFunction* pFnOnRequestComplete = NULL;

    if (!pFnOnRequestComplete)
        pFnOnRequestComplete = (UFunction*)UObject::GObjObjects()->Data[16174];

    UCheatManager_execOnRequestComplete_Parms OnRequestComplete_Parms;

    this->ProcessEvent(pFnOnRequestComplete, &OnRequestComplete_Parms, NULL);
};

// Function Engine.CheatManager.TestHttp
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::TestHttp() {
    static UFunction* pFnTestHttp = NULL;

    if (!pFnTestHttp)
        pFnTestHttp = (UFunction*)UObject::GObjObjects()->Data[16168];

    UCheatManager_execTestHttp_Parms TestHttp_Parms;

    this->ProcessEvent(pFnTestHttp, &TestHttp_Parms, NULL);
};

// Function Engine.CheatManager.OnDeleteUserFileComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCheatManager::OnDeleteUserFileComplete() {
    static UFunction* pFnOnDeleteUserFileComplete = NULL;

    if (!pFnOnDeleteUserFileComplete)
        pFnOnDeleteUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[16164];

    UCheatManager_execOnDeleteUserFileComplete_Parms
        OnDeleteUserFileComplete_Parms;

    this->ProcessEvent(pFnOnDeleteUserFileComplete,
                       &OnDeleteUserFileComplete_Parms, NULL);
};

// Function Engine.CheatManager.DebugDeleteUserFile
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugDeleteUserFile() {
    static UFunction* pFnDebugDeleteUserFile = NULL;

    if (!pFnDebugDeleteUserFile)
        pFnDebugDeleteUserFile =
            (UFunction*)UObject::GObjObjects()->Data[16161];

    UCheatManager_execDebugDeleteUserFile_Parms DebugDeleteUserFile_Parms;

    this->ProcessEvent(pFnDebugDeleteUserFile, &DebugDeleteUserFile_Parms,
                       NULL);
};

// Function Engine.CheatManager.OnReadUserFileComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCheatManager::OnReadUserFileComplete() {
    static UFunction* pFnOnReadUserFileComplete = NULL;

    if (!pFnOnReadUserFileComplete)
        pFnOnReadUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[16155];

    UCheatManager_execOnReadUserFileComplete_Parms OnReadUserFileComplete_Parms;

    this->ProcessEvent(pFnOnReadUserFileComplete, &OnReadUserFileComplete_Parms,
                       NULL);
};

// Function Engine.CheatManager.DebugReadUserFile
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugReadUserFile() {
    static UFunction* pFnDebugReadUserFile = NULL;

    if (!pFnDebugReadUserFile)
        pFnDebugReadUserFile = (UFunction*)UObject::GObjObjects()->Data[16152];

    UCheatManager_execDebugReadUserFile_Parms DebugReadUserFile_Parms;

    this->ProcessEvent(pFnDebugReadUserFile, &DebugReadUserFile_Parms, NULL);
};

// Function Engine.CheatManager.OnWriteUserFileComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCheatManager::OnWriteUserFileComplete() {
    static UFunction* pFnOnWriteUserFileComplete = NULL;

    if (!pFnOnWriteUserFileComplete)
        pFnOnWriteUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[16148];

    UCheatManager_execOnWriteUserFileComplete_Parms
        OnWriteUserFileComplete_Parms;

    this->ProcessEvent(pFnOnWriteUserFileComplete,
                       &OnWriteUserFileComplete_Parms, NULL);
};

// Function Engine.CheatManager.DebugWriteUserFile
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugWriteUserFile() {
    static UFunction* pFnDebugWriteUserFile = NULL;

    if (!pFnDebugWriteUserFile)
        pFnDebugWriteUserFile = (UFunction*)UObject::GObjObjects()->Data[16142];

    UCheatManager_execDebugWriteUserFile_Parms DebugWriteUserFile_Parms;

    this->ProcessEvent(pFnDebugWriteUserFile, &DebugWriteUserFile_Parms, NULL);
};

// Function Engine.CheatManager.OnEnumerateUserFilesComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCheatManager::OnEnumerateUserFilesComplete() {
    static UFunction* pFnOnEnumerateUserFilesComplete = NULL;

    if (!pFnOnEnumerateUserFilesComplete)
        pFnOnEnumerateUserFilesComplete =
            (UFunction*)UObject::GObjObjects()->Data[16139];

    UCheatManager_execOnEnumerateUserFilesComplete_Parms
        OnEnumerateUserFilesComplete_Parms;

    this->ProcessEvent(pFnOnEnumerateUserFilesComplete,
                       &OnEnumerateUserFilesComplete_Parms, NULL);
};

// Function Engine.CheatManager.DebugQueryUserFiles
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugQueryUserFiles() {
    static UFunction* pFnDebugQueryUserFiles = NULL;

    if (!pFnDebugQueryUserFiles)
        pFnDebugQueryUserFiles =
            (UFunction*)UObject::GObjObjects()->Data[16137];

    UCheatManager_execDebugQueryUserFiles_Parms DebugQueryUserFiles_Parms;

    this->ProcessEvent(pFnDebugQueryUserFiles, &DebugQueryUserFiles_Parms,
                       NULL);
};

// Function Engine.CheatManager.OnReceivedLocalNotificationDebug
// [0x00440003] ( FUNC_Final )
// Parameters infos:

void UCheatManager::OnReceivedLocalNotificationDebug() {
    static UFunction* pFnOnReceivedLocalNotificationDebug = NULL;

    if (!pFnOnReceivedLocalNotificationDebug)
        pFnOnReceivedLocalNotificationDebug =
            (UFunction*)UObject::GObjObjects()->Data[16134];

    UCheatManager_execOnReceivedLocalNotificationDebug_Parms
        OnReceivedLocalNotificationDebug_Parms;

    this->ProcessEvent(pFnOnReceivedLocalNotificationDebug,
                       &OnReceivedLocalNotificationDebug_Parms, NULL);
};

// Function Engine.CheatManager.DebugNotification
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugNotification() {
    static UFunction* pFnDebugNotification = NULL;

    if (!pFnDebugNotification)
        pFnDebugNotification = (UFunction*)UObject::GObjObjects()->Data[16128];

    UCheatManager_execDebugNotification_Parms DebugNotification_Parms;

    this->ProcessEvent(pFnDebugNotification, &DebugNotification_Parms, NULL);
};

// Function Engine.CheatManager.DrawLocationXYZ
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DrawLocationXYZ() {
    static UFunction* pFnDrawLocationXYZ = NULL;

    if (!pFnDrawLocationXYZ)
        pFnDrawLocationXYZ = (UFunction*)UObject::GObjObjects()->Data[16123];

    UCheatManager_execDrawLocationXYZ_Parms DrawLocationXYZ_Parms;

    this->ProcessEvent(pFnDrawLocationXYZ, &DrawLocationXYZ_Parms, NULL);
};

// Function Engine.CheatManager.DrawLocation
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DrawLocation() {
    static UFunction* pFnDrawLocation = NULL;

    if (!pFnDrawLocation)
        pFnDrawLocation = (UFunction*)UObject::GObjObjects()->Data[16121];

    UCheatManager_execDrawLocation_Parms DrawLocation_Parms;

    this->ProcessEvent(pFnDrawLocation, &DrawLocation_Parms, NULL);
};

// Function Engine.CheatManager.DumpCoverStats
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::DumpCoverStats() {
    static UFunction* pFnDumpCoverStats = NULL;

    if (!pFnDumpCoverStats)
        pFnDumpCoverStats = (UFunction*)UObject::GObjObjects()->Data[16120];

    UCheatManager_execDumpCoverStats_Parms DumpCoverStats_Parms;

    pFnDumpCoverStats->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDumpCoverStats, &DumpCoverStats_Parms, NULL);

    pFnDumpCoverStats->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.DebugEmsDownload
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugEmsDownload() {
    static UFunction* pFnDebugEmsDownload = NULL;

    if (!pFnDebugEmsDownload)
        pFnDebugEmsDownload = (UFunction*)UObject::GObjObjects()->Data[16119];

    UCheatManager_execDebugEmsDownload_Parms DebugEmsDownload_Parms;

    this->ProcessEvent(pFnDebugEmsDownload, &DebugEmsDownload_Parms, NULL);
};

// Function Engine.CheatManager.DebugDeleteTitleFiles
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugDeleteTitleFiles() {
    static UFunction* pFnDebugDeleteTitleFiles = NULL;

    if (!pFnDebugDeleteTitleFiles)
        pFnDebugDeleteTitleFiles =
            (UFunction*)UObject::GObjObjects()->Data[16118];

    UCheatManager_execDebugDeleteTitleFiles_Parms DebugDeleteTitleFiles_Parms;

    this->ProcessEvent(pFnDebugDeleteTitleFiles, &DebugDeleteTitleFiles_Parms,
                       NULL);
};

// Function Engine.CheatManager.OnSaveComplete
// [0x00020002]
// Parameters infos:

void UCheatManager::OnSaveComplete() {
    static UFunction* pFnOnSaveComplete = NULL;

    if (!pFnOnSaveComplete)
        pFnOnSaveComplete = (UFunction*)UObject::GObjObjects()->Data[16115];

    UCheatManager_execOnSaveComplete_Parms OnSaveComplete_Parms;

    this->ProcessEvent(pFnOnSaveComplete, &OnSaveComplete_Parms, NULL);
};

// Function Engine.CheatManager.DebugSaveTitleFile
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugSaveTitleFile() {
    static UFunction* pFnDebugSaveTitleFile = NULL;

    if (!pFnDebugSaveTitleFile)
        pFnDebugSaveTitleFile = (UFunction*)UObject::GObjObjects()->Data[16111];

    UCheatManager_execDebugSaveTitleFile_Parms DebugSaveTitleFile_Parms;

    this->ProcessEvent(pFnDebugSaveTitleFile, &DebugSaveTitleFile_Parms, NULL);
};

// Function Engine.CheatManager.OnLoadComplete
// [0x00020002]
// Parameters infos:

void UCheatManager::OnLoadComplete() {
    static UFunction* pFnOnLoadComplete = NULL;

    if (!pFnOnLoadComplete)
        pFnOnLoadComplete = (UFunction*)UObject::GObjObjects()->Data[16108];

    UCheatManager_execOnLoadComplete_Parms OnLoadComplete_Parms;

    this->ProcessEvent(pFnOnLoadComplete, &OnLoadComplete_Parms, NULL);
};

// Function Engine.CheatManager.OnDownloadComplete
// [0x00020002]
// Parameters infos:

void UCheatManager::OnDownloadComplete() {
    static UFunction* pFnOnDownloadComplete = NULL;

    if (!pFnOnDownloadComplete)
        pFnOnDownloadComplete = (UFunction*)UObject::GObjObjects()->Data[16105];

    UCheatManager_execOnDownloadComplete_Parms OnDownloadComplete_Parms;

    this->ProcessEvent(pFnOnDownloadComplete, &OnDownloadComplete_Parms, NULL);
};

// Function Engine.CheatManager.DebugDownloadTitleFile
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugDownloadTitleFile() {
    static UFunction* pFnDebugDownloadTitleFile = NULL;

    if (!pFnDebugDownloadTitleFile)
        pFnDebugDownloadTitleFile =
            (UFunction*)UObject::GObjObjects()->Data[16102];

    UCheatManager_execDebugDownloadTitleFile_Parms DebugDownloadTitleFile_Parms;

    this->ProcessEvent(pFnDebugDownloadTitleFile, &DebugDownloadTitleFile_Parms,
                       NULL);
};

// Function Engine.CheatManager.DebugIniLocPatcher
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugIniLocPatcher() {
    static UFunction* pFnDebugIniLocPatcher = NULL;

    if (!pFnDebugIniLocPatcher)
        pFnDebugIniLocPatcher = (UFunction*)UObject::GObjObjects()->Data[16101];

    UCheatManager_execDebugIniLocPatcher_Parms DebugIniLocPatcher_Parms;

    this->ProcessEvent(pFnDebugIniLocPatcher, &DebugIniLocPatcher_Parms, NULL);
};

// Function Engine.CheatManager.ToggleAILogging
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ToggleAILogging() {
    static UFunction* pFnToggleAILogging = NULL;

    if (!pFnToggleAILogging)
        pFnToggleAILogging = (UFunction*)UObject::GObjObjects()->Data[16099];

    UCheatManager_execToggleAILogging_Parms ToggleAILogging_Parms;

    this->ProcessEvent(pFnToggleAILogging, &ToggleAILogging_Parms, NULL);
};

// Function Engine.CheatManager.VerifyNavMeshCoverRefs
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::VerifyNavMeshCoverRefs() {
    static UFunction* pFnVerifyNavMeshCoverRefs = NULL;

    if (!pFnVerifyNavMeshCoverRefs)
        pFnVerifyNavMeshCoverRefs =
            (UFunction*)UObject::GObjObjects()->Data[16098];

    UCheatManager_execVerifyNavMeshCoverRefs_Parms VerifyNavMeshCoverRefs_Parms;

    pFnVerifyNavMeshCoverRefs->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnVerifyNavMeshCoverRefs, &VerifyNavMeshCoverRefs_Parms,
                       NULL);

    pFnVerifyNavMeshCoverRefs->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.PrintNavMeshObstacles
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::PrintNavMeshObstacles() {
    static UFunction* pFnPrintNavMeshObstacles = NULL;

    if (!pFnPrintNavMeshObstacles)
        pFnPrintNavMeshObstacles =
            (UFunction*)UObject::GObjObjects()->Data[16097];

    UCheatManager_execPrintNavMeshObstacles_Parms PrintNavMeshObstacles_Parms;

    pFnPrintNavMeshObstacles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPrintNavMeshObstacles, &PrintNavMeshObstacles_Parms,
                       NULL);

    pFnPrintNavMeshObstacles->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.PrintAllPathObjectEdges
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::PrintAllPathObjectEdges() {
    static UFunction* pFnPrintAllPathObjectEdges = NULL;

    if (!pFnPrintAllPathObjectEdges)
        pFnPrintAllPathObjectEdges =
            (UFunction*)UObject::GObjObjects()->Data[16096];

    UCheatManager_execPrintAllPathObjectEdges_Parms
        PrintAllPathObjectEdges_Parms;

    pFnPrintAllPathObjectEdges->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPrintAllPathObjectEdges,
                       &PrintAllPathObjectEdges_Parms, NULL);

    pFnPrintAllPathObjectEdges->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.NavMeshVerification
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::NavMeshVerification() {
    static UFunction* pFnNavMeshVerification = NULL;

    if (!pFnNavMeshVerification)
        pFnNavMeshVerification =
            (UFunction*)UObject::GObjObjects()->Data[16094];

    UCheatManager_execNavMeshVerification_Parms NavMeshVerification_Parms;

    this->ProcessEvent(pFnNavMeshVerification, &NavMeshVerification_Parms,
                       NULL);
};

// Function Engine.CheatManager.DrawUnsupportingEdges
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::DrawUnsupportingEdges() {
    static UFunction* pFnDrawUnsupportingEdges = NULL;

    if (!pFnDrawUnsupportingEdges)
        pFnDrawUnsupportingEdges =
            (UFunction*)UObject::GObjObjects()->Data[16092];

    UCheatManager_execDrawUnsupportingEdges_Parms DrawUnsupportingEdges_Parms;

    pFnDrawUnsupportingEdges->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawUnsupportingEdges, &DrawUnsupportingEdges_Parms,
                       NULL);

    pFnDrawUnsupportingEdges->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.VerifyNavMeshObjects
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::VerifyNavMeshObjects() {
    static UFunction* pFnVerifyNavMeshObjects = NULL;

    if (!pFnVerifyNavMeshObjects)
        pFnVerifyNavMeshObjects =
            (UFunction*)UObject::GObjObjects()->Data[16091];

    UCheatManager_execVerifyNavMeshObjects_Parms VerifyNavMeshObjects_Parms;

    pFnVerifyNavMeshObjects->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnVerifyNavMeshObjects, &VerifyNavMeshObjects_Parms,
                       NULL);

    pFnVerifyNavMeshObjects->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.LogParticleActivateSystemCalls
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::LogParticleActivateSystemCalls() {
    static UFunction* pFnLogParticleActivateSystemCalls = NULL;

    if (!pFnLogParticleActivateSystemCalls)
        pFnLogParticleActivateSystemCalls =
            (UFunction*)UObject::GObjObjects()->Data[16089];

    UCheatManager_execLogParticleActivateSystemCalls_Parms
        LogParticleActivateSystemCalls_Parms;

    pFnLogParticleActivateSystemCalls->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogParticleActivateSystemCalls,
                       &LogParticleActivateSystemCalls_Parms, NULL);

    pFnLogParticleActivateSystemCalls->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.LogPlaySoundCalls
// [0x00020600] ( FUNC_Exec | FUNC_Native )
// Parameters infos:

void UCheatManager::LogPlaySoundCalls() {
    static UFunction* pFnLogPlaySoundCalls = NULL;

    if (!pFnLogPlaySoundCalls)
        pFnLogPlaySoundCalls = (UFunction*)UObject::GObjObjects()->Data[16087];

    UCheatManager_execLogPlaySoundCalls_Parms LogPlaySoundCalls_Parms;

    pFnLogPlaySoundCalls->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlaySoundCalls, &LogPlaySoundCalls_Parms, NULL);

    pFnLogPlaySoundCalls->FunctionFlags |= 0x400;
};

// Function Engine.CheatManager.InitCheatManager
// [0x00020000]
// Parameters infos:

void UCheatManager::InitCheatManager() {
    static UFunction* pFnInitCheatManager = NULL;

    if (!pFnInitCheatManager)
        pFnInitCheatManager = (UFunction*)UObject::GObjObjects()->Data[16086];

    UCheatManager_execInitCheatManager_Parms InitCheatManager_Parms;

    this->ProcessEvent(pFnInitCheatManager, &InitCheatManager_Parms, NULL);
};

// Function Engine.CheatManager.VerbosePathDebug
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::VerbosePathDebug() {
    static UFunction* pFnVerbosePathDebug = NULL;

    if (!pFnVerbosePathDebug)
        pFnVerbosePathDebug = (UFunction*)UObject::GObjObjects()->Data[16079];

    UCheatManager_execVerbosePathDebug_Parms VerbosePathDebug_Parms;

    this->ProcessEvent(pFnVerbosePathDebug, &VerbosePathDebug_Parms, NULL);
};

// Function Engine.CheatManager.TestPylonConnectivity
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::TestPylonConnectivity() {
    static UFunction* pFnTestPylonConnectivity = NULL;

    if (!pFnTestPylonConnectivity)
        pFnTestPylonConnectivity =
            (UFunction*)UObject::GObjObjects()->Data[16077];

    UCheatManager_execTestPylonConnectivity_Parms TestPylonConnectivity_Parms;

    this->ProcessEvent(pFnTestPylonConnectivity, &TestPylonConnectivity_Parms,
                       NULL);
};

// Function Engine.CheatManager.TestNavMeshPath
// [0x00824202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::TestNavMeshPath() {
    static UFunction* pFnTestNavMeshPath = NULL;

    if (!pFnTestNavMeshPath)
        pFnTestNavMeshPath = (UFunction*)UObject::GObjObjects()->Data[16069];

    UCheatManager_execTestNavMeshPath_Parms TestNavMeshPath_Parms;

    this->ProcessEvent(pFnTestNavMeshPath, &TestNavMeshPath_Parms, NULL);
};

// Function Engine.CheatManager.SetOnlineDebugLevel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SetOnlineDebugLevel() {
    static UFunction* pFnSetOnlineDebugLevel = NULL;

    if (!pFnSetOnlineDebugLevel)
        pFnSetOnlineDebugLevel =
            (UFunction*)UObject::GObjObjects()->Data[16067];

    UCheatManager_execSetOnlineDebugLevel_Parms SetOnlineDebugLevel_Parms;

    this->ProcessEvent(pFnSetOnlineDebugLevel, &SetOnlineDebugLevel_Parms,
                       NULL);
};

// Function Engine.CheatManager.DumpOnlineSessionState
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DumpOnlineSessionState() {
    static UFunction* pFnDumpOnlineSessionState = NULL;

    if (!pFnDumpOnlineSessionState)
        pFnDumpOnlineSessionState =
            (UFunction*)UObject::GObjObjects()->Data[16065];

    UCheatManager_execDumpOnlineSessionState_Parms DumpOnlineSessionState_Parms;

    this->ProcessEvent(pFnDumpOnlineSessionState, &DumpOnlineSessionState_Parms,
                       NULL);
};

// Function Engine.CheatManager.TestLevel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::TestLevel() {
    static UFunction* pFnTestLevel = NULL;

    if (!pFnTestLevel)
        pFnTestLevel = (UFunction*)UObject::GObjObjects()->Data[16061];

    UCheatManager_execTestLevel_Parms TestLevel_Parms;

    this->ProcessEvent(pFnTestLevel, &TestLevel_Parms, NULL);
};

// Function Engine.CheatManager.StreamLevelOut
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::StreamLevelOut() {
    static UFunction* pFnStreamLevelOut = NULL;

    if (!pFnStreamLevelOut)
        pFnStreamLevelOut = (UFunction*)UObject::GObjObjects()->Data[16059];

    UCheatManager_execStreamLevelOut_Parms StreamLevelOut_Parms;

    this->ProcessEvent(pFnStreamLevelOut, &StreamLevelOut_Parms, NULL);
};

// Function Engine.CheatManager.OnlyLoadLevel
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::OnlyLoadLevel() {
    static UFunction* pFnOnlyLoadLevel = NULL;

    if (!pFnOnlyLoadLevel)
        pFnOnlyLoadLevel = (UFunction*)UObject::GObjObjects()->Data[16057];

    UCheatManager_execOnlyLoadLevel_Parms OnlyLoadLevel_Parms;

    this->ProcessEvent(pFnOnlyLoadLevel, &OnlyLoadLevel_Parms, NULL);
};

// Function Engine.CheatManager.StreamLevelIn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::StreamLevelIn() {
    static UFunction* pFnStreamLevelIn = NULL;

    if (!pFnStreamLevelIn)
        pFnStreamLevelIn = (UFunction*)UObject::GObjObjects()->Data[16055];

    UCheatManager_execStreamLevelIn_Parms StreamLevelIn_Parms;

    this->ProcessEvent(pFnStreamLevelIn, &StreamLevelIn_Parms, NULL);
};

// Function Engine.CheatManager.SetLevelStreamingStatus
// [0x00020002]
// Parameters infos:

void UCheatManager::SetLevelStreamingStatus() {
    static UFunction* pFnSetLevelStreamingStatus = NULL;

    if (!pFnSetLevelStreamingStatus)
        pFnSetLevelStreamingStatus =
            (UFunction*)UObject::GObjObjects()->Data[16049];

    UCheatManager_execSetLevelStreamingStatus_Parms
        SetLevelStreamingStatus_Parms;

    this->ProcessEvent(pFnSetLevelStreamingStatus,
                       &SetLevelStreamingStatus_Parms, NULL);
};

// Function Engine.CheatManager.AllWeapons
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::AllWeapons() {
    static UFunction* pFnAllWeapons = NULL;

    if (!pFnAllWeapons)
        pFnAllWeapons = (UFunction*)UObject::GObjObjects()->Data[16048];

    UCheatManager_execAllWeapons_Parms AllWeapons_Parms;

    this->ProcessEvent(pFnAllWeapons, &AllWeapons_Parms, NULL);
};

// Function Engine.CheatManager.Loaded
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Loaded() {
    static UFunction* pFnLoaded = NULL;

    if (!pFnLoaded) pFnLoaded = (UFunction*)UObject::GObjObjects()->Data[16047];

    UCheatManager_execLoaded_Parms Loaded_Parms;

    this->ProcessEvent(pFnLoaded, &Loaded_Parms, NULL);
};

// Function Engine.CheatManager.ViewClass
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ViewClass() {
    static UFunction* pFnViewClass = NULL;

    if (!pFnViewClass)
        pFnViewClass = (UFunction*)UObject::GObjObjects()->Data[16042];

    UCheatManager_execViewClass_Parms ViewClass_Parms;

    this->ProcessEvent(pFnViewClass, &ViewClass_Parms, NULL);
};

// Function Engine.CheatManager.ViewBot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ViewBot() {
    static UFunction* pFnViewBot = NULL;

    if (!pFnViewBot)
        pFnViewBot = (UFunction*)UObject::GObjObjects()->Data[16038];

    UCheatManager_execViewBot_Parms ViewBot_Parms;

    this->ProcessEvent(pFnViewBot, &ViewBot_Parms, NULL);
};

// Function Engine.CheatManager.ViewActor
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ViewActor() {
    static UFunction* pFnViewActor = NULL;

    if (!pFnViewActor)
        pFnViewActor = (UFunction*)UObject::GObjObjects()->Data[16035];

    UCheatManager_execViewActor_Parms ViewActor_Parms;

    this->ProcessEvent(pFnViewActor, &ViewActor_Parms, NULL);
};

// Function Engine.CheatManager.ViewPlayer
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ViewPlayer() {
    static UFunction* pFnViewPlayer = NULL;

    if (!pFnViewPlayer)
        pFnViewPlayer = (UFunction*)UObject::GObjObjects()->Data[16032];

    UCheatManager_execViewPlayer_Parms ViewPlayer_Parms;

    this->ProcessEvent(pFnViewPlayer, &ViewPlayer_Parms, NULL);
};

// Function Engine.CheatManager.ViewSelf
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ViewSelf() {
    static UFunction* pFnViewSelf = NULL;

    if (!pFnViewSelf)
        pFnViewSelf = (UFunction*)UObject::GObjObjects()->Data[16030];

    UCheatManager_execViewSelf_Parms ViewSelf_Parms;

    this->ProcessEvent(pFnViewSelf, &ViewSelf_Parms, NULL);
};

// Function Engine.CheatManager.RememberSpot
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::RememberSpot() {
    static UFunction* pFnRememberSpot = NULL;

    if (!pFnRememberSpot)
        pFnRememberSpot = (UFunction*)UObject::GObjObjects()->Data[16029];

    UCheatManager_execRememberSpot_Parms RememberSpot_Parms;

    this->ProcessEvent(pFnRememberSpot, &RememberSpot_Parms, NULL);
};

// Function Engine.CheatManager.FractureAllMeshesToMaximizeMemoryUsage
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::FractureAllMeshesToMaximizeMemoryUsage() {
    static UFunction* pFnFractureAllMeshesToMaximizeMemoryUsage = NULL;

    if (!pFnFractureAllMeshesToMaximizeMemoryUsage)
        pFnFractureAllMeshesToMaximizeMemoryUsage =
            (UFunction*)UObject::GObjObjects()->Data[16027];

    UCheatManager_execFractureAllMeshesToMaximizeMemoryUsage_Parms
        FractureAllMeshesToMaximizeMemoryUsage_Parms;

    this->ProcessEvent(pFnFractureAllMeshesToMaximizeMemoryUsage,
                       &FractureAllMeshesToMaximizeMemoryUsage_Parms, NULL);
};

// Function Engine.CheatManager.FractureAllMeshes
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::FractureAllMeshes() {
    static UFunction* pFnFractureAllMeshes = NULL;

    if (!pFnFractureAllMeshes)
        pFnFractureAllMeshes = (UFunction*)UObject::GObjObjects()->Data[16025];

    UCheatManager_execFractureAllMeshes_Parms FractureAllMeshes_Parms;

    this->ProcessEvent(pFnFractureAllMeshes, &FractureAllMeshes_Parms, NULL);
};

// Function Engine.CheatManager.DestroyFractures
// [0x00024202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DestroyFractures() {
    static UFunction* pFnDestroyFractures = NULL;

    if (!pFnDestroyFractures)
        pFnDestroyFractures = (UFunction*)UObject::GObjObjects()->Data[16022];

    UCheatManager_execDestroyFractures_Parms DestroyFractures_Parms;

    this->ProcessEvent(pFnDestroyFractures, &DestroyFractures_Parms, NULL);
};

// Function Engine.CheatManager.SuspendAI
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SuspendAI() {
    static UFunction* pFnSuspendAI = NULL;

    if (!pFnSuspendAI)
        pFnSuspendAI = (UFunction*)UObject::GObjObjects()->Data[16021];

    UCheatManager_execSuspendAI_Parms SuspendAI_Parms;

    this->ProcessEvent(pFnSuspendAI, &SuspendAI_Parms, NULL);
};

// Function Engine.CheatManager.PlayersOnly
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::PlayersOnly() {
    static UFunction* pFnPlayersOnly = NULL;

    if (!pFnPlayersOnly)
        pFnPlayersOnly = (UFunction*)UObject::GObjObjects()->Data[16020];

    UCheatManager_execPlayersOnly_Parms PlayersOnly_Parms;

    this->ProcessEvent(pFnPlayersOnly, &PlayersOnly_Parms, NULL);
};

// Function Engine.CheatManager.GiveWeapon
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::GiveWeapon() {
    static UFunction* pFnGiveWeapon = NULL;

    if (!pFnGiveWeapon)
        pFnGiveWeapon = (UFunction*)UObject::GObjObjects()->Data[16015];

    UCheatManager_execGiveWeapon_Parms GiveWeapon_Parms;

    this->ProcessEvent(pFnGiveWeapon, &GiveWeapon_Parms, NULL);
};

// Function Engine.CheatManager.Summon
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Summon() {
    static UFunction* pFnSummon = NULL;

    if (!pFnSummon) pFnSummon = (UFunction*)UObject::GObjObjects()->Data[16011];

    UCheatManager_execSummon_Parms Summon_Parms;

    this->ProcessEvent(pFnSummon, &Summon_Parms, NULL);
};

// Function Engine.CheatManager.Avatar
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Avatar() {
    static UFunction* pFnAvatar = NULL;

    if (!pFnAvatar) pFnAvatar = (UFunction*)UObject::GObjObjects()->Data[16004];

    UCheatManager_execAvatar_Parms Avatar_Parms;

    this->ProcessEvent(pFnAvatar, &Avatar_Parms, NULL);
};

// Function Engine.CheatManager.KillPawns
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::KillPawns() {
    static UFunction* pFnKillPawns = NULL;

    if (!pFnKillPawns)
        pFnKillPawns = (UFunction*)UObject::GObjObjects()->Data[16003];

    UCheatManager_execKillPawns_Parms KillPawns_Parms;

    this->ProcessEvent(pFnKillPawns, &KillPawns_Parms, NULL);
};

// Function Engine.CheatManager.KillAllPawns
// [0x00020002]
// Parameters infos:

void UCheatManager::KillAllPawns() {
    static UFunction* pFnKillAllPawns = NULL;

    if (!pFnKillAllPawns)
        pFnKillAllPawns = (UFunction*)UObject::GObjObjects()->Data[16000];

    UCheatManager_execKillAllPawns_Parms KillAllPawns_Parms;

    this->ProcessEvent(pFnKillAllPawns, &KillAllPawns_Parms, NULL);
};

// Function Engine.CheatManager.KillAll
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::KillAll() {
    static UFunction* pFnKillAll = NULL;

    if (!pFnKillAll)
        pFnKillAll = (UFunction*)UObject::GObjObjects()->Data[15996];

    UCheatManager_execKillAll_Parms KillAll_Parms;

    this->ProcessEvent(pFnKillAll, &KillAll_Parms, NULL);
};

// Function Engine.CheatManager.SetSpeed
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SetSpeed() {
    static UFunction* pFnSetSpeed = NULL;

    if (!pFnSetSpeed)
        pFnSetSpeed = (UFunction*)UObject::GObjObjects()->Data[15994];

    UCheatManager_execSetSpeed_Parms SetSpeed_Parms;

    this->ProcessEvent(pFnSetSpeed, &SetSpeed_Parms, NULL);
};

// Function Engine.CheatManager.SetGravity
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SetGravity() {
    static UFunction* pFnSetGravity = NULL;

    if (!pFnSetGravity)
        pFnSetGravity = (UFunction*)UObject::GObjObjects()->Data[15992];

    UCheatManager_execSetGravity_Parms SetGravity_Parms;

    this->ProcessEvent(pFnSetGravity, &SetGravity_Parms, NULL);
};

// Function Engine.CheatManager.SetJumpZ
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::SetJumpZ() {
    static UFunction* pFnSetJumpZ = NULL;

    if (!pFnSetJumpZ)
        pFnSetJumpZ = (UFunction*)UObject::GObjObjects()->Data[15990];

    UCheatManager_execSetJumpZ_Parms SetJumpZ_Parms;

    this->ProcessEvent(pFnSetJumpZ, &SetJumpZ_Parms, NULL);
};

// Function Engine.CheatManager.Slomo
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Slomo() {
    static UFunction* pFnSlomo = NULL;

    if (!pFnSlomo) pFnSlomo = (UFunction*)UObject::GObjObjects()->Data[15988];

    UCheatManager_execSlomo_Parms Slomo_Parms;

    this->ProcessEvent(pFnSlomo, &Slomo_Parms, NULL);
};

// Function Engine.CheatManager.God
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::God() {
    static UFunction* pFnGod = NULL;

    if (!pFnGod) pFnGod = (UFunction*)UObject::GObjObjects()->Data[15987];

    UCheatManager_execGod_Parms God_Parms;

    this->ProcessEvent(pFnGod, &God_Parms, NULL);
};

// Function Engine.CheatManager.AllAmmo
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::AllAmmo() {
    static UFunction* pFnAllAmmo = NULL;

    if (!pFnAllAmmo)
        pFnAllAmmo = (UFunction*)UObject::GObjObjects()->Data[15986];

    UCheatManager_execAllAmmo_Parms AllAmmo_Parms;

    this->ProcessEvent(pFnAllAmmo, &AllAmmo_Parms, NULL);
};

// Function Engine.CheatManager.Ghost
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Ghost() {
    static UFunction* pFnGhost = NULL;

    if (!pFnGhost) pFnGhost = (UFunction*)UObject::GObjObjects()->Data[15985];

    UCheatManager_execGhost_Parms Ghost_Parms;

    this->ProcessEvent(pFnGhost, &Ghost_Parms, NULL);
};

// Function Engine.CheatManager.Walk
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Walk() {
    static UFunction* pFnWalk = NULL;

    if (!pFnWalk) pFnWalk = (UFunction*)UObject::GObjObjects()->Data[15984];

    UCheatManager_execWalk_Parms Walk_Parms;

    this->ProcessEvent(pFnWalk, &Walk_Parms, NULL);
};

// Function Engine.CheatManager.Fly
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Fly() {
    static UFunction* pFnFly = NULL;

    if (!pFnFly) pFnFly = (UFunction*)UObject::GObjObjects()->Data[15983];

    UCheatManager_execFly_Parms Fly_Parms;

    this->ProcessEvent(pFnFly, &Fly_Parms, NULL);
};

// Function Engine.CheatManager.Amphibious
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Amphibious() {
    static UFunction* pFnAmphibious = NULL;

    if (!pFnAmphibious)
        pFnAmphibious = (UFunction*)UObject::GObjObjects()->Data[15982];

    UCheatManager_execAmphibious_Parms Amphibious_Parms;

    this->ProcessEvent(pFnAmphibious, &Amphibious_Parms, NULL);
};

// Function Engine.CheatManager.EndPath
// [0x00020200] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::EndPath() {
    static UFunction* pFnEndPath = NULL;

    if (!pFnEndPath)
        pFnEndPath = (UFunction*)UObject::GObjObjects()->Data[15981];

    UCheatManager_execEndPath_Parms EndPath_Parms;

    this->ProcessEvent(pFnEndPath, &EndPath_Parms, NULL);
};

// Function Engine.CheatManager.ChangeSize
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ChangeSize() {
    static UFunction* pFnChangeSize = NULL;

    if (!pFnChangeSize)
        pFnChangeSize = (UFunction*)UObject::GObjObjects()->Data[15979];

    UCheatManager_execChangeSize_Parms ChangeSize_Parms;

    this->ProcessEvent(pFnChangeSize, &ChangeSize_Parms, NULL);
};

// Function Engine.CheatManager.Teleport
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::Teleport() {
    static UFunction* pFnTeleport = NULL;

    if (!pFnTeleport)
        pFnTeleport = (UFunction*)UObject::GObjObjects()->Data[15973];

    UCheatManager_execTeleport_Parms Teleport_Parms;

    this->ProcessEvent(pFnTeleport, &Teleport_Parms, NULL);
};

// Function Engine.CheatManager.KillViewedActor
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::KillViewedActor() {
    static UFunction* pFnKillViewedActor = NULL;

    if (!pFnKillViewedActor)
        pFnKillViewedActor = (UFunction*)UObject::GObjObjects()->Data[15972];

    UCheatManager_execKillViewedActor_Parms KillViewedActor_Parms;

    this->ProcessEvent(pFnKillViewedActor, &KillViewedActor_Parms, NULL);
};

// Function Engine.CheatManager.WriteToLog
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::WriteToLog() {
    static UFunction* pFnWriteToLog = NULL;

    if (!pFnWriteToLog)
        pFnWriteToLog = (UFunction*)UObject::GObjObjects()->Data[15970];

    UCheatManager_execWriteToLog_Parms WriteToLog_Parms;

    this->ProcessEvent(pFnWriteToLog, &WriteToLog_Parms, NULL);
};

// Function Engine.CheatManager.FreezeFrame
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::FreezeFrame() {
    static UFunction* pFnFreezeFrame = NULL;

    if (!pFnFreezeFrame)
        pFnFreezeFrame = (UFunction*)UObject::GObjObjects()->Data[15968];

    UCheatManager_execFreezeFrame_Parms FreezeFrame_Parms;

    this->ProcessEvent(pFnFreezeFrame, &FreezeFrame_Parms, NULL);
};

// Function Engine.CheatManager.ListDynamicActors
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::ListDynamicActors() {
    static UFunction* pFnListDynamicActors = NULL;

    if (!pFnListDynamicActors)
        pFnListDynamicActors = (UFunction*)UObject::GObjObjects()->Data[15965];

    UCheatManager_execListDynamicActors_Parms ListDynamicActors_Parms;

    this->ProcessEvent(pFnListDynamicActors, &ListDynamicActors_Parms, NULL);
};

// Function Engine.CheatManager.DebugPause
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugPause() {
    static UFunction* pFnDebugPause = NULL;

    if (!pFnDebugPause)
        pFnDebugPause = (UFunction*)UObject::GObjObjects()->Data[15964];

    UCheatManager_execDebugPause_Parms DebugPause_Parms;

    this->ProcessEvent(pFnDebugPause, &DebugPause_Parms, NULL);
};

// Function Engine.CheatManager.EditAIByTrace
// [0x00820202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::EditAIByTrace() {
    static UFunction* pFnEditAIByTrace = NULL;

    if (!pFnEditAIByTrace)
        pFnEditAIByTrace = (UFunction*)UObject::GObjObjects()->Data[15957];

    UCheatManager_execEditAIByTrace_Parms EditAIByTrace_Parms;

    this->ProcessEvent(pFnEditAIByTrace, &EditAIByTrace_Parms, NULL);
};

// Function Engine.CheatManager.DebugAI
// [0x00024200] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::DebugAI() {
    static UFunction* pFnDebugAI = NULL;

    if (!pFnDebugAI)
        pFnDebugAI = (UFunction*)UObject::GObjObjects()->Data[15955];

    UCheatManager_execDebugAI_Parms DebugAI_Parms;

    this->ProcessEvent(pFnDebugAI, &DebugAI_Parms, NULL);
};

// Function Engine.CheatManager.FXStop
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::FXStop() {
    static UFunction* pFnFXStop = NULL;

    if (!pFnFXStop) pFnFXStop = (UFunction*)UObject::GObjObjects()->Data[15949];

    UCheatManager_execFXStop_Parms FXStop_Parms;

    this->ProcessEvent(pFnFXStop, &FXStop_Parms, NULL);
};

// Function Engine.CheatManager.FXPlay
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UCheatManager::FXPlay() {
    static UFunction* pFnFXPlay = NULL;

    if (!pFnFXPlay) pFnFXPlay = (UFunction*)UObject::GObjObjects()->Data[15939];

    UCheatManager_execFXPlay_Parms FXPlay_Parms;

    this->ProcessEvent(pFnFXPlay, &FXPlay_Parms, NULL);
};

// Function Engine.CloudSaveSystem.GetKeyValue
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::GetKeyValue() {
    static UFunction* pFnGetKeyValue = NULL;

    if (!pFnGetKeyValue)
        pFnGetKeyValue = (UFunction*)UObject::GObjObjects()->Data[16451];

    UCloudSaveSystem_execGetKeyValue_Parms GetKeyValue_Parms;

    this->ProcessEvent(pFnGetKeyValue, &GetKeyValue_Parms, NULL);
};

// Function Engine.CloudSaveSystem.GetDataStoreIDAndBlobNameForSaveSlot
// [0x00C40003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::GetDataStoreIDAndBlobNameForSaveSlot() {
    static UFunction* pFnGetDataStoreIDAndBlobNameForSaveSlot = NULL;

    if (!pFnGetDataStoreIDAndBlobNameForSaveSlot)
        pFnGetDataStoreIDAndBlobNameForSaveSlot =
            (UFunction*)UObject::GObjObjects()->Data[16444];

    UCloudSaveSystem_execGetDataStoreIDAndBlobNameForSaveSlot_Parms
        GetDataStoreIDAndBlobNameForSaveSlot_Parms;

    this->ProcessEvent(pFnGetDataStoreIDAndBlobNameForSaveSlot,
                       &GetDataStoreIDAndBlobNameForSaveSlot_Parms, NULL);
};

// Function Engine.CloudSaveSystem.SetKeyValue
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::SetKeyValue() {
    static UFunction* pFnSetKeyValue = NULL;

    if (!pFnSetKeyValue)
        pFnSetKeyValue = (UFunction*)UObject::GObjObjects()->Data[16439];

    UCloudSaveSystem_execSetKeyValue_Parms SetKeyValue_Parms;

    this->ProcessEvent(pFnSetKeyValue, &SetKeyValue_Parms, NULL);
};

// Function Engine.CloudSaveSystem.InternalSetSaveSlotKeyValues
// [0x00840003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::InternalSetSaveSlotKeyValues() {
    static UFunction* pFnInternalSetSaveSlotKeyValues = NULL;

    if (!pFnInternalSetSaveSlotKeyValues)
        pFnInternalSetSaveSlotKeyValues =
            (UFunction*)UObject::GObjObjects()->Data[16432];

    UCloudSaveSystem_execInternalSetSaveSlotKeyValues_Parms
        InternalSetSaveSlotKeyValues_Parms;

    this->ProcessEvent(pFnInternalSetSaveSlotKeyValues,
                       &InternalSetSaveSlotKeyValues_Parms, NULL);
};

// Function Engine.CloudSaveSystem.SetSaveSlotKeyValues
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::SetSaveSlotKeyValues() {
    static UFunction* pFnSetSaveSlotKeyValues = NULL;

    if (!pFnSetSaveSlotKeyValues)
        pFnSetSaveSlotKeyValues =
            (UFunction*)UObject::GObjObjects()->Data[16424];

    UCloudSaveSystem_execSetSaveSlotKeyValues_Parms SetSaveSlotKeyValues_Parms;

    this->ProcessEvent(pFnSetSaveSlotKeyValues, &SetSaveSlotKeyValues_Parms,
                       NULL);
};

// Function Engine.CloudSaveSystem.OnDeleteSaveDataComplete
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::OnDeleteSaveDataComplete() {
    static UFunction* pFnOnDeleteSaveDataComplete = NULL;

    if (!pFnOnDeleteSaveDataComplete)
        pFnOnDeleteSaveDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[16412];

    UCloudSaveSystem_execOnDeleteSaveDataComplete_Parms
        OnDeleteSaveDataComplete_Parms;

    this->ProcessEvent(pFnOnDeleteSaveDataComplete,
                       &OnDeleteSaveDataComplete_Parms, NULL);
};

// Function Engine.CloudSaveSystem.DeleteSaveData
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::DeleteSaveData() {
    static UFunction* pFnDeleteSaveData = NULL;

    if (!pFnDeleteSaveData)
        pFnDeleteSaveData = (UFunction*)UObject::GObjObjects()->Data[16404];

    UCloudSaveSystem_execDeleteSaveData_Parms DeleteSaveData_Parms;

    this->ProcessEvent(pFnDeleteSaveData, &DeleteSaveData_Parms, NULL);
};

// Function Engine.CloudSaveSystem.OnSetSaveDataComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::OnSetSaveDataComplete() {
    static UFunction* pFnOnSetSaveDataComplete = NULL;

    if (!pFnOnSetSaveDataComplete)
        pFnOnSetSaveDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[16396];

    UCloudSaveSystem_execOnSetSaveDataComplete_Parms
        OnSetSaveDataComplete_Parms;

    this->ProcessEvent(pFnOnSetSaveDataComplete, &OnSetSaveDataComplete_Parms,
                       NULL);
};

// Function Engine.CloudSaveSystem.SetSaveData
// [0x00C20003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::SetSaveData() {
    static UFunction* pFnSetSaveData = NULL;

    if (!pFnSetSaveData)
        pFnSetSaveData = (UFunction*)UObject::GObjObjects()->Data[16385];

    UCloudSaveSystem_execSetSaveData_Parms SetSaveData_Parms;

    this->ProcessEvent(pFnSetSaveData, &SetSaveData_Parms, NULL);
};

// Function Engine.CloudSaveSystem.OnGetSaveDataComplete
// [0x00440003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::OnGetSaveDataComplete() {
    static UFunction* pFnOnGetSaveDataComplete = NULL;

    if (!pFnOnGetSaveDataComplete)
        pFnOnGetSaveDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[16375];

    UCloudSaveSystem_execOnGetSaveDataComplete_Parms
        OnGetSaveDataComplete_Parms;

    this->ProcessEvent(pFnOnGetSaveDataComplete, &OnGetSaveDataComplete_Parms,
                       NULL);
};

// Function Engine.CloudSaveSystem.GetSaveData
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::GetSaveData() {
    static UFunction* pFnGetSaveData = NULL;

    if (!pFnGetSaveData)
        pFnGetSaveData = (UFunction*)UObject::GObjObjects()->Data[16364];

    UCloudSaveSystem_execGetSaveData_Parms GetSaveData_Parms;

    this->ProcessEvent(pFnGetSaveData, &GetSaveData_Parms, NULL);
};

// Function Engine.CloudSaveSystem.Init
// [0x00820003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[16358];

    UCloudSaveSystem_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.CloudSaveSystem.DeserializeObject
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCloudSaveSystem::DeserializeObject() {
    static UFunction* pFnDeserializeObject = NULL;

    if (!pFnDeserializeObject)
        pFnDeserializeObject = (UFunction*)UObject::GObjObjects()->Data[16351];

    UCloudSaveSystem_execDeserializeObject_Parms DeserializeObject_Parms;

    pFnDeserializeObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeserializeObject, &DeserializeObject_Parms, NULL);

    pFnDeserializeObject->FunctionFlags |= 0x400;
};

// Function Engine.CloudSaveSystem.SerializeObject
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCloudSaveSystem::SerializeObject() {
    static UFunction* pFnSerializeObject = NULL;

    if (!pFnSerializeObject)
        pFnSerializeObject = (UFunction*)UObject::GObjObjects()->Data[16346];

    UCloudSaveSystem_execSerializeObject_Parms SerializeObject_Parms;

    pFnSerializeObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSerializeObject, &SerializeObject_Parms, NULL);

    pFnSerializeObject->FunctionFlags |= 0x400;
};

// Function Engine.CloudSaveSystem.AreAnySlotOperationsActive
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::AreAnySlotOperationsActive() {
    static UFunction* pFnAreAnySlotOperationsActive = NULL;

    if (!pFnAreAnySlotOperationsActive)
        pFnAreAnySlotOperationsActive =
            (UFunction*)UObject::GObjObjects()->Data[16344];

    UCloudSaveSystem_execAreAnySlotOperationsActive_Parms
        AreAnySlotOperationsActive_Parms;

    this->ProcessEvent(pFnAreAnySlotOperationsActive,
                       &AreAnySlotOperationsActive_Parms, NULL);
};

// Function Engine.CloudSaveSystem.IsDeleteOperationActive
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::IsDeleteOperationActive() {
    static UFunction* pFnIsDeleteOperationActive = NULL;

    if (!pFnIsDeleteOperationActive)
        pFnIsDeleteOperationActive =
            (UFunction*)UObject::GObjObjects()->Data[16342];

    UCloudSaveSystem_execIsDeleteOperationActive_Parms
        IsDeleteOperationActive_Parms;

    this->ProcessEvent(pFnIsDeleteOperationActive,
                       &IsDeleteOperationActive_Parms, NULL);
};

// Function Engine.CloudSaveSystem.IsOperationActiveForSlot
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::IsOperationActiveForSlot() {
    static UFunction* pFnIsOperationActiveForSlot = NULL;

    if (!pFnIsOperationActiveForSlot)
        pFnIsOperationActiveForSlot =
            (UFunction*)UObject::GObjObjects()->Data[16338];

    UCloudSaveSystem_execIsOperationActiveForSlot_Parms
        IsOperationActiveForSlot_Parms;

    this->ProcessEvent(pFnIsOperationActiveForSlot,
                       &IsOperationActiveForSlot_Parms, NULL);
};

// Function Engine.CloudSaveSystem.WriteNumSaveSlots
// [0x00840003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::WriteNumSaveSlots() {
    static UFunction* pFnWriteNumSaveSlots = NULL;

    if (!pFnWriteNumSaveSlots)
        pFnWriteNumSaveSlots = (UFunction*)UObject::GObjObjects()->Data[16334];

    UCloudSaveSystem_execWriteNumSaveSlots_Parms WriteNumSaveSlots_Parms;

    this->ProcessEvent(pFnWriteNumSaveSlots, &WriteNumSaveSlots_Parms, NULL);
};

// Function Engine.CloudSaveSystem.DoesSaveSlotKeyValueDataAlreadyExist
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::DoesSaveSlotKeyValueDataAlreadyExist() {
    static UFunction* pFnDoesSaveSlotKeyValueDataAlreadyExist = NULL;

    if (!pFnDoesSaveSlotKeyValueDataAlreadyExist)
        pFnDoesSaveSlotKeyValueDataAlreadyExist =
            (UFunction*)UObject::GObjObjects()->Data[16325];

    UCloudSaveSystem_execDoesSaveSlotKeyValueDataAlreadyExist_Parms
        DoesSaveSlotKeyValueDataAlreadyExist_Parms;

    this->ProcessEvent(pFnDoesSaveSlotKeyValueDataAlreadyExist,
                       &DoesSaveSlotKeyValueDataAlreadyExist_Parms, NULL);
};

// Function Engine.CloudSaveSystem.GetNumberOfSaveSlots
// [0x00C20003] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystem::GetNumberOfSaveSlots() {
    static UFunction* pFnGetNumberOfSaveSlots = NULL;

    if (!pFnGetNumberOfSaveSlots)
        pFnGetNumberOfSaveSlots =
            (UFunction*)UObject::GObjObjects()->Data[16320];

    UCloudSaveSystem_execGetNumberOfSaveSlots_Parms GetNumberOfSaveSlots_Parms;

    this->ProcessEvent(pFnGetNumberOfSaveSlots, &GetNumberOfSaveSlots_Parms,
                       NULL);
};

// Function Engine.CloudSaveSystem.SaveSystemCallback
// [0x00120000]
// Parameters infos:

void UCloudSaveSystem::SaveSystemCallback() {
    static UFunction* pFnSaveSystemCallback = NULL;

    if (!pFnSaveSystemCallback)
        pFnSaveSystemCallback = (UFunction*)UObject::GObjObjects()->Data[16316];

    UCloudSaveSystem_execSaveSystemCallback_Parms SaveSystemCallback_Parms;

    this->ProcessEvent(pFnSaveSystemCallback, &SaveSystemCallback_Parms, NULL);
};

// Function Engine.CloudSaveSystem.OnGetSaveDataCallback
// [0x00520000]
// Parameters infos:

void UCloudSaveSystem::OnGetSaveDataCallback() {
    static UFunction* pFnOnGetSaveDataCallback = NULL;

    if (!pFnOnGetSaveDataCallback)
        pFnOnGetSaveDataCallback =
            (UFunction*)UObject::GObjObjects()->Data[16310];

    UCloudSaveSystem_execOnGetSaveDataCallback_Parms
        OnGetSaveDataCallback_Parms;

    this->ProcessEvent(pFnOnGetSaveDataCallback, &OnGetSaveDataCallback_Parms,
                       NULL);
};

// Function Engine.DamageType.VehicleDamageScalingFor
// [0x00022002]
// Parameters infos:

void UDamageType::VehicleDamageScalingFor() {
    static UFunction* pFnVehicleDamageScalingFor = NULL;

    if (!pFnVehicleDamageScalingFor)
        pFnVehicleDamageScalingFor =
            (UFunction*)UObject::GObjObjects()->Data[17523];

    UDamageType_execVehicleDamageScalingFor_Parms VehicleDamageScalingFor_Parms;

    this->ProcessEvent(pFnVehicleDamageScalingFor,
                       &VehicleDamageScalingFor_Parms, NULL);
};

// Function Engine.FaceFXAsset.UnmountFaceFXAnimSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFaceFXAsset::UnmountFaceFXAnimSet() {
    static UFunction* pFnUnmountFaceFXAnimSet = NULL;

    if (!pFnUnmountFaceFXAnimSet)
        pFnUnmountFaceFXAnimSet =
            (UFunction*)UObject::GObjObjects()->Data[19548];

    UFaceFXAsset_execUnmountFaceFXAnimSet_Parms UnmountFaceFXAnimSet_Parms;

    pFnUnmountFaceFXAnimSet->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnmountFaceFXAnimSet, &UnmountFaceFXAnimSet_Parms,
                       NULL);

    pFnUnmountFaceFXAnimSet->FunctionFlags |= 0x400;
};

// Function Engine.FaceFXAsset.MountFaceFXAnimSet
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFaceFXAsset::MountFaceFXAnimSet() {
    static UFunction* pFnMountFaceFXAnimSet = NULL;

    if (!pFnMountFaceFXAnimSet)
        pFnMountFaceFXAnimSet = (UFunction*)UObject::GObjObjects()->Data[19546];

    UFaceFXAsset_execMountFaceFXAnimSet_Parms MountFaceFXAnimSet_Parms;

    pFnMountFaceFXAnimSet->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMountFaceFXAnimSet, &MountFaceFXAnimSet_Parms, NULL);

    pFnMountFaceFXAnimSet->FunctionFlags |= 0x400;
};

// Function Engine.Font.GetStringHeightAndWidth
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UFont::GetStringHeightAndWidth() {
    static UFunction* pFnGetStringHeightAndWidth = NULL;

    if (!pFnGetStringHeightAndWidth)
        pFnGetStringHeightAndWidth =
            (UFunction*)UObject::GObjObjects()->Data[20089];

    UFont_execGetStringHeightAndWidth_Parms GetStringHeightAndWidth_Parms;

    pFnGetStringHeightAndWidth->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringHeightAndWidth,
                       &GetStringHeightAndWidth_Parms, NULL);

    pFnGetStringHeightAndWidth->FunctionFlags |= 0x400;
};

// Function Engine.Font.GetMaxCharHeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UFont::GetMaxCharHeight() {
    static UFunction* pFnGetMaxCharHeight = NULL;

    if (!pFnGetMaxCharHeight)
        pFnGetMaxCharHeight = (UFunction*)UObject::GObjObjects()->Data[20087];

    UFont_execGetMaxCharHeight_Parms GetMaxCharHeight_Parms;

    pFnGetMaxCharHeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxCharHeight, &GetMaxCharHeight_Parms, NULL);

    pFnGetMaxCharHeight->FunctionFlags |= 0x400;
};

// Function Engine.Font.GetAuthoredViewportHeight
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFont::GetAuthoredViewportHeight() {
    static UFunction* pFnGetAuthoredViewportHeight = NULL;

    if (!pFnGetAuthoredViewportHeight)
        pFnGetAuthoredViewportHeight =
            (UFunction*)UObject::GObjObjects()->Data[20084];

    UFont_execGetAuthoredViewportHeight_Parms GetAuthoredViewportHeight_Parms;

    pFnGetAuthoredViewportHeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAuthoredViewportHeight,
                       &GetAuthoredViewportHeight_Parms, NULL);

    pFnGetAuthoredViewportHeight->FunctionFlags |= 0x400;
};

// Function Engine.Font.GetScalingFactor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UFont::GetScalingFactor() {
    static UFunction* pFnGetScalingFactor = NULL;

    if (!pFnGetScalingFactor)
        pFnGetScalingFactor = (UFunction*)UObject::GObjObjects()->Data[20081];

    UFont_execGetScalingFactor_Parms GetScalingFactor_Parms;

    pFnGetScalingFactor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetScalingFactor, &GetScalingFactor_Parms, NULL);

    pFnGetScalingFactor->FunctionFlags |= 0x400;
};

// Function Engine.Font.GetResolutionPageIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UFont::GetResolutionPageIndex() {
    static UFunction* pFnGetResolutionPageIndex = NULL;

    if (!pFnGetResolutionPageIndex)
        pFnGetResolutionPageIndex =
            (UFunction*)UObject::GObjObjects()->Data[20078];

    UFont_execGetResolutionPageIndex_Parms GetResolutionPageIndex_Parms;

    pFnGetResolutionPageIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetResolutionPageIndex, &GetResolutionPageIndex_Parms,
                       NULL);

    pFnGetResolutionPageIndex->FunctionFlags |= 0x400;
};

// Function Engine.MultiFont.GetResolutionTestTableIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMultiFont::GetResolutionTestTableIndex() {
    static UFunction* pFnGetResolutionTestTableIndex = NULL;

    if (!pFnGetResolutionTestTableIndex)
        pFnGetResolutionTestTableIndex =
            (UFunction*)UObject::GObjObjects()->Data[26111];

    UMultiFont_execGetResolutionTestTableIndex_Parms
        GetResolutionTestTableIndex_Parms;

    pFnGetResolutionTestTableIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetResolutionTestTableIndex,
                       &GetResolutionTestTableIndex_Parms, NULL);

    pFnGetResolutionTestTableIndex->FunctionFlags |= 0x400;
};

// Function Engine.ForceFeedbackManager.PauseWaveform
// [0x00024102]
// Parameters infos:

void UForceFeedbackManager::PauseWaveform() {
    static UFunction* pFnPauseWaveform = NULL;

    if (!pFnPauseWaveform)
        pFnPauseWaveform = (UFunction*)UObject::GObjObjects()->Data[20105];

    UForceFeedbackManager_execPauseWaveform_Parms PauseWaveform_Parms;

    this->ProcessEvent(pFnPauseWaveform, &PauseWaveform_Parms, NULL);
};

// Function Engine.ForceFeedbackManager.StopForceFeedbackWaveform
// [0x00024102]
// Parameters infos:

void UForceFeedbackManager::StopForceFeedbackWaveform() {
    static UFunction* pFnStopForceFeedbackWaveform = NULL;

    if (!pFnStopForceFeedbackWaveform)
        pFnStopForceFeedbackWaveform =
            (UFunction*)UObject::GObjObjects()->Data[20103];

    UForceFeedbackManager_execStopForceFeedbackWaveform_Parms
        StopForceFeedbackWaveform_Parms;

    this->ProcessEvent(pFnStopForceFeedbackWaveform,
                       &StopForceFeedbackWaveform_Parms, NULL);
};

// Function Engine.ForceFeedbackManager.PlayForceFeedbackWaveform
// [0x00020102]
// Parameters infos:

void UForceFeedbackManager::PlayForceFeedbackWaveform() {
    static UFunction* pFnPlayForceFeedbackWaveform = NULL;

    if (!pFnPlayForceFeedbackWaveform)
        pFnPlayForceFeedbackWaveform =
            (UFunction*)UObject::GObjObjects()->Data[20100];

    UForceFeedbackManager_execPlayForceFeedbackWaveform_Parms
        PlayForceFeedbackWaveform_Parms;

    this->ProcessEvent(pFnPlayForceFeedbackWaveform,
                       &PlayForceFeedbackWaveform_Parms, NULL);
};

// Function Engine.GamePadLightbarSubsystem.ResetState
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::ResetState() {
    static UFunction* pFnResetState = NULL;

    if (!pFnResetState)
        pFnResetState = (UFunction*)UObject::GObjObjects()->Data[22000];

    UGamePadLightbarSubsystem_execResetState_Parms ResetState_Parms;

    pFnResetState->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetState, &ResetState_Parms, NULL);

    pFnResetState->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.SetPulsingFromDef
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::SetPulsingFromDef() {
    static UFunction* pFnSetPulsingFromDef = NULL;

    if (!pFnSetPulsingFromDef)
        pFnSetPulsingFromDef = (UFunction*)UObject::GObjObjects()->Data[21998];

    UGamePadLightbarSubsystem_execSetPulsingFromDef_Parms
        SetPulsingFromDef_Parms;

    pFnSetPulsingFromDef->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPulsingFromDef, &SetPulsingFromDef_Parms, NULL);

    pFnSetPulsingFromDef->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.SetPulsing
// [0x00026400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::SetPulsing() {
    static UFunction* pFnSetPulsing = NULL;

    if (!pFnSetPulsing)
        pFnSetPulsing = (UFunction*)UObject::GObjObjects()->Data[21994];

    UGamePadLightbarSubsystem_execSetPulsing_Parms SetPulsing_Parms;

    pFnSetPulsing->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPulsing, &SetPulsing_Parms, NULL);

    pFnSetPulsing->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.SetPadColorAndLerpFromDef
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::SetPadColorAndLerpFromDef() {
    static UFunction* pFnSetPadColorAndLerpFromDef = NULL;

    if (!pFnSetPadColorAndLerpFromDef)
        pFnSetPadColorAndLerpFromDef =
            (UFunction*)UObject::GObjObjects()->Data[21992];

    UGamePadLightbarSubsystem_execSetPadColorAndLerpFromDef_Parms
        SetPadColorAndLerpFromDef_Parms;

    pFnSetPadColorAndLerpFromDef->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPadColorAndLerpFromDef,
                       &SetPadColorAndLerpFromDef_Parms, NULL);

    pFnSetPadColorAndLerpFromDef->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.SetPadColorAndLerp
// [0x00026400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::SetPadColorAndLerp() {
    static UFunction* pFnSetPadColorAndLerp = NULL;

    if (!pFnSetPadColorAndLerp)
        pFnSetPadColorAndLerp = (UFunction*)UObject::GObjObjects()->Data[21988];

    UGamePadLightbarSubsystem_execSetPadColorAndLerp_Parms
        SetPadColorAndLerp_Parms;

    pFnSetPadColorAndLerp->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPadColorAndLerp, &SetPadColorAndLerp_Parms, NULL);

    pFnSetPadColorAndLerp->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.BeginLerpFromDef
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::BeginLerpFromDef() {
    static UFunction* pFnBeginLerpFromDef = NULL;

    if (!pFnBeginLerpFromDef)
        pFnBeginLerpFromDef = (UFunction*)UObject::GObjObjects()->Data[21986];

    UGamePadLightbarSubsystem_execBeginLerpFromDef_Parms BeginLerpFromDef_Parms;

    pFnBeginLerpFromDef->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBeginLerpFromDef, &BeginLerpFromDef_Parms, NULL);

    pFnBeginLerpFromDef->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.BeginLerp
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::BeginLerp() {
    static UFunction* pFnBeginLerp = NULL;

    if (!pFnBeginLerp)
        pFnBeginLerp = (UFunction*)UObject::GObjObjects()->Data[21983];

    UGamePadLightbarSubsystem_execBeginLerp_Parms BeginLerp_Parms;

    pFnBeginLerp->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBeginLerp, &BeginLerp_Parms, NULL);

    pFnBeginLerp->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.SetPadColorFromDef
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::SetPadColorFromDef() {
    static UFunction* pFnSetPadColorFromDef = NULL;

    if (!pFnSetPadColorFromDef)
        pFnSetPadColorFromDef = (UFunction*)UObject::GObjObjects()->Data[21981];

    UGamePadLightbarSubsystem_execSetPadColorFromDef_Parms
        SetPadColorFromDef_Parms;

    pFnSetPadColorFromDef->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPadColorFromDef, &SetPadColorFromDef_Parms, NULL);

    pFnSetPadColorFromDef->FunctionFlags |= 0x400;
};

// Function Engine.GamePadLightbarSubsystem.SetPadColor
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UGamePadLightbarSubsystem::SetPadColor() {
    static UFunction* pFnSetPadColor = NULL;

    if (!pFnSetPadColor)
        pFnSetPadColor = (UFunction*)UObject::GObjObjects()->Data[21979];

    UGamePadLightbarSubsystem_execSetPadColor_Parms SetPadColor_Parms;

    pFnSetPadColor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPadColor, &SetPadColor_Parms, NULL);

    pFnSetPadColor->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEvents.GetFilename
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEvents::eventGetFilename() {
    static UFunction* pFnGetFilename = NULL;

    if (!pFnGetFilename)
        pFnGetFilename = (UFunction*)UObject::GObjObjects()->Data[22080];

    UGameplayEvents_eventGetFilename_Parms GetFilename_Parms;

    this->ProcessEvent(pFnGetFilename, &GetFilename_Parms, NULL);
};

// Function Engine.GameplayEvents.CloseStatsFile
// [0x00020000]
// Parameters infos:

void UGameplayEvents::CloseStatsFile() {
    static UFunction* pFnCloseStatsFile = NULL;

    if (!pFnCloseStatsFile)
        pFnCloseStatsFile = (UFunction*)UObject::GObjObjects()->Data[22079];

    UGameplayEvents_execCloseStatsFile_Parms CloseStatsFile_Parms;

    this->ProcessEvent(pFnCloseStatsFile, &CloseStatsFile_Parms, NULL);
};

// Function Engine.GameplayEvents.OpenStatsFile
// [0x00020000]
// Parameters infos:

void UGameplayEvents::OpenStatsFile() {
    static UFunction* pFnOpenStatsFile = NULL;

    if (!pFnOpenStatsFile)
        pFnOpenStatsFile = (UFunction*)UObject::GObjObjects()->Data[22076];

    UGameplayEvents_execOpenStatsFile_Parms OpenStatsFile_Parms;

    this->ProcessEvent(pFnOpenStatsFile, &OpenStatsFile_Parms, NULL);
};

// Function Engine.GameplayEventsReader.GetSessionDuration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetSessionDuration() {
    static UFunction* pFnGetSessionDuration = NULL;

    if (!pFnGetSessionDuration)
        pFnGetSessionDuration = (UFunction*)UObject::GObjObjects()->Data[22128];

    UGameplayEventsReader_execGetSessionDuration_Parms GetSessionDuration_Parms;

    pFnGetSessionDuration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSessionDuration, &GetSessionDuration_Parms, NULL);

    pFnGetSessionDuration->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.GetSessionEnd
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetSessionEnd() {
    static UFunction* pFnGetSessionEnd = NULL;

    if (!pFnGetSessionEnd)
        pFnGetSessionEnd = (UFunction*)UObject::GObjObjects()->Data[22126];

    UGameplayEventsReader_execGetSessionEnd_Parms GetSessionEnd_Parms;

    pFnGetSessionEnd->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSessionEnd, &GetSessionEnd_Parms, NULL);

    pFnGetSessionEnd->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.GetSessionStart
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetSessionStart() {
    static UFunction* pFnGetSessionStart = NULL;

    if (!pFnGetSessionStart)
        pFnGetSessionStart = (UFunction*)UObject::GObjObjects()->Data[22124];

    UGameplayEventsReader_execGetSessionStart_Parms GetSessionStart_Parms;

    pFnGetSessionStart->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSessionStart, &GetSessionStart_Parms, NULL);

    pFnGetSessionStart->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.GetSessionTimestamp
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetSessionTimestamp() {
    static UFunction* pFnGetSessionTimestamp = NULL;

    if (!pFnGetSessionTimestamp)
        pFnGetSessionTimestamp =
            (UFunction*)UObject::GObjObjects()->Data[22122];

    UGameplayEventsReader_execGetSessionTimestamp_Parms
        GetSessionTimestamp_Parms;

    pFnGetSessionTimestamp->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSessionTimestamp, &GetSessionTimestamp_Parms,
                       NULL);

    pFnGetSessionTimestamp->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.GetPlatform
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetPlatform() {
    static UFunction* pFnGetPlatform = NULL;

    if (!pFnGetPlatform)
        pFnGetPlatform = (UFunction*)UObject::GObjObjects()->Data[22120];

    UGameplayEventsReader_execGetPlatform_Parms GetPlatform_Parms;

    pFnGetPlatform->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlatform, &GetPlatform_Parms, NULL);

    pFnGetPlatform->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.GetTitleID
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetTitleID() {
    static UFunction* pFnGetTitleID = NULL;

    if (!pFnGetTitleID)
        pFnGetTitleID = (UFunction*)UObject::GObjObjects()->Data[22118];

    UGameplayEventsReader_execGetTitleID_Parms GetTitleID_Parms;

    pFnGetTitleID->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTitleID, &GetTitleID_Parms, NULL);

    pFnGetTitleID->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.GetSessionID
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::GetSessionID() {
    static UFunction* pFnGetSessionID = NULL;

    if (!pFnGetSessionID)
        pFnGetSessionID = (UFunction*)UObject::GObjObjects()->Data[22116];

    UGameplayEventsReader_execGetSessionID_Parms GetSessionID_Parms;

    pFnGetSessionID->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSessionID, &GetSessionID_Parms, NULL);

    pFnGetSessionID->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.ProcessStreamEnd
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::ProcessStreamEnd() {
    static UFunction* pFnProcessStreamEnd = NULL;

    if (!pFnProcessStreamEnd)
        pFnProcessStreamEnd = (UFunction*)UObject::GObjObjects()->Data[22115];

    UGameplayEventsReader_execProcessStreamEnd_Parms ProcessStreamEnd_Parms;

    pFnProcessStreamEnd->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProcessStreamEnd, &ProcessStreamEnd_Parms, NULL);

    pFnProcessStreamEnd->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.ProcessStream
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::ProcessStream() {
    static UFunction* pFnProcessStream = NULL;

    if (!pFnProcessStream)
        pFnProcessStream = (UFunction*)UObject::GObjObjects()->Data[22114];

    UGameplayEventsReader_execProcessStream_Parms ProcessStream_Parms;

    pFnProcessStream->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProcessStream, &ProcessStream_Parms, NULL);

    pFnProcessStream->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.ProcessStreamStart
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::ProcessStreamStart() {
    static UFunction* pFnProcessStreamStart = NULL;

    if (!pFnProcessStreamStart)
        pFnProcessStreamStart = (UFunction*)UObject::GObjObjects()->Data[22113];

    UGameplayEventsReader_execProcessStreamStart_Parms ProcessStreamStart_Parms;

    pFnProcessStreamStart->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProcessStreamStart, &ProcessStreamStart_Parms, NULL);

    pFnProcessStreamStart->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.UnregisterHandler
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsReader::eventUnregisterHandler() {
    static UFunction* pFnUnregisterHandler = NULL;

    if (!pFnUnregisterHandler)
        pFnUnregisterHandler = (UFunction*)UObject::GObjObjects()->Data[22110];

    UGameplayEventsReader_eventUnregisterHandler_Parms UnregisterHandler_Parms;

    this->ProcessEvent(pFnUnregisterHandler, &UnregisterHandler_Parms, NULL);
};

// Function Engine.GameplayEventsReader.RegisterHandler
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsReader::eventRegisterHandler() {
    static UFunction* pFnRegisterHandler = NULL;

    if (!pFnRegisterHandler)
        pFnRegisterHandler = (UFunction*)UObject::GObjObjects()->Data[22107];

    UGameplayEventsReader_eventRegisterHandler_Parms RegisterHandler_Parms;

    this->ProcessEvent(pFnRegisterHandler, &RegisterHandler_Parms, NULL);
};

// Function Engine.GameplayEventsReader.SerializeHeader
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::SerializeHeader() {
    static UFunction* pFnSerializeHeader = NULL;

    if (!pFnSerializeHeader)
        pFnSerializeHeader = (UFunction*)UObject::GObjObjects()->Data[22105];

    UGameplayEventsReader_execSerializeHeader_Parms SerializeHeader_Parms;

    pFnSerializeHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSerializeHeader, &SerializeHeader_Parms, NULL);

    pFnSerializeHeader->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.CloseStatsFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::CloseStatsFile() {
    static UFunction* pFnCloseStatsFile = NULL;

    if (!pFnCloseStatsFile)
        pFnCloseStatsFile = (UFunction*)UObject::GObjObjects()->Data[22104];

    UGameplayEventsReader_execCloseStatsFile_Parms CloseStatsFile_Parms;

    pFnCloseStatsFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCloseStatsFile, &CloseStatsFile_Parms, NULL);

    pFnCloseStatsFile->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsReader.OpenStatsFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsReader::OpenStatsFile() {
    static UFunction* pFnOpenStatsFile = NULL;

    if (!pFnOpenStatsFile)
        pFnOpenStatsFile = (UFunction*)UObject::GObjObjects()->Data[22101];

    UGameplayEventsReader_execOpenStatsFile_Parms OpenStatsFile_Parms;

    pFnOpenStatsFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenStatsFile, &OpenStatsFile_Parms, NULL);

    pFnOpenStatsFile->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriterBase.RecordCoverLinkFireLinks
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::RecordCoverLinkFireLinks() {
    static UFunction* pFnRecordCoverLinkFireLinks = NULL;

    if (!pFnRecordCoverLinkFireLinks)
        pFnRecordCoverLinkFireLinks =
            (UFunction*)UObject::GObjObjects()->Data[22270];

    UGameplayEventsWriterBase_execRecordCoverLinkFireLinks_Parms
        RecordCoverLinkFireLinks_Parms;

    this->ProcessEvent(pFnRecordCoverLinkFireLinks,
                       &RecordCoverLinkFireLinks_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.RecordAIPathFail
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::RecordAIPathFail() {
    static UFunction* pFnRecordAIPathFail = NULL;

    if (!pFnRecordAIPathFail)
        pFnRecordAIPathFail = (UFunction*)UObject::GObjObjects()->Data[22266];

    UGameplayEventsWriterBase_execRecordAIPathFail_Parms RecordAIPathFail_Parms;

    this->ProcessEvent(pFnRecordAIPathFail, &RecordAIPathFail_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogSystemPollEvents
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogSystemPollEvents() {
    static UFunction* pFnLogSystemPollEvents = NULL;

    if (!pFnLogSystemPollEvents)
        pFnLogSystemPollEvents =
            (UFunction*)UObject::GObjObjects()->Data[22265];

    UGameplayEventsWriterBase_execLogSystemPollEvents_Parms
        LogSystemPollEvents_Parms;

    this->ProcessEvent(pFnLogSystemPollEvents, &LogSystemPollEvents_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogProjectileIntEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogProjectileIntEvent() {
    static UFunction* pFnLogProjectileIntEvent = NULL;

    if (!pFnLogProjectileIntEvent)
        pFnLogProjectileIntEvent =
            (UFunction*)UObject::GObjObjects()->Data[22260];

    UGameplayEventsWriterBase_execLogProjectileIntEvent_Parms
        LogProjectileIntEvent_Parms;

    this->ProcessEvent(pFnLogProjectileIntEvent, &LogProjectileIntEvent_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogDamageEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogDamageEvent() {
    static UFunction* pFnLogDamageEvent = NULL;

    if (!pFnLogDamageEvent)
        pFnLogDamageEvent = (UFunction*)UObject::GObjObjects()->Data[22254];

    UGameplayEventsWriterBase_execLogDamageEvent_Parms LogDamageEvent_Parms;

    this->ProcessEvent(pFnLogDamageEvent, &LogDamageEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogWeaponIntEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogWeaponIntEvent() {
    static UFunction* pFnLogWeaponIntEvent = NULL;

    if (!pFnLogWeaponIntEvent)
        pFnLogWeaponIntEvent = (UFunction*)UObject::GObjObjects()->Data[22249];

    UGameplayEventsWriterBase_execLogWeaponIntEvent_Parms
        LogWeaponIntEvent_Parms;

    this->ProcessEvent(pFnLogWeaponIntEvent, &LogWeaponIntEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerPlayerEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerPlayerEvent() {
    static UFunction* pFnLogPlayerPlayerEvent = NULL;

    if (!pFnLogPlayerPlayerEvent)
        pFnLogPlayerPlayerEvent =
            (UFunction*)UObject::GObjObjects()->Data[22245];

    UGameplayEventsWriterBase_execLogPlayerPlayerEvent_Parms
        LogPlayerPlayerEvent_Parms;

    this->ProcessEvent(pFnLogPlayerPlayerEvent, &LogPlayerPlayerEvent_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerKillDeath
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerKillDeath() {
    static UFunction* pFnLogPlayerKillDeath = NULL;

    if (!pFnLogPlayerKillDeath)
        pFnLogPlayerKillDeath = (UFunction*)UObject::GObjObjects()->Data[22239];

    UGameplayEventsWriterBase_execLogPlayerKillDeath_Parms
        LogPlayerKillDeath_Parms;

    this->ProcessEvent(pFnLogPlayerKillDeath, &LogPlayerKillDeath_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogAllPlayerPositionsEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogAllPlayerPositionsEvent() {
    static UFunction* pFnLogAllPlayerPositionsEvent = NULL;

    if (!pFnLogAllPlayerPositionsEvent)
        pFnLogAllPlayerPositionsEvent =
            (UFunction*)UObject::GObjObjects()->Data[22237];

    UGameplayEventsWriterBase_execLogAllPlayerPositionsEvent_Parms
        LogAllPlayerPositionsEvent_Parms;

    this->ProcessEvent(pFnLogAllPlayerPositionsEvent,
                       &LogAllPlayerPositionsEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerLoginChange
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerLoginChange() {
    static UFunction* pFnLogPlayerLoginChange = NULL;

    if (!pFnLogPlayerLoginChange)
        pFnLogPlayerLoginChange =
            (UFunction*)UObject::GObjObjects()->Data[22231];

    UGameplayEventsWriterBase_execLogPlayerLoginChange_Parms
        LogPlayerLoginChange_Parms;

    this->ProcessEvent(pFnLogPlayerLoginChange, &LogPlayerLoginChange_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerSpawnEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerSpawnEvent() {
    static UFunction* pFnLogPlayerSpawnEvent = NULL;

    if (!pFnLogPlayerSpawnEvent)
        pFnLogPlayerSpawnEvent =
            (UFunction*)UObject::GObjObjects()->Data[22226];

    UGameplayEventsWriterBase_execLogPlayerSpawnEvent_Parms
        LogPlayerSpawnEvent_Parms;

    this->ProcessEvent(pFnLogPlayerSpawnEvent, &LogPlayerSpawnEvent_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerStringEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerStringEvent() {
    static UFunction* pFnLogPlayerStringEvent = NULL;

    if (!pFnLogPlayerStringEvent)
        pFnLogPlayerStringEvent =
            (UFunction*)UObject::GObjObjects()->Data[22222];

    UGameplayEventsWriterBase_execLogPlayerStringEvent_Parms
        LogPlayerStringEvent_Parms;

    this->ProcessEvent(pFnLogPlayerStringEvent, &LogPlayerStringEvent_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerFloatEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerFloatEvent() {
    static UFunction* pFnLogPlayerFloatEvent = NULL;

    if (!pFnLogPlayerFloatEvent)
        pFnLogPlayerFloatEvent =
            (UFunction*)UObject::GObjObjects()->Data[22218];

    UGameplayEventsWriterBase_execLogPlayerFloatEvent_Parms
        LogPlayerFloatEvent_Parms;

    this->ProcessEvent(pFnLogPlayerFloatEvent, &LogPlayerFloatEvent_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogPlayerIntEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogPlayerIntEvent() {
    static UFunction* pFnLogPlayerIntEvent = NULL;

    if (!pFnLogPlayerIntEvent)
        pFnLogPlayerIntEvent = (UFunction*)UObject::GObjObjects()->Data[22214];

    UGameplayEventsWriterBase_execLogPlayerIntEvent_Parms
        LogPlayerIntEvent_Parms;

    this->ProcessEvent(pFnLogPlayerIntEvent, &LogPlayerIntEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogTeamStringEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogTeamStringEvent() {
    static UFunction* pFnLogTeamStringEvent = NULL;

    if (!pFnLogTeamStringEvent)
        pFnLogTeamStringEvent = (UFunction*)UObject::GObjObjects()->Data[22210];

    UGameplayEventsWriterBase_execLogTeamStringEvent_Parms
        LogTeamStringEvent_Parms;

    this->ProcessEvent(pFnLogTeamStringEvent, &LogTeamStringEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogTeamFloatEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogTeamFloatEvent() {
    static UFunction* pFnLogTeamFloatEvent = NULL;

    if (!pFnLogTeamFloatEvent)
        pFnLogTeamFloatEvent = (UFunction*)UObject::GObjObjects()->Data[22206];

    UGameplayEventsWriterBase_execLogTeamFloatEvent_Parms
        LogTeamFloatEvent_Parms;

    this->ProcessEvent(pFnLogTeamFloatEvent, &LogTeamFloatEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogTeamIntEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogTeamIntEvent() {
    static UFunction* pFnLogTeamIntEvent = NULL;

    if (!pFnLogTeamIntEvent)
        pFnLogTeamIntEvent = (UFunction*)UObject::GObjObjects()->Data[22202];

    UGameplayEventsWriterBase_execLogTeamIntEvent_Parms LogTeamIntEvent_Parms;

    this->ProcessEvent(pFnLogTeamIntEvent, &LogTeamIntEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogGamePositionEvent
// [0x00420000]
// Parameters infos:

void UGameplayEventsWriterBase::LogGamePositionEvent() {
    static UFunction* pFnLogGamePositionEvent = NULL;

    if (!pFnLogGamePositionEvent)
        pFnLogGamePositionEvent =
            (UFunction*)UObject::GObjObjects()->Data[22198];

    UGameplayEventsWriterBase_execLogGamePositionEvent_Parms
        LogGamePositionEvent_Parms;

    this->ProcessEvent(pFnLogGamePositionEvent, &LogGamePositionEvent_Parms,
                       NULL);
};

// Function Engine.GameplayEventsWriterBase.LogGameFloatEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogGameFloatEvent() {
    static UFunction* pFnLogGameFloatEvent = NULL;

    if (!pFnLogGameFloatEvent)
        pFnLogGameFloatEvent = (UFunction*)UObject::GObjObjects()->Data[22195];

    UGameplayEventsWriterBase_execLogGameFloatEvent_Parms
        LogGameFloatEvent_Parms;

    this->ProcessEvent(pFnLogGameFloatEvent, &LogGameFloatEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogGameStringEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogGameStringEvent() {
    static UFunction* pFnLogGameStringEvent = NULL;

    if (!pFnLogGameStringEvent)
        pFnLogGameStringEvent = (UFunction*)UObject::GObjObjects()->Data[22192];

    UGameplayEventsWriterBase_execLogGameStringEvent_Parms
        LogGameStringEvent_Parms;

    this->ProcessEvent(pFnLogGameStringEvent, &LogGameStringEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.LogGameIntEvent
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::LogGameIntEvent() {
    static UFunction* pFnLogGameIntEvent = NULL;

    if (!pFnLogGameIntEvent)
        pFnLogGameIntEvent = (UFunction*)UObject::GObjObjects()->Data[22189];

    UGameplayEventsWriterBase_execLogGameIntEvent_Parms LogGameIntEvent_Parms;

    this->ProcessEvent(pFnLogGameIntEvent, &LogGameIntEvent_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.EndLogging
// [0x00020000]
// Parameters infos:

void UGameplayEventsWriterBase::EndLogging() {
    static UFunction* pFnEndLogging = NULL;

    if (!pFnEndLogging)
        pFnEndLogging = (UFunction*)UObject::GObjObjects()->Data[22188];

    UGameplayEventsWriterBase_execEndLogging_Parms EndLogging_Parms;

    this->ProcessEvent(pFnEndLogging, &EndLogging_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.ResetLogging
// [0x00024000]
// Parameters infos:

void UGameplayEventsWriterBase::ResetLogging() {
    static UFunction* pFnResetLogging = NULL;

    if (!pFnResetLogging)
        pFnResetLogging = (UFunction*)UObject::GObjObjects()->Data[22186];

    UGameplayEventsWriterBase_execResetLogging_Parms ResetLogging_Parms;

    this->ProcessEvent(pFnResetLogging, &ResetLogging_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.StartLogging
// [0x00024000]
// Parameters infos:

void UGameplayEventsWriterBase::StartLogging() {
    static UFunction* pFnStartLogging = NULL;

    if (!pFnStartLogging)
        pFnStartLogging = (UFunction*)UObject::GObjObjects()->Data[22184];

    UGameplayEventsWriterBase_execStartLogging_Parms StartLogging_Parms;

    this->ProcessEvent(pFnStartLogging, &StartLogging_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.GetPlaylistId
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsWriterBase::eventGetPlaylistId() {
    static UFunction* pFnGetPlaylistId = NULL;

    if (!pFnGetPlaylistId)
        pFnGetPlaylistId = (UFunction*)UObject::GObjObjects()->Data[22182];

    UGameplayEventsWriterBase_eventGetPlaylistId_Parms GetPlaylistId_Parms;

    this->ProcessEvent(pFnGetPlaylistId, &GetPlaylistId_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.GetGameTypeId
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsWriterBase::eventGetGameTypeId() {
    static UFunction* pFnGetGameTypeId = NULL;

    if (!pFnGetGameTypeId)
        pFnGetGameTypeId = (UFunction*)UObject::GObjObjects()->Data[22180];

    UGameplayEventsWriterBase_eventGetGameTypeId_Parms GetGameTypeId_Parms;

    this->ProcessEvent(pFnGetGameTypeId, &GetGameTypeId_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.Poll
// [0x00020002]
// Parameters infos:

void UGameplayEventsWriterBase::Poll() {
    static UFunction* pFnPoll = NULL;

    if (!pFnPoll) pFnPoll = (UFunction*)UObject::GObjObjects()->Data[22178];

    UGameplayEventsWriterBase_execPoll_Parms Poll_Parms;

    this->ProcessEvent(pFnPoll, &Poll_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.StopPolling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsWriterBase::eventStopPolling() {
    static UFunction* pFnStopPolling = NULL;

    if (!pFnStopPolling)
        pFnStopPolling = (UFunction*)UObject::GObjObjects()->Data[22176];

    UGameplayEventsWriterBase_eventStopPolling_Parms StopPolling_Parms;

    this->ProcessEvent(pFnStopPolling, &StopPolling_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.StartPolling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsWriterBase::eventStartPolling() {
    static UFunction* pFnStartPolling = NULL;

    if (!pFnStartPolling)
        pFnStartPolling = (UFunction*)UObject::GObjObjects()->Data[22173];

    UGameplayEventsWriterBase_eventStartPolling_Parms StartPolling_Parms;

    this->ProcessEvent(pFnStartPolling, &StartPolling_Parms, NULL);
};

// Function Engine.GameplayEventsWriterBase.IsSessionInProgress
// [0x00020002]
// Parameters infos:

void UGameplayEventsWriterBase::IsSessionInProgress() {
    static UFunction* pFnIsSessionInProgress = NULL;

    if (!pFnIsSessionInProgress)
        pFnIsSessionInProgress =
            (UFunction*)UObject::GObjObjects()->Data[22171];

    UGameplayEventsWriterBase_execIsSessionInProgress_Parms
        IsSessionInProgress_Parms;

    this->ProcessEvent(pFnIsSessionInProgress, &IsSessionInProgress_Parms,
                       NULL);
};

// Function Engine.GameplayEventsUploadAnalytics.RecordCoverLinkFireLinks
// [0x00020000]
// Parameters infos:

void UGameplayEventsUploadAnalytics::RecordCoverLinkFireLinks() {
    static UFunction* pFnRecordCoverLinkFireLinks = NULL;

    if (!pFnRecordCoverLinkFireLinks)
        pFnRecordCoverLinkFireLinks =
            (UFunction*)UObject::GObjObjects()->Data[22361];

    UGameplayEventsUploadAnalytics_execRecordCoverLinkFireLinks_Parms
        RecordCoverLinkFireLinks_Parms;

    this->ProcessEvent(pFnRecordCoverLinkFireLinks,
                       &RecordCoverLinkFireLinks_Parms, NULL);
};

// Function Engine.GameplayEventsUploadAnalytics.RecordAIPathFail
// [0x00020000]
// Parameters infos:

void UGameplayEventsUploadAnalytics::RecordAIPathFail() {
    static UFunction* pFnRecordAIPathFail = NULL;

    if (!pFnRecordAIPathFail)
        pFnRecordAIPathFail = (UFunction*)UObject::GObjObjects()->Data[22357];

    UGameplayEventsUploadAnalytics_execRecordAIPathFail_Parms
        RecordAIPathFail_Parms;

    this->ProcessEvent(pFnRecordAIPathFail, &RecordAIPathFail_Parms, NULL);
};

// Function Engine.GameplayEventsUploadAnalytics.GetGenericParamListEntry
// [0x00020000]
// Parameters infos:

void UGameplayEventsUploadAnalytics::GetGenericParamListEntry() {
    static UFunction* pFnGetGenericParamListEntry = NULL;

    if (!pFnGetGenericParamListEntry)
        pFnGetGenericParamListEntry =
            (UFunction*)UObject::GObjObjects()->Data[22355];

    UGameplayEventsUploadAnalytics_execGetGenericParamListEntry_Parms
        GetGenericParamListEntry_Parms;

    this->ProcessEvent(pFnGetGenericParamListEntry,
                       &GetGenericParamListEntry_Parms, NULL);
};

// Function Engine.GameplayEventsUploadAnalytics.LogProjectileIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogProjectileIntEvent() {
    static UFunction* pFnLogProjectileIntEvent = NULL;

    if (!pFnLogProjectileIntEvent)
        pFnLogProjectileIntEvent =
            (UFunction*)UObject::GObjObjects()->Data[22350];

    UGameplayEventsUploadAnalytics_execLogProjectileIntEvent_Parms
        LogProjectileIntEvent_Parms;

    pFnLogProjectileIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogProjectileIntEvent, &LogProjectileIntEvent_Parms,
                       NULL);

    pFnLogProjectileIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogDamageEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogDamageEvent() {
    static UFunction* pFnLogDamageEvent = NULL;

    if (!pFnLogDamageEvent)
        pFnLogDamageEvent = (UFunction*)UObject::GObjObjects()->Data[22344];

    UGameplayEventsUploadAnalytics_execLogDamageEvent_Parms
        LogDamageEvent_Parms;

    pFnLogDamageEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogDamageEvent, &LogDamageEvent_Parms, NULL);

    pFnLogDamageEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogWeaponIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogWeaponIntEvent() {
    static UFunction* pFnLogWeaponIntEvent = NULL;

    if (!pFnLogWeaponIntEvent)
        pFnLogWeaponIntEvent = (UFunction*)UObject::GObjObjects()->Data[22339];

    UGameplayEventsUploadAnalytics_execLogWeaponIntEvent_Parms
        LogWeaponIntEvent_Parms;

    pFnLogWeaponIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogWeaponIntEvent, &LogWeaponIntEvent_Parms, NULL);

    pFnLogWeaponIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerPlayerEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerPlayerEvent() {
    static UFunction* pFnLogPlayerPlayerEvent = NULL;

    if (!pFnLogPlayerPlayerEvent)
        pFnLogPlayerPlayerEvent =
            (UFunction*)UObject::GObjObjects()->Data[22335];

    UGameplayEventsUploadAnalytics_execLogPlayerPlayerEvent_Parms
        LogPlayerPlayerEvent_Parms;

    pFnLogPlayerPlayerEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerPlayerEvent, &LogPlayerPlayerEvent_Parms,
                       NULL);

    pFnLogPlayerPlayerEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerKillDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerKillDeath() {
    static UFunction* pFnLogPlayerKillDeath = NULL;

    if (!pFnLogPlayerKillDeath)
        pFnLogPlayerKillDeath = (UFunction*)UObject::GObjObjects()->Data[22329];

    UGameplayEventsUploadAnalytics_execLogPlayerKillDeath_Parms
        LogPlayerKillDeath_Parms;

    pFnLogPlayerKillDeath->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerKillDeath, &LogPlayerKillDeath_Parms, NULL);

    pFnLogPlayerKillDeath->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogAllPlayerPositionsEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogAllPlayerPositionsEvent() {
    static UFunction* pFnLogAllPlayerPositionsEvent = NULL;

    if (!pFnLogAllPlayerPositionsEvent)
        pFnLogAllPlayerPositionsEvent =
            (UFunction*)UObject::GObjObjects()->Data[22327];

    UGameplayEventsUploadAnalytics_execLogAllPlayerPositionsEvent_Parms
        LogAllPlayerPositionsEvent_Parms;

    pFnLogAllPlayerPositionsEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogAllPlayerPositionsEvent,
                       &LogAllPlayerPositionsEvent_Parms, NULL);

    pFnLogAllPlayerPositionsEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerLoginChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerLoginChange() {
    static UFunction* pFnLogPlayerLoginChange = NULL;

    if (!pFnLogPlayerLoginChange)
        pFnLogPlayerLoginChange =
            (UFunction*)UObject::GObjObjects()->Data[22321];

    UGameplayEventsUploadAnalytics_execLogPlayerLoginChange_Parms
        LogPlayerLoginChange_Parms;

    pFnLogPlayerLoginChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerLoginChange, &LogPlayerLoginChange_Parms,
                       NULL);

    pFnLogPlayerLoginChange->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerSpawnEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerSpawnEvent() {
    static UFunction* pFnLogPlayerSpawnEvent = NULL;

    if (!pFnLogPlayerSpawnEvent)
        pFnLogPlayerSpawnEvent =
            (UFunction*)UObject::GObjObjects()->Data[22316];

    UGameplayEventsUploadAnalytics_execLogPlayerSpawnEvent_Parms
        LogPlayerSpawnEvent_Parms;

    pFnLogPlayerSpawnEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerSpawnEvent, &LogPlayerSpawnEvent_Parms,
                       NULL);

    pFnLogPlayerSpawnEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerStringEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerStringEvent() {
    static UFunction* pFnLogPlayerStringEvent = NULL;

    if (!pFnLogPlayerStringEvent)
        pFnLogPlayerStringEvent =
            (UFunction*)UObject::GObjObjects()->Data[22312];

    UGameplayEventsUploadAnalytics_execLogPlayerStringEvent_Parms
        LogPlayerStringEvent_Parms;

    pFnLogPlayerStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerStringEvent, &LogPlayerStringEvent_Parms,
                       NULL);

    pFnLogPlayerStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerFloatEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerFloatEvent() {
    static UFunction* pFnLogPlayerFloatEvent = NULL;

    if (!pFnLogPlayerFloatEvent)
        pFnLogPlayerFloatEvent =
            (UFunction*)UObject::GObjObjects()->Data[22308];

    UGameplayEventsUploadAnalytics_execLogPlayerFloatEvent_Parms
        LogPlayerFloatEvent_Parms;

    pFnLogPlayerFloatEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerFloatEvent, &LogPlayerFloatEvent_Parms,
                       NULL);

    pFnLogPlayerFloatEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogPlayerIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogPlayerIntEvent() {
    static UFunction* pFnLogPlayerIntEvent = NULL;

    if (!pFnLogPlayerIntEvent)
        pFnLogPlayerIntEvent = (UFunction*)UObject::GObjObjects()->Data[22304];

    UGameplayEventsUploadAnalytics_execLogPlayerIntEvent_Parms
        LogPlayerIntEvent_Parms;

    pFnLogPlayerIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerIntEvent, &LogPlayerIntEvent_Parms, NULL);

    pFnLogPlayerIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogTeamStringEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogTeamStringEvent() {
    static UFunction* pFnLogTeamStringEvent = NULL;

    if (!pFnLogTeamStringEvent)
        pFnLogTeamStringEvent = (UFunction*)UObject::GObjObjects()->Data[22300];

    UGameplayEventsUploadAnalytics_execLogTeamStringEvent_Parms
        LogTeamStringEvent_Parms;

    pFnLogTeamStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogTeamStringEvent, &LogTeamStringEvent_Parms, NULL);

    pFnLogTeamStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogTeamFloatEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogTeamFloatEvent() {
    static UFunction* pFnLogTeamFloatEvent = NULL;

    if (!pFnLogTeamFloatEvent)
        pFnLogTeamFloatEvent = (UFunction*)UObject::GObjObjects()->Data[22296];

    UGameplayEventsUploadAnalytics_execLogTeamFloatEvent_Parms
        LogTeamFloatEvent_Parms;

    pFnLogTeamFloatEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogTeamFloatEvent, &LogTeamFloatEvent_Parms, NULL);

    pFnLogTeamFloatEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogTeamIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogTeamIntEvent() {
    static UFunction* pFnLogTeamIntEvent = NULL;

    if (!pFnLogTeamIntEvent)
        pFnLogTeamIntEvent = (UFunction*)UObject::GObjObjects()->Data[22292];

    UGameplayEventsUploadAnalytics_execLogTeamIntEvent_Parms
        LogTeamIntEvent_Parms;

    pFnLogTeamIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogTeamIntEvent, &LogTeamIntEvent_Parms, NULL);

    pFnLogTeamIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogGamePositionEvent
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogGamePositionEvent() {
    static UFunction* pFnLogGamePositionEvent = NULL;

    if (!pFnLogGamePositionEvent)
        pFnLogGamePositionEvent =
            (UFunction*)UObject::GObjObjects()->Data[22288];

    UGameplayEventsUploadAnalytics_execLogGamePositionEvent_Parms
        LogGamePositionEvent_Parms;

    pFnLogGamePositionEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGamePositionEvent, &LogGamePositionEvent_Parms,
                       NULL);

    pFnLogGamePositionEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogGameFloatEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogGameFloatEvent() {
    static UFunction* pFnLogGameFloatEvent = NULL;

    if (!pFnLogGameFloatEvent)
        pFnLogGameFloatEvent = (UFunction*)UObject::GObjObjects()->Data[22285];

    UGameplayEventsUploadAnalytics_execLogGameFloatEvent_Parms
        LogGameFloatEvent_Parms;

    pFnLogGameFloatEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameFloatEvent, &LogGameFloatEvent_Parms, NULL);

    pFnLogGameFloatEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogGameStringEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogGameStringEvent() {
    static UFunction* pFnLogGameStringEvent = NULL;

    if (!pFnLogGameStringEvent)
        pFnLogGameStringEvent = (UFunction*)UObject::GObjObjects()->Data[22282];

    UGameplayEventsUploadAnalytics_execLogGameStringEvent_Parms
        LogGameStringEvent_Parms;

    pFnLogGameStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameStringEvent, &LogGameStringEvent_Parms, NULL);

    pFnLogGameStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.LogGameIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::LogGameIntEvent() {
    static UFunction* pFnLogGameIntEvent = NULL;

    if (!pFnLogGameIntEvent)
        pFnLogGameIntEvent = (UFunction*)UObject::GObjObjects()->Data[22279];

    UGameplayEventsUploadAnalytics_execLogGameIntEvent_Parms
        LogGameIntEvent_Parms;

    pFnLogGameIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameIntEvent, &LogGameIntEvent_Parms, NULL);

    pFnLogGameIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.EndLogging
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::EndLogging() {
    static UFunction* pFnEndLogging = NULL;

    if (!pFnEndLogging)
        pFnEndLogging = (UFunction*)UObject::GObjObjects()->Data[22278];

    UGameplayEventsUploadAnalytics_execEndLogging_Parms EndLogging_Parms;

    pFnEndLogging->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndLogging, &EndLogging_Parms, NULL);

    pFnEndLogging->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.ResetLogging
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::ResetLogging() {
    static UFunction* pFnResetLogging = NULL;

    if (!pFnResetLogging)
        pFnResetLogging = (UFunction*)UObject::GObjObjects()->Data[22276];

    UGameplayEventsUploadAnalytics_execResetLogging_Parms ResetLogging_Parms;

    pFnResetLogging->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetLogging, &ResetLogging_Parms, NULL);

    pFnResetLogging->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsUploadAnalytics.StartLogging
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsUploadAnalytics::StartLogging() {
    static UFunction* pFnStartLogging = NULL;

    if (!pFnStartLogging)
        pFnStartLogging = (UFunction*)UObject::GObjObjects()->Data[22274];

    UGameplayEventsUploadAnalytics_execStartLogging_Parms StartLogging_Parms;

    pFnStartLogging->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStartLogging, &StartLogging_Parms, NULL);

    pFnStartLogging->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.RecordCoverLinkFireLinks
// [0x00820002]
// Parameters infos:

void UGameplayEventsWriter::RecordCoverLinkFireLinks() {
    static UFunction* pFnRecordCoverLinkFireLinks = NULL;

    if (!pFnRecordCoverLinkFireLinks)
        pFnRecordCoverLinkFireLinks =
            (UFunction*)UObject::GObjObjects()->Data[22465];

    UGameplayEventsWriter_execRecordCoverLinkFireLinks_Parms
        RecordCoverLinkFireLinks_Parms;

    this->ProcessEvent(pFnRecordCoverLinkFireLinks,
                       &RecordCoverLinkFireLinks_Parms, NULL);
};

// Function Engine.GameplayEventsWriter.RecordAIPathFail
// [0x00020002]
// Parameters infos:

void UGameplayEventsWriter::RecordAIPathFail() {
    static UFunction* pFnRecordAIPathFail = NULL;

    if (!pFnRecordAIPathFail)
        pFnRecordAIPathFail = (UFunction*)UObject::GObjObjects()->Data[22460];

    UGameplayEventsWriter_execRecordAIPathFail_Parms RecordAIPathFail_Parms;

    this->ProcessEvent(pFnRecordAIPathFail, &RecordAIPathFail_Parms, NULL);
};

// Function Engine.GameplayEventsWriter.GetGenericParamListEntry
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::GetGenericParamListEntry() {
    static UFunction* pFnGetGenericParamListEntry = NULL;

    if (!pFnGetGenericParamListEntry)
        pFnGetGenericParamListEntry =
            (UFunction*)UObject::GObjObjects()->Data[22458];

    UGameplayEventsWriter_execGetGenericParamListEntry_Parms
        GetGenericParamListEntry_Parms;

    pFnGetGenericParamListEntry->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGenericParamListEntry,
                       &GetGenericParamListEntry_Parms, NULL);

    pFnGetGenericParamListEntry->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogSystemPollEvents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogSystemPollEvents() {
    static UFunction* pFnLogSystemPollEvents = NULL;

    if (!pFnLogSystemPollEvents)
        pFnLogSystemPollEvents =
            (UFunction*)UObject::GObjObjects()->Data[22457];

    UGameplayEventsWriter_execLogSystemPollEvents_Parms
        LogSystemPollEvents_Parms;

    pFnLogSystemPollEvents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogSystemPollEvents, &LogSystemPollEvents_Parms,
                       NULL);

    pFnLogSystemPollEvents->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogProjectileIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogProjectileIntEvent() {
    static UFunction* pFnLogProjectileIntEvent = NULL;

    if (!pFnLogProjectileIntEvent)
        pFnLogProjectileIntEvent =
            (UFunction*)UObject::GObjObjects()->Data[22452];

    UGameplayEventsWriter_execLogProjectileIntEvent_Parms
        LogProjectileIntEvent_Parms;

    pFnLogProjectileIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogProjectileIntEvent, &LogProjectileIntEvent_Parms,
                       NULL);

    pFnLogProjectileIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogDamageEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogDamageEvent() {
    static UFunction* pFnLogDamageEvent = NULL;

    if (!pFnLogDamageEvent)
        pFnLogDamageEvent = (UFunction*)UObject::GObjObjects()->Data[22446];

    UGameplayEventsWriter_execLogDamageEvent_Parms LogDamageEvent_Parms;

    pFnLogDamageEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogDamageEvent, &LogDamageEvent_Parms, NULL);

    pFnLogDamageEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogWeaponIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogWeaponIntEvent() {
    static UFunction* pFnLogWeaponIntEvent = NULL;

    if (!pFnLogWeaponIntEvent)
        pFnLogWeaponIntEvent = (UFunction*)UObject::GObjObjects()->Data[22441];

    UGameplayEventsWriter_execLogWeaponIntEvent_Parms LogWeaponIntEvent_Parms;

    pFnLogWeaponIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogWeaponIntEvent, &LogWeaponIntEvent_Parms, NULL);

    pFnLogWeaponIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerPlayerEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerPlayerEvent() {
    static UFunction* pFnLogPlayerPlayerEvent = NULL;

    if (!pFnLogPlayerPlayerEvent)
        pFnLogPlayerPlayerEvent =
            (UFunction*)UObject::GObjObjects()->Data[22437];

    UGameplayEventsWriter_execLogPlayerPlayerEvent_Parms
        LogPlayerPlayerEvent_Parms;

    pFnLogPlayerPlayerEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerPlayerEvent, &LogPlayerPlayerEvent_Parms,
                       NULL);

    pFnLogPlayerPlayerEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerKillDeath
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerKillDeath() {
    static UFunction* pFnLogPlayerKillDeath = NULL;

    if (!pFnLogPlayerKillDeath)
        pFnLogPlayerKillDeath = (UFunction*)UObject::GObjObjects()->Data[22431];

    UGameplayEventsWriter_execLogPlayerKillDeath_Parms LogPlayerKillDeath_Parms;

    pFnLogPlayerKillDeath->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerKillDeath, &LogPlayerKillDeath_Parms, NULL);

    pFnLogPlayerKillDeath->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogAllPlayerPositionsEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogAllPlayerPositionsEvent() {
    static UFunction* pFnLogAllPlayerPositionsEvent = NULL;

    if (!pFnLogAllPlayerPositionsEvent)
        pFnLogAllPlayerPositionsEvent =
            (UFunction*)UObject::GObjObjects()->Data[22429];

    UGameplayEventsWriter_execLogAllPlayerPositionsEvent_Parms
        LogAllPlayerPositionsEvent_Parms;

    pFnLogAllPlayerPositionsEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogAllPlayerPositionsEvent,
                       &LogAllPlayerPositionsEvent_Parms, NULL);

    pFnLogAllPlayerPositionsEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerLoginChange
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerLoginChange() {
    static UFunction* pFnLogPlayerLoginChange = NULL;

    if (!pFnLogPlayerLoginChange)
        pFnLogPlayerLoginChange =
            (UFunction*)UObject::GObjObjects()->Data[22423];

    UGameplayEventsWriter_execLogPlayerLoginChange_Parms
        LogPlayerLoginChange_Parms;

    pFnLogPlayerLoginChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerLoginChange, &LogPlayerLoginChange_Parms,
                       NULL);

    pFnLogPlayerLoginChange->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerSpawnEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerSpawnEvent() {
    static UFunction* pFnLogPlayerSpawnEvent = NULL;

    if (!pFnLogPlayerSpawnEvent)
        pFnLogPlayerSpawnEvent =
            (UFunction*)UObject::GObjObjects()->Data[22418];

    UGameplayEventsWriter_execLogPlayerSpawnEvent_Parms
        LogPlayerSpawnEvent_Parms;

    pFnLogPlayerSpawnEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerSpawnEvent, &LogPlayerSpawnEvent_Parms,
                       NULL);

    pFnLogPlayerSpawnEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerStringEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerStringEvent() {
    static UFunction* pFnLogPlayerStringEvent = NULL;

    if (!pFnLogPlayerStringEvent)
        pFnLogPlayerStringEvent =
            (UFunction*)UObject::GObjObjects()->Data[22414];

    UGameplayEventsWriter_execLogPlayerStringEvent_Parms
        LogPlayerStringEvent_Parms;

    pFnLogPlayerStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerStringEvent, &LogPlayerStringEvent_Parms,
                       NULL);

    pFnLogPlayerStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerFloatEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerFloatEvent() {
    static UFunction* pFnLogPlayerFloatEvent = NULL;

    if (!pFnLogPlayerFloatEvent)
        pFnLogPlayerFloatEvent =
            (UFunction*)UObject::GObjObjects()->Data[22410];

    UGameplayEventsWriter_execLogPlayerFloatEvent_Parms
        LogPlayerFloatEvent_Parms;

    pFnLogPlayerFloatEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerFloatEvent, &LogPlayerFloatEvent_Parms,
                       NULL);

    pFnLogPlayerFloatEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogPlayerIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogPlayerIntEvent() {
    static UFunction* pFnLogPlayerIntEvent = NULL;

    if (!pFnLogPlayerIntEvent)
        pFnLogPlayerIntEvent = (UFunction*)UObject::GObjObjects()->Data[22406];

    UGameplayEventsWriter_execLogPlayerIntEvent_Parms LogPlayerIntEvent_Parms;

    pFnLogPlayerIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogPlayerIntEvent, &LogPlayerIntEvent_Parms, NULL);

    pFnLogPlayerIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogTeamStringEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogTeamStringEvent() {
    static UFunction* pFnLogTeamStringEvent = NULL;

    if (!pFnLogTeamStringEvent)
        pFnLogTeamStringEvent = (UFunction*)UObject::GObjObjects()->Data[22402];

    UGameplayEventsWriter_execLogTeamStringEvent_Parms LogTeamStringEvent_Parms;

    pFnLogTeamStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogTeamStringEvent, &LogTeamStringEvent_Parms, NULL);

    pFnLogTeamStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogTeamFloatEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogTeamFloatEvent() {
    static UFunction* pFnLogTeamFloatEvent = NULL;

    if (!pFnLogTeamFloatEvent)
        pFnLogTeamFloatEvent = (UFunction*)UObject::GObjObjects()->Data[22398];

    UGameplayEventsWriter_execLogTeamFloatEvent_Parms LogTeamFloatEvent_Parms;

    pFnLogTeamFloatEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogTeamFloatEvent, &LogTeamFloatEvent_Parms, NULL);

    pFnLogTeamFloatEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogTeamIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogTeamIntEvent() {
    static UFunction* pFnLogTeamIntEvent = NULL;

    if (!pFnLogTeamIntEvent)
        pFnLogTeamIntEvent = (UFunction*)UObject::GObjObjects()->Data[22394];

    UGameplayEventsWriter_execLogTeamIntEvent_Parms LogTeamIntEvent_Parms;

    pFnLogTeamIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogTeamIntEvent, &LogTeamIntEvent_Parms, NULL);

    pFnLogTeamIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogGamePositionEvent
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogGamePositionEvent() {
    static UFunction* pFnLogGamePositionEvent = NULL;

    if (!pFnLogGamePositionEvent)
        pFnLogGamePositionEvent =
            (UFunction*)UObject::GObjObjects()->Data[22390];

    UGameplayEventsWriter_execLogGamePositionEvent_Parms
        LogGamePositionEvent_Parms;

    pFnLogGamePositionEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGamePositionEvent, &LogGamePositionEvent_Parms,
                       NULL);

    pFnLogGamePositionEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogGameFloatEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogGameFloatEvent() {
    static UFunction* pFnLogGameFloatEvent = NULL;

    if (!pFnLogGameFloatEvent)
        pFnLogGameFloatEvent = (UFunction*)UObject::GObjObjects()->Data[22387];

    UGameplayEventsWriter_execLogGameFloatEvent_Parms LogGameFloatEvent_Parms;

    pFnLogGameFloatEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameFloatEvent, &LogGameFloatEvent_Parms, NULL);

    pFnLogGameFloatEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogGameStringEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogGameStringEvent() {
    static UFunction* pFnLogGameStringEvent = NULL;

    if (!pFnLogGameStringEvent)
        pFnLogGameStringEvent = (UFunction*)UObject::GObjObjects()->Data[22384];

    UGameplayEventsWriter_execLogGameStringEvent_Parms LogGameStringEvent_Parms;

    pFnLogGameStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameStringEvent, &LogGameStringEvent_Parms, NULL);

    pFnLogGameStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.LogGameIntEvent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::LogGameIntEvent() {
    static UFunction* pFnLogGameIntEvent = NULL;

    if (!pFnLogGameIntEvent)
        pFnLogGameIntEvent = (UFunction*)UObject::GObjObjects()->Data[22381];

    UGameplayEventsWriter_execLogGameIntEvent_Parms LogGameIntEvent_Parms;

    pFnLogGameIntEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogGameIntEvent, &LogGameIntEvent_Parms, NULL);

    pFnLogGameIntEvent->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.EndLogging
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::EndLogging() {
    static UFunction* pFnEndLogging = NULL;

    if (!pFnEndLogging)
        pFnEndLogging = (UFunction*)UObject::GObjObjects()->Data[22380];

    UGameplayEventsWriter_execEndLogging_Parms EndLogging_Parms;

    pFnEndLogging->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndLogging, &EndLogging_Parms, NULL);

    pFnEndLogging->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.ResetLogging
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::ResetLogging() {
    static UFunction* pFnResetLogging = NULL;

    if (!pFnResetLogging)
        pFnResetLogging = (UFunction*)UObject::GObjObjects()->Data[22378];

    UGameplayEventsWriter_execResetLogging_Parms ResetLogging_Parms;

    pFnResetLogging->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetLogging, &ResetLogging_Parms, NULL);

    pFnResetLogging->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.StartLogging
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::StartLogging() {
    static UFunction* pFnStartLogging = NULL;

    if (!pFnStartLogging)
        pFnStartLogging = (UFunction*)UObject::GObjObjects()->Data[22376];

    UGameplayEventsWriter_execStartLogging_Parms StartLogging_Parms;

    pFnStartLogging->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStartLogging, &StartLogging_Parms, NULL);

    pFnStartLogging->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.SerializeFooter
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::SerializeFooter() {
    static UFunction* pFnSerializeFooter = NULL;

    if (!pFnSerializeFooter)
        pFnSerializeFooter = (UFunction*)UObject::GObjObjects()->Data[22374];

    UGameplayEventsWriter_execSerializeFooter_Parms SerializeFooter_Parms;

    pFnSerializeFooter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSerializeFooter, &SerializeFooter_Parms, NULL);

    pFnSerializeFooter->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.SerializeHeader
// [0x00080400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::SerializeHeader() {
    static UFunction* pFnSerializeHeader = NULL;

    if (!pFnSerializeHeader)
        pFnSerializeHeader = (UFunction*)UObject::GObjObjects()->Data[22372];

    UGameplayEventsWriter_execSerializeHeader_Parms SerializeHeader_Parms;

    pFnSerializeHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSerializeHeader, &SerializeHeader_Parms, NULL);

    pFnSerializeHeader->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.CloseStatsFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::CloseStatsFile() {
    static UFunction* pFnCloseStatsFile = NULL;

    if (!pFnCloseStatsFile)
        pFnCloseStatsFile = (UFunction*)UObject::GObjObjects()->Data[22371];

    UGameplayEventsWriter_execCloseStatsFile_Parms CloseStatsFile_Parms;

    pFnCloseStatsFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCloseStatsFile, &CloseStatsFile_Parms, NULL);

    pFnCloseStatsFile->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.OpenStatsFile
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::OpenStatsFile() {
    static UFunction* pFnOpenStatsFile = NULL;

    if (!pFnOpenStatsFile)
        pFnOpenStatsFile = (UFunction*)UObject::GObjObjects()->Data[22368];

    UGameplayEventsWriter_execOpenStatsFile_Parms OpenStatsFile_Parms;

    pFnOpenStatsFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenStatsFile, &OpenStatsFile_Parms, NULL);

    pFnOpenStatsFile->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsWriter.ResolvePlayerIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameplayEventsWriter::ResolvePlayerIndex() {
    static UFunction* pFnResolvePlayerIndex = NULL;

    if (!pFnResolvePlayerIndex)
        pFnResolvePlayerIndex = (UFunction*)UObject::GObjObjects()->Data[22365];

    UGameplayEventsWriter_execResolvePlayerIndex_Parms ResolvePlayerIndex_Parms;

    pFnResolvePlayerIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResolvePlayerIndex, &ResolvePlayerIndex_Parms, NULL);

    pFnResolvePlayerIndex->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsHandler.RemoveFilter
// [0x00020002]
// Parameters infos:

void UGameplayEventsHandler::RemoveFilter() {
    static UFunction* pFnRemoveFilter = NULL;

    if (!pFnRemoveFilter)
        pFnRemoveFilter = (UFunction*)UObject::GObjObjects()->Data[22097];

    UGameplayEventsHandler_execRemoveFilter_Parms RemoveFilter_Parms;

    this->ProcessEvent(pFnRemoveFilter, &RemoveFilter_Parms, NULL);
};

// Function Engine.GameplayEventsHandler.AddFilter
// [0x00020002]
// Parameters infos:

void UGameplayEventsHandler::AddFilter() {
    static UFunction* pFnAddFilter = NULL;

    if (!pFnAddFilter)
        pFnAddFilter = (UFunction*)UObject::GObjObjects()->Data[22095];

    UGameplayEventsHandler_execAddFilter_Parms AddFilter_Parms;

    this->ProcessEvent(pFnAddFilter, &AddFilter_Parms, NULL);
};

// Function Engine.GameplayEventsHandler.ResolveGroupFilters
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsHandler::eventResolveGroupFilters() {
    static UFunction* pFnResolveGroupFilters = NULL;

    if (!pFnResolveGroupFilters)
        pFnResolveGroupFilters =
            (UFunction*)UObject::GObjObjects()->Data[22092];

    UGameplayEventsHandler_eventResolveGroupFilters_Parms
        ResolveGroupFilters_Parms;

    this->ProcessEvent(pFnResolveGroupFilters, &ResolveGroupFilters_Parms,
                       NULL);
};

// Function Engine.GameplayEventsHandler.PostProcessStream
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UGameplayEventsHandler::eventPostProcessStream() {
    static UFunction* pFnPostProcessStream = NULL;

    if (!pFnPostProcessStream)
        pFnPostProcessStream = (UFunction*)UObject::GObjObjects()->Data[22091];

    UGameplayEventsHandler_eventPostProcessStream_Parms PostProcessStream_Parms;

    this->ProcessEvent(pFnPostProcessStream, &PostProcessStream_Parms, NULL);
};

// Function Engine.GameplayEventsHandler.PreProcessStream
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UGameplayEventsHandler::eventPreProcessStream() {
    static UFunction* pFnPreProcessStream = NULL;

    if (!pFnPreProcessStream)
        pFnPreProcessStream = (UFunction*)UObject::GObjObjects()->Data[22090];

    UGameplayEventsHandler_eventPreProcessStream_Parms PreProcessStream_Parms;

    pFnPreProcessStream->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPreProcessStream, &PreProcessStream_Parms, NULL);

    pFnPreProcessStream->FunctionFlags |= 0x400;
};

// Function Engine.GameplayEventsHandler.SetReader
// [0x00020002]
// Parameters infos:

void UGameplayEventsHandler::SetReader() {
    static UFunction* pFnSetReader = NULL;

    if (!pFnSetReader)
        pFnSetReader = (UFunction*)UObject::GObjObjects()->Data[22088];

    UGameplayEventsHandler_execSetReader_Parms SetReader_Parms;

    this->ProcessEvent(pFnSetReader, &SetReader_Parms, NULL);
};

// Function Engine.GenericParamListStatEntry.CommitToDisk
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::CommitToDisk() {
    static UFunction* pFnCommitToDisk = NULL;

    if (!pFnCommitToDisk)
        pFnCommitToDisk = (UFunction*)UObject::GObjObjects()->Data[22920];

    UGenericParamListStatEntry_execCommitToDisk_Parms CommitToDisk_Parms;

    pFnCommitToDisk->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCommitToDisk, &CommitToDisk_Parms, NULL);

    pFnCommitToDisk->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.GetString
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::GetString() {
    static UFunction* pFnGetString = NULL;

    if (!pFnGetString)
        pFnGetString = (UFunction*)UObject::GObjObjects()->Data[22916];

    UGenericParamListStatEntry_execGetString_Parms GetString_Parms;

    pFnGetString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetString, &GetString_Parms, NULL);

    pFnGetString->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.GetVector
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::GetVector() {
    static UFunction* pFnGetVector = NULL;

    if (!pFnGetVector)
        pFnGetVector = (UFunction*)UObject::GObjObjects()->Data[22912];

    UGenericParamListStatEntry_execGetVector_Parms GetVector_Parms;

    pFnGetVector->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVector, &GetVector_Parms, NULL);

    pFnGetVector->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.GetInt
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::GetInt() {
    static UFunction* pFnGetInt = NULL;

    if (!pFnGetInt) pFnGetInt = (UFunction*)UObject::GObjObjects()->Data[22908];

    UGenericParamListStatEntry_execGetInt_Parms GetInt_Parms;

    pFnGetInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetInt, &GetInt_Parms, NULL);

    pFnGetInt->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.GetFloat
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::GetFloat() {
    static UFunction* pFnGetFloat = NULL;

    if (!pFnGetFloat)
        pFnGetFloat = (UFunction*)UObject::GObjObjects()->Data[22904];

    UGenericParamListStatEntry_execGetFloat_Parms GetFloat_Parms;

    pFnGetFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFloat, &GetFloat_Parms, NULL);

    pFnGetFloat->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.AddString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::AddString() {
    static UFunction* pFnAddString = NULL;

    if (!pFnAddString)
        pFnAddString = (UFunction*)UObject::GObjObjects()->Data[22901];

    UGenericParamListStatEntry_execAddString_Parms AddString_Parms;

    pFnAddString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddString, &AddString_Parms, NULL);

    pFnAddString->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.AddVector
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::AddVector() {
    static UFunction* pFnAddVector = NULL;

    if (!pFnAddVector)
        pFnAddVector = (UFunction*)UObject::GObjObjects()->Data[22898];

    UGenericParamListStatEntry_execAddVector_Parms AddVector_Parms;

    pFnAddVector->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddVector, &AddVector_Parms, NULL);

    pFnAddVector->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.AddInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::AddInt() {
    static UFunction* pFnAddInt = NULL;

    if (!pFnAddInt) pFnAddInt = (UFunction*)UObject::GObjObjects()->Data[22895];

    UGenericParamListStatEntry_execAddInt_Parms AddInt_Parms;

    pFnAddInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddInt, &AddInt_Parms, NULL);

    pFnAddInt->FunctionFlags |= 0x400;
};

// Function Engine.GenericParamListStatEntry.AddFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGenericParamListStatEntry::AddFloat() {
    static UFunction* pFnAddFloat = NULL;

    if (!pFnAddFloat)
        pFnAddFloat = (UFunction*)UObject::GObjObjects()->Data[22892];

    UGenericParamListStatEntry_execAddFloat_Parms AddFloat_Parms;

    pFnAddFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddFloat, &AddFloat_Parms, NULL);

    pFnAddFloat->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetContent
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetContent() {
    static UFunction* pFnGetContent = NULL;

    if (!pFnGetContent)
        pFnGetContent = (UFunction*)UObject::GObjObjects()->Data[23003];

    UHttpBaseInterface_execGetContent_Parms GetContent_Parms;

    pFnGetContent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetContent, &GetContent_Parms, NULL);

    pFnGetContent->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetURL
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetURL() {
    static UFunction* pFnGetURL = NULL;

    if (!pFnGetURL) pFnGetURL = (UFunction*)UObject::GObjObjects()->Data[16211];

    UHttpBaseInterface_execGetURL_Parms GetURL_Parms;

    pFnGetURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetURL, &GetURL_Parms, NULL);

    pFnGetURL->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetContentLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetContentLength() {
    static UFunction* pFnGetContentLength = NULL;

    if (!pFnGetContentLength)
        pFnGetContentLength = (UFunction*)UObject::GObjObjects()->Data[16235];

    UHttpBaseInterface_execGetContentLength_Parms GetContentLength_Parms;

    pFnGetContentLength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetContentLength, &GetContentLength_Parms, NULL);

    pFnGetContentLength->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetContentType
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetContentType() {
    static UFunction* pFnGetContentType = NULL;

    if (!pFnGetContentType)
        pFnGetContentType = (UFunction*)UObject::GObjObjects()->Data[16233];

    UHttpBaseInterface_execGetContentType_Parms GetContentType_Parms;

    pFnGetContentType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetContentType, &GetContentType_Parms, NULL);

    pFnGetContentType->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetURLParameter
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetURLParameter() {
    static UFunction* pFnGetURLParameter = NULL;

    if (!pFnGetURLParameter)
        pFnGetURLParameter = (UFunction*)UObject::GObjObjects()->Data[16229];

    UHttpBaseInterface_execGetURLParameter_Parms GetURLParameter_Parms;

    pFnGetURLParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetURLParameter, &GetURLParameter_Parms, NULL);

    pFnGetURLParameter->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetHeaders
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetHeaders() {
    static UFunction* pFnGetHeaders = NULL;

    if (!pFnGetHeaders)
        pFnGetHeaders = (UFunction*)UObject::GObjObjects()->Data[16215];

    UHttpBaseInterface_execGetHeaders_Parms GetHeaders_Parms;

    pFnGetHeaders->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetHeaders, &GetHeaders_Parms, NULL);

    pFnGetHeaders->FunctionFlags |= 0x400;
};

// Function Engine.HttpBaseInterface.GetHeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpBaseInterface::GetHeader() {
    static UFunction* pFnGetHeader = NULL;

    if (!pFnGetHeader)
        pFnGetHeader = (UFunction*)UObject::GObjObjects()->Data[16231];

    UHttpBaseInterface_execGetHeader_Parms GetHeader_Parms;

    pFnGetHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetHeader, &GetHeader_Parms, NULL);

    pFnGetHeader->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.SetProcessRequestCompleteDelegate
// [0x00020002]
// Parameters infos:

void UHttpRequestInterface::SetProcessRequestCompleteDelegate() {
    static UFunction* pFnSetProcessRequestCompleteDelegate = NULL;

    if (!pFnSetProcessRequestCompleteDelegate)
        pFnSetProcessRequestCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[16243];

    UHttpRequestInterface_execSetProcessRequestCompleteDelegate_Parms
        SetProcessRequestCompleteDelegate_Parms;

    this->ProcessEvent(pFnSetProcessRequestCompleteDelegate,
                       &SetProcessRequestCompleteDelegate_Parms, NULL);
};

// Function Engine.HttpRequestInterface.OnProcessRequestComplete
// [0x00120000]
// Parameters infos:

void UHttpRequestInterface::OnProcessRequestComplete() {
    static UFunction* pFnOnProcessRequestComplete = NULL;

    if (!pFnOnProcessRequestComplete)
        pFnOnProcessRequestComplete =
            (UFunction*)UObject::GObjObjects()->Data[23019];

    UHttpRequestInterface_execOnProcessRequestComplete_Parms
        OnProcessRequestComplete_Parms;

    this->ProcessEvent(pFnOnProcessRequestComplete,
                       &OnProcessRequestComplete_Parms, NULL);
};

// Function Engine.HttpRequestInterface.ProcessRequest
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::ProcessRequest() {
    static UFunction* pFnProcessRequest = NULL;

    if (!pFnProcessRequest)
        pFnProcessRequest = (UFunction*)UObject::GObjObjects()->Data[16239];

    UHttpRequestInterface_execProcessRequest_Parms ProcessRequest_Parms;

    pFnProcessRequest->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProcessRequest, &ProcessRequest_Parms, NULL);

    pFnProcessRequest->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.SetHeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::SetHeader() {
    static UFunction* pFnSetHeader = NULL;

    if (!pFnSetHeader)
        pFnSetHeader = (UFunction*)UObject::GObjObjects()->Data[16241];

    UHttpRequestInterface_execSetHeader_Parms SetHeader_Parms;

    pFnSetHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetHeader, &SetHeader_Parms, NULL);

    pFnSetHeader->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.SetContentAsString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::SetContentAsString() {
    static UFunction* pFnSetContentAsString = NULL;

    if (!pFnSetContentAsString)
        pFnSetContentAsString = (UFunction*)UObject::GObjObjects()->Data[16227];

    UHttpRequestInterface_execSetContentAsString_Parms SetContentAsString_Parms;

    pFnSetContentAsString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetContentAsString, &SetContentAsString_Parms, NULL);

    pFnSetContentAsString->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.SetContent
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::SetContent() {
    static UFunction* pFnSetContent = NULL;

    if (!pFnSetContent)
        pFnSetContent = (UFunction*)UObject::GObjObjects()->Data[23012];

    UHttpRequestInterface_execSetContent_Parms SetContent_Parms;

    pFnSetContent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetContent, &SetContent_Parms, NULL);

    pFnSetContent->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.SetURL
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::SetURL() {
    static UFunction* pFnSetURL = NULL;

    if (!pFnSetURL) pFnSetURL = (UFunction*)UObject::GObjObjects()->Data[16223];

    UHttpRequestInterface_execSetURL_Parms SetURL_Parms;

    pFnSetURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetURL, &SetURL_Parms, NULL);

    pFnSetURL->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.SetVerb
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::SetVerb() {
    static UFunction* pFnSetVerb = NULL;

    if (!pFnSetVerb)
        pFnSetVerb = (UFunction*)UObject::GObjObjects()->Data[16225];

    UHttpRequestInterface_execSetVerb_Parms SetVerb_Parms;

    pFnSetVerb->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVerb, &SetVerb_Parms, NULL);

    pFnSetVerb->FunctionFlags |= 0x400;
};

// Function Engine.HttpRequestInterface.GetVerb
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpRequestInterface::GetVerb() {
    static UFunction* pFnGetVerb = NULL;

    if (!pFnGetVerb)
        pFnGetVerb = (UFunction*)UObject::GObjObjects()->Data[16237];

    UHttpRequestInterface_execGetVerb_Parms GetVerb_Parms;

    pFnGetVerb->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVerb, &GetVerb_Parms, NULL);

    pFnGetVerb->FunctionFlags |= 0x400;
};

// Function Engine.HttpResponseInterface.GetContentAsString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpResponseInterface::GetContentAsString() {
    static UFunction* pFnGetContentAsString = NULL;

    if (!pFnGetContentAsString)
        pFnGetContentAsString = (UFunction*)UObject::GObjObjects()->Data[16217];

    UHttpResponseInterface_execGetContentAsString_Parms
        GetContentAsString_Parms;

    pFnGetContentAsString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetContentAsString, &GetContentAsString_Parms, NULL);

    pFnGetContentAsString->FunctionFlags |= 0x400;
};

// Function Engine.HttpResponseInterface.GetResponseCode
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UHttpResponseInterface::GetResponseCode() {
    static UFunction* pFnGetResponseCode = NULL;

    if (!pFnGetResponseCode)
        pFnGetResponseCode = (UFunction*)UObject::GObjObjects()->Data[16213];

    UHttpResponseInterface_execGetResponseCode_Parms GetResponseCode_Parms;

    pFnGetResponseCode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetResponseCode, &GetResponseCode_Parms, NULL);

    pFnGetResponseCode->FunctionFlags |= 0x400;
};

// Function Engine.IniLocPatcher.UpdateLocFileName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UIniLocPatcher::UpdateLocFileName() {
    static UFunction* pFnUpdateLocFileName = NULL;

    if (!pFnUpdateLocFileName)
        pFnUpdateLocFileName = (UFunction*)UObject::GObjObjects()->Data[23318];

    UIniLocPatcher_execUpdateLocFileName_Parms UpdateLocFileName_Parms;

    pFnUpdateLocFileName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateLocFileName, &UpdateLocFileName_Parms, NULL);

    pFnUpdateLocFileName->FunctionFlags |= 0x400;
};

// Function Engine.IniLocPatcher.ClearCachedFiles
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::ClearCachedFiles() {
    static UFunction* pFnClearCachedFiles = NULL;

    if (!pFnClearCachedFiles)
        pFnClearCachedFiles = (UFunction*)UObject::GObjObjects()->Data[23316];

    UIniLocPatcher_execClearCachedFiles_Parms ClearCachedFiles_Parms;

    this->ProcessEvent(pFnClearCachedFiles, &ClearCachedFiles_Parms, NULL);
};

// Function Engine.IniLocPatcher.ClearAllTitleFilesCompletedDelegate
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::ClearAllTitleFilesCompletedDelegate() {
    static UFunction* pFnClearAllTitleFilesCompletedDelegate = NULL;

    if (!pFnClearAllTitleFilesCompletedDelegate)
        pFnClearAllTitleFilesCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[23313];

    UIniLocPatcher_execClearAllTitleFilesCompletedDelegate_Parms
        ClearAllTitleFilesCompletedDelegate_Parms;

    this->ProcessEvent(pFnClearAllTitleFilesCompletedDelegate,
                       &ClearAllTitleFilesCompletedDelegate_Parms, NULL);
};

// Function Engine.IniLocPatcher.AddAllTitleFilesCompletedDelegate
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::AddAllTitleFilesCompletedDelegate() {
    static UFunction* pFnAddAllTitleFilesCompletedDelegate = NULL;

    if (!pFnAddAllTitleFilesCompletedDelegate)
        pFnAddAllTitleFilesCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[23311];

    UIniLocPatcher_execAddAllTitleFilesCompletedDelegate_Parms
        AddAllTitleFilesCompletedDelegate_Parms;

    this->ProcessEvent(pFnAddAllTitleFilesCompletedDelegate,
                       &AddAllTitleFilesCompletedDelegate_Parms, NULL);
};

// Function Engine.IniLocPatcher.ClearReadFileDelegate
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::ClearReadFileDelegate() {
    static UFunction* pFnClearReadFileDelegate = NULL;

    if (!pFnClearReadFileDelegate)
        pFnClearReadFileDelegate =
            (UFunction*)UObject::GObjObjects()->Data[23308];

    UIniLocPatcher_execClearReadFileDelegate_Parms ClearReadFileDelegate_Parms;

    this->ProcessEvent(pFnClearReadFileDelegate, &ClearReadFileDelegate_Parms,
                       NULL);
};

// Function Engine.IniLocPatcher.AddReadFileDelegate
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::AddReadFileDelegate() {
    static UFunction* pFnAddReadFileDelegate = NULL;

    if (!pFnAddReadFileDelegate)
        pFnAddReadFileDelegate =
            (UFunction*)UObject::GObjObjects()->Data[23306];

    UIniLocPatcher_execAddReadFileDelegate_Parms AddReadFileDelegate_Parms;

    this->ProcessEvent(pFnAddReadFileDelegate, &AddReadFileDelegate_Parms,
                       NULL);
};

// Function Engine.IniLocPatcher.AddFileToDownload
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::AddFileToDownload() {
    static UFunction* pFnAddFileToDownload = NULL;

    if (!pFnAddFileToDownload)
        pFnAddFileToDownload = (UFunction*)UObject::GObjObjects()->Data[23303];

    UIniLocPatcher_execAddFileToDownload_Parms AddFileToDownload_Parms;

    this->ProcessEvent(pFnAddFileToDownload, &AddFileToDownload_Parms, NULL);
};

// Function Engine.IniLocPatcher.ProcessIniLocFile
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UIniLocPatcher::ProcessIniLocFile() {
    static UFunction* pFnProcessIniLocFile = NULL;

    if (!pFnProcessIniLocFile)
        pFnProcessIniLocFile = (UFunction*)UObject::GObjObjects()->Data[23298];

    UIniLocPatcher_execProcessIniLocFile_Parms ProcessIniLocFile_Parms;

    pFnProcessIniLocFile->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProcessIniLocFile, &ProcessIniLocFile_Parms, NULL);

    pFnProcessIniLocFile->FunctionFlags |= 0x400;
};

// Function Engine.IniLocPatcher.CheckForAllFilesComplete
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::CheckForAllFilesComplete() {
    static UFunction* pFnCheckForAllFilesComplete = NULL;

    if (!pFnCheckForAllFilesComplete)
        pFnCheckForAllFilesComplete =
            (UFunction*)UObject::GObjObjects()->Data[23295];

    UIniLocPatcher_execCheckForAllFilesComplete_Parms
        CheckForAllFilesComplete_Parms;

    this->ProcessEvent(pFnCheckForAllFilesComplete,
                       &CheckForAllFilesComplete_Parms, NULL);
};

// Function Engine.IniLocPatcher.TriggerDownloadCompleteDelegates
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::TriggerDownloadCompleteDelegates() {
    static UFunction* pFnTriggerDownloadCompleteDelegates = NULL;

    if (!pFnTriggerDownloadCompleteDelegates)
        pFnTriggerDownloadCompleteDelegates =
            (UFunction*)UObject::GObjObjects()->Data[23290];

    UIniLocPatcher_execTriggerDownloadCompleteDelegates_Parms
        TriggerDownloadCompleteDelegates_Parms;

    this->ProcessEvent(pFnTriggerDownloadCompleteDelegates,
                       &TriggerDownloadCompleteDelegates_Parms, NULL);
};

// Function Engine.IniLocPatcher.OnFileCacheSaveComplete
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::OnFileCacheSaveComplete() {
    static UFunction* pFnOnFileCacheSaveComplete = NULL;

    if (!pFnOnFileCacheSaveComplete)
        pFnOnFileCacheSaveComplete =
            (UFunction*)UObject::GObjObjects()->Data[23287];

    UIniLocPatcher_execOnFileCacheSaveComplete_Parms
        OnFileCacheSaveComplete_Parms;

    this->ProcessEvent(pFnOnFileCacheSaveComplete,
                       &OnFileCacheSaveComplete_Parms, NULL);
};

// Function Engine.IniLocPatcher.OnFileCacheLoadComplete
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::OnFileCacheLoadComplete() {
    static UFunction* pFnOnFileCacheLoadComplete = NULL;

    if (!pFnOnFileCacheLoadComplete)
        pFnOnFileCacheLoadComplete =
            (UFunction*)UObject::GObjObjects()->Data[23280];

    UIniLocPatcher_execOnFileCacheLoadComplete_Parms
        OnFileCacheLoadComplete_Parms;

    this->ProcessEvent(pFnOnFileCacheLoadComplete,
                       &OnFileCacheLoadComplete_Parms, NULL);
};

// Function Engine.IniLocPatcher.OnDownloadFileComplete
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::OnDownloadFileComplete() {
    static UFunction* pFnOnDownloadFileComplete = NULL;

    if (!pFnOnDownloadFileComplete)
        pFnOnDownloadFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[23273];

    UIniLocPatcher_execOnDownloadFileComplete_Parms
        OnDownloadFileComplete_Parms;

    this->ProcessEvent(pFnOnDownloadFileComplete, &OnDownloadFileComplete_Parms,
                       NULL);
};

// Function Engine.IniLocPatcher.StartLoadingFiles
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::StartLoadingFiles() {
    static UFunction* pFnStartLoadingFiles = NULL;

    if (!pFnStartLoadingFiles)
        pFnStartLoadingFiles = (UFunction*)UObject::GObjObjects()->Data[23271];

    UIniLocPatcher_execStartLoadingFiles_Parms StartLoadingFiles_Parms;

    this->ProcessEvent(pFnStartLoadingFiles, &StartLoadingFiles_Parms, NULL);
};

// Function Engine.IniLocPatcher.OnRequestTitleFileListComplete
// [0x00820002]
// Parameters infos:

void UIniLocPatcher::OnRequestTitleFileListComplete() {
    static UFunction* pFnOnRequestTitleFileListComplete = NULL;

    if (!pFnOnRequestTitleFileListComplete)
        pFnOnRequestTitleFileListComplete =
            (UFunction*)UObject::GObjObjects()->Data[23263];

    UIniLocPatcher_execOnRequestTitleFileListComplete_Parms
        OnRequestTitleFileListComplete_Parms;

    this->ProcessEvent(pFnOnRequestTitleFileListComplete,
                       &OnRequestTitleFileListComplete_Parms, NULL);
};

// Function Engine.IniLocPatcher.DownloadFiles
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::DownloadFiles() {
    static UFunction* pFnDownloadFiles = NULL;

    if (!pFnDownloadFiles)
        pFnDownloadFiles = (UFunction*)UObject::GObjObjects()->Data[23261];

    UIniLocPatcher_execDownloadFiles_Parms DownloadFiles_Parms;

    this->ProcessEvent(pFnDownloadFiles, &DownloadFiles_Parms, NULL);
};

// Function Engine.IniLocPatcher.Init
// [0x00020002]
// Parameters infos:

void UIniLocPatcher::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[23258];

    UIniLocPatcher_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.IniLocPatcher.OnAllTitleFilesCompleted
// [0x00120000]
// Parameters infos:

void UIniLocPatcher::OnAllTitleFilesCompleted() {
    static UFunction* pFnOnAllTitleFilesCompleted = NULL;

    if (!pFnOnAllTitleFilesCompleted)
        pFnOnAllTitleFilesCompleted =
            (UFunction*)UObject::GObjObjects()->Data[23257];

    UIniLocPatcher_execOnAllTitleFilesCompleted_Parms
        OnAllTitleFilesCompleted_Parms;

    this->ProcessEvent(pFnOnAllTitleFilesCompleted,
                       &OnAllTitleFilesCompleted_Parms, NULL);
};

// Function Engine.IniLocPatcher.OnReadTitleFileComplete
// [0x00120000]
// Parameters infos:

void UIniLocPatcher::OnReadTitleFileComplete() {
    static UFunction* pFnOnReadTitleFileComplete = NULL;

    if (!pFnOnReadTitleFileComplete)
        pFnOnReadTitleFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[23254];

    UIniLocPatcher_execOnReadTitleFileComplete_Parms
        OnReadTitleFileComplete_Parms;

    this->ProcessEvent(pFnOnReadTitleFileComplete,
                       &OnReadTitleFileComplete_Parms, NULL);
};

// Function Engine.Interface_NavigationHandle.NotifyPathChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UInterface_NavigationHandle::eventNotifyPathChanged() {
    static UFunction* pFnNotifyPathChanged = NULL;

    if (!pFnNotifyPathChanged)
        pFnNotifyPathChanged = (UFunction*)UObject::GObjObjects()->Data[23527];

    UInterface_NavigationHandle_eventNotifyPathChanged_Parms
        NotifyPathChanged_Parms;

    this->ProcessEvent(pFnNotifyPathChanged, &NotifyPathChanged_Parms, NULL);
};

// Function Engine.Interface_Speaker.Speak
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void UInterface_Speaker::eventSpeak() {
    static UFunction* pFnSpeak = NULL;

    if (!pFnSpeak) pFnSpeak = (UFunction*)UObject::GObjObjects()->Data[23532];

    UInterface_Speaker_eventSpeak_Parms Speak_Parms;

    this->ProcessEvent(pFnSpeak, &Speak_Parms, NULL);
};

// Function Engine.JsonObject.DecodeJson
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::DecodeJson() {
    static UFunction* pFnDecodeJson = NULL;

    if (!pFnDecodeJson)
        pFnDecodeJson = (UFunction*)UObject::GObjObjects()->Data[23335];

    UJsonObject_execDecodeJson_Parms DecodeJson_Parms;

    pFnDecodeJson->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDecodeJson, &DecodeJson_Parms, NULL);

    pFnDecodeJson->FunctionFlags |= 0x400;
};

// Function Engine.JsonObject.EncodeJson
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::EncodeJson() {
    static UFunction* pFnEncodeJson = NULL;

    if (!pFnEncodeJson)
        pFnEncodeJson = (UFunction*)UObject::GObjObjects()->Data[24094];

    UJsonObject_execEncodeJson_Parms EncodeJson_Parms;

    pFnEncodeJson->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEncodeJson, &EncodeJson_Parms, NULL);

    pFnEncodeJson->FunctionFlags |= 0x400;
};

// Function Engine.JsonObject.SetBoolValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UJsonObject::eventSetBoolValue() {
    static UFunction* pFnSetBoolValue = NULL;

    if (!pFnSetBoolValue)
        pFnSetBoolValue = (UFunction*)UObject::GObjObjects()->Data[24091];

    UJsonObject_eventSetBoolValue_Parms SetBoolValue_Parms;

    this->ProcessEvent(pFnSetBoolValue, &SetBoolValue_Parms, NULL);
};

// Function Engine.JsonObject.SetFloatValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UJsonObject::eventSetFloatValue() {
    static UFunction* pFnSetFloatValue = NULL;

    if (!pFnSetFloatValue)
        pFnSetFloatValue = (UFunction*)UObject::GObjObjects()->Data[24088];

    UJsonObject_eventSetFloatValue_Parms SetFloatValue_Parms;

    this->ProcessEvent(pFnSetFloatValue, &SetFloatValue_Parms, NULL);
};

// Function Engine.JsonObject.SetIntValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UJsonObject::eventSetIntValue() {
    static UFunction* pFnSetIntValue = NULL;

    if (!pFnSetIntValue)
        pFnSetIntValue = (UFunction*)UObject::GObjObjects()->Data[24085];

    UJsonObject_eventSetIntValue_Parms SetIntValue_Parms;

    this->ProcessEvent(pFnSetIntValue, &SetIntValue_Parms, NULL);
};

// Function Engine.JsonObject.SetStringValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::SetStringValue() {
    static UFunction* pFnSetStringValue = NULL;

    if (!pFnSetStringValue)
        pFnSetStringValue = (UFunction*)UObject::GObjObjects()->Data[24082];

    UJsonObject_execSetStringValue_Parms SetStringValue_Parms;

    pFnSetStringValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStringValue, &SetStringValue_Parms, NULL);

    pFnSetStringValue->FunctionFlags |= 0x400;
};

// Function Engine.JsonObject.SetObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::SetObject() {
    static UFunction* pFnSetObject = NULL;

    if (!pFnSetObject)
        pFnSetObject = (UFunction*)UObject::GObjObjects()->Data[24079];

    UJsonObject_execSetObject_Parms SetObject_Parms;

    pFnSetObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetObject, &SetObject_Parms, NULL);

    pFnSetObject->FunctionFlags |= 0x400;
};

// Function Engine.JsonObject.GetBoolValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UJsonObject::eventGetBoolValue() {
    static UFunction* pFnGetBoolValue = NULL;

    if (!pFnGetBoolValue)
        pFnGetBoolValue = (UFunction*)UObject::GObjObjects()->Data[24075];

    UJsonObject_eventGetBoolValue_Parms GetBoolValue_Parms;

    this->ProcessEvent(pFnGetBoolValue, &GetBoolValue_Parms, NULL);
};

// Function Engine.JsonObject.GetFloatValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UJsonObject::eventGetFloatValue() {
    static UFunction* pFnGetFloatValue = NULL;

    if (!pFnGetFloatValue)
        pFnGetFloatValue = (UFunction*)UObject::GObjObjects()->Data[24071];

    UJsonObject_eventGetFloatValue_Parms GetFloatValue_Parms;

    this->ProcessEvent(pFnGetFloatValue, &GetFloatValue_Parms, NULL);
};

// Function Engine.JsonObject.GetIntValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UJsonObject::eventGetIntValue() {
    static UFunction* pFnGetIntValue = NULL;

    if (!pFnGetIntValue)
        pFnGetIntValue = (UFunction*)UObject::GObjObjects()->Data[24067];

    UJsonObject_eventGetIntValue_Parms GetIntValue_Parms;

    this->ProcessEvent(pFnGetIntValue, &GetIntValue_Parms, NULL);
};

// Function Engine.JsonObject.HasKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::HasKey() {
    static UFunction* pFnHasKey = NULL;

    if (!pFnHasKey) pFnHasKey = (UFunction*)UObject::GObjObjects()->Data[24064];

    UJsonObject_execHasKey_Parms HasKey_Parms;

    pFnHasKey->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasKey, &HasKey_Parms, NULL);

    pFnHasKey->FunctionFlags |= 0x400;
};

// Function Engine.JsonObject.GetStringValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::GetStringValue() {
    static UFunction* pFnGetStringValue = NULL;

    if (!pFnGetStringValue)
        pFnGetStringValue = (UFunction*)UObject::GObjObjects()->Data[23338];

    UJsonObject_execGetStringValue_Parms GetStringValue_Parms;

    pFnGetStringValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringValue, &GetStringValue_Parms, NULL);

    pFnGetStringValue->FunctionFlags |= 0x400;
};

// Function Engine.JsonObject.GetObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UJsonObject::GetObject() {
    static UFunction* pFnGetObject = NULL;

    if (!pFnGetObject)
        pFnGetObject = (UFunction*)UObject::GObjObjects()->Data[24060];

    UJsonObject_execGetObject_Parms GetObject_Parms;

    pFnGetObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetObject, &GetObject_Parms, NULL);

    pFnGetObject->FunctionFlags |= 0x400;
};

// Function Engine.OnlineAuthInterface.GetServerAddr
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::GetServerAddr() {
    static UFunction* pFnGetServerAddr = NULL;

    if (!pFnGetServerAddr)
        pFnGetServerAddr = (UFunction*)UObject::GObjObjects()->Data[7968];

    UOnlineAuthInterface_execGetServerAddr_Parms GetServerAddr_Parms;

    this->ProcessEvent(pFnGetServerAddr, &GetServerAddr_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.GetServerUniqueId
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::GetServerUniqueId() {
    static UFunction* pFnGetServerUniqueId = NULL;

    if (!pFnGetServerUniqueId)
        pFnGetServerUniqueId = (UFunction*)UObject::GObjObjects()->Data[7966];

    UOnlineAuthInterface_execGetServerUniqueId_Parms GetServerUniqueId_Parms;

    this->ProcessEvent(pFnGetServerUniqueId, &GetServerUniqueId_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.FindLocalServerAuthSession
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::FindLocalServerAuthSession() {
    static UFunction* pFnFindLocalServerAuthSession = NULL;

    if (!pFnFindLocalServerAuthSession)
        pFnFindLocalServerAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[7961];

    UOnlineAuthInterface_execFindLocalServerAuthSession_Parms
        FindLocalServerAuthSession_Parms;

    this->ProcessEvent(pFnFindLocalServerAuthSession,
                       &FindLocalServerAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.FindServerAuthSession
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::FindServerAuthSession() {
    static UFunction* pFnFindServerAuthSession = NULL;

    if (!pFnFindServerAuthSession)
        pFnFindServerAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[24899];

    UOnlineAuthInterface_execFindServerAuthSession_Parms
        FindServerAuthSession_Parms;

    this->ProcessEvent(pFnFindServerAuthSession, &FindServerAuthSession_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.FindLocalClientAuthSession
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::FindLocalClientAuthSession() {
    static UFunction* pFnFindLocalClientAuthSession = NULL;

    if (!pFnFindLocalClientAuthSession)
        pFnFindLocalClientAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[24897];

    UOnlineAuthInterface_execFindLocalClientAuthSession_Parms
        FindLocalClientAuthSession_Parms;

    this->ProcessEvent(pFnFindLocalClientAuthSession,
                       &FindLocalClientAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.FindClientAuthSession
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::FindClientAuthSession() {
    static UFunction* pFnFindClientAuthSession = NULL;

    if (!pFnFindClientAuthSession)
        pFnFindClientAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[7959];

    UOnlineAuthInterface_execFindClientAuthSession_Parms
        FindClientAuthSession_Parms;

    this->ProcessEvent(pFnFindClientAuthSession, &FindClientAuthSession_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.AllLocalServerAuthSessions
// [0x00420404] ( FUNC_Native )
// Parameters infos:

void UOnlineAuthInterface::AllLocalServerAuthSessions() {
    static UFunction* pFnAllLocalServerAuthSessions = NULL;

    if (!pFnAllLocalServerAuthSessions)
        pFnAllLocalServerAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27115];

    UOnlineAuthInterface_execAllLocalServerAuthSessions_Parms
        AllLocalServerAuthSessions_Parms;

    pFnAllLocalServerAuthSessions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllLocalServerAuthSessions,
                       &AllLocalServerAuthSessions_Parms, NULL);

    pFnAllLocalServerAuthSessions->FunctionFlags |= 0x400;
};

// Function Engine.OnlineAuthInterface.AllServerAuthSessions
// [0x00420404] ( FUNC_Native )
// Parameters infos:

void UOnlineAuthInterface::AllServerAuthSessions() {
    static UFunction* pFnAllServerAuthSessions = NULL;

    if (!pFnAllServerAuthSessions)
        pFnAllServerAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27113];

    UOnlineAuthInterface_execAllServerAuthSessions_Parms
        AllServerAuthSessions_Parms;

    pFnAllServerAuthSessions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllServerAuthSessions, &AllServerAuthSessions_Parms,
                       NULL);

    pFnAllServerAuthSessions->FunctionFlags |= 0x400;
};

// Function Engine.OnlineAuthInterface.AllLocalClientAuthSessions
// [0x00420404] ( FUNC_Native )
// Parameters infos:

void UOnlineAuthInterface::AllLocalClientAuthSessions() {
    static UFunction* pFnAllLocalClientAuthSessions = NULL;

    if (!pFnAllLocalClientAuthSessions)
        pFnAllLocalClientAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27111];

    UOnlineAuthInterface_execAllLocalClientAuthSessions_Parms
        AllLocalClientAuthSessions_Parms;

    pFnAllLocalClientAuthSessions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllLocalClientAuthSessions,
                       &AllLocalClientAuthSessions_Parms, NULL);

    pFnAllLocalClientAuthSessions->FunctionFlags |= 0x400;
};

// Function Engine.OnlineAuthInterface.AllClientAuthSessions
// [0x00420404] ( FUNC_Native )
// Parameters infos:

void UOnlineAuthInterface::AllClientAuthSessions() {
    static UFunction* pFnAllClientAuthSessions = NULL;

    if (!pFnAllClientAuthSessions)
        pFnAllClientAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27109];

    UOnlineAuthInterface_execAllClientAuthSessions_Parms
        AllClientAuthSessions_Parms;

    pFnAllClientAuthSessions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllClientAuthSessions, &AllClientAuthSessions_Parms,
                       NULL);

    pFnAllClientAuthSessions->FunctionFlags |= 0x400;
};

// Function Engine.OnlineAuthInterface.EndAllRemoteServerAuthSessions
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndAllRemoteServerAuthSessions() {
    static UFunction* pFnEndAllRemoteServerAuthSessions = NULL;

    if (!pFnEndAllRemoteServerAuthSessions)
        pFnEndAllRemoteServerAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27108];

    UOnlineAuthInterface_execEndAllRemoteServerAuthSessions_Parms
        EndAllRemoteServerAuthSessions_Parms;

    this->ProcessEvent(pFnEndAllRemoteServerAuthSessions,
                       &EndAllRemoteServerAuthSessions_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndAllLocalServerAuthSessions
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndAllLocalServerAuthSessions() {
    static UFunction* pFnEndAllLocalServerAuthSessions = NULL;

    if (!pFnEndAllLocalServerAuthSessions)
        pFnEndAllLocalServerAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27107];

    UOnlineAuthInterface_execEndAllLocalServerAuthSessions_Parms
        EndAllLocalServerAuthSessions_Parms;

    this->ProcessEvent(pFnEndAllLocalServerAuthSessions,
                       &EndAllLocalServerAuthSessions_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndRemoteServerAuthSession
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndRemoteServerAuthSession() {
    static UFunction* pFnEndRemoteServerAuthSession = NULL;

    if (!pFnEndRemoteServerAuthSession)
        pFnEndRemoteServerAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[27104];

    UOnlineAuthInterface_execEndRemoteServerAuthSession_Parms
        EndRemoteServerAuthSession_Parms;

    this->ProcessEvent(pFnEndRemoteServerAuthSession,
                       &EndRemoteServerAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndLocalServerAuthSession
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndLocalServerAuthSession() {
    static UFunction* pFnEndLocalServerAuthSession = NULL;

    if (!pFnEndLocalServerAuthSession)
        pFnEndLocalServerAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[27101];

    UOnlineAuthInterface_execEndLocalServerAuthSession_Parms
        EndLocalServerAuthSession_Parms;

    this->ProcessEvent(pFnEndLocalServerAuthSession,
                       &EndLocalServerAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.VerifyServerAuthSession
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::VerifyServerAuthSession() {
    static UFunction* pFnVerifyServerAuthSession = NULL;

    if (!pFnVerifyServerAuthSession)
        pFnVerifyServerAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[24903];

    UOnlineAuthInterface_execVerifyServerAuthSession_Parms
        VerifyServerAuthSession_Parms;

    this->ProcessEvent(pFnVerifyServerAuthSession,
                       &VerifyServerAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.CreateServerAuthSession
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::CreateServerAuthSession() {
    static UFunction* pFnCreateServerAuthSession = NULL;

    if (!pFnCreateServerAuthSession)
        pFnCreateServerAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[7981];

    UOnlineAuthInterface_execCreateServerAuthSession_Parms
        CreateServerAuthSession_Parms;

    this->ProcessEvent(pFnCreateServerAuthSession,
                       &CreateServerAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndAllRemoteClientAuthSessions
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndAllRemoteClientAuthSessions() {
    static UFunction* pFnEndAllRemoteClientAuthSessions = NULL;

    if (!pFnEndAllRemoteClientAuthSessions)
        pFnEndAllRemoteClientAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27093];

    UOnlineAuthInterface_execEndAllRemoteClientAuthSessions_Parms
        EndAllRemoteClientAuthSessions_Parms;

    this->ProcessEvent(pFnEndAllRemoteClientAuthSessions,
                       &EndAllRemoteClientAuthSessions_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndAllLocalClientAuthSessions
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndAllLocalClientAuthSessions() {
    static UFunction* pFnEndAllLocalClientAuthSessions = NULL;

    if (!pFnEndAllLocalClientAuthSessions)
        pFnEndAllLocalClientAuthSessions =
            (UFunction*)UObject::GObjObjects()->Data[27092];

    UOnlineAuthInterface_execEndAllLocalClientAuthSessions_Parms
        EndAllLocalClientAuthSessions_Parms;

    this->ProcessEvent(pFnEndAllLocalClientAuthSessions,
                       &EndAllLocalClientAuthSessions_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndRemoteClientAuthSession
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndRemoteClientAuthSession() {
    static UFunction* pFnEndRemoteClientAuthSession = NULL;

    if (!pFnEndRemoteClientAuthSession)
        pFnEndRemoteClientAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[27089];

    UOnlineAuthInterface_execEndRemoteClientAuthSession_Parms
        EndRemoteClientAuthSession_Parms;

    this->ProcessEvent(pFnEndRemoteClientAuthSession,
                       &EndRemoteClientAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.EndLocalClientAuthSession
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::EndLocalClientAuthSession() {
    static UFunction* pFnEndLocalClientAuthSession = NULL;

    if (!pFnEndLocalClientAuthSession)
        pFnEndLocalClientAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[27085];

    UOnlineAuthInterface_execEndLocalClientAuthSession_Parms
        EndLocalClientAuthSession_Parms;

    this->ProcessEvent(pFnEndLocalClientAuthSession,
                       &EndLocalClientAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.VerifyClientAuthSession
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::VerifyClientAuthSession() {
    static UFunction* pFnVerifyClientAuthSession = NULL;

    if (!pFnVerifyClientAuthSession)
        pFnVerifyClientAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[7970];

    UOnlineAuthInterface_execVerifyClientAuthSession_Parms
        VerifyClientAuthSession_Parms;

    this->ProcessEvent(pFnVerifyClientAuthSession,
                       &VerifyClientAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.CreateClientAuthSession
// [0x00420000]
// Parameters infos:

void UOnlineAuthInterface::CreateClientAuthSession() {
    static UFunction* pFnCreateClientAuthSession = NULL;

    if (!pFnCreateClientAuthSession)
        pFnCreateClientAuthSession =
            (UFunction*)UObject::GObjObjects()->Data[7978];

    UOnlineAuthInterface_execCreateClientAuthSession_Parms
        CreateClientAuthSession_Parms;

    this->ProcessEvent(pFnCreateClientAuthSession,
                       &CreateClientAuthSession_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.SendServerAuthRetryRequest
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::SendServerAuthRetryRequest() {
    static UFunction* pFnSendServerAuthRetryRequest = NULL;

    if (!pFnSendServerAuthRetryRequest)
        pFnSendServerAuthRetryRequest =
            (UFunction*)UObject::GObjObjects()->Data[24901];

    UOnlineAuthInterface_execSendServerAuthRetryRequest_Parms
        SendServerAuthRetryRequest_Parms;

    this->ProcessEvent(pFnSendServerAuthRetryRequest,
                       &SendServerAuthRetryRequest_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.SendClientAuthEndSessionRequest
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::SendClientAuthEndSessionRequest() {
    static UFunction* pFnSendClientAuthEndSessionRequest = NULL;

    if (!pFnSendClientAuthEndSessionRequest)
        pFnSendClientAuthEndSessionRequest =
            (UFunction*)UObject::GObjObjects()->Data[7955];

    UOnlineAuthInterface_execSendClientAuthEndSessionRequest_Parms
        SendClientAuthEndSessionRequest_Parms;

    this->ProcessEvent(pFnSendClientAuthEndSessionRequest,
                       &SendClientAuthEndSessionRequest_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.SendServerAuthResponse
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::SendServerAuthResponse() {
    static UFunction* pFnSendServerAuthResponse = NULL;

    if (!pFnSendServerAuthResponse)
        pFnSendServerAuthResponse =
            (UFunction*)UObject::GObjObjects()->Data[7983];

    UOnlineAuthInterface_execSendServerAuthResponse_Parms
        SendServerAuthResponse_Parms;

    this->ProcessEvent(pFnSendServerAuthResponse, &SendServerAuthResponse_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.SendClientAuthResponse
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::SendClientAuthResponse() {
    static UFunction* pFnSendClientAuthResponse = NULL;

    if (!pFnSendClientAuthResponse)
        pFnSendClientAuthResponse =
            (UFunction*)UObject::GObjObjects()->Data[24905];

    UOnlineAuthInterface_execSendClientAuthResponse_Parms
        SendClientAuthResponse_Parms;

    this->ProcessEvent(pFnSendClientAuthResponse, &SendClientAuthResponse_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.SendServerAuthRequest
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::SendServerAuthRequest() {
    static UFunction* pFnSendServerAuthRequest = NULL;

    if (!pFnSendServerAuthRequest)
        pFnSendServerAuthRequest =
            (UFunction*)UObject::GObjObjects()->Data[27069];

    UOnlineAuthInterface_execSendServerAuthRequest_Parms
        SendServerAuthRequest_Parms;

    this->ProcessEvent(pFnSendServerAuthRequest, &SendServerAuthRequest_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.SendClientAuthRequest
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::SendClientAuthRequest() {
    static UFunction* pFnSendClientAuthRequest = NULL;

    if (!pFnSendClientAuthRequest)
        pFnSendClientAuthRequest =
            (UFunction*)UObject::GObjObjects()->Data[7990];

    UOnlineAuthInterface_execSendClientAuthRequest_Parms
        SendClientAuthRequest_Parms;

    this->ProcessEvent(pFnSendClientAuthRequest, &SendClientAuthRequest_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearServerConnectionCloseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearServerConnectionCloseDelegate() {
    static UFunction* pFnClearServerConnectionCloseDelegate = NULL;

    if (!pFnClearServerConnectionCloseDelegate)
        pFnClearServerConnectionCloseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27065];

    UOnlineAuthInterface_execClearServerConnectionCloseDelegate_Parms
        ClearServerConnectionCloseDelegate_Parms;

    this->ProcessEvent(pFnClearServerConnectionCloseDelegate,
                       &ClearServerConnectionCloseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddServerConnectionCloseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddServerConnectionCloseDelegate() {
    static UFunction* pFnAddServerConnectionCloseDelegate = NULL;

    if (!pFnAddServerConnectionCloseDelegate)
        pFnAddServerConnectionCloseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27063];

    UOnlineAuthInterface_execAddServerConnectionCloseDelegate_Parms
        AddServerConnectionCloseDelegate_Parms;

    this->ProcessEvent(pFnAddServerConnectionCloseDelegate,
                       &AddServerConnectionCloseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnServerConnectionClose
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnServerConnectionClose() {
    static UFunction* pFnOnServerConnectionClose = NULL;

    if (!pFnOnServerConnectionClose)
        pFnOnServerConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[27061];

    UOnlineAuthInterface_execOnServerConnectionClose_Parms
        OnServerConnectionClose_Parms;

    this->ProcessEvent(pFnOnServerConnectionClose,
                       &OnServerConnectionClose_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.ClearClientConnectionCloseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearClientConnectionCloseDelegate() {
    static UFunction* pFnClearClientConnectionCloseDelegate = NULL;

    if (!pFnClearClientConnectionCloseDelegate)
        pFnClearClientConnectionCloseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27059];

    UOnlineAuthInterface_execClearClientConnectionCloseDelegate_Parms
        ClearClientConnectionCloseDelegate_Parms;

    this->ProcessEvent(pFnClearClientConnectionCloseDelegate,
                       &ClearClientConnectionCloseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddClientConnectionCloseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddClientConnectionCloseDelegate() {
    static UFunction* pFnAddClientConnectionCloseDelegate = NULL;

    if (!pFnAddClientConnectionCloseDelegate)
        pFnAddClientConnectionCloseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27057];

    UOnlineAuthInterface_execAddClientConnectionCloseDelegate_Parms
        AddClientConnectionCloseDelegate_Parms;

    this->ProcessEvent(pFnAddClientConnectionCloseDelegate,
                       &AddClientConnectionCloseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnClientConnectionClose
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnClientConnectionClose() {
    static UFunction* pFnOnClientConnectionClose = NULL;

    if (!pFnOnClientConnectionClose)
        pFnOnClientConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[27055];

    UOnlineAuthInterface_execOnClientConnectionClose_Parms
        OnClientConnectionClose_Parms;

    this->ProcessEvent(pFnOnClientConnectionClose,
                       &OnClientConnectionClose_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.ClearServerAuthRetryRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearServerAuthRetryRequestDelegate() {
    static UFunction* pFnClearServerAuthRetryRequestDelegate = NULL;

    if (!pFnClearServerAuthRetryRequestDelegate)
        pFnClearServerAuthRetryRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27053];

    UOnlineAuthInterface_execClearServerAuthRetryRequestDelegate_Parms
        ClearServerAuthRetryRequestDelegate_Parms;

    this->ProcessEvent(pFnClearServerAuthRetryRequestDelegate,
                       &ClearServerAuthRetryRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddServerAuthRetryRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddServerAuthRetryRequestDelegate() {
    static UFunction* pFnAddServerAuthRetryRequestDelegate = NULL;

    if (!pFnAddServerAuthRetryRequestDelegate)
        pFnAddServerAuthRetryRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27051];

    UOnlineAuthInterface_execAddServerAuthRetryRequestDelegate_Parms
        AddServerAuthRetryRequestDelegate_Parms;

    this->ProcessEvent(pFnAddServerAuthRetryRequestDelegate,
                       &AddServerAuthRetryRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnServerAuthRetryRequest
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnServerAuthRetryRequest() {
    static UFunction* pFnOnServerAuthRetryRequest = NULL;

    if (!pFnOnServerAuthRetryRequest)
        pFnOnServerAuthRetryRequest =
            (UFunction*)UObject::GObjObjects()->Data[27049];

    UOnlineAuthInterface_execOnServerAuthRetryRequest_Parms
        OnServerAuthRetryRequest_Parms;

    this->ProcessEvent(pFnOnServerAuthRetryRequest,
                       &OnServerAuthRetryRequest_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.ClearClientAuthEndSessionRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearClientAuthEndSessionRequestDelegate() {
    static UFunction* pFnClearClientAuthEndSessionRequestDelegate = NULL;

    if (!pFnClearClientAuthEndSessionRequestDelegate)
        pFnClearClientAuthEndSessionRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27047];

    UOnlineAuthInterface_execClearClientAuthEndSessionRequestDelegate_Parms
        ClearClientAuthEndSessionRequestDelegate_Parms;

    this->ProcessEvent(pFnClearClientAuthEndSessionRequestDelegate,
                       &ClearClientAuthEndSessionRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddClientAuthEndSessionRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddClientAuthEndSessionRequestDelegate() {
    static UFunction* pFnAddClientAuthEndSessionRequestDelegate = NULL;

    if (!pFnAddClientAuthEndSessionRequestDelegate)
        pFnAddClientAuthEndSessionRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27045];

    UOnlineAuthInterface_execAddClientAuthEndSessionRequestDelegate_Parms
        AddClientAuthEndSessionRequestDelegate_Parms;

    this->ProcessEvent(pFnAddClientAuthEndSessionRequestDelegate,
                       &AddClientAuthEndSessionRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnClientAuthEndSessionRequest
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnClientAuthEndSessionRequest() {
    static UFunction* pFnOnClientAuthEndSessionRequest = NULL;

    if (!pFnOnClientAuthEndSessionRequest)
        pFnOnClientAuthEndSessionRequest =
            (UFunction*)UObject::GObjObjects()->Data[27043];

    UOnlineAuthInterface_execOnClientAuthEndSessionRequest_Parms
        OnClientAuthEndSessionRequest_Parms;

    this->ProcessEvent(pFnOnClientAuthEndSessionRequest,
                       &OnClientAuthEndSessionRequest_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.ClearServerAuthCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearServerAuthCompleteDelegate() {
    static UFunction* pFnClearServerAuthCompleteDelegate = NULL;

    if (!pFnClearServerAuthCompleteDelegate)
        pFnClearServerAuthCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27041];

    UOnlineAuthInterface_execClearServerAuthCompleteDelegate_Parms
        ClearServerAuthCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearServerAuthCompleteDelegate,
                       &ClearServerAuthCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddServerAuthCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddServerAuthCompleteDelegate() {
    static UFunction* pFnAddServerAuthCompleteDelegate = NULL;

    if (!pFnAddServerAuthCompleteDelegate)
        pFnAddServerAuthCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27039];

    UOnlineAuthInterface_execAddServerAuthCompleteDelegate_Parms
        AddServerAuthCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddServerAuthCompleteDelegate,
                       &AddServerAuthCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnServerAuthComplete
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnServerAuthComplete() {
    static UFunction* pFnOnServerAuthComplete = NULL;

    if (!pFnOnServerAuthComplete)
        pFnOnServerAuthComplete =
            (UFunction*)UObject::GObjObjects()->Data[27034];

    UOnlineAuthInterface_execOnServerAuthComplete_Parms
        OnServerAuthComplete_Parms;

    this->ProcessEvent(pFnOnServerAuthComplete, &OnServerAuthComplete_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearClientAuthCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearClientAuthCompleteDelegate() {
    static UFunction* pFnClearClientAuthCompleteDelegate = NULL;

    if (!pFnClearClientAuthCompleteDelegate)
        pFnClearClientAuthCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27032];

    UOnlineAuthInterface_execClearClientAuthCompleteDelegate_Parms
        ClearClientAuthCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearClientAuthCompleteDelegate,
                       &ClearClientAuthCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddClientAuthCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddClientAuthCompleteDelegate() {
    static UFunction* pFnAddClientAuthCompleteDelegate = NULL;

    if (!pFnAddClientAuthCompleteDelegate)
        pFnAddClientAuthCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27030];

    UOnlineAuthInterface_execAddClientAuthCompleteDelegate_Parms
        AddClientAuthCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddClientAuthCompleteDelegate,
                       &AddClientAuthCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnClientAuthComplete
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnClientAuthComplete() {
    static UFunction* pFnOnClientAuthComplete = NULL;

    if (!pFnOnClientAuthComplete)
        pFnOnClientAuthComplete =
            (UFunction*)UObject::GObjObjects()->Data[27025];

    UOnlineAuthInterface_execOnClientAuthComplete_Parms
        OnClientAuthComplete_Parms;

    this->ProcessEvent(pFnOnClientAuthComplete, &OnClientAuthComplete_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearServerAuthResponseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearServerAuthResponseDelegate() {
    static UFunction* pFnClearServerAuthResponseDelegate = NULL;

    if (!pFnClearServerAuthResponseDelegate)
        pFnClearServerAuthResponseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27023];

    UOnlineAuthInterface_execClearServerAuthResponseDelegate_Parms
        ClearServerAuthResponseDelegate_Parms;

    this->ProcessEvent(pFnClearServerAuthResponseDelegate,
                       &ClearServerAuthResponseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddServerAuthResponseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddServerAuthResponseDelegate() {
    static UFunction* pFnAddServerAuthResponseDelegate = NULL;

    if (!pFnAddServerAuthResponseDelegate)
        pFnAddServerAuthResponseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27021];

    UOnlineAuthInterface_execAddServerAuthResponseDelegate_Parms
        AddServerAuthResponseDelegate_Parms;

    this->ProcessEvent(pFnAddServerAuthResponseDelegate,
                       &AddServerAuthResponseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnServerAuthResponse
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnServerAuthResponse() {
    static UFunction* pFnOnServerAuthResponse = NULL;

    if (!pFnOnServerAuthResponse)
        pFnOnServerAuthResponse =
            (UFunction*)UObject::GObjObjects()->Data[27017];

    UOnlineAuthInterface_execOnServerAuthResponse_Parms
        OnServerAuthResponse_Parms;

    this->ProcessEvent(pFnOnServerAuthResponse, &OnServerAuthResponse_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearClientAuthResponseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearClientAuthResponseDelegate() {
    static UFunction* pFnClearClientAuthResponseDelegate = NULL;

    if (!pFnClearClientAuthResponseDelegate)
        pFnClearClientAuthResponseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27015];

    UOnlineAuthInterface_execClearClientAuthResponseDelegate_Parms
        ClearClientAuthResponseDelegate_Parms;

    this->ProcessEvent(pFnClearClientAuthResponseDelegate,
                       &ClearClientAuthResponseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddClientAuthResponseDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddClientAuthResponseDelegate() {
    static UFunction* pFnAddClientAuthResponseDelegate = NULL;

    if (!pFnAddClientAuthResponseDelegate)
        pFnAddClientAuthResponseDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27013];

    UOnlineAuthInterface_execAddClientAuthResponseDelegate_Parms
        AddClientAuthResponseDelegate_Parms;

    this->ProcessEvent(pFnAddClientAuthResponseDelegate,
                       &AddClientAuthResponseDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnClientAuthResponse
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnClientAuthResponse() {
    static UFunction* pFnOnClientAuthResponse = NULL;

    if (!pFnOnClientAuthResponse)
        pFnOnClientAuthResponse =
            (UFunction*)UObject::GObjObjects()->Data[27009];

    UOnlineAuthInterface_execOnClientAuthResponse_Parms
        OnClientAuthResponse_Parms;

    this->ProcessEvent(pFnOnClientAuthResponse, &OnClientAuthResponse_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearServerAuthRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearServerAuthRequestDelegate() {
    static UFunction* pFnClearServerAuthRequestDelegate = NULL;

    if (!pFnClearServerAuthRequestDelegate)
        pFnClearServerAuthRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27007];

    UOnlineAuthInterface_execClearServerAuthRequestDelegate_Parms
        ClearServerAuthRequestDelegate_Parms;

    this->ProcessEvent(pFnClearServerAuthRequestDelegate,
                       &ClearServerAuthRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddServerAuthRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddServerAuthRequestDelegate() {
    static UFunction* pFnAddServerAuthRequestDelegate = NULL;

    if (!pFnAddServerAuthRequestDelegate)
        pFnAddServerAuthRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27005];

    UOnlineAuthInterface_execAddServerAuthRequestDelegate_Parms
        AddServerAuthRequestDelegate_Parms;

    this->ProcessEvent(pFnAddServerAuthRequestDelegate,
                       &AddServerAuthRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnServerAuthRequest
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnServerAuthRequest() {
    static UFunction* pFnOnServerAuthRequest = NULL;

    if (!pFnOnServerAuthRequest)
        pFnOnServerAuthRequest =
            (UFunction*)UObject::GObjObjects()->Data[27000];

    UOnlineAuthInterface_execOnServerAuthRequest_Parms
        OnServerAuthRequest_Parms;

    this->ProcessEvent(pFnOnServerAuthRequest, &OnServerAuthRequest_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearClientAuthRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearClientAuthRequestDelegate() {
    static UFunction* pFnClearClientAuthRequestDelegate = NULL;

    if (!pFnClearClientAuthRequestDelegate)
        pFnClearClientAuthRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[26998];

    UOnlineAuthInterface_execClearClientAuthRequestDelegate_Parms
        ClearClientAuthRequestDelegate_Parms;

    this->ProcessEvent(pFnClearClientAuthRequestDelegate,
                       &ClearClientAuthRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.AddClientAuthRequestDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddClientAuthRequestDelegate() {
    static UFunction* pFnAddClientAuthRequestDelegate = NULL;

    if (!pFnAddClientAuthRequestDelegate)
        pFnAddClientAuthRequestDelegate =
            (UFunction*)UObject::GObjObjects()->Data[26996];

    UOnlineAuthInterface_execAddClientAuthRequestDelegate_Parms
        AddClientAuthRequestDelegate_Parms;

    this->ProcessEvent(pFnAddClientAuthRequestDelegate,
                       &AddClientAuthRequestDelegate_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.OnClientAuthRequest
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnClientAuthRequest() {
    static UFunction* pFnOnClientAuthRequest = NULL;

    if (!pFnOnClientAuthRequest)
        pFnOnClientAuthRequest =
            (UFunction*)UObject::GObjObjects()->Data[26991];

    UOnlineAuthInterface_execOnClientAuthRequest_Parms
        OnClientAuthRequest_Parms;

    this->ProcessEvent(pFnOnClientAuthRequest, &OnClientAuthRequest_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.ClearAuthReadyDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::ClearAuthReadyDelegate() {
    static UFunction* pFnClearAuthReadyDelegate = NULL;

    if (!pFnClearAuthReadyDelegate)
        pFnClearAuthReadyDelegate =
            (UFunction*)UObject::GObjObjects()->Data[26989];

    UOnlineAuthInterface_execClearAuthReadyDelegate_Parms
        ClearAuthReadyDelegate_Parms;

    this->ProcessEvent(pFnClearAuthReadyDelegate, &ClearAuthReadyDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.AddAuthReadyDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::AddAuthReadyDelegate() {
    static UFunction* pFnAddAuthReadyDelegate = NULL;

    if (!pFnAddAuthReadyDelegate)
        pFnAddAuthReadyDelegate =
            (UFunction*)UObject::GObjObjects()->Data[26987];

    UOnlineAuthInterface_execAddAuthReadyDelegate_Parms
        AddAuthReadyDelegate_Parms;

    this->ProcessEvent(pFnAddAuthReadyDelegate, &AddAuthReadyDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineAuthInterface.OnAuthReady
// [0x00120000]
// Parameters infos:

void UOnlineAuthInterface::OnAuthReady() {
    static UFunction* pFnOnAuthReady = NULL;

    if (!pFnOnAuthReady)
        pFnOnAuthReady = (UFunction*)UObject::GObjObjects()->Data[26986];

    UOnlineAuthInterface_execOnAuthReady_Parms OnAuthReady_Parms;

    this->ProcessEvent(pFnOnAuthReady, &OnAuthReady_Parms, NULL);
};

// Function Engine.OnlineAuthInterface.IsReady
// [0x00020000]
// Parameters infos:

void UOnlineAuthInterface::IsReady() {
    static UFunction* pFnIsReady = NULL;

    if (!pFnIsReady)
        pFnIsReady = (UFunction*)UObject::GObjObjects()->Data[7972];

    UOnlineAuthInterface_execIsReady_Parms IsReady_Parms;

    this->ProcessEvent(pFnIsReady, &IsReady_Parms, NULL);
};

// Function Engine.OnlineGameInterface.RunBandwidthTest
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::RunBandwidthTest() {
    static UFunction* pFnRunBandwidthTest = NULL;

    if (!pFnRunBandwidthTest)
        pFnRunBandwidthTest = (UFunction*)UObject::GObjObjects()->Data[27896];

    UOnlineGameInterface_execRunBandwidthTest_Parms RunBandwidthTest_Parms;

    this->ProcessEvent(pFnRunBandwidthTest, &RunBandwidthTest_Parms, NULL);
};

// Function Engine.OnlineGameInterface.IsAllowedToNetworkHost
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::IsAllowedToNetworkHost() {
    static UFunction* pFnIsAllowedToNetworkHost = NULL;

    if (!pFnIsAllowedToNetworkHost)
        pFnIsAllowedToNetworkHost =
            (UFunction*)UObject::GObjObjects()->Data[27894];

    UOnlineGameInterface_execIsAllowedToNetworkHost_Parms
        IsAllowedToNetworkHost_Parms;

    this->ProcessEvent(pFnIsAllowedToNetworkHost, &IsAllowedToNetworkHost_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.ClearGetRoomIdFromTitleServiceDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearGetRoomIdFromTitleServiceDelegate() {
    static UFunction* pFnClearGetRoomIdFromTitleServiceDelegate = NULL;

    if (!pFnClearGetRoomIdFromTitleServiceDelegate)
        pFnClearGetRoomIdFromTitleServiceDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27892];

    UOnlineGameInterface_execClearGetRoomIdFromTitleServiceDelegate_Parms
        ClearGetRoomIdFromTitleServiceDelegate_Parms;

    this->ProcessEvent(pFnClearGetRoomIdFromTitleServiceDelegate,
                       &ClearGetRoomIdFromTitleServiceDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddGetRoomIdFromTitleServiceDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddGetRoomIdFromTitleServiceDelegate() {
    static UFunction* pFnAddGetRoomIdFromTitleServiceDelegate = NULL;

    if (!pFnAddGetRoomIdFromTitleServiceDelegate)
        pFnAddGetRoomIdFromTitleServiceDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27890];

    UOnlineGameInterface_execAddGetRoomIdFromTitleServiceDelegate_Parms
        AddGetRoomIdFromTitleServiceDelegate_Parms;

    this->ProcessEvent(pFnAddGetRoomIdFromTitleServiceDelegate,
                       &AddGetRoomIdFromTitleServiceDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetRoomIdFromSessionId
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetRoomIdFromSessionId() {
    static UFunction* pFnGetRoomIdFromSessionId = NULL;

    if (!pFnGetRoomIdFromSessionId)
        pFnGetRoomIdFromSessionId =
            (UFunction*)UObject::GObjObjects()->Data[27888];

    UOnlineGameInterface_execGetRoomIdFromSessionId_Parms
        GetRoomIdFromSessionId_Parms;

    this->ProcessEvent(pFnGetRoomIdFromSessionId, &GetRoomIdFromSessionId_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.GetRoomIdFromTitleService
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetRoomIdFromTitleService() {
    static UFunction* pFnGetRoomIdFromTitleService = NULL;

    if (!pFnGetRoomIdFromTitleService)
        pFnGetRoomIdFromTitleService =
            (UFunction*)UObject::GObjObjects()->Data[27886];

    UOnlineGameInterface_execGetRoomIdFromTitleService_Parms
        GetRoomIdFromTitleService_Parms;

    this->ProcessEvent(pFnGetRoomIdFromTitleService,
                       &GetRoomIdFromTitleService_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnGetRoomIdFromTitleService
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnGetRoomIdFromTitleService() {
    static UFunction* pFnOnGetRoomIdFromTitleService = NULL;

    if (!pFnOnGetRoomIdFromTitleService)
        pFnOnGetRoomIdFromTitleService =
            (UFunction*)UObject::GObjObjects()->Data[27884];

    UOnlineGameInterface_execOnGetRoomIdFromTitleService_Parms
        OnGetRoomIdFromTitleService_Parms;

    this->ProcessEvent(pFnOnGetRoomIdFromTitleService,
                       &OnGetRoomIdFromTitleService_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetRoomId
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetRoomId() {
    static UFunction* pFnGetRoomId = NULL;

    if (!pFnGetRoomId)
        pFnGetRoomId = (UFunction*)UObject::GObjObjects()->Data[27882];

    UOnlineGameInterface_execGetRoomId_Parms GetRoomId_Parms;

    this->ProcessEvent(pFnGetRoomId, &GetRoomId_Parms, NULL);
};

// Function
// Engine.OnlineGameInterface.ClearGetNumberOfCurrentPlayersCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearGetNumberOfCurrentPlayersCompleteDelegate() {
    static UFunction* pFnClearGetNumberOfCurrentPlayersCompleteDelegate = NULL;

    if (!pFnClearGetNumberOfCurrentPlayersCompleteDelegate)
        pFnClearGetNumberOfCurrentPlayersCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27880];

    UOnlineGameInterface_execClearGetNumberOfCurrentPlayersCompleteDelegate_Parms
        ClearGetNumberOfCurrentPlayersCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearGetNumberOfCurrentPlayersCompleteDelegate,
                       &ClearGetNumberOfCurrentPlayersCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineGameInterface.AddGetNumberOfCurrentPlayersCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddGetNumberOfCurrentPlayersCompleteDelegate() {
    static UFunction* pFnAddGetNumberOfCurrentPlayersCompleteDelegate = NULL;

    if (!pFnAddGetNumberOfCurrentPlayersCompleteDelegate)
        pFnAddGetNumberOfCurrentPlayersCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27878];

    UOnlineGameInterface_execAddGetNumberOfCurrentPlayersCompleteDelegate_Parms
        AddGetNumberOfCurrentPlayersCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddGetNumberOfCurrentPlayersCompleteDelegate,
                       &AddGetNumberOfCurrentPlayersCompleteDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.OnGetNumberOfCurrentPlayersComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnGetNumberOfCurrentPlayersComplete() {
    static UFunction* pFnOnGetNumberOfCurrentPlayersComplete = NULL;

    if (!pFnOnGetNumberOfCurrentPlayersComplete)
        pFnOnGetNumberOfCurrentPlayersComplete =
            (UFunction*)UObject::GObjObjects()->Data[27876];

    UOnlineGameInterface_execOnGetNumberOfCurrentPlayersComplete_Parms
        OnGetNumberOfCurrentPlayersComplete_Parms;

    this->ProcessEvent(pFnOnGetNumberOfCurrentPlayersComplete,
                       &OnGetNumberOfCurrentPlayersComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetNumberOfCurrentPlayersCached
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetNumberOfCurrentPlayersCached() {
    static UFunction* pFnGetNumberOfCurrentPlayersCached = NULL;

    if (!pFnGetNumberOfCurrentPlayersCached)
        pFnGetNumberOfCurrentPlayersCached =
            (UFunction*)UObject::GObjObjects()->Data[27874];

    UOnlineGameInterface_execGetNumberOfCurrentPlayersCached_Parms
        GetNumberOfCurrentPlayersCached_Parms;

    this->ProcessEvent(pFnGetNumberOfCurrentPlayersCached,
                       &GetNumberOfCurrentPlayersCached_Parms, NULL);
};

// Function Engine.OnlineGameInterface.SendPlayerList
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::SendPlayerList() {
    static UFunction* pFnSendPlayerList = NULL;

    if (!pFnSendPlayerList)
        pFnSendPlayerList = (UFunction*)UObject::GObjObjects()->Data[27870];

    UOnlineGameInterface_execSendPlayerList_Parms SendPlayerList_Parms;

    this->ProcessEvent(pFnSendPlayerList, &SendPlayerList_Parms, NULL);
};

// Function Engine.OnlineGameInterface.RetrieveGameSettingsForIP
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::RetrieveGameSettingsForIP() {
    static UFunction* pFnRetrieveGameSettingsForIP = NULL;

    if (!pFnRetrieveGameSettingsForIP)
        pFnRetrieveGameSettingsForIP =
            (UFunction*)UObject::GObjObjects()->Data[27868];

    UOnlineGameInterface_execRetrieveGameSettingsForIP_Parms
        RetrieveGameSettingsForIP_Parms;

    this->ProcessEvent(pFnRetrieveGameSettingsForIP,
                       &RetrieveGameSettingsForIP_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearOnRetrieveGameSettingsForIPDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearOnRetrieveGameSettingsForIPDelegate() {
    static UFunction* pFnClearOnRetrieveGameSettingsForIPDelegate = NULL;

    if (!pFnClearOnRetrieveGameSettingsForIPDelegate)
        pFnClearOnRetrieveGameSettingsForIPDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27866];

    UOnlineGameInterface_execClearOnRetrieveGameSettingsForIPDelegate_Parms
        ClearOnRetrieveGameSettingsForIPDelegate_Parms;

    this->ProcessEvent(pFnClearOnRetrieveGameSettingsForIPDelegate,
                       &ClearOnRetrieveGameSettingsForIPDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddOnRetrieveGameSettingsForIPDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddOnRetrieveGameSettingsForIPDelegate() {
    static UFunction* pFnAddOnRetrieveGameSettingsForIPDelegate = NULL;

    if (!pFnAddOnRetrieveGameSettingsForIPDelegate)
        pFnAddOnRetrieveGameSettingsForIPDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27864];

    UOnlineGameInterface_execAddOnRetrieveGameSettingsForIPDelegate_Parms
        AddOnRetrieveGameSettingsForIPDelegate_Parms;

    this->ProcessEvent(pFnAddOnRetrieveGameSettingsForIPDelegate,
                       &AddOnRetrieveGameSettingsForIPDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnRetrievedGameSettingsForIP
// [0x00520000]
// Parameters infos:

void UOnlineGameInterface::OnRetrievedGameSettingsForIP() {
    static UFunction* pFnOnRetrievedGameSettingsForIP = NULL;

    if (!pFnOnRetrievedGameSettingsForIP)
        pFnOnRetrievedGameSettingsForIP =
            (UFunction*)UObject::GObjObjects()->Data[27861];

    UOnlineGameInterface_execOnRetrievedGameSettingsForIP_Parms
        OnRetrievedGameSettingsForIP_Parms;

    this->ProcessEvent(pFnOnRetrievedGameSettingsForIP,
                       &OnRetrievedGameSettingsForIP_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetNumberOfCurrentPlayers
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetNumberOfCurrentPlayers() {
    static UFunction* pFnGetNumberOfCurrentPlayers = NULL;

    if (!pFnGetNumberOfCurrentPlayers)
        pFnGetNumberOfCurrentPlayers =
            (UFunction*)UObject::GObjObjects()->Data[27859];

    UOnlineGameInterface_execGetNumberOfCurrentPlayers_Parms
        GetNumberOfCurrentPlayers_Parms;

    this->ProcessEvent(pFnGetNumberOfCurrentPlayers,
                       &GetNumberOfCurrentPlayers_Parms, NULL);
};

// Function
// Engine.OnlineGameInterface.ClearJoinMigratedOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearJoinMigratedOnlineGameCompleteDelegate() {
    static UFunction* pFnClearJoinMigratedOnlineGameCompleteDelegate = NULL;

    if (!pFnClearJoinMigratedOnlineGameCompleteDelegate)
        pFnClearJoinMigratedOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27857];

    UOnlineGameInterface_execClearJoinMigratedOnlineGameCompleteDelegate_Parms
        ClearJoinMigratedOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearJoinMigratedOnlineGameCompleteDelegate,
                       &ClearJoinMigratedOnlineGameCompleteDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.AddJoinMigratedOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddJoinMigratedOnlineGameCompleteDelegate() {
    static UFunction* pFnAddJoinMigratedOnlineGameCompleteDelegate = NULL;

    if (!pFnAddJoinMigratedOnlineGameCompleteDelegate)
        pFnAddJoinMigratedOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27855];

    UOnlineGameInterface_execAddJoinMigratedOnlineGameCompleteDelegate_Parms
        AddJoinMigratedOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddJoinMigratedOnlineGameCompleteDelegate,
                       &AddJoinMigratedOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnJoinMigratedOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnJoinMigratedOnlineGameComplete() {
    static UFunction* pFnOnJoinMigratedOnlineGameComplete = NULL;

    if (!pFnOnJoinMigratedOnlineGameComplete)
        pFnOnJoinMigratedOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27852];

    UOnlineGameInterface_execOnJoinMigratedOnlineGameComplete_Parms
        OnJoinMigratedOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnJoinMigratedOnlineGameComplete,
                       &OnJoinMigratedOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.JoinMigratedOnlineGame
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::JoinMigratedOnlineGame() {
    static UFunction* pFnJoinMigratedOnlineGame = NULL;

    if (!pFnJoinMigratedOnlineGame)
        pFnJoinMigratedOnlineGame =
            (UFunction*)UObject::GObjObjects()->Data[12561];

    UOnlineGameInterface_execJoinMigratedOnlineGame_Parms
        JoinMigratedOnlineGame_Parms;

    this->ProcessEvent(pFnJoinMigratedOnlineGame, &JoinMigratedOnlineGame_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.ClearMigrateOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearMigrateOnlineGameCompleteDelegate() {
    static UFunction* pFnClearMigrateOnlineGameCompleteDelegate = NULL;

    if (!pFnClearMigrateOnlineGameCompleteDelegate)
        pFnClearMigrateOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27847];

    UOnlineGameInterface_execClearMigrateOnlineGameCompleteDelegate_Parms
        ClearMigrateOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearMigrateOnlineGameCompleteDelegate,
                       &ClearMigrateOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddMigrateOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddMigrateOnlineGameCompleteDelegate() {
    static UFunction* pFnAddMigrateOnlineGameCompleteDelegate = NULL;

    if (!pFnAddMigrateOnlineGameCompleteDelegate)
        pFnAddMigrateOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27845];

    UOnlineGameInterface_execAddMigrateOnlineGameCompleteDelegate_Parms
        AddMigrateOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddMigrateOnlineGameCompleteDelegate,
                       &AddMigrateOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnMigrateOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnMigrateOnlineGameComplete() {
    static UFunction* pFnOnMigrateOnlineGameComplete = NULL;

    if (!pFnOnMigrateOnlineGameComplete)
        pFnOnMigrateOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27842];

    UOnlineGameInterface_execOnMigrateOnlineGameComplete_Parms
        OnMigrateOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnMigrateOnlineGameComplete,
                       &OnMigrateOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.MigrateOnlineGame
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::MigrateOnlineGame() {
    static UFunction* pFnMigrateOnlineGame = NULL;

    if (!pFnMigrateOnlineGame)
        pFnMigrateOnlineGame = (UFunction*)UObject::GObjObjects()->Data[12573];

    UOnlineGameInterface_execMigrateOnlineGame_Parms MigrateOnlineGame_Parms;

    this->ProcessEvent(pFnMigrateOnlineGame, &MigrateOnlineGame_Parms, NULL);
};

// Function
// Engine.OnlineGameInterface.ClearRecalculateSkillRatingCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearRecalculateSkillRatingCompleteDelegate() {
    static UFunction* pFnClearRecalculateSkillRatingCompleteDelegate = NULL;

    if (!pFnClearRecalculateSkillRatingCompleteDelegate)
        pFnClearRecalculateSkillRatingCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27838];

    UOnlineGameInterface_execClearRecalculateSkillRatingCompleteDelegate_Parms
        ClearRecalculateSkillRatingCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRecalculateSkillRatingCompleteDelegate,
                       &ClearRecalculateSkillRatingCompleteDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.AddRecalculateSkillRatingCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddRecalculateSkillRatingCompleteDelegate() {
    static UFunction* pFnAddRecalculateSkillRatingCompleteDelegate = NULL;

    if (!pFnAddRecalculateSkillRatingCompleteDelegate)
        pFnAddRecalculateSkillRatingCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27836];

    UOnlineGameInterface_execAddRecalculateSkillRatingCompleteDelegate_Parms
        AddRecalculateSkillRatingCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRecalculateSkillRatingCompleteDelegate,
                       &AddRecalculateSkillRatingCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnRecalculateSkillRatingComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnRecalculateSkillRatingComplete() {
    static UFunction* pFnOnRecalculateSkillRatingComplete = NULL;

    if (!pFnOnRecalculateSkillRatingComplete)
        pFnOnRecalculateSkillRatingComplete =
            (UFunction*)UObject::GObjObjects()->Data[27833];

    UOnlineGameInterface_execOnRecalculateSkillRatingComplete_Parms
        OnRecalculateSkillRatingComplete_Parms;

    this->ProcessEvent(pFnOnRecalculateSkillRatingComplete,
                       &OnRecalculateSkillRatingComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.RecalculateSkillRating
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::RecalculateSkillRating() {
    static UFunction* pFnRecalculateSkillRating = NULL;

    if (!pFnRecalculateSkillRating)
        pFnRecalculateSkillRating =
            (UFunction*)UObject::GObjObjects()->Data[21795];

    UOnlineGameInterface_execRecalculateSkillRating_Parms
        RecalculateSkillRating_Parms;

    this->ProcessEvent(pFnRecalculateSkillRating, &RecalculateSkillRating_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.SetPendingMembersToInvite
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::SetPendingMembersToInvite() {
    static UFunction* pFnSetPendingMembersToInvite = NULL;

    if (!pFnSetPendingMembersToInvite)
        pFnSetPendingMembersToInvite =
            (UFunction*)UObject::GObjObjects()->Data[27827];

    UOnlineGameInterface_execSetPendingMembersToInvite_Parms
        SetPendingMembersToInvite_Parms;

    this->ProcessEvent(pFnSetPendingMembersToInvite,
                       &SetPendingMembersToInvite_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ResetPendingMembersToInvite
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ResetPendingMembersToInvite() {
    static UFunction* pFnResetPendingMembersToInvite = NULL;

    if (!pFnResetPendingMembersToInvite)
        pFnResetPendingMembersToInvite =
            (UFunction*)UObject::GObjObjects()->Data[27826];

    UOnlineGameInterface_execResetPendingMembersToInvite_Parms
        ResetPendingMembersToInvite_Parms;

    this->ProcessEvent(pFnResetPendingMembersToInvite,
                       &ResetPendingMembersToInvite_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetPendingMembersToInvite
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetPendingMembersToInvite() {
    static UFunction* pFnGetPendingMembersToInvite = NULL;

    if (!pFnGetPendingMembersToInvite)
        pFnGetPendingMembersToInvite =
            (UFunction*)UObject::GObjObjects()->Data[27823];

    UOnlineGameInterface_execGetPendingMembersToInvite_Parms
        GetPendingMembersToInvite_Parms;

    this->ProcessEvent(pFnGetPendingMembersToInvite,
                       &GetPendingMembersToInvite_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearPlayTogetherStartedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearPlayTogetherStartedDelegate() {
    static UFunction* pFnClearPlayTogetherStartedDelegate = NULL;

    if (!pFnClearPlayTogetherStartedDelegate)
        pFnClearPlayTogetherStartedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27820];

    UOnlineGameInterface_execClearPlayTogetherStartedDelegate_Parms
        ClearPlayTogetherStartedDelegate_Parms;

    this->ProcessEvent(pFnClearPlayTogetherStartedDelegate,
                       &ClearPlayTogetherStartedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddPlayTogetherStartedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddPlayTogetherStartedDelegate() {
    static UFunction* pFnAddPlayTogetherStartedDelegate = NULL;

    if (!pFnAddPlayTogetherStartedDelegate)
        pFnAddPlayTogetherStartedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27817];

    UOnlineGameInterface_execAddPlayTogetherStartedDelegate_Parms
        AddPlayTogetherStartedDelegate_Parms;

    this->ProcessEvent(pFnAddPlayTogetherStartedDelegate,
                       &AddPlayTogetherStartedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnPlayTogetherStarted
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnPlayTogetherStarted() {
    static UFunction* pFnOnPlayTogetherStarted = NULL;

    if (!pFnOnPlayTogetherStarted)
        pFnOnPlayTogetherStarted =
            (UFunction*)UObject::GObjObjects()->Data[27816];

    UOnlineGameInterface_execOnPlayTogetherStarted_Parms
        OnPlayTogetherStarted_Parms;

    this->ProcessEvent(pFnOnPlayTogetherStarted, &OnPlayTogetherStarted_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.AcceptGameInvite
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::AcceptGameInvite() {
    static UFunction* pFnAcceptGameInvite = NULL;

    if (!pFnAcceptGameInvite)
        pFnAcceptGameInvite = (UFunction*)UObject::GObjObjects()->Data[12272];

    UOnlineGameInterface_execAcceptGameInvite_Parms AcceptGameInvite_Parms;

    this->ProcessEvent(pFnAcceptGameInvite, &AcceptGameInvite_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearGameInviteAcceptedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearGameInviteAcceptedDelegate() {
    static UFunction* pFnClearGameInviteAcceptedDelegate = NULL;

    if (!pFnClearGameInviteAcceptedDelegate)
        pFnClearGameInviteAcceptedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27810];

    UOnlineGameInterface_execClearGameInviteAcceptedDelegate_Parms
        ClearGameInviteAcceptedDelegate_Parms;

    this->ProcessEvent(pFnClearGameInviteAcceptedDelegate,
                       &ClearGameInviteAcceptedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddGameInviteAcceptedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddGameInviteAcceptedDelegate() {
    static UFunction* pFnAddGameInviteAcceptedDelegate = NULL;

    if (!pFnAddGameInviteAcceptedDelegate)
        pFnAddGameInviteAcceptedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27807];

    UOnlineGameInterface_execAddGameInviteAcceptedDelegate_Parms
        AddGameInviteAcceptedDelegate_Parms;

    this->ProcessEvent(pFnAddGameInviteAcceptedDelegate,
                       &AddGameInviteAcceptedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnGameInviteAccepted
// [0x00520000]
// Parameters infos:

void UOnlineGameInterface::OnGameInviteAccepted() {
    static UFunction* pFnOnGameInviteAccepted = NULL;

    if (!pFnOnGameInviteAccepted)
        pFnOnGameInviteAccepted =
            (UFunction*)UObject::GObjObjects()->Data[27804];

    UOnlineGameInterface_execOnGameInviteAccepted_Parms
        OnGameInviteAccepted_Parms;

    this->ProcessEvent(pFnOnGameInviteAccepted, &OnGameInviteAccepted_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.GetArbitratedPlayers
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetArbitratedPlayers() {
    static UFunction* pFnGetArbitratedPlayers = NULL;

    if (!pFnGetArbitratedPlayers)
        pFnGetArbitratedPlayers =
            (UFunction*)UObject::GObjObjects()->Data[27800];

    UOnlineGameInterface_execGetArbitratedPlayers_Parms
        GetArbitratedPlayers_Parms;

    this->ProcessEvent(pFnGetArbitratedPlayers, &GetArbitratedPlayers_Parms,
                       NULL);
};

// Function
// Engine.OnlineGameInterface.ClearArbitrationRegistrationCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearArbitrationRegistrationCompleteDelegate() {
    static UFunction* pFnClearArbitrationRegistrationCompleteDelegate = NULL;

    if (!pFnClearArbitrationRegistrationCompleteDelegate)
        pFnClearArbitrationRegistrationCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27798];

    UOnlineGameInterface_execClearArbitrationRegistrationCompleteDelegate_Parms
        ClearArbitrationRegistrationCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearArbitrationRegistrationCompleteDelegate,
                       &ClearArbitrationRegistrationCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineGameInterface.AddArbitrationRegistrationCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddArbitrationRegistrationCompleteDelegate() {
    static UFunction* pFnAddArbitrationRegistrationCompleteDelegate = NULL;

    if (!pFnAddArbitrationRegistrationCompleteDelegate)
        pFnAddArbitrationRegistrationCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27796];

    UOnlineGameInterface_execAddArbitrationRegistrationCompleteDelegate_Parms
        AddArbitrationRegistrationCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddArbitrationRegistrationCompleteDelegate,
                       &AddArbitrationRegistrationCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnArbitrationRegistrationComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnArbitrationRegistrationComplete() {
    static UFunction* pFnOnArbitrationRegistrationComplete = NULL;

    if (!pFnOnArbitrationRegistrationComplete)
        pFnOnArbitrationRegistrationComplete =
            (UFunction*)UObject::GObjObjects()->Data[27793];

    UOnlineGameInterface_execOnArbitrationRegistrationComplete_Parms
        OnArbitrationRegistrationComplete_Parms;

    this->ProcessEvent(pFnOnArbitrationRegistrationComplete,
                       &OnArbitrationRegistrationComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.RegisterForArbitration
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::RegisterForArbitration() {
    static UFunction* pFnRegisterForArbitration = NULL;

    if (!pFnRegisterForArbitration)
        pFnRegisterForArbitration =
            (UFunction*)UObject::GObjObjects()->Data[12281];

    UOnlineGameInterface_execRegisterForArbitration_Parms
        RegisterForArbitration_Parms;

    this->ProcessEvent(pFnRegisterForArbitration, &RegisterForArbitration_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.ClearEndOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearEndOnlineGameCompleteDelegate() {
    static UFunction* pFnClearEndOnlineGameCompleteDelegate = NULL;

    if (!pFnClearEndOnlineGameCompleteDelegate)
        pFnClearEndOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27790];

    UOnlineGameInterface_execClearEndOnlineGameCompleteDelegate_Parms
        ClearEndOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearEndOnlineGameCompleteDelegate,
                       &ClearEndOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddEndOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddEndOnlineGameCompleteDelegate() {
    static UFunction* pFnAddEndOnlineGameCompleteDelegate = NULL;

    if (!pFnAddEndOnlineGameCompleteDelegate)
        pFnAddEndOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27788];

    UOnlineGameInterface_execAddEndOnlineGameCompleteDelegate_Parms
        AddEndOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddEndOnlineGameCompleteDelegate,
                       &AddEndOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnEndOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnEndOnlineGameComplete() {
    static UFunction* pFnOnEndOnlineGameComplete = NULL;

    if (!pFnOnEndOnlineGameComplete)
        pFnOnEndOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27785];

    UOnlineGameInterface_execOnEndOnlineGameComplete_Parms
        OnEndOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnEndOnlineGameComplete,
                       &OnEndOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.EndOnlineGame
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::EndOnlineGame() {
    static UFunction* pFnEndOnlineGame = NULL;

    if (!pFnEndOnlineGame)
        pFnEndOnlineGame = (UFunction*)UObject::GObjObjects()->Data[12237];

    UOnlineGameInterface_execEndOnlineGame_Parms EndOnlineGame_Parms;

    this->ProcessEvent(pFnEndOnlineGame, &EndOnlineGame_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearStartOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearStartOnlineGameCompleteDelegate() {
    static UFunction* pFnClearStartOnlineGameCompleteDelegate = NULL;

    if (!pFnClearStartOnlineGameCompleteDelegate)
        pFnClearStartOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27782];

    UOnlineGameInterface_execClearStartOnlineGameCompleteDelegate_Parms
        ClearStartOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearStartOnlineGameCompleteDelegate,
                       &ClearStartOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddStartOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddStartOnlineGameCompleteDelegate() {
    static UFunction* pFnAddStartOnlineGameCompleteDelegate = NULL;

    if (!pFnAddStartOnlineGameCompleteDelegate)
        pFnAddStartOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27780];

    UOnlineGameInterface_execAddStartOnlineGameCompleteDelegate_Parms
        AddStartOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddStartOnlineGameCompleteDelegate,
                       &AddStartOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnStartOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnStartOnlineGameComplete() {
    static UFunction* pFnOnStartOnlineGameComplete = NULL;

    if (!pFnOnStartOnlineGameComplete)
        pFnOnStartOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27777];

    UOnlineGameInterface_execOnStartOnlineGameComplete_Parms
        OnStartOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnStartOnlineGameComplete,
                       &OnStartOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.StartOnlineGame
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::StartOnlineGame() {
    static UFunction* pFnStartOnlineGame = NULL;

    if (!pFnStartOnlineGame)
        pFnStartOnlineGame = (UFunction*)UObject::GObjObjects()->Data[12239];

    UOnlineGameInterface_execStartOnlineGame_Parms StartOnlineGame_Parms;

    this->ProcessEvent(pFnStartOnlineGame, &StartOnlineGame_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearUnregisterPlayerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearUnregisterPlayerCompleteDelegate() {
    static UFunction* pFnClearUnregisterPlayerCompleteDelegate = NULL;

    if (!pFnClearUnregisterPlayerCompleteDelegate)
        pFnClearUnregisterPlayerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27774];

    UOnlineGameInterface_execClearUnregisterPlayerCompleteDelegate_Parms
        ClearUnregisterPlayerCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUnregisterPlayerCompleteDelegate,
                       &ClearUnregisterPlayerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddUnregisterPlayerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddUnregisterPlayerCompleteDelegate() {
    static UFunction* pFnAddUnregisterPlayerCompleteDelegate = NULL;

    if (!pFnAddUnregisterPlayerCompleteDelegate)
        pFnAddUnregisterPlayerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27772];

    UOnlineGameInterface_execAddUnregisterPlayerCompleteDelegate_Parms
        AddUnregisterPlayerCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUnregisterPlayerCompleteDelegate,
                       &AddUnregisterPlayerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnUnregisterPlayerComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnUnregisterPlayerComplete() {
    static UFunction* pFnOnUnregisterPlayerComplete = NULL;

    if (!pFnOnUnregisterPlayerComplete)
        pFnOnUnregisterPlayerComplete =
            (UFunction*)UObject::GObjObjects()->Data[27768];

    UOnlineGameInterface_execOnUnregisterPlayerComplete_Parms
        OnUnregisterPlayerComplete_Parms;

    this->ProcessEvent(pFnOnUnregisterPlayerComplete,
                       &OnUnregisterPlayerComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.UnregisterPlayers
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::UnregisterPlayers() {
    static UFunction* pFnUnregisterPlayers = NULL;

    if (!pFnUnregisterPlayers)
        pFnUnregisterPlayers = (UFunction*)UObject::GObjObjects()->Data[27763];

    UOnlineGameInterface_execUnregisterPlayers_Parms UnregisterPlayers_Parms;

    this->ProcessEvent(pFnUnregisterPlayers, &UnregisterPlayers_Parms, NULL);
};

// Function Engine.OnlineGameInterface.UnregisterPlayer
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::UnregisterPlayer() {
    static UFunction* pFnUnregisterPlayer = NULL;

    if (!pFnUnregisterPlayer)
        pFnUnregisterPlayer = (UFunction*)UObject::GObjObjects()->Data[12571];

    UOnlineGameInterface_execUnregisterPlayer_Parms UnregisterPlayer_Parms;

    this->ProcessEvent(pFnUnregisterPlayer, &UnregisterPlayer_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearRegisterPlayerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearRegisterPlayerCompleteDelegate() {
    static UFunction* pFnClearRegisterPlayerCompleteDelegate = NULL;

    if (!pFnClearRegisterPlayerCompleteDelegate)
        pFnClearRegisterPlayerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27759];

    UOnlineGameInterface_execClearRegisterPlayerCompleteDelegate_Parms
        ClearRegisterPlayerCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRegisterPlayerCompleteDelegate,
                       &ClearRegisterPlayerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddRegisterPlayerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddRegisterPlayerCompleteDelegate() {
    static UFunction* pFnAddRegisterPlayerCompleteDelegate = NULL;

    if (!pFnAddRegisterPlayerCompleteDelegate)
        pFnAddRegisterPlayerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27757];

    UOnlineGameInterface_execAddRegisterPlayerCompleteDelegate_Parms
        AddRegisterPlayerCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRegisterPlayerCompleteDelegate,
                       &AddRegisterPlayerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnRegisterPlayerComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnRegisterPlayerComplete() {
    static UFunction* pFnOnRegisterPlayerComplete = NULL;

    if (!pFnOnRegisterPlayerComplete)
        pFnOnRegisterPlayerComplete =
            (UFunction*)UObject::GObjObjects()->Data[27753];

    UOnlineGameInterface_execOnRegisterPlayerComplete_Parms
        OnRegisterPlayerComplete_Parms;

    this->ProcessEvent(pFnOnRegisterPlayerComplete,
                       &OnRegisterPlayerComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.RegisterPlayers
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::RegisterPlayers() {
    static UFunction* pFnRegisterPlayers = NULL;

    if (!pFnRegisterPlayers)
        pFnRegisterPlayers = (UFunction*)UObject::GObjObjects()->Data[27748];

    UOnlineGameInterface_execRegisterPlayers_Parms RegisterPlayers_Parms;

    this->ProcessEvent(pFnRegisterPlayers, &RegisterPlayers_Parms, NULL);
};

// Function Engine.OnlineGameInterface.RegisterPlayer
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::RegisterPlayer() {
    static UFunction* pFnRegisterPlayer = NULL;

    if (!pFnRegisterPlayer)
        pFnRegisterPlayer = (UFunction*)UObject::GObjObjects()->Data[21866];

    UOnlineGameInterface_execRegisterPlayer_Parms RegisterPlayer_Parms;

    this->ProcessEvent(pFnRegisterPlayer, &RegisterPlayer_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetResolvedConnectString
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::GetResolvedConnectString() {
    static UFunction* pFnGetResolvedConnectString = NULL;

    if (!pFnGetResolvedConnectString)
        pFnGetResolvedConnectString =
            (UFunction*)UObject::GObjObjects()->Data[12225];

    UOnlineGameInterface_execGetResolvedConnectString_Parms
        GetResolvedConnectString_Parms;

    this->ProcessEvent(pFnGetResolvedConnectString,
                       &GetResolvedConnectString_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearQuerySessionsForUserCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearQuerySessionsForUserCompleteDelegate() {
    static UFunction* pFnClearQuerySessionsForUserCompleteDelegate = NULL;

    if (!pFnClearQuerySessionsForUserCompleteDelegate)
        pFnClearQuerySessionsForUserCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27741];

    UOnlineGameInterface_execClearQuerySessionsForUserCompleteDelegate_Parms
        ClearQuerySessionsForUserCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearQuerySessionsForUserCompleteDelegate,
                       &ClearQuerySessionsForUserCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddQuerySessionsForUserCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddQuerySessionsForUserCompleteDelegate() {
    static UFunction* pFnAddQuerySessionsForUserCompleteDelegate = NULL;

    if (!pFnAddQuerySessionsForUserCompleteDelegate)
        pFnAddQuerySessionsForUserCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27739];

    UOnlineGameInterface_execAddQuerySessionsForUserCompleteDelegate_Parms
        AddQuerySessionsForUserCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddQuerySessionsForUserCompleteDelegate,
                       &AddQuerySessionsForUserCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnQuerySessionsForUserComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnQuerySessionsForUserComplete() {
    static UFunction* pFnOnQuerySessionsForUserComplete = NULL;

    if (!pFnOnQuerySessionsForUserComplete)
        pFnOnQuerySessionsForUserComplete =
            (UFunction*)UObject::GObjObjects()->Data[27736];

    UOnlineGameInterface_execOnQuerySessionsForUserComplete_Parms
        OnQuerySessionsForUserComplete_Parms;

    this->ProcessEvent(pFnOnQuerySessionsForUserComplete,
                       &OnQuerySessionsForUserComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.QuerySessionsByKeyword
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::QuerySessionsByKeyword() {
    static UFunction* pFnQuerySessionsByKeyword = NULL;

    if (!pFnQuerySessionsByKeyword)
        pFnQuerySessionsByKeyword =
            (UFunction*)UObject::GObjObjects()->Data[27731];

    UOnlineGameInterface_execQuerySessionsByKeyword_Parms
        QuerySessionsByKeyword_Parms;

    this->ProcessEvent(pFnQuerySessionsByKeyword, &QuerySessionsByKeyword_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.QuerySessionsForUser
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::QuerySessionsForUser() {
    static UFunction* pFnQuerySessionsForUser = NULL;

    if (!pFnQuerySessionsForUser)
        pFnQuerySessionsForUser =
            (UFunction*)UObject::GObjObjects()->Data[27728];

    UOnlineGameInterface_execQuerySessionsForUser_Parms
        QuerySessionsForUser_Parms;

    this->ProcessEvent(pFnQuerySessionsForUser, &QuerySessionsForUser_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.LeaveAllOnlineSessions
// [0x00024000]
// Parameters infos:

void UOnlineGameInterface::LeaveAllOnlineSessions() {
    static UFunction* pFnLeaveAllOnlineSessions = NULL;

    if (!pFnLeaveAllOnlineSessions)
        pFnLeaveAllOnlineSessions =
            (UFunction*)UObject::GObjObjects()->Data[27726];

    UOnlineGameInterface_execLeaveAllOnlineSessions_Parms
        LeaveAllOnlineSessions_Parms;

    this->ProcessEvent(pFnLeaveAllOnlineSessions, &LeaveAllOnlineSessions_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.LeaveOnlineSession
// [0x00024000]
// Parameters infos:

void UOnlineGameInterface::LeaveOnlineSession() {
    static UFunction* pFnLeaveOnlineSession = NULL;

    if (!pFnLeaveOnlineSession)
        pFnLeaveOnlineSession = (UFunction*)UObject::GObjObjects()->Data[27721];

    UOnlineGameInterface_execLeaveOnlineSession_Parms LeaveOnlineSession_Parms;

    this->ProcessEvent(pFnLeaveOnlineSession, &LeaveOnlineSession_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearMatchStatusChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearMatchStatusChangedDelegate() {
    static UFunction* pFnClearMatchStatusChangedDelegate = NULL;

    if (!pFnClearMatchStatusChangedDelegate)
        pFnClearMatchStatusChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27719];

    UOnlineGameInterface_execClearMatchStatusChangedDelegate_Parms
        ClearMatchStatusChangedDelegate_Parms;

    this->ProcessEvent(pFnClearMatchStatusChangedDelegate,
                       &ClearMatchStatusChangedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddMatchStatusChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddMatchStatusChangedDelegate() {
    static UFunction* pFnAddMatchStatusChangedDelegate = NULL;

    if (!pFnAddMatchStatusChangedDelegate)
        pFnAddMatchStatusChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27717];

    UOnlineGameInterface_execAddMatchStatusChangedDelegate_Parms
        AddMatchStatusChangedDelegate_Parms;

    this->ProcessEvent(pFnAddMatchStatusChangedDelegate,
                       &AddMatchStatusChangedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnMatchStatusChanged
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnMatchStatusChanged() {
    static UFunction* pFnOnMatchStatusChanged = NULL;

    if (!pFnOnMatchStatusChanged)
        pFnOnMatchStatusChanged =
            (UFunction*)UObject::GObjObjects()->Data[27714];

    UOnlineGameInterface_execOnMatchStatusChanged_Parms
        OnMatchStatusChanged_Parms;

    this->ProcessEvent(pFnOnMatchStatusChanged, &OnMatchStatusChanged_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.ClearGamePlayersChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearGamePlayersChangedDelegate() {
    static UFunction* pFnClearGamePlayersChangedDelegate = NULL;

    if (!pFnClearGamePlayersChangedDelegate)
        pFnClearGamePlayersChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27712];

    UOnlineGameInterface_execClearGamePlayersChangedDelegate_Parms
        ClearGamePlayersChangedDelegate_Parms;

    this->ProcessEvent(pFnClearGamePlayersChangedDelegate,
                       &ClearGamePlayersChangedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddGamePlayersChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddGamePlayersChangedDelegate() {
    static UFunction* pFnAddGamePlayersChangedDelegate = NULL;

    if (!pFnAddGamePlayersChangedDelegate)
        pFnAddGamePlayersChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27710];

    UOnlineGameInterface_execAddGamePlayersChangedDelegate_Parms
        AddGamePlayersChangedDelegate_Parms;

    this->ProcessEvent(pFnAddGamePlayersChangedDelegate,
                       &AddGamePlayersChangedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnGamePlayersChanged
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnGamePlayersChanged() {
    static UFunction* pFnOnGamePlayersChanged = NULL;

    if (!pFnOnGamePlayersChanged)
        pFnOnGamePlayersChanged =
            (UFunction*)UObject::GObjObjects()->Data[27706];

    UOnlineGameInterface_execOnGamePlayersChanged_Parms
        OnGamePlayersChanged_Parms;

    this->ProcessEvent(pFnOnGamePlayersChanged, &OnGamePlayersChanged_Parms,
                       NULL);
};

// Function
// Engine.OnlineGameInterface.ClearUpdateSessionPropertiesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearUpdateSessionPropertiesCompleteDelegate() {
    static UFunction* pFnClearUpdateSessionPropertiesCompleteDelegate = NULL;

    if (!pFnClearUpdateSessionPropertiesCompleteDelegate)
        pFnClearUpdateSessionPropertiesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27704];

    UOnlineGameInterface_execClearUpdateSessionPropertiesCompleteDelegate_Parms
        ClearUpdateSessionPropertiesCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUpdateSessionPropertiesCompleteDelegate,
                       &ClearUpdateSessionPropertiesCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineGameInterface.AddUpdateSessionPropertiesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddUpdateSessionPropertiesCompleteDelegate() {
    static UFunction* pFnAddUpdateSessionPropertiesCompleteDelegate = NULL;

    if (!pFnAddUpdateSessionPropertiesCompleteDelegate)
        pFnAddUpdateSessionPropertiesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27702];

    UOnlineGameInterface_execAddUpdateSessionPropertiesCompleteDelegate_Parms
        AddUpdateSessionPropertiesCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUpdateSessionPropertiesCompleteDelegate,
                       &AddUpdateSessionPropertiesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnUpdateSessionPropertiesComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnUpdateSessionPropertiesComplete() {
    static UFunction* pFnOnUpdateSessionPropertiesComplete = NULL;

    if (!pFnOnUpdateSessionPropertiesComplete)
        pFnOnUpdateSessionPropertiesComplete =
            (UFunction*)UObject::GObjObjects()->Data[27699];

    UOnlineGameInterface_execOnUpdateSessionPropertiesComplete_Parms
        OnUpdateSessionPropertiesComplete_Parms;

    this->ProcessEvent(pFnOnUpdateSessionPropertiesComplete,
                       &OnUpdateSessionPropertiesComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.UpdateSessionProperties
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::UpdateSessionProperties() {
    static UFunction* pFnUpdateSessionProperties = NULL;

    if (!pFnUpdateSessionProperties)
        pFnUpdateSessionProperties =
            (UFunction*)UObject::GObjObjects()->Data[27695];

    UOnlineGameInterface_execUpdateSessionProperties_Parms
        UpdateSessionProperties_Parms;

    this->ProcessEvent(pFnUpdateSessionProperties,
                       &UpdateSessionProperties_Parms, NULL);
};

// Function Engine.OnlineGameInterface.DeleteCustomMemberProperty
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::DeleteCustomMemberProperty() {
    static UFunction* pFnDeleteCustomMemberProperty = NULL;

    if (!pFnDeleteCustomMemberProperty)
        pFnDeleteCustomMemberProperty =
            (UFunction*)UObject::GObjObjects()->Data[27691];

    UOnlineGameInterface_execDeleteCustomMemberProperty_Parms
        DeleteCustomMemberProperty_Parms;

    this->ProcessEvent(pFnDeleteCustomMemberProperty,
                       &DeleteCustomMemberProperty_Parms, NULL);
};

// Function Engine.OnlineGameInterface.SetCustomMemberProperty
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::SetCustomMemberProperty() {
    static UFunction* pFnSetCustomMemberProperty = NULL;

    if (!pFnSetCustomMemberProperty)
        pFnSetCustomMemberProperty =
            (UFunction*)UObject::GObjObjects()->Data[27686];

    UOnlineGameInterface_execSetCustomMemberProperty_Parms
        SetCustomMemberProperty_Parms;

    this->ProcessEvent(pFnSetCustomMemberProperty,
                       &SetCustomMemberProperty_Parms, NULL);
};

// Function Engine.OnlineGameInterface.DeleteCustomSessionProperty
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::DeleteCustomSessionProperty() {
    static UFunction* pFnDeleteCustomSessionProperty = NULL;

    if (!pFnDeleteCustomSessionProperty)
        pFnDeleteCustomSessionProperty =
            (UFunction*)UObject::GObjObjects()->Data[27682];

    UOnlineGameInterface_execDeleteCustomSessionProperty_Parms
        DeleteCustomSessionProperty_Parms;

    this->ProcessEvent(pFnDeleteCustomSessionProperty,
                       &DeleteCustomSessionProperty_Parms, NULL);
};

// Function Engine.OnlineGameInterface.SetCustomSessionProperty
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::SetCustomSessionProperty() {
    static UFunction* pFnSetCustomSessionProperty = NULL;

    if (!pFnSetCustomSessionProperty)
        pFnSetCustomSessionProperty =
            (UFunction*)UObject::GObjObjects()->Data[27677];

    UOnlineGameInterface_execSetCustomSessionProperty_Parms
        SetCustomSessionProperty_Parms;

    this->ProcessEvent(pFnSetCustomSessionProperty,
                       &SetCustomSessionProperty_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearDeleteMatchTicketCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearDeleteMatchTicketCompleteDelegate() {
    static UFunction* pFnClearDeleteMatchTicketCompleteDelegate = NULL;

    if (!pFnClearDeleteMatchTicketCompleteDelegate)
        pFnClearDeleteMatchTicketCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27675];

    UOnlineGameInterface_execClearDeleteMatchTicketCompleteDelegate_Parms
        ClearDeleteMatchTicketCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearDeleteMatchTicketCompleteDelegate,
                       &ClearDeleteMatchTicketCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddDeleteMatchTicketCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddDeleteMatchTicketCompleteDelegate() {
    static UFunction* pFnAddDeleteMatchTicketCompleteDelegate = NULL;

    if (!pFnAddDeleteMatchTicketCompleteDelegate)
        pFnAddDeleteMatchTicketCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27673];

    UOnlineGameInterface_execAddDeleteMatchTicketCompleteDelegate_Parms
        AddDeleteMatchTicketCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddDeleteMatchTicketCompleteDelegate,
                       &AddDeleteMatchTicketCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnDeleteMatchTicketComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnDeleteMatchTicketComplete() {
    static UFunction* pFnOnDeleteMatchTicketComplete = NULL;

    if (!pFnOnDeleteMatchTicketComplete)
        pFnOnDeleteMatchTicketComplete =
            (UFunction*)UObject::GObjObjects()->Data[27670];

    UOnlineGameInterface_execOnDeleteMatchTicketComplete_Parms
        OnDeleteMatchTicketComplete_Parms;

    this->ProcessEvent(pFnOnDeleteMatchTicketComplete,
                       &OnDeleteMatchTicketComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.DeleteMatchTicketWithHopper
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::DeleteMatchTicketWithHopper() {
    static UFunction* pFnDeleteMatchTicketWithHopper = NULL;

    if (!pFnDeleteMatchTicketWithHopper)
        pFnDeleteMatchTicketWithHopper =
            (UFunction*)UObject::GObjObjects()->Data[27665];

    UOnlineGameInterface_execDeleteMatchTicketWithHopper_Parms
        DeleteMatchTicketWithHopper_Parms;

    this->ProcessEvent(pFnDeleteMatchTicketWithHopper,
                       &DeleteMatchTicketWithHopper_Parms, NULL);
};

// Function Engine.OnlineGameInterface.DeleteMatchTicket
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::DeleteMatchTicket() {
    static UFunction* pFnDeleteMatchTicket = NULL;

    if (!pFnDeleteMatchTicket)
        pFnDeleteMatchTicket = (UFunction*)UObject::GObjObjects()->Data[27661];

    UOnlineGameInterface_execDeleteMatchTicket_Parms DeleteMatchTicket_Parms;

    this->ProcessEvent(pFnDeleteMatchTicket, &DeleteMatchTicket_Parms, NULL);
};

// Function
// Engine.OnlineGameInterface.ClearQueryMatchmakingForSessionCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearQueryMatchmakingForSessionCompleteDelegate() {
    static UFunction* pFnClearQueryMatchmakingForSessionCompleteDelegate = NULL;

    if (!pFnClearQueryMatchmakingForSessionCompleteDelegate)
        pFnClearQueryMatchmakingForSessionCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27659];

    UOnlineGameInterface_execClearQueryMatchmakingForSessionCompleteDelegate_Parms
        ClearQueryMatchmakingForSessionCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearQueryMatchmakingForSessionCompleteDelegate,
                       &ClearQueryMatchmakingForSessionCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineGameInterface.AddQueryMatchmakingForSessionCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddQueryMatchmakingForSessionCompleteDelegate() {
    static UFunction* pFnAddQueryMatchmakingForSessionCompleteDelegate = NULL;

    if (!pFnAddQueryMatchmakingForSessionCompleteDelegate)
        pFnAddQueryMatchmakingForSessionCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27657];

    UOnlineGameInterface_execAddQueryMatchmakingForSessionCompleteDelegate_Parms
        AddQueryMatchmakingForSessionCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddQueryMatchmakingForSessionCompleteDelegate,
                       &AddQueryMatchmakingForSessionCompleteDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.OnQueryMatchmakingForSessionComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnQueryMatchmakingForSessionComplete() {
    static UFunction* pFnOnQueryMatchmakingForSessionComplete = NULL;

    if (!pFnOnQueryMatchmakingForSessionComplete)
        pFnOnQueryMatchmakingForSessionComplete =
            (UFunction*)UObject::GObjObjects()->Data[27654];

    UOnlineGameInterface_execOnQueryMatchmakingForSessionComplete_Parms
        OnQueryMatchmakingForSessionComplete_Parms;

    this->ProcessEvent(pFnOnQueryMatchmakingForSessionComplete,
                       &OnQueryMatchmakingForSessionComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.QueryMatchmakingForSessionWithHopper
// [0x00024000]
// Parameters infos:

void UOnlineGameInterface::QueryMatchmakingForSessionWithHopper() {
    static UFunction* pFnQueryMatchmakingForSessionWithHopper = NULL;

    if (!pFnQueryMatchmakingForSessionWithHopper)
        pFnQueryMatchmakingForSessionWithHopper =
            (UFunction*)UObject::GObjObjects()->Data[27647];

    UOnlineGameInterface_execQueryMatchmakingForSessionWithHopper_Parms
        QueryMatchmakingForSessionWithHopper_Parms;

    this->ProcessEvent(pFnQueryMatchmakingForSessionWithHopper,
                       &QueryMatchmakingForSessionWithHopper_Parms, NULL);
};

// Function Engine.OnlineGameInterface.QueryMatchmakingForSession
// [0x00024000]
// Parameters infos:

void UOnlineGameInterface::QueryMatchmakingForSession() {
    static UFunction* pFnQueryMatchmakingForSession = NULL;

    if (!pFnQueryMatchmakingForSession)
        pFnQueryMatchmakingForSession =
            (UFunction*)UObject::GObjObjects()->Data[27641];

    UOnlineGameInterface_execQueryMatchmakingForSession_Parms
        QueryMatchmakingForSession_Parms;

    this->ProcessEvent(pFnQueryMatchmakingForSession,
                       &QueryMatchmakingForSession_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearMultiplayerSessionChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearMultiplayerSessionChangeDelegate() {
    static UFunction* pFnClearMultiplayerSessionChangeDelegate = NULL;

    if (!pFnClearMultiplayerSessionChangeDelegate)
        pFnClearMultiplayerSessionChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27639];

    UOnlineGameInterface_execClearMultiplayerSessionChangeDelegate_Parms
        ClearMultiplayerSessionChangeDelegate_Parms;

    this->ProcessEvent(pFnClearMultiplayerSessionChangeDelegate,
                       &ClearMultiplayerSessionChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddMultiplayerSessionChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddMultiplayerSessionChangeDelegate() {
    static UFunction* pFnAddMultiplayerSessionChangeDelegate = NULL;

    if (!pFnAddMultiplayerSessionChangeDelegate)
        pFnAddMultiplayerSessionChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27637];

    UOnlineGameInterface_execAddMultiplayerSessionChangeDelegate_Parms
        AddMultiplayerSessionChangeDelegate_Parms;

    this->ProcessEvent(pFnAddMultiplayerSessionChangeDelegate,
                       &AddMultiplayerSessionChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnMultiplayerSessionChange
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnMultiplayerSessionChange() {
    static UFunction* pFnOnMultiplayerSessionChange = NULL;

    if (!pFnOnMultiplayerSessionChange)
        pFnOnMultiplayerSessionChange =
            (UFunction*)UObject::GObjObjects()->Data[27634];

    UOnlineGameInterface_execOnMultiplayerSessionChange_Parms
        OnMultiplayerSessionChange_Parms;

    this->ProcessEvent(pFnOnMultiplayerSessionChange,
                       &OnMultiplayerSessionChange_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearJoinOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearJoinOnlineGameCompleteDelegate() {
    static UFunction* pFnClearJoinOnlineGameCompleteDelegate = NULL;

    if (!pFnClearJoinOnlineGameCompleteDelegate)
        pFnClearJoinOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27632];

    UOnlineGameInterface_execClearJoinOnlineGameCompleteDelegate_Parms
        ClearJoinOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearJoinOnlineGameCompleteDelegate,
                       &ClearJoinOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddJoinOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddJoinOnlineGameCompleteDelegate() {
    static UFunction* pFnAddJoinOnlineGameCompleteDelegate = NULL;

    if (!pFnAddJoinOnlineGameCompleteDelegate)
        pFnAddJoinOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27630];

    UOnlineGameInterface_execAddJoinOnlineGameCompleteDelegate_Parms
        AddJoinOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddJoinOnlineGameCompleteDelegate,
                       &AddJoinOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnJoinOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnJoinOnlineGameComplete() {
    static UFunction* pFnOnJoinOnlineGameComplete = NULL;

    if (!pFnOnJoinOnlineGameComplete)
        pFnOnJoinOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27627];

    UOnlineGameInterface_execOnJoinOnlineGameComplete_Parms
        OnJoinOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnJoinOnlineGameComplete,
                       &OnJoinOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.IsCurrentRoomOwner
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::IsCurrentRoomOwner() {
    static UFunction* pFnIsCurrentRoomOwner = NULL;

    if (!pFnIsCurrentRoomOwner)
        pFnIsCurrentRoomOwner = (UFunction*)UObject::GObjObjects()->Data[27625];

    UOnlineGameInterface_execIsCurrentRoomOwner_Parms IsCurrentRoomOwner_Parms;

    this->ProcessEvent(pFnIsCurrentRoomOwner, &IsCurrentRoomOwner_Parms, NULL);
};

// Function Engine.OnlineGameInterface.SetRankedReadyStatus
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::SetRankedReadyStatus() {
    static UFunction* pFnSetRankedReadyStatus = NULL;

    if (!pFnSetRankedReadyStatus)
        pFnSetRankedReadyStatus =
            (UFunction*)UObject::GObjObjects()->Data[27622];

    UOnlineGameInterface_execSetRankedReadyStatus_Parms
        SetRankedReadyStatus_Parms;

    this->ProcessEvent(pFnSetRankedReadyStatus, &SetRankedReadyStatus_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.IsJoinOperationInProgress
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::IsJoinOperationInProgress() {
    static UFunction* pFnIsJoinOperationInProgress = NULL;

    if (!pFnIsJoinOperationInProgress)
        pFnIsJoinOperationInProgress =
            (UFunction*)UObject::GObjObjects()->Data[27620];

    UOnlineGameInterface_execIsJoinOperationInProgress_Parms
        IsJoinOperationInProgress_Parms;

    this->ProcessEvent(pFnIsJoinOperationInProgress,
                       &IsJoinOperationInProgress_Parms, NULL);
};

// Function Engine.OnlineGameInterface.JoinOnlineGameByMatchingParams
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::JoinOnlineGameByMatchingParams() {
    static UFunction* pFnJoinOnlineGameByMatchingParams = NULL;

    if (!pFnJoinOnlineGameByMatchingParams)
        pFnJoinOnlineGameByMatchingParams =
            (UFunction*)UObject::GObjObjects()->Data[27616];

    UOnlineGameInterface_execJoinOnlineGameByMatchingParams_Parms
        JoinOnlineGameByMatchingParams_Parms;

    this->ProcessEvent(pFnJoinOnlineGameByMatchingParams,
                       &JoinOnlineGameByMatchingParams_Parms, NULL);
};

// Function Engine.OnlineGameInterface.JoinOnlineGameBySessionHandle
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::JoinOnlineGameBySessionHandle() {
    static UFunction* pFnJoinOnlineGameBySessionHandle = NULL;

    if (!pFnJoinOnlineGameBySessionHandle)
        pFnJoinOnlineGameBySessionHandle =
            (UFunction*)UObject::GObjObjects()->Data[27611];

    UOnlineGameInterface_execJoinOnlineGameBySessionHandle_Parms
        JoinOnlineGameBySessionHandle_Parms;

    this->ProcessEvent(pFnJoinOnlineGameBySessionHandle,
                       &JoinOnlineGameBySessionHandle_Parms, NULL);
};

// Function Engine.OnlineGameInterface.JoinOnlineGame
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::JoinOnlineGame() {
    static UFunction* pFnJoinOnlineGame = NULL;

    if (!pFnJoinOnlineGame)
        pFnJoinOnlineGame = (UFunction*)UObject::GObjObjects()->Data[12230];

    UOnlineGameInterface_execJoinOnlineGame_Parms JoinOnlineGame_Parms;

    this->ProcessEvent(pFnJoinOnlineGame, &JoinOnlineGame_Parms, NULL);
};

// Function Engine.OnlineGameInterface.QueryNonAdvertisedData
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::QueryNonAdvertisedData() {
    static UFunction* pFnQueryNonAdvertisedData = NULL;

    if (!pFnQueryNonAdvertisedData)
        pFnQueryNonAdvertisedData =
            (UFunction*)UObject::GObjObjects()->Data[27604];

    UOnlineGameInterface_execQueryNonAdvertisedData_Parms
        QueryNonAdvertisedData_Parms;

    this->ProcessEvent(pFnQueryNonAdvertisedData, &QueryNonAdvertisedData_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.FreeSearchResults
// [0x00024000]
// Parameters infos:

void UOnlineGameInterface::FreeSearchResults() {
    static UFunction* pFnFreeSearchResults = NULL;

    if (!pFnFreeSearchResults)
        pFnFreeSearchResults = (UFunction*)UObject::GObjObjects()->Data[27601];

    UOnlineGameInterface_execFreeSearchResults_Parms FreeSearchResults_Parms;

    this->ProcessEvent(pFnFreeSearchResults, &FreeSearchResults_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetGameSearch
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetGameSearch() {
    static UFunction* pFnGetGameSearch = NULL;

    if (!pFnGetGameSearch)
        pFnGetGameSearch = (UFunction*)UObject::GObjObjects()->Data[27599];

    UOnlineGameInterface_execGetGameSearch_Parms GetGameSearch_Parms;

    this->ProcessEvent(pFnGetGameSearch, &GetGameSearch_Parms, NULL);
};

// Function Engine.OnlineGameInterface.BindSessionGuidToSearch
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::BindSessionGuidToSearch() {
    static UFunction* pFnBindSessionGuidToSearch = NULL;

    if (!pFnBindSessionGuidToSearch)
        pFnBindSessionGuidToSearch =
            (UFunction*)UObject::GObjObjects()->Data[27594];

    UOnlineGameInterface_execBindSessionGuidToSearch_Parms
        BindSessionGuidToSearch_Parms;

    this->ProcessEvent(pFnBindSessionGuidToSearch,
                       &BindSessionGuidToSearch_Parms, NULL);
};

// Function Engine.OnlineGameInterface.BindPlatformSpecificSessionToSearch
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::BindPlatformSpecificSessionToSearch() {
    static UFunction* pFnBindPlatformSpecificSessionToSearch = NULL;

    if (!pFnBindPlatformSpecificSessionToSearch)
        pFnBindPlatformSpecificSessionToSearch =
            (UFunction*)UObject::GObjObjects()->Data[12227];

    UOnlineGameInterface_execBindPlatformSpecificSessionToSearch_Parms
        BindPlatformSpecificSessionToSearch_Parms;

    this->ProcessEvent(pFnBindPlatformSpecificSessionToSearch,
                       &BindPlatformSpecificSessionToSearch_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ReadSessionGuidBySessionName
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::ReadSessionGuidBySessionName() {
    static UFunction* pFnReadSessionGuidBySessionName = NULL;

    if (!pFnReadSessionGuidBySessionName)
        pFnReadSessionGuidBySessionName =
            (UFunction*)UObject::GObjObjects()->Data[27587];

    UOnlineGameInterface_execReadSessionGuidBySessionName_Parms
        ReadSessionGuidBySessionName_Parms;

    this->ProcessEvent(pFnReadSessionGuidBySessionName,
                       &ReadSessionGuidBySessionName_Parms, NULL);
};

// Function
// Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfoBySessionName
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::ReadPlatformSpecificSessionInfoBySessionName() {
    static UFunction* pFnReadPlatformSpecificSessionInfoBySessionName = NULL;

    if (!pFnReadPlatformSpecificSessionInfoBySessionName)
        pFnReadPlatformSpecificSessionInfoBySessionName =
            (UFunction*)UObject::GObjObjects()->Data[12567];

    UOnlineGameInterface_execReadPlatformSpecificSessionInfoBySessionName_Parms
        ReadPlatformSpecificSessionInfoBySessionName_Parms;

    this->ProcessEvent(pFnReadPlatformSpecificSessionInfoBySessionName,
                       &ReadPlatformSpecificSessionInfoBySessionName_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.ReadPlatformSpecificSessionInfo
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::ReadPlatformSpecificSessionInfo() {
    static UFunction* pFnReadPlatformSpecificSessionInfo = NULL;

    if (!pFnReadPlatformSpecificSessionInfo)
        pFnReadPlatformSpecificSessionInfo =
            (UFunction*)UObject::GObjObjects()->Data[27581];

    UOnlineGameInterface_execReadPlatformSpecificSessionInfo_Parms
        ReadPlatformSpecificSessionInfo_Parms;

    this->ProcessEvent(pFnReadPlatformSpecificSessionInfo,
                       &ReadPlatformSpecificSessionInfo_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearQosStatusChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearQosStatusChangedDelegate() {
    static UFunction* pFnClearQosStatusChangedDelegate = NULL;

    if (!pFnClearQosStatusChangedDelegate)
        pFnClearQosStatusChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27579];

    UOnlineGameInterface_execClearQosStatusChangedDelegate_Parms
        ClearQosStatusChangedDelegate_Parms;

    this->ProcessEvent(pFnClearQosStatusChangedDelegate,
                       &ClearQosStatusChangedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddQosStatusChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddQosStatusChangedDelegate() {
    static UFunction* pFnAddQosStatusChangedDelegate = NULL;

    if (!pFnAddQosStatusChangedDelegate)
        pFnAddQosStatusChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27577];

    UOnlineGameInterface_execAddQosStatusChangedDelegate_Parms
        AddQosStatusChangedDelegate_Parms;

    this->ProcessEvent(pFnAddQosStatusChangedDelegate,
                       &AddQosStatusChangedDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnQosStatusChanged
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnQosStatusChanged() {
    static UFunction* pFnOnQosStatusChanged = NULL;

    if (!pFnOnQosStatusChanged)
        pFnOnQosStatusChanged = (UFunction*)UObject::GObjObjects()->Data[27574];

    UOnlineGameInterface_execOnQosStatusChanged_Parms OnQosStatusChanged_Parms;

    this->ProcessEvent(pFnOnQosStatusChanged, &OnQosStatusChanged_Parms, NULL);
};

// Function
// Engine.OnlineGameInterface.ClearCancelFindOnlineGamesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearCancelFindOnlineGamesCompleteDelegate() {
    static UFunction* pFnClearCancelFindOnlineGamesCompleteDelegate = NULL;

    if (!pFnClearCancelFindOnlineGamesCompleteDelegate)
        pFnClearCancelFindOnlineGamesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27572];

    UOnlineGameInterface_execClearCancelFindOnlineGamesCompleteDelegate_Parms
        ClearCancelFindOnlineGamesCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearCancelFindOnlineGamesCompleteDelegate,
                       &ClearCancelFindOnlineGamesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddCancelFindOnlineGamesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddCancelFindOnlineGamesCompleteDelegate() {
    static UFunction* pFnAddCancelFindOnlineGamesCompleteDelegate = NULL;

    if (!pFnAddCancelFindOnlineGamesCompleteDelegate)
        pFnAddCancelFindOnlineGamesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27570];

    UOnlineGameInterface_execAddCancelFindOnlineGamesCompleteDelegate_Parms
        AddCancelFindOnlineGamesCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddCancelFindOnlineGamesCompleteDelegate,
                       &AddCancelFindOnlineGamesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnCancelFindOnlineGamesComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnCancelFindOnlineGamesComplete() {
    static UFunction* pFnOnCancelFindOnlineGamesComplete = NULL;

    if (!pFnOnCancelFindOnlineGamesComplete)
        pFnOnCancelFindOnlineGamesComplete =
            (UFunction*)UObject::GObjObjects()->Data[27568];

    UOnlineGameInterface_execOnCancelFindOnlineGamesComplete_Parms
        OnCancelFindOnlineGamesComplete_Parms;

    this->ProcessEvent(pFnOnCancelFindOnlineGamesComplete,
                       &OnCancelFindOnlineGamesComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.CancelFindOnlineGames
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::CancelFindOnlineGames() {
    static UFunction* pFnCancelFindOnlineGames = NULL;

    if (!pFnCancelFindOnlineGames)
        pFnCancelFindOnlineGames =
            (UFunction*)UObject::GObjObjects()->Data[27566];

    UOnlineGameInterface_execCancelFindOnlineGames_Parms
        CancelFindOnlineGames_Parms;

    this->ProcessEvent(pFnCancelFindOnlineGames, &CancelFindOnlineGames_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.ClearFindOnlineGamesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearFindOnlineGamesCompleteDelegate() {
    static UFunction* pFnClearFindOnlineGamesCompleteDelegate = NULL;

    if (!pFnClearFindOnlineGamesCompleteDelegate)
        pFnClearFindOnlineGamesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27564];

    UOnlineGameInterface_execClearFindOnlineGamesCompleteDelegate_Parms
        ClearFindOnlineGamesCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearFindOnlineGamesCompleteDelegate,
                       &ClearFindOnlineGamesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddFindOnlineGamesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddFindOnlineGamesCompleteDelegate() {
    static UFunction* pFnAddFindOnlineGamesCompleteDelegate = NULL;

    if (!pFnAddFindOnlineGamesCompleteDelegate)
        pFnAddFindOnlineGamesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27562];

    UOnlineGameInterface_execAddFindOnlineGamesCompleteDelegate_Parms
        AddFindOnlineGamesCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddFindOnlineGamesCompleteDelegate,
                       &AddFindOnlineGamesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnFindOnlineGamesComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnFindOnlineGamesComplete() {
    static UFunction* pFnOnFindOnlineGamesComplete = NULL;

    if (!pFnOnFindOnlineGamesComplete)
        pFnOnFindOnlineGamesComplete =
            (UFunction*)UObject::GObjObjects()->Data[27560];

    UOnlineGameInterface_execOnFindOnlineGamesComplete_Parms
        OnFindOnlineGamesComplete_Parms;

    this->ProcessEvent(pFnOnFindOnlineGamesComplete,
                       &OnFindOnlineGamesComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.FindOnlineGames
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::FindOnlineGames() {
    static UFunction* pFnFindOnlineGames = NULL;

    if (!pFnFindOnlineGames)
        pFnFindOnlineGames = (UFunction*)UObject::GObjObjects()->Data[27556];

    UOnlineGameInterface_execFindOnlineGames_Parms FindOnlineGames_Parms;

    this->ProcessEvent(pFnFindOnlineGames, &FindOnlineGames_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearDestroyOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearDestroyOnlineGameCompleteDelegate() {
    static UFunction* pFnClearDestroyOnlineGameCompleteDelegate = NULL;

    if (!pFnClearDestroyOnlineGameCompleteDelegate)
        pFnClearDestroyOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27554];

    UOnlineGameInterface_execClearDestroyOnlineGameCompleteDelegate_Parms
        ClearDestroyOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearDestroyOnlineGameCompleteDelegate,
                       &ClearDestroyOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddDestroyOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddDestroyOnlineGameCompleteDelegate() {
    static UFunction* pFnAddDestroyOnlineGameCompleteDelegate = NULL;

    if (!pFnAddDestroyOnlineGameCompleteDelegate)
        pFnAddDestroyOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27552];

    UOnlineGameInterface_execAddDestroyOnlineGameCompleteDelegate_Parms
        AddDestroyOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddDestroyOnlineGameCompleteDelegate,
                       &AddDestroyOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnDestroyOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnDestroyOnlineGameComplete() {
    static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

    if (!pFnOnDestroyOnlineGameComplete)
        pFnOnDestroyOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27549];

    UOnlineGameInterface_execOnDestroyOnlineGameComplete_Parms
        OnDestroyOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnDestroyOnlineGameComplete,
                       &OnDestroyOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.DestroyOnlineGame
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::DestroyOnlineGame() {
    static UFunction* pFnDestroyOnlineGame = NULL;

    if (!pFnDestroyOnlineGame)
        pFnDestroyOnlineGame = (UFunction*)UObject::GObjObjects()->Data[12275];

    UOnlineGameInterface_execDestroyOnlineGame_Parms DestroyOnlineGame_Parms;

    this->ProcessEvent(pFnDestroyOnlineGame, &DestroyOnlineGame_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetGameSettings
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::GetGameSettings() {
    static UFunction* pFnGetGameSettings = NULL;

    if (!pFnGetGameSettings)
        pFnGetGameSettings = (UFunction*)UObject::GObjObjects()->Data[7974];

    UOnlineGameInterface_execGetGameSettings_Parms GetGameSettings_Parms;

    this->ProcessEvent(pFnGetGameSettings, &GetGameSettings_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearUpdateOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearUpdateOnlineGameCompleteDelegate() {
    static UFunction* pFnClearUpdateOnlineGameCompleteDelegate = NULL;

    if (!pFnClearUpdateOnlineGameCompleteDelegate)
        pFnClearUpdateOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27545];

    UOnlineGameInterface_execClearUpdateOnlineGameCompleteDelegate_Parms
        ClearUpdateOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUpdateOnlineGameCompleteDelegate,
                       &ClearUpdateOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddUpdateOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddUpdateOnlineGameCompleteDelegate() {
    static UFunction* pFnAddUpdateOnlineGameCompleteDelegate = NULL;

    if (!pFnAddUpdateOnlineGameCompleteDelegate)
        pFnAddUpdateOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27543];

    UOnlineGameInterface_execAddUpdateOnlineGameCompleteDelegate_Parms
        AddUpdateOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUpdateOnlineGameCompleteDelegate,
                       &AddUpdateOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnUpdateOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnUpdateOnlineGameComplete() {
    static UFunction* pFnOnUpdateOnlineGameComplete = NULL;

    if (!pFnOnUpdateOnlineGameComplete)
        pFnOnUpdateOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27540];

    UOnlineGameInterface_execOnUpdateOnlineGameComplete_Parms
        OnUpdateOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnUpdateOnlineGameComplete,
                       &OnUpdateOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.UpdateOnlineGame
// [0x00024000]
// Parameters infos:

void UOnlineGameInterface::UpdateOnlineGame() {
    static UFunction* pFnUpdateOnlineGame = NULL;

    if (!pFnUpdateOnlineGame)
        pFnUpdateOnlineGame = (UFunction*)UObject::GObjObjects()->Data[27535];

    UOnlineGameInterface_execUpdateOnlineGame_Parms UpdateOnlineGame_Parms;

    this->ProcessEvent(pFnUpdateOnlineGame, &UpdateOnlineGame_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearCreateOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearCreateOnlineGameCompleteDelegate() {
    static UFunction* pFnClearCreateOnlineGameCompleteDelegate = NULL;

    if (!pFnClearCreateOnlineGameCompleteDelegate)
        pFnClearCreateOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27533];

    UOnlineGameInterface_execClearCreateOnlineGameCompleteDelegate_Parms
        ClearCreateOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearCreateOnlineGameCompleteDelegate,
                       &ClearCreateOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddCreateOnlineGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddCreateOnlineGameCompleteDelegate() {
    static UFunction* pFnAddCreateOnlineGameCompleteDelegate = NULL;

    if (!pFnAddCreateOnlineGameCompleteDelegate)
        pFnAddCreateOnlineGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27531];

    UOnlineGameInterface_execAddCreateOnlineGameCompleteDelegate_Parms
        AddCreateOnlineGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddCreateOnlineGameCompleteDelegate,
                       &AddCreateOnlineGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnCreateOnlineGameComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnCreateOnlineGameComplete() {
    static UFunction* pFnOnCreateOnlineGameComplete = NULL;

    if (!pFnOnCreateOnlineGameComplete)
        pFnOnCreateOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[27528];

    UOnlineGameInterface_execOnCreateOnlineGameComplete_Parms
        OnCreateOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnCreateOnlineGameComplete,
                       &OnCreateOnlineGameComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.CreateOnlineGame
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::CreateOnlineGame() {
    static UFunction* pFnCreateOnlineGame = NULL;

    if (!pFnCreateOnlineGame)
        pFnCreateOnlineGame = (UFunction*)UObject::GObjObjects()->Data[21789];

    UOnlineGameInterface_execCreateOnlineGame_Parms CreateOnlineGame_Parms;

    this->ProcessEvent(pFnCreateOnlineGame, &CreateOnlineGame_Parms, NULL);
};

// Function Engine.OnlineGameInterface.GetGameServerRemoteAddress
// [0x00420000]
// Parameters infos:

void UOnlineGameInterface::GetGameServerRemoteAddress() {
    static UFunction* pFnGetGameServerRemoteAddress = NULL;

    if (!pFnGetGameServerRemoteAddress)
        pFnGetGameServerRemoteAddress =
            (UFunction*)UObject::GObjObjects()->Data[27522];

    UOnlineGameInterface_execGetGameServerRemoteAddress_Parms
        GetGameServerRemoteAddress_Parms;

    this->ProcessEvent(pFnGetGameServerRemoteAddress,
                       &GetGameServerRemoteAddress_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearOnlineDelegates
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearOnlineDelegates() {
    static UFunction* pFnClearOnlineDelegates = NULL;

    if (!pFnClearOnlineDelegates)
        pFnClearOnlineDelegates =
            (UFunction*)UObject::GObjObjects()->Data[27521];

    UOnlineGameInterface_execClearOnlineDelegates_Parms
        ClearOnlineDelegates_Parms;

    this->ProcessEvent(pFnClearOnlineDelegates, &ClearOnlineDelegates_Parms,
                       NULL);
};

// Function Engine.OnlineGameInterface.RemoveSearchResultFromFavorites
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::RemoveSearchResultFromFavorites() {
    static UFunction* pFnRemoveSearchResultFromFavorites = NULL;

    if (!pFnRemoveSearchResultFromFavorites)
        pFnRemoveSearchResultFromFavorites =
            (UFunction*)UObject::GObjObjects()->Data[27518];

    UOnlineGameInterface_execRemoveSearchResultFromFavorites_Parms
        RemoveSearchResultFromFavorites_Parms;

    this->ProcessEvent(pFnRemoveSearchResultFromFavorites,
                       &RemoveSearchResultFromFavorites_Parms, NULL);
};

// Function Engine.OnlineGameInterface.ClearGetPlayerListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::ClearGetPlayerListCompleteDelegate() {
    static UFunction* pFnClearGetPlayerListCompleteDelegate = NULL;

    if (!pFnClearGetPlayerListCompleteDelegate)
        pFnClearGetPlayerListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27516];

    UOnlineGameInterface_execClearGetPlayerListCompleteDelegate_Parms
        ClearGetPlayerListCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearGetPlayerListCompleteDelegate,
                       &ClearGetPlayerListCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddGetPlayerListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddGetPlayerListCompleteDelegate() {
    static UFunction* pFnAddGetPlayerListCompleteDelegate = NULL;

    if (!pFnAddGetPlayerListCompleteDelegate)
        pFnAddGetPlayerListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27514];

    UOnlineGameInterface_execAddGetPlayerListCompleteDelegate_Parms
        AddGetPlayerListCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddGetPlayerListCompleteDelegate,
                       &AddGetPlayerListCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameInterface.OnGetPlayerListComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameInterface::OnGetPlayerListComplete() {
    static UFunction* pFnOnGetPlayerListComplete = NULL;

    if (!pFnOnGetPlayerListComplete)
        pFnOnGetPlayerListComplete =
            (UFunction*)UObject::GObjObjects()->Data[27511];

    UOnlineGameInterface_execOnGetPlayerListComplete_Parms
        OnGetPlayerListComplete_Parms;

    this->ProcessEvent(pFnOnGetPlayerListComplete,
                       &OnGetPlayerListComplete_Parms, NULL);
};

// Function Engine.OnlineGameInterface.IsSearchResultInFavoritesList
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::IsSearchResultInFavoritesList() {
    static UFunction* pFnIsSearchResultInFavoritesList = NULL;

    if (!pFnIsSearchResultInFavoritesList)
        pFnIsSearchResultInFavoritesList =
            (UFunction*)UObject::GObjObjects()->Data[27508];

    UOnlineGameInterface_execIsSearchResultInFavoritesList_Parms
        IsSearchResultInFavoritesList_Parms;

    this->ProcessEvent(pFnIsSearchResultInFavoritesList,
                       &IsSearchResultInFavoritesList_Parms, NULL);
};

// Function Engine.OnlineGameInterface.AddSearchResultToFavorites
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::AddSearchResultToFavorites() {
    static UFunction* pFnAddSearchResultToFavorites = NULL;

    if (!pFnAddSearchResultToFavorites)
        pFnAddSearchResultToFavorites =
            (UFunction*)UObject::GObjObjects()->Data[27505];

    UOnlineGameInterface_execAddSearchResultToFavorites_Parms
        AddSearchResultToFavorites_Parms;

    this->ProcessEvent(pFnAddSearchResultToFavorites,
                       &AddSearchResultToFavorites_Parms, NULL);
};

// Function Engine.OnlineGameInterface.SetMatchmakingTypeMode
// [0x00020000]
// Parameters infos:

void UOnlineGameInterface::SetMatchmakingTypeMode() {
    static UFunction* pFnSetMatchmakingTypeMode = NULL;

    if (!pFnSetMatchmakingTypeMode)
        pFnSetMatchmakingTypeMode =
            (UFunction*)UObject::GObjObjects()->Data[27503];

    UOnlineGameInterface_execSetMatchmakingTypeMode_Parms
        SetMatchmakingTypeMode_Parms;

    this->ProcessEvent(pFnSetMatchmakingTypeMode, &SetMatchmakingTypeMode_Parms,
                       NULL);
};

// Function Engine.OnlineMatchmakingStats.StopTimer
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineMatchmakingStats::StopTimer() {
    static UFunction* pFnStopTimer = NULL;

    if (!pFnStopTimer)
        pFnStopTimer = (UFunction*)UObject::GObjObjects()->Data[28009];

    UOnlineMatchmakingStats_execStopTimer_Parms StopTimer_Parms;

    pFnStopTimer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopTimer, &StopTimer_Parms, NULL);

    pFnStopTimer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineMatchmakingStats.StartTimer
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineMatchmakingStats::StartTimer() {
    static UFunction* pFnStartTimer = NULL;

    if (!pFnStartTimer)
        pFnStartTimer = (UFunction*)UObject::GObjObjects()->Data[28007];

    UOnlineMatchmakingStats_execStartTimer_Parms StartTimer_Parms;

    pFnStartTimer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStartTimer, &StartTimer_Parms, NULL);

    pFnStartTimer->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetDefaultVersionNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetDefaultVersionNumber() {
    static UFunction* pFnSetDefaultVersionNumber = NULL;

    if (!pFnSetDefaultVersionNumber)
        pFnSetDefaultVersionNumber =
            (UFunction*)UObject::GObjObjects()->Data[29034];

    UOnlinePlayerStorage_execSetDefaultVersionNumber_Parms
        SetDefaultVersionNumber_Parms;

    pFnSetDefaultVersionNumber->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDefaultVersionNumber,
                       &SetDefaultVersionNumber_Parms, NULL);

    pFnSetDefaultVersionNumber->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetVersionNumber
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetVersionNumber() {
    static UFunction* pFnGetVersionNumber = NULL;

    if (!pFnGetVersionNumber)
        pFnGetVersionNumber = (UFunction*)UObject::GObjObjects()->Data[29032];

    UOnlinePlayerStorage_execGetVersionNumber_Parms GetVersionNumber_Parms;

    pFnGetVersionNumber->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVersionNumber, &GetVersionNumber_Parms, NULL);

    pFnGetVersionNumber->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.AppendVersionToSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::AppendVersionToSettings() {
    static UFunction* pFnAppendVersionToSettings = NULL;

    if (!pFnAppendVersionToSettings)
        pFnAppendVersionToSettings =
            (UFunction*)UObject::GObjObjects()->Data[29031];

    UOnlinePlayerStorage_execAppendVersionToSettings_Parms
        AppendVersionToSettings_Parms;

    pFnAppendVersionToSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAppendVersionToSettings,
                       &AppendVersionToSettings_Parms, NULL);

    pFnAppendVersionToSettings->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetToDefaults
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::eventSetToDefaults() {
    static UFunction* pFnSetToDefaults = NULL;

    if (!pFnSetToDefaults)
        pFnSetToDefaults = (UFunction*)UObject::GObjObjects()->Data[29030];

    UOnlinePlayerStorage_eventSetToDefaults_Parms SetToDefaults_Parms;

    pFnSetToDefaults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetToDefaults, &SetToDefaults_Parms, NULL);

    pFnSetToDefaults->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.AddSettingFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::AddSettingFloat() {
    static UFunction* pFnAddSettingFloat = NULL;

    if (!pFnAddSettingFloat)
        pFnAddSettingFloat = (UFunction*)UObject::GObjObjects()->Data[29028];

    UOnlinePlayerStorage_execAddSettingFloat_Parms AddSettingFloat_Parms;

    pFnAddSettingFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddSettingFloat, &AddSettingFloat_Parms, NULL);

    pFnAddSettingFloat->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.AddSettingInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::AddSettingInt() {
    static UFunction* pFnAddSettingInt = NULL;

    if (!pFnAddSettingInt)
        pFnAddSettingInt = (UFunction*)UObject::GObjObjects()->Data[29026];

    UOnlinePlayerStorage_execAddSettingInt_Parms AddSettingInt_Parms;

    pFnAddSettingInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddSettingInt, &AddSettingInt_Parms, NULL);

    pFnAddSettingInt->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetRangedProfileSettingValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetRangedProfileSettingValue() {
    static UFunction* pFnGetRangedProfileSettingValue = NULL;

    if (!pFnGetRangedProfileSettingValue)
        pFnGetRangedProfileSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[29022];

    UOnlinePlayerStorage_execGetRangedProfileSettingValue_Parms
        GetRangedProfileSettingValue_Parms;

    pFnGetRangedProfileSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRangedProfileSettingValue,
                       &GetRangedProfileSettingValue_Parms, NULL);

    pFnGetRangedProfileSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetRangedProfileSettingValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetRangedProfileSettingValue() {
    static UFunction* pFnSetRangedProfileSettingValue = NULL;

    if (!pFnSetRangedProfileSettingValue)
        pFnSetRangedProfileSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[29018];

    UOnlinePlayerStorage_execSetRangedProfileSettingValue_Parms
        SetRangedProfileSettingValue_Parms;

    pFnSetRangedProfileSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRangedProfileSettingValue,
                       &SetRangedProfileSettingValue_Parms, NULL);

    pFnSetRangedProfileSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingRange
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingRange() {
    static UFunction* pFnGetProfileSettingRange = NULL;

    if (!pFnGetProfileSettingRange)
        pFnGetProfileSettingRange =
            (UFunction*)UObject::GObjObjects()->Data[29011];

    UOnlinePlayerStorage_execGetProfileSettingRange_Parms
        GetProfileSettingRange_Parms;

    pFnGetProfileSettingRange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingRange, &GetProfileSettingRange_Parms,
                       NULL);

    pFnGetProfileSettingRange->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingMappingIds
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingMappingIds() {
    static UFunction* pFnGetProfileSettingMappingIds = NULL;

    if (!pFnGetProfileSettingMappingIds)
        pFnGetProfileSettingMappingIds =
            (UFunction*)UObject::GObjObjects()->Data[29006];

    UOnlinePlayerStorage_execGetProfileSettingMappingIds_Parms
        GetProfileSettingMappingIds_Parms;

    pFnGetProfileSettingMappingIds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingMappingIds,
                       &GetProfileSettingMappingIds_Parms, NULL);

    pFnGetProfileSettingMappingIds->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingMappingType
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingMappingType() {
    static UFunction* pFnGetProfileSettingMappingType = NULL;

    if (!pFnGetProfileSettingMappingType)
        pFnGetProfileSettingMappingType =
            (UFunction*)UObject::GObjObjects()->Data[29002];

    UOnlinePlayerStorage_execGetProfileSettingMappingType_Parms
        GetProfileSettingMappingType_Parms;

    pFnGetProfileSettingMappingType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingMappingType,
                       &GetProfileSettingMappingType_Parms, NULL);

    pFnGetProfileSettingMappingType->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetProfileSettingValueFloat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetProfileSettingValueFloat() {
    static UFunction* pFnSetProfileSettingValueFloat = NULL;

    if (!pFnSetProfileSettingValueFloat)
        pFnSetProfileSettingValueFloat =
            (UFunction*)UObject::GObjObjects()->Data[28998];

    UOnlinePlayerStorage_execSetProfileSettingValueFloat_Parms
        SetProfileSettingValueFloat_Parms;

    pFnSetProfileSettingValueFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetProfileSettingValueFloat,
                       &SetProfileSettingValueFloat_Parms, NULL);

    pFnSetProfileSettingValueFloat->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetProfileSettingValueInt
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetProfileSettingValueInt() {
    static UFunction* pFnSetProfileSettingValueInt = NULL;

    if (!pFnSetProfileSettingValueInt)
        pFnSetProfileSettingValueInt =
            (UFunction*)UObject::GObjObjects()->Data[28994];

    UOnlinePlayerStorage_execSetProfileSettingValueInt_Parms
        SetProfileSettingValueInt_Parms;

    pFnSetProfileSettingValueInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetProfileSettingValueInt,
                       &SetProfileSettingValueInt_Parms, NULL);

    pFnSetProfileSettingValueInt->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetProfileSettingValueId
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetProfileSettingValueId() {
    static UFunction* pFnSetProfileSettingValueId = NULL;

    if (!pFnSetProfileSettingValueId)
        pFnSetProfileSettingValueId =
            (UFunction*)UObject::GObjObjects()->Data[28990];

    UOnlinePlayerStorage_execSetProfileSettingValueId_Parms
        SetProfileSettingValueId_Parms;

    pFnSetProfileSettingValueId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetProfileSettingValueId,
                       &SetProfileSettingValueId_Parms, NULL);

    pFnSetProfileSettingValueId->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValueFloat
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValueFloat() {
    static UFunction* pFnGetProfileSettingValueFloat = NULL;

    if (!pFnGetProfileSettingValueFloat)
        pFnGetProfileSettingValueFloat =
            (UFunction*)UObject::GObjObjects()->Data[28986];

    UOnlinePlayerStorage_execGetProfileSettingValueFloat_Parms
        GetProfileSettingValueFloat_Parms;

    pFnGetProfileSettingValueFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValueFloat,
                       &GetProfileSettingValueFloat_Parms, NULL);

    pFnGetProfileSettingValueFloat->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValueInt
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValueInt() {
    static UFunction* pFnGetProfileSettingValueInt = NULL;

    if (!pFnGetProfileSettingValueInt)
        pFnGetProfileSettingValueInt =
            (UFunction*)UObject::GObjObjects()->Data[28982];

    UOnlinePlayerStorage_execGetProfileSettingValueInt_Parms
        GetProfileSettingValueInt_Parms;

    pFnGetProfileSettingValueInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValueInt,
                       &GetProfileSettingValueInt_Parms, NULL);

    pFnGetProfileSettingValueInt->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValueFromListIndex
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValueFromListIndex() {
    static UFunction* pFnGetProfileSettingValueFromListIndex = NULL;

    if (!pFnGetProfileSettingValueFromListIndex)
        pFnGetProfileSettingValueFromListIndex =
            (UFunction*)UObject::GObjObjects()->Data[28977];

    UOnlinePlayerStorage_execGetProfileSettingValueFromListIndex_Parms
        GetProfileSettingValueFromListIndex_Parms;

    pFnGetProfileSettingValueFromListIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValueFromListIndex,
                       &GetProfileSettingValueFromListIndex_Parms, NULL);

    pFnGetProfileSettingValueFromListIndex->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValueId
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValueId() {
    static UFunction* pFnGetProfileSettingValueId = NULL;

    if (!pFnGetProfileSettingValueId)
        pFnGetProfileSettingValueId =
            (UFunction*)UObject::GObjObjects()->Data[28972];

    UOnlinePlayerStorage_execGetProfileSettingValueId_Parms
        GetProfileSettingValueId_Parms;

    pFnGetProfileSettingValueId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValueId,
                       &GetProfileSettingValueId_Parms, NULL);

    pFnGetProfileSettingValueId->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetProfileSettingValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetProfileSettingValue() {
    static UFunction* pFnSetProfileSettingValue = NULL;

    if (!pFnSetProfileSettingValue)
        pFnSetProfileSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[28968];

    UOnlinePlayerStorage_execSetProfileSettingValue_Parms
        SetProfileSettingValue_Parms;

    pFnSetProfileSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetProfileSettingValue, &SetProfileSettingValue_Parms,
                       NULL);

    pFnSetProfileSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.SetProfileSettingValueByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::SetProfileSettingValueByName() {
    static UFunction* pFnSetProfileSettingValueByName = NULL;

    if (!pFnSetProfileSettingValueByName)
        pFnSetProfileSettingValueByName =
            (UFunction*)UObject::GObjObjects()->Data[28964];

    UOnlinePlayerStorage_execSetProfileSettingValueByName_Parms
        SetProfileSettingValueByName_Parms;

    pFnSetProfileSettingValueByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetProfileSettingValueByName,
                       &SetProfileSettingValueByName_Parms, NULL);

    pFnSetProfileSettingValueByName->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValueByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValueByName() {
    static UFunction* pFnGetProfileSettingValueByName = NULL;

    if (!pFnGetProfileSettingValueByName)
        pFnGetProfileSettingValueByName =
            (UFunction*)UObject::GObjObjects()->Data[28960];

    UOnlinePlayerStorage_execGetProfileSettingValueByName_Parms
        GetProfileSettingValueByName_Parms;

    pFnGetProfileSettingValueByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValueByName,
                       &GetProfileSettingValueByName_Parms, NULL);

    pFnGetProfileSettingValueByName->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValues
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValues() {
    static UFunction* pFnGetProfileSettingValues = NULL;

    if (!pFnGetProfileSettingValues)
        pFnGetProfileSettingValues =
            (UFunction*)UObject::GObjObjects()->Data[28955];

    UOnlinePlayerStorage_execGetProfileSettingValues_Parms
        GetProfileSettingValues_Parms;

    pFnGetProfileSettingValues->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValues,
                       &GetProfileSettingValues_Parms, NULL);

    pFnGetProfileSettingValues->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValueName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValueName() {
    static UFunction* pFnGetProfileSettingValueName = NULL;

    if (!pFnGetProfileSettingValueName)
        pFnGetProfileSettingValueName =
            (UFunction*)UObject::GObjObjects()->Data[28952];

    UOnlinePlayerStorage_execGetProfileSettingValueName_Parms
        GetProfileSettingValueName_Parms;

    pFnGetProfileSettingValueName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValueName,
                       &GetProfileSettingValueName_Parms, NULL);

    pFnGetProfileSettingValueName->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingValue
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingValue() {
    static UFunction* pFnGetProfileSettingValue = NULL;

    if (!pFnGetProfileSettingValue)
        pFnGetProfileSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[28947];

    UOnlinePlayerStorage_execGetProfileSettingValue_Parms
        GetProfileSettingValue_Parms;

    pFnGetProfileSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingValue, &GetProfileSettingValue_Parms,
                       NULL);

    pFnGetProfileSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.IsProfileSettingIdMapped
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::IsProfileSettingIdMapped() {
    static UFunction* pFnIsProfileSettingIdMapped = NULL;

    if (!pFnIsProfileSettingIdMapped)
        pFnIsProfileSettingIdMapped =
            (UFunction*)UObject::GObjObjects()->Data[28944];

    UOnlinePlayerStorage_execIsProfileSettingIdMapped_Parms
        IsProfileSettingIdMapped_Parms;

    pFnIsProfileSettingIdMapped->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsProfileSettingIdMapped,
                       &IsProfileSettingIdMapped_Parms, NULL);

    pFnIsProfileSettingIdMapped->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.FindDefaultProfileMappingIndexByName
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::FindDefaultProfileMappingIndexByName() {
    static UFunction* pFnFindDefaultProfileMappingIndexByName = NULL;

    if (!pFnFindDefaultProfileMappingIndexByName)
        pFnFindDefaultProfileMappingIndexByName =
            (UFunction*)UObject::GObjObjects()->Data[28941];

    UOnlinePlayerStorage_execFindDefaultProfileMappingIndexByName_Parms
        FindDefaultProfileMappingIndexByName_Parms;

    pFnFindDefaultProfileMappingIndexByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindDefaultProfileMappingIndexByName,
                       &FindDefaultProfileMappingIndexByName_Parms, NULL);

    pFnFindDefaultProfileMappingIndexByName->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.FindProfileMappingIndexByName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::FindProfileMappingIndexByName() {
    static UFunction* pFnFindProfileMappingIndexByName = NULL;

    if (!pFnFindProfileMappingIndexByName)
        pFnFindProfileMappingIndexByName =
            (UFunction*)UObject::GObjObjects()->Data[28938];

    UOnlinePlayerStorage_execFindProfileMappingIndexByName_Parms
        FindProfileMappingIndexByName_Parms;

    pFnFindProfileMappingIndexByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindProfileMappingIndexByName,
                       &FindProfileMappingIndexByName_Parms, NULL);

    pFnFindProfileMappingIndexByName->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.FindProfileMappingIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::FindProfileMappingIndex() {
    static UFunction* pFnFindProfileMappingIndex = NULL;

    if (!pFnFindProfileMappingIndex)
        pFnFindProfileMappingIndex =
            (UFunction*)UObject::GObjObjects()->Data[28935];

    UOnlinePlayerStorage_execFindProfileMappingIndex_Parms
        FindProfileMappingIndex_Parms;

    pFnFindProfileMappingIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindProfileMappingIndex,
                       &FindProfileMappingIndex_Parms, NULL);

    pFnFindProfileMappingIndex->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.FindProfileSettingIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::FindProfileSettingIndex() {
    static UFunction* pFnFindProfileSettingIndex = NULL;

    if (!pFnFindProfileSettingIndex)
        pFnFindProfileSettingIndex =
            (UFunction*)UObject::GObjObjects()->Data[28932];

    UOnlinePlayerStorage_execFindProfileSettingIndex_Parms
        FindProfileSettingIndex_Parms;

    pFnFindProfileSettingIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindProfileSettingIndex,
                       &FindProfileSettingIndex_Parms, NULL);

    pFnFindProfileSettingIndex->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingColumnHeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingColumnHeader() {
    static UFunction* pFnGetProfileSettingColumnHeader = NULL;

    if (!pFnGetProfileSettingColumnHeader)
        pFnGetProfileSettingColumnHeader =
            (UFunction*)UObject::GObjObjects()->Data[28929];

    UOnlinePlayerStorage_execGetProfileSettingColumnHeader_Parms
        GetProfileSettingColumnHeader_Parms;

    pFnGetProfileSettingColumnHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingColumnHeader,
                       &GetProfileSettingColumnHeader_Parms, NULL);

    pFnGetProfileSettingColumnHeader->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingName() {
    static UFunction* pFnGetProfileSettingName = NULL;

    if (!pFnGetProfileSettingName)
        pFnGetProfileSettingName =
            (UFunction*)UObject::GObjObjects()->Data[28926];

    UOnlinePlayerStorage_execGetProfileSettingName_Parms
        GetProfileSettingName_Parms;

    pFnGetProfileSettingName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingName, &GetProfileSettingName_Parms,
                       NULL);

    pFnGetProfileSettingName->FunctionFlags |= 0x400;
};

// Function Engine.OnlinePlayerStorage.GetProfileSettingId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlinePlayerStorage::GetProfileSettingId() {
    static UFunction* pFnGetProfileSettingId = NULL;

    if (!pFnGetProfileSettingId)
        pFnGetProfileSettingId =
            (UFunction*)UObject::GObjObjects()->Data[28922];

    UOnlinePlayerStorage_execGetProfileSettingId_Parms
        GetProfileSettingId_Parms;

    pFnGetProfileSettingId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingId, &GetProfileSettingId_Parms,
                       NULL);

    pFnGetProfileSettingId->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.ExpandExtraFromProfileSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::ExpandExtraFromProfileSettings() {
    static UFunction* pFnExpandExtraFromProfileSettings = NULL;

    if (!pFnExpandExtraFromProfileSettings)
        pFnExpandExtraFromProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[29089];

    UOnlineProfileSettings_execExpandExtraFromProfileSettings_Parms
        ExpandExtraFromProfileSettings_Parms;

    pFnExpandExtraFromProfileSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnExpandExtraFromProfileSettings,
                       &ExpandExtraFromProfileSettings_Parms, NULL);

    pFnExpandExtraFromProfileSettings->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.FlattenExtraToProfileSettings
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::FlattenExtraToProfileSettings() {
    static UFunction* pFnFlattenExtraToProfileSettings = NULL;

    if (!pFnFlattenExtraToProfileSettings)
        pFnFlattenExtraToProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[29088];

    UOnlineProfileSettings_execFlattenExtraToProfileSettings_Parms
        FlattenExtraToProfileSettings_Parms;

    pFnFlattenExtraToProfileSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFlattenExtraToProfileSettings,
                       &FlattenExtraToProfileSettings_Parms, NULL);

    pFnFlattenExtraToProfileSettings->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.ModifyAvailableProfileSettings
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UOnlineProfileSettings::eventModifyAvailableProfileSettings() {
    static UFunction* pFnModifyAvailableProfileSettings = NULL;

    if (!pFnModifyAvailableProfileSettings)
        pFnModifyAvailableProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[29087];

    UOnlineProfileSettings_eventModifyAvailableProfileSettings_Parms
        ModifyAvailableProfileSettings_Parms;

    this->ProcessEvent(pFnModifyAvailableProfileSettings,
                       &ModifyAvailableProfileSettings_Parms, NULL);
};

// Function Engine.OnlineProfileSettings.AppendVersionToReadIds
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::AppendVersionToReadIds() {
    static UFunction* pFnAppendVersionToReadIds = NULL;

    if (!pFnAppendVersionToReadIds)
        pFnAppendVersionToReadIds =
            (UFunction*)UObject::GObjObjects()->Data[29086];

    UOnlineProfileSettings_execAppendVersionToReadIds_Parms
        AppendVersionToReadIds_Parms;

    pFnAppendVersionToReadIds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAppendVersionToReadIds, &AppendVersionToReadIds_Parms,
                       NULL);

    pFnAppendVersionToReadIds->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.SetToDefaults
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::eventSetToDefaults() {
    static UFunction* pFnSetToDefaults = NULL;

    if (!pFnSetToDefaults)
        pFnSetToDefaults = (UFunction*)UObject::GObjObjects()->Data[29085];

    UOnlineProfileSettings_eventSetToDefaults_Parms SetToDefaults_Parms;

    pFnSetToDefaults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetToDefaults, &SetToDefaults_Parms, NULL);

    pFnSetToDefaults->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.GetProfileSettingDefaultFloat
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::GetProfileSettingDefaultFloat() {
    static UFunction* pFnGetProfileSettingDefaultFloat = NULL;

    if (!pFnGetProfileSettingDefaultFloat)
        pFnGetProfileSettingDefaultFloat =
            (UFunction*)UObject::GObjObjects()->Data[29081];

    UOnlineProfileSettings_execGetProfileSettingDefaultFloat_Parms
        GetProfileSettingDefaultFloat_Parms;

    pFnGetProfileSettingDefaultFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingDefaultFloat,
                       &GetProfileSettingDefaultFloat_Parms, NULL);

    pFnGetProfileSettingDefaultFloat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.GetProfileSettingDefaultInt
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::GetProfileSettingDefaultInt() {
    static UFunction* pFnGetProfileSettingDefaultInt = NULL;

    if (!pFnGetProfileSettingDefaultInt)
        pFnGetProfileSettingDefaultInt =
            (UFunction*)UObject::GObjObjects()->Data[29077];

    UOnlineProfileSettings_execGetProfileSettingDefaultInt_Parms
        GetProfileSettingDefaultInt_Parms;

    pFnGetProfileSettingDefaultInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingDefaultInt,
                       &GetProfileSettingDefaultInt_Parms, NULL);

    pFnGetProfileSettingDefaultInt->FunctionFlags |= 0x400;
};

// Function Engine.OnlineProfileSettings.GetProfileSettingDefaultId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineProfileSettings::GetProfileSettingDefaultId() {
    static UFunction* pFnGetProfileSettingDefaultId = NULL;

    if (!pFnGetProfileSettingDefaultId)
        pFnGetProfileSettingDefaultId =
            (UFunction*)UObject::GObjObjects()->Data[29072];

    UOnlineProfileSettings_execGetProfileSettingDefaultId_Parms
        GetProfileSettingDefaultId_Parms;

    pFnGetProfileSettingDefaultId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProfileSettingDefaultId,
                       &GetProfileSettingDefaultId_Parms, NULL);

    pFnGetProfileSettingDefaultId->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStats.GetViewName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStats::GetViewName() {
    static UFunction* pFnGetViewName = NULL;

    if (!pFnGetViewName)
        pFnGetViewName = (UFunction*)UObject::GObjObjects()->Data[29228];

    UOnlineStats_execGetViewName_Parms GetViewName_Parms;

    pFnGetViewName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetViewName, &GetViewName_Parms, NULL);

    pFnGetViewName->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStats.GetViewId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineStats::GetViewId() {
    static UFunction* pFnGetViewId = NULL;

    if (!pFnGetViewId)
        pFnGetViewId = (UFunction*)UObject::GObjObjects()->Data[29224];

    UOnlineStats_execGetViewId_Parms GetViewId_Parms;

    pFnGetViewId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetViewId, &GetViewId_Parms, NULL);

    pFnGetViewId->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.GetRankForPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::GetRankForPlayer() {
    static UFunction* pFnGetRankForPlayer = NULL;

    if (!pFnGetRankForPlayer)
        pFnGetRankForPlayer = (UFunction*)UObject::GObjObjects()->Data[29400];

    UOnlineStatsRead_execGetRankForPlayer_Parms GetRankForPlayer_Parms;

    pFnGetRankForPlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRankForPlayer, &GetRankForPlayer_Parms, NULL);

    pFnGetRankForPlayer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.AddPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::AddPlayer() {
    static UFunction* pFnAddPlayer = NULL;

    if (!pFnAddPlayer)
        pFnAddPlayer = (UFunction*)UObject::GObjObjects()->Data[29397];

    UOnlineStatsRead_execAddPlayer_Parms AddPlayer_Parms;

    pFnAddPlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddPlayer, &AddPlayer_Parms, NULL);

    pFnAddPlayer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.IsStatZero
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::IsStatZero() {
    static UFunction* pFnIsStatZero = NULL;

    if (!pFnIsStatZero)
        pFnIsStatZero = (UFunction*)UObject::GObjObjects()->Data[29393];

    UOnlineStatsRead_execIsStatZero_Parms IsStatZero_Parms;

    pFnIsStatZero->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsStatZero, &IsStatZero_Parms, NULL);

    pFnIsStatZero->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.GetStatValueForPlayerAsString
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::GetStatValueForPlayerAsString() {
    static UFunction* pFnGetStatValueForPlayerAsString = NULL;

    if (!pFnGetStatValueForPlayerAsString)
        pFnGetStatValueForPlayerAsString =
            (UFunction*)UObject::GObjObjects()->Data[29388];

    UOnlineStatsRead_execGetStatValueForPlayerAsString_Parms
        GetStatValueForPlayerAsString_Parms;

    pFnGetStatValueForPlayerAsString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStatValueForPlayerAsString,
                       &GetStatValueForPlayerAsString_Parms, NULL);

    pFnGetStatValueForPlayerAsString->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.SetFloatStatValueForPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::SetFloatStatValueForPlayer() {
    static UFunction* pFnSetFloatStatValueForPlayer = NULL;

    if (!pFnSetFloatStatValueForPlayer)
        pFnSetFloatStatValueForPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29383];

    UOnlineStatsRead_execSetFloatStatValueForPlayer_Parms
        SetFloatStatValueForPlayer_Parms;

    pFnSetFloatStatValueForPlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFloatStatValueForPlayer,
                       &SetFloatStatValueForPlayer_Parms, NULL);

    pFnSetFloatStatValueForPlayer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.GetFloatStatValueForPlayer
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::GetFloatStatValueForPlayer() {
    static UFunction* pFnGetFloatStatValueForPlayer = NULL;

    if (!pFnGetFloatStatValueForPlayer)
        pFnGetFloatStatValueForPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29378];

    UOnlineStatsRead_execGetFloatStatValueForPlayer_Parms
        GetFloatStatValueForPlayer_Parms;

    pFnGetFloatStatValueForPlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFloatStatValueForPlayer,
                       &GetFloatStatValueForPlayer_Parms, NULL);

    pFnGetFloatStatValueForPlayer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.SetIntStatValueForPlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::SetIntStatValueForPlayer() {
    static UFunction* pFnSetIntStatValueForPlayer = NULL;

    if (!pFnSetIntStatValueForPlayer)
        pFnSetIntStatValueForPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29373];

    UOnlineStatsRead_execSetIntStatValueForPlayer_Parms
        SetIntStatValueForPlayer_Parms;

    pFnSetIntStatValueForPlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetIntStatValueForPlayer,
                       &SetIntStatValueForPlayer_Parms, NULL);

    pFnSetIntStatValueForPlayer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.GetIntStatValueForPlayer
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsRead::GetIntStatValueForPlayer() {
    static UFunction* pFnGetIntStatValueForPlayer = NULL;

    if (!pFnGetIntStatValueForPlayer)
        pFnGetIntStatValueForPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29368];

    UOnlineStatsRead_execGetIntStatValueForPlayer_Parms
        GetIntStatValueForPlayer_Parms;

    pFnGetIntStatValueForPlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetIntStatValueForPlayer,
                       &GetIntStatValueForPlayer_Parms, NULL);

    pFnGetIntStatValueForPlayer->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsRead.OnReadComplete
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UOnlineStatsRead::eventOnReadComplete() {
    static UFunction* pFnOnReadComplete = NULL;

    if (!pFnOnReadComplete)
        pFnOnReadComplete = (UFunction*)UObject::GObjObjects()->Data[29367];

    UOnlineStatsRead_eventOnReadComplete_Parms OnReadComplete_Parms;

    this->ProcessEvent(pFnOnReadComplete, &OnReadComplete_Parms, NULL);
};

// Function Engine.OnlineStatsWrite.DecrementIntStat
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::DecrementIntStat() {
    static UFunction* pFnDecrementIntStat = NULL;

    if (!pFnDecrementIntStat)
        pFnDecrementIntStat = (UFunction*)UObject::GObjObjects()->Data[29436];

    UOnlineStatsWrite_execDecrementIntStat_Parms DecrementIntStat_Parms;

    pFnDecrementIntStat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDecrementIntStat, &DecrementIntStat_Parms, NULL);

    pFnDecrementIntStat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.DecrementFloatStat
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::DecrementFloatStat() {
    static UFunction* pFnDecrementFloatStat = NULL;

    if (!pFnDecrementFloatStat)
        pFnDecrementFloatStat = (UFunction*)UObject::GObjObjects()->Data[29433];

    UOnlineStatsWrite_execDecrementFloatStat_Parms DecrementFloatStat_Parms;

    pFnDecrementFloatStat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDecrementFloatStat, &DecrementFloatStat_Parms, NULL);

    pFnDecrementFloatStat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.IncrementIntStat
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::IncrementIntStat() {
    static UFunction* pFnIncrementIntStat = NULL;

    if (!pFnIncrementIntStat)
        pFnIncrementIntStat = (UFunction*)UObject::GObjObjects()->Data[29430];

    UOnlineStatsWrite_execIncrementIntStat_Parms IncrementIntStat_Parms;

    pFnIncrementIntStat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIncrementIntStat, &IncrementIntStat_Parms, NULL);

    pFnIncrementIntStat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.IncrementFloatStat
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::IncrementFloatStat() {
    static UFunction* pFnIncrementFloatStat = NULL;

    if (!pFnIncrementFloatStat)
        pFnIncrementFloatStat = (UFunction*)UObject::GObjObjects()->Data[29427];

    UOnlineStatsWrite_execIncrementFloatStat_Parms IncrementFloatStat_Parms;

    pFnIncrementFloatStat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIncrementFloatStat, &IncrementFloatStat_Parms, NULL);

    pFnIncrementFloatStat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.SetIntStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::SetIntStat() {
    static UFunction* pFnSetIntStat = NULL;

    if (!pFnSetIntStat)
        pFnSetIntStat = (UFunction*)UObject::GObjObjects()->Data[29424];

    UOnlineStatsWrite_execSetIntStat_Parms SetIntStat_Parms;

    pFnSetIntStat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetIntStat, &SetIntStat_Parms, NULL);

    pFnSetIntStat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.SetFloatStat
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::SetFloatStat() {
    static UFunction* pFnSetFloatStat = NULL;

    if (!pFnSetFloatStat)
        pFnSetFloatStat = (UFunction*)UObject::GObjObjects()->Data[29421];

    UOnlineStatsWrite_execSetFloatStat_Parms SetFloatStat_Parms;

    pFnSetFloatStat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFloatStat, &SetFloatStat_Parms, NULL);

    pFnSetFloatStat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.GetStatName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::GetStatName() {
    static UFunction* pFnGetStatName = NULL;

    if (!pFnGetStatName)
        pFnGetStatName = (UFunction*)UObject::GObjObjects()->Data[29418];

    UOnlineStatsWrite_execGetStatName_Parms GetStatName_Parms;

    pFnGetStatName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStatName, &GetStatName_Parms, NULL);

    pFnGetStatName->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.GetStatId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineStatsWrite::GetStatId() {
    static UFunction* pFnGetStatId = NULL;

    if (!pFnGetStatId)
        pFnGetStatId = (UFunction*)UObject::GObjObjects()->Data[29414];

    UOnlineStatsWrite_execGetStatId_Parms GetStatId_Parms;

    pFnGetStatId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStatId, &GetStatId_Parms, NULL);

    pFnGetStatId->FunctionFlags |= 0x400;
};

// Function Engine.OnlineStatsWrite.OnStatsWriteComplete
// [0x00120000]
// Parameters infos:

void UOnlineStatsWrite::OnStatsWriteComplete() {
    static UFunction* pFnOnStatsWriteComplete = NULL;

    if (!pFnOnStatsWriteComplete)
        pFnOnStatsWriteComplete =
            (UFunction*)UObject::GObjObjects()->Data[29413];

    UOnlineStatsWrite_execOnStatsWriteComplete_Parms OnStatsWriteComplete_Parms;

    this->ProcessEvent(pFnOnStatsWriteComplete, &OnStatsWriteComplete_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetCachedProfile
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::SetCachedProfile() {
    static UFunction* pFnSetCachedProfile = NULL;

    if (!pFnSetCachedProfile)
        pFnSetCachedProfile = (UFunction*)UObject::GObjObjects()->Data[7009];

    UOnlineSubsystem_execSetCachedProfile_Parms SetCachedProfile_Parms;

    this->ProcessEvent(pFnSetCachedProfile, &SetCachedProfile_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ActivateGamepad
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::ActivateGamepad() {
    static UFunction* pFnActivateGamepad = NULL;

    if (!pFnActivateGamepad)
        pFnActivateGamepad = (UFunction*)UObject::GObjObjects()->Data[7010];

    UOnlineSubsystem_execActivateGamepad_Parms ActivateGamepad_Parms;

    this->ProcessEvent(pFnActivateGamepad, &ActivateGamepad_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ManuallyActivateUser
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::ManuallyActivateUser() {
    static UFunction* pFnManuallyActivateUser = NULL;

    if (!pFnManuallyActivateUser)
        pFnManuallyActivateUser =
            (UFunction*)UObject::GObjObjects()->Data[7012];

    UOnlineSubsystem_execManuallyActivateUser_Parms ManuallyActivateUser_Parms;

    this->ProcessEvent(pFnManuallyActivateUser, &ManuallyActivateUser_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.HasChatRestriction
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::HasChatRestriction() {
    static UFunction* pFnHasChatRestriction = NULL;

    if (!pFnHasChatRestriction)
        pFnHasChatRestriction = (UFunction*)UObject::GObjObjects()->Data[7014];

    UOnlineSubsystem_execHasChatRestriction_Parms HasChatRestriction_Parms;

    pFnHasChatRestriction->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasChatRestriction, &HasChatRestriction_Parms, NULL);

    pFnHasChatRestriction->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.CancelRegionPing
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::CancelRegionPing() {
    static UFunction* pFnCancelRegionPing = NULL;

    if (!pFnCancelRegionPing)
        pFnCancelRegionPing = (UFunction*)UObject::GObjObjects()->Data[7019];

    UOnlineSubsystem_execCancelRegionPing_Parms CancelRegionPing_Parms;

    this->ProcessEvent(pFnCancelRegionPing, &CancelRegionPing_Parms, NULL);
};

// Function Engine.OnlineSubsystem.StartRegionPingAndSelectDefaultRegion
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::StartRegionPingAndSelectDefaultRegion() {
    static UFunction* pFnStartRegionPingAndSelectDefaultRegion = NULL;

    if (!pFnStartRegionPingAndSelectDefaultRegion)
        pFnStartRegionPingAndSelectDefaultRegion =
            (UFunction*)UObject::GObjObjects()->Data[7022];

    UOnlineSubsystem_execStartRegionPingAndSelectDefaultRegion_Parms
        StartRegionPingAndSelectDefaultRegion_Parms;

    this->ProcessEvent(pFnStartRegionPingAndSelectDefaultRegion,
                       &StartRegionPingAndSelectDefaultRegion_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetSharedPassword
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::SetSharedPassword() {
    static UFunction* pFnSetSharedPassword = NULL;

    if (!pFnSetSharedPassword)
        pFnSetSharedPassword = (UFunction*)UObject::GObjObjects()->Data[7023];

    UOnlineSubsystem_execSetSharedPassword_Parms SetSharedPassword_Parms;

    this->ProcessEvent(pFnSetSharedPassword, &SetSharedPassword_Parms, NULL);
};

// Function Engine.OnlineSubsystem.CheckPlayerGroup
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::CheckPlayerGroup() {
    static UFunction* pFnCheckPlayerGroup = NULL;

    if (!pFnCheckPlayerGroup)
        pFnCheckPlayerGroup = (UFunction*)UObject::GObjObjects()->Data[7026];

    UOnlineSubsystem_execCheckPlayerGroup_Parms CheckPlayerGroup_Parms;

    pFnCheckPlayerGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckPlayerGroup, &CheckPlayerGroup_Parms, NULL);

    pFnCheckPlayerGroup->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.GetPlayerGroups
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::GetPlayerGroups() {
    static UFunction* pFnGetPlayerGroups = NULL;

    if (!pFnGetPlayerGroups)
        pFnGetPlayerGroups = (UFunction*)UObject::GObjObjects()->Data[7028];

    UOnlineSubsystem_execGetPlayerGroups_Parms GetPlayerGroups_Parms;

    pFnGetPlayerGroups->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerGroups, &GetPlayerGroups_Parms, NULL);

    pFnGetPlayerGroups->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.GetUGCInterface
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::GetUGCInterface() {
    static UFunction* pFnGetUGCInterface = NULL;

    if (!pFnGetUGCInterface)
        pFnGetUGCInterface = (UFunction*)UObject::GObjObjects()->Data[7031];

    UOnlineSubsystem_execGetUGCInterface_Parms GetUGCInterface_Parms;

    pFnGetUGCInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUGCInterface, &GetUGCInterface_Parms, NULL);

    pFnGetUGCInterface->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.GetNATType
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::GetNATType() {
    static UFunction* pFnGetNATType = NULL;

    if (!pFnGetNATType)
        pFnGetNATType = (UFunction*)UObject::GObjObjects()->Data[7034];

    UOnlineSubsystem_execGetNATType_Parms GetNATType_Parms;

    this->ProcessEvent(pFnGetNATType, &GetNATType_Parms, NULL);
};

// Function Engine.OnlineSubsystem.GetLoginStatus
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::GetLoginStatus() {
    static UFunction* pFnGetLoginStatus = NULL;

    if (!pFnGetLoginStatus)
        pFnGetLoginStatus = (UFunction*)UObject::GObjObjects()->Data[7036];

    UOnlineSubsystem_execGetLoginStatus_Parms GetLoginStatus_Parms;

    this->ProcessEvent(pFnGetLoginStatus, &GetLoginStatus_Parms, NULL);
};

// Function Engine.OnlineSubsystem.UniqueNetIdToPlayerName
// [0x00420000]
// Parameters infos:

void UOnlineSubsystem::UniqueNetIdToPlayerName() {
    static UFunction* pFnUniqueNetIdToPlayerName = NULL;

    if (!pFnUniqueNetIdToPlayerName)
        pFnUniqueNetIdToPlayerName =
            (UFunction*)UObject::GObjObjects()->Data[7040];

    UOnlineSubsystem_execUniqueNetIdToPlayerName_Parms
        UniqueNetIdToPlayerName_Parms;

    this->ProcessEvent(pFnUniqueNetIdToPlayerName,
                       &UniqueNetIdToPlayerName_Parms, NULL);
};

// Function Engine.OnlineSubsystem.UniqueNetIdToInt64
// [0x00420000]
// Parameters infos:

void UOnlineSubsystem::UniqueNetIdToInt64() {
    static UFunction* pFnUniqueNetIdToInt64 = NULL;

    if (!pFnUniqueNetIdToInt64)
        pFnUniqueNetIdToInt64 = (UFunction*)UObject::GObjObjects()->Data[7045];

    UOnlineSubsystem_execUniqueNetIdToInt64_Parms UniqueNetIdToInt64_Parms;

    this->ProcessEvent(pFnUniqueNetIdToInt64, &UniqueNetIdToInt64_Parms, NULL);
};

// Function Engine.OnlineSubsystem.Int64ToUniqueNetId
// [0x00420000]
// Parameters infos:

void UOnlineSubsystem::Int64ToUniqueNetId() {
    static UFunction* pFnInt64ToUniqueNetId = NULL;

    if (!pFnInt64ToUniqueNetId)
        pFnInt64ToUniqueNetId = (UFunction*)UObject::GObjObjects()->Data[7048];

    UOnlineSubsystem_execInt64ToUniqueNetId_Parms Int64ToUniqueNetId_Parms;

    this->ProcessEvent(pFnInt64ToUniqueNetId, &Int64ToUniqueNetId_Parms, NULL);
};

// Function Engine.OnlineSubsystem.GetUniquePlayerId
// [0x00420000]
// Parameters infos:

void UOnlineSubsystem::GetUniquePlayerId() {
    static UFunction* pFnGetUniquePlayerId = NULL;

    if (!pFnGetUniquePlayerId)
        pFnGetUniquePlayerId = (UFunction*)UObject::GObjObjects()->Data[7051];

    UOnlineSubsystem_execGetUniquePlayerId_Parms GetUniquePlayerId_Parms;

    this->ProcessEvent(pFnGetUniquePlayerId, &GetUniquePlayerId_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ShowVoIPConfigUI
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::ShowVoIPConfigUI() {
    static UFunction* pFnShowVoIPConfigUI = NULL;

    if (!pFnShowVoIPConfigUI)
        pFnShowVoIPConfigUI = (UFunction*)UObject::GObjObjects()->Data[7055];

    UOnlineSubsystem_execShowVoIPConfigUI_Parms ShowVoIPConfigUI_Parms;

    this->ProcessEvent(pFnShowVoIPConfigUI, &ShowVoIPConfigUI_Parms, NULL);
};

// Function Engine.OnlineSubsystem.RemoveFriend
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::RemoveFriend() {
    static UFunction* pFnRemoveFriend = NULL;

    if (!pFnRemoveFriend)
        pFnRemoveFriend = (UFunction*)UObject::GObjObjects()->Data[7059];

    UOnlineSubsystem_execRemoveFriend_Parms RemoveFriend_Parms;

    this->ProcessEvent(pFnRemoveFriend, &RemoveFriend_Parms, NULL);
};

// Function Engine.OnlineSubsystem.AddFriend
// [0x00024000]
// Parameters infos:

void UOnlineSubsystem::AddFriend() {
    static UFunction* pFnAddFriend = NULL;

    if (!pFnAddFriend)
        pFnAddFriend = (UFunction*)UObject::GObjObjects()->Data[7060];

    UOnlineSubsystem_execAddFriend_Parms AddFriend_Parms;

    this->ProcessEvent(pFnAddFriend, &AddFriend_Parms, NULL);
};

// Function Engine.OnlineSubsystem.IsFriend
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::IsFriend() {
    static UFunction* pFnIsFriend = NULL;

    if (!pFnIsFriend)
        pFnIsFriend = (UFunction*)UObject::GObjObjects()->Data[7064];

    UOnlineSubsystem_execIsFriend_Parms IsFriend_Parms;

    this->ProcessEvent(pFnIsFriend, &IsFriend_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ResetStats
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::ResetStats() {
    static UFunction* pFnResetStats = NULL;

    if (!pFnResetStats)
        pFnResetStats = (UFunction*)UObject::GObjObjects()->Data[7069];

    UOnlineSubsystem_execResetStats_Parms ResetStats_Parms;

    this->ProcessEvent(pFnResetStats, &ResetStats_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ReadOnlineAvatarByName
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::ReadOnlineAvatarByName() {
    static UFunction* pFnReadOnlineAvatarByName = NULL;

    if (!pFnReadOnlineAvatarByName)
        pFnReadOnlineAvatarByName =
            (UFunction*)UObject::GObjObjects()->Data[7073];

    UOnlineSubsystem_execReadOnlineAvatarByName_Parms
        ReadOnlineAvatarByName_Parms;

    this->ProcessEvent(pFnReadOnlineAvatarByName, &ReadOnlineAvatarByName_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.ReadOnlineAvatar
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::ReadOnlineAvatar() {
    static UFunction* pFnReadOnlineAvatar = NULL;

    if (!pFnReadOnlineAvatar)
        pFnReadOnlineAvatar = (UFunction*)UObject::GObjObjects()->Data[7076];

    UOnlineSubsystem_execReadOnlineAvatar_Parms ReadOnlineAvatar_Parms;

    this->ProcessEvent(pFnReadOnlineAvatar, &ReadOnlineAvatar_Parms, NULL);
};

// Function Engine.OnlineSubsystem.OnReadOnlineAvatarByNameComplete
// [0x00120000]
// Parameters infos:

void UOnlineSubsystem::OnReadOnlineAvatarByNameComplete() {
    static UFunction* pFnOnReadOnlineAvatarByNameComplete = NULL;

    if (!pFnOnReadOnlineAvatarByNameComplete)
        pFnOnReadOnlineAvatarByNameComplete =
            (UFunction*)UObject::GObjObjects()->Data[7080];

    UOnlineSubsystem_execOnReadOnlineAvatarByNameComplete_Parms
        OnReadOnlineAvatarByNameComplete_Parms;

    this->ProcessEvent(pFnOnReadOnlineAvatarByNameComplete,
                       &OnReadOnlineAvatarByNameComplete_Parms, NULL);
};

// Function Engine.OnlineSubsystem.OnReadOnlineAvatarComplete
// [0x00120000]
// Parameters infos:

void UOnlineSubsystem::OnReadOnlineAvatarComplete() {
    static UFunction* pFnOnReadOnlineAvatarComplete = NULL;

    if (!pFnOnReadOnlineAvatarComplete)
        pFnOnReadOnlineAvatarComplete =
            (UFunction*)UObject::GObjObjects()->Data[7084];

    UOnlineSubsystem_execOnReadOnlineAvatarComplete_Parms
        OnReadOnlineAvatarComplete_Parms;

    this->ProcessEvent(pFnOnReadOnlineAvatarComplete,
                       &OnReadOnlineAvatarComplete_Parms, NULL);
};

// Function Engine.OnlineSubsystem.RegisterLocalTalker
// [0x00024000]
// Parameters infos:

void UOnlineSubsystem::RegisterLocalTalker() {
    static UFunction* pFnRegisterLocalTalker = NULL;

    if (!pFnRegisterLocalTalker)
        pFnRegisterLocalTalker = (UFunction*)UObject::GObjObjects()->Data[7087];

    UOnlineSubsystem_execRegisterLocalTalker_Parms RegisterLocalTalker_Parms;

    this->ProcessEvent(pFnRegisterLocalTalker, &RegisterLocalTalker_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.GetLobbyInterface
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::GetLobbyInterface() {
    static UFunction* pFnGetLobbyInterface = NULL;

    if (!pFnGetLobbyInterface)
        pFnGetLobbyInterface = (UFunction*)UObject::GObjObjects()->Data[7090];

    UOnlineSubsystem_execGetLobbyInterface_Parms GetLobbyInterface_Parms;

    this->ProcessEvent(pFnGetLobbyInterface, &GetLobbyInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetDebugSpewLevel
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::SetDebugSpewLevel() {
    static UFunction* pFnSetDebugSpewLevel = NULL;

    if (!pFnSetDebugSpewLevel)
        pFnSetDebugSpewLevel = (UFunction*)UObject::GObjObjects()->Data[7094];

    UOnlineSubsystem_execSetDebugSpewLevel_Parms SetDebugSpewLevel_Parms;

    this->ProcessEvent(pFnSetDebugSpewLevel, &SetDebugSpewLevel_Parms, NULL);
};

// Function Engine.OnlineSubsystem.DumpVoiceRegistration
// [0x00020000]
// Parameters infos:

void UOnlineSubsystem::DumpVoiceRegistration() {
    static UFunction* pFnDumpVoiceRegistration = NULL;

    if (!pFnDumpVoiceRegistration)
        pFnDumpVoiceRegistration =
            (UFunction*)UObject::GObjObjects()->Data[7096];

    UOnlineSubsystem_execDumpVoiceRegistration_Parms
        DumpVoiceRegistration_Parms;

    this->ProcessEvent(pFnDumpVoiceRegistration, &DumpVoiceRegistration_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.DumpNetIds
// [0x00C22002]
// Parameters infos:

void UOnlineSubsystem::DumpNetIds() {
    static UFunction* pFnDumpNetIds = NULL;

    if (!pFnDumpNetIds)
        pFnDumpNetIds = (UFunction*)UObject::GObjObjects()->Data[7098];

    UOnlineSubsystem_execDumpNetIds_Parms DumpNetIds_Parms;

    this->ProcessEvent(pFnDumpNetIds, &DumpNetIds_Parms, NULL);
};

// Function Engine.OnlineSubsystem.DumpSessionState
// [0x00820002]
// Parameters infos:

void UOnlineSubsystem::DumpSessionState() {
    static UFunction* pFnDumpSessionState = NULL;

    if (!pFnDumpSessionState)
        pFnDumpSessionState = (UFunction*)UObject::GObjObjects()->Data[7099];

    UOnlineSubsystem_execDumpSessionState_Parms DumpSessionState_Parms;

    this->ProcessEvent(pFnDumpSessionState, &DumpSessionState_Parms, NULL);
};

// Function Engine.OnlineSubsystem.DumpGameSettings
// [0x00022002]
// Parameters infos:

void UOnlineSubsystem::DumpGameSettings() {
    static UFunction* pFnDumpGameSettings = NULL;

    if (!pFnDumpGameSettings)
        pFnDumpGameSettings = (UFunction*)UObject::GObjObjects()->Data[7106];

    UOnlineSubsystem_execDumpGameSettings_Parms DumpGameSettings_Parms;

    this->ProcessEvent(pFnDumpGameSettings, &DumpGameSettings_Parms, NULL);
};

// Function Engine.OnlineSubsystem.IsInSession
// [0x00020002]
// Parameters infos:

void UOnlineSubsystem::IsInSession() {
    static UFunction* pFnIsInSession = NULL;

    if (!pFnIsInSession)
        pFnIsInSession = (UFunction*)UObject::GObjObjects()->Data[7120];

    UOnlineSubsystem_execIsInSession_Parms IsInSession_Parms;

    this->ProcessEvent(pFnIsInSession, &IsInSession_Parms, NULL);
};

// Function Engine.OnlineSubsystem.GetNumSupportedLogins
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::GetNumSupportedLogins() {
    static UFunction* pFnGetNumSupportedLogins = NULL;

    if (!pFnGetNumSupportedLogins)
        pFnGetNumSupportedLogins =
            (UFunction*)UObject::GObjObjects()->Data[7142];

    UOnlineSubsystem_execGetNumSupportedLogins_Parms
        GetNumSupportedLogins_Parms;

    pFnGetNumSupportedLogins->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumSupportedLogins, &GetNumSupportedLogins_Parms,
                       NULL);

    pFnGetNumSupportedLogins->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.GetBuildUniqueId
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::GetBuildUniqueId() {
    static UFunction* pFnGetBuildUniqueId = NULL;

    if (!pFnGetBuildUniqueId)
        pFnGetBuildUniqueId = (UFunction*)UObject::GObjObjects()->Data[7146];

    UOnlineSubsystem_execGetBuildUniqueId_Parms GetBuildUniqueId_Parms;

    pFnGetBuildUniqueId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBuildUniqueId, &GetBuildUniqueId_Parms, NULL);

    pFnGetBuildUniqueId->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.GetPlayerUniqueNetIdFromIndex
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventGetPlayerUniqueNetIdFromIndex() {
    static UFunction* pFnGetPlayerUniqueNetIdFromIndex = NULL;

    if (!pFnGetPlayerUniqueNetIdFromIndex)
        pFnGetPlayerUniqueNetIdFromIndex =
            (UFunction*)UObject::GObjObjects()->Data[7148];

    UOnlineSubsystem_eventGetPlayerUniqueNetIdFromIndex_Parms
        GetPlayerUniqueNetIdFromIndex_Parms;

    this->ProcessEvent(pFnGetPlayerUniqueNetIdFromIndex,
                       &GetPlayerUniqueNetIdFromIndex_Parms, NULL);
};

// Function Engine.OnlineSubsystem.StringToUniqueNetIdDec
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::StringToUniqueNetIdDec() {
    static UFunction* pFnStringToUniqueNetIdDec = NULL;

    if (!pFnStringToUniqueNetIdDec)
        pFnStringToUniqueNetIdDec =
            (UFunction*)UObject::GObjObjects()->Data[7150];

    UOnlineSubsystem_execStringToUniqueNetIdDec_Parms
        StringToUniqueNetIdDec_Parms;

    pFnStringToUniqueNetIdDec->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStringToUniqueNetIdDec, &StringToUniqueNetIdDec_Parms,
                       NULL);

    pFnStringToUniqueNetIdDec->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.StringToUniqueNetId
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::StringToUniqueNetId() {
    static UFunction* pFnStringToUniqueNetId = NULL;

    if (!pFnStringToUniqueNetId)
        pFnStringToUniqueNetId = (UFunction*)UObject::GObjObjects()->Data[7159];

    UOnlineSubsystem_execStringToUniqueNetId_Parms StringToUniqueNetId_Parms;

    pFnStringToUniqueNetId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStringToUniqueNetId, &StringToUniqueNetId_Parms,
                       NULL);

    pFnStringToUniqueNetId->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.UniqueNetIdToString
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::UniqueNetIdToString() {
    static UFunction* pFnUniqueNetIdToString = NULL;

    if (!pFnUniqueNetIdToString)
        pFnUniqueNetIdToString = (UFunction*)UObject::GObjObjects()->Data[7104];

    UOnlineSubsystem_execUniqueNetIdToString_Parms UniqueNetIdToString_Parms;

    pFnUniqueNetIdToString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUniqueNetIdToString, &UniqueNetIdToString_Parms,
                       NULL);

    pFnUniqueNetIdToString->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.RaiseEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::eventRaiseEvent() {
    static UFunction* pFnRaiseEvent = NULL;

    if (!pFnRaiseEvent)
        pFnRaiseEvent = (UFunction*)UObject::GObjObjects()->Data[7166];

    UOnlineSubsystem_eventRaiseEvent_Parms RaiseEvent_Parms;

    pFnRaiseEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRaiseEvent, &RaiseEvent_Parms, NULL);

    pFnRaiseEvent->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.GetNamedInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventGetNamedInterface() {
    static UFunction* pFnGetNamedInterface = NULL;

    if (!pFnGetNamedInterface)
        pFnGetNamedInterface = (UFunction*)UObject::GObjObjects()->Data[7170];

    UOnlineSubsystem_eventGetNamedInterface_Parms GetNamedInterface_Parms;

    this->ProcessEvent(pFnGetNamedInterface, &GetNamedInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetNamedInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetNamedInterface() {
    static UFunction* pFnSetNamedInterface = NULL;

    if (!pFnSetNamedInterface)
        pFnSetNamedInterface = (UFunction*)UObject::GObjObjects()->Data[7175];

    UOnlineSubsystem_eventSetNamedInterface_Parms SetNamedInterface_Parms;

    this->ProcessEvent(pFnSetNamedInterface, &SetNamedInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetCommunityContentInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetCommunityContentInterface() {
    static UFunction* pFnSetCommunityContentInterface = NULL;

    if (!pFnSetCommunityContentInterface)
        pFnSetCommunityContentInterface =
            (UFunction*)UObject::GObjObjects()->Data[7182];

    UOnlineSubsystem_eventSetCommunityContentInterface_Parms
        SetCommunityContentInterface_Parms;

    this->ProcessEvent(pFnSetCommunityContentInterface,
                       &SetCommunityContentInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetGameDVRInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetGameDVRInterface() {
    static UFunction* pFnSetGameDVRInterface = NULL;

    if (!pFnSetGameDVRInterface)
        pFnSetGameDVRInterface = (UFunction*)UObject::GObjObjects()->Data[7187];

    UOnlineSubsystem_eventSetGameDVRInterface_Parms SetGameDVRInterface_Parms;

    this->ProcessEvent(pFnSetGameDVRInterface, &SetGameDVRInterface_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetSharedCloudInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetSharedCloudInterface() {
    static UFunction* pFnSetSharedCloudInterface = NULL;

    if (!pFnSetSharedCloudInterface)
        pFnSetSharedCloudInterface =
            (UFunction*)UObject::GObjObjects()->Data[7192];

    UOnlineSubsystem_eventSetSharedCloudInterface_Parms
        SetSharedCloudInterface_Parms;

    this->ProcessEvent(pFnSetSharedCloudInterface,
                       &SetSharedCloudInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetUserCloudInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetUserCloudInterface() {
    static UFunction* pFnSetUserCloudInterface = NULL;

    if (!pFnSetUserCloudInterface)
        pFnSetUserCloudInterface =
            (UFunction*)UObject::GObjObjects()->Data[7197];

    UOnlineSubsystem_eventSetUserCloudInterface_Parms
        SetUserCloudInterface_Parms;

    this->ProcessEvent(pFnSetUserCloudInterface, &SetUserCloudInterface_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetAuthInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetAuthInterface() {
    static UFunction* pFnSetAuthInterface = NULL;

    if (!pFnSetAuthInterface)
        pFnSetAuthInterface = (UFunction*)UObject::GObjObjects()->Data[7202];

    UOnlineSubsystem_eventSetAuthInterface_Parms SetAuthInterface_Parms;

    this->ProcessEvent(pFnSetAuthInterface, &SetAuthInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetSocialInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetSocialInterface() {
    static UFunction* pFnSetSocialInterface = NULL;

    if (!pFnSetSocialInterface)
        pFnSetSocialInterface = (UFunction*)UObject::GObjObjects()->Data[7207];

    UOnlineSubsystem_eventSetSocialInterface_Parms SetSocialInterface_Parms;

    this->ProcessEvent(pFnSetSocialInterface, &SetSocialInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetTitleFileCacheInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetTitleFileCacheInterface() {
    static UFunction* pFnSetTitleFileCacheInterface = NULL;

    if (!pFnSetTitleFileCacheInterface)
        pFnSetTitleFileCacheInterface =
            (UFunction*)UObject::GObjObjects()->Data[7211];

    UOnlineSubsystem_eventSetTitleFileCacheInterface_Parms
        SetTitleFileCacheInterface_Parms;

    this->ProcessEvent(pFnSetTitleFileCacheInterface,
                       &SetTitleFileCacheInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetTitleFileInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetTitleFileInterface() {
    static UFunction* pFnSetTitleFileInterface = NULL;

    if (!pFnSetTitleFileInterface)
        pFnSetTitleFileInterface =
            (UFunction*)UObject::GObjObjects()->Data[7216];

    UOnlineSubsystem_eventSetTitleFileInterface_Parms
        SetTitleFileInterface_Parms;

    this->ProcessEvent(pFnSetTitleFileInterface, &SetTitleFileInterface_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetPartyInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetPartyInterface() {
    static UFunction* pFnSetPartyInterface = NULL;

    if (!pFnSetPartyInterface)
        pFnSetPartyInterface = (UFunction*)UObject::GObjObjects()->Data[7221];

    UOnlineSubsystem_eventSetPartyInterface_Parms SetPartyInterface_Parms;

    this->ProcessEvent(pFnSetPartyInterface, &SetPartyInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetPartyChatInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetPartyChatInterface() {
    static UFunction* pFnSetPartyChatInterface = NULL;

    if (!pFnSetPartyChatInterface)
        pFnSetPartyChatInterface =
            (UFunction*)UObject::GObjObjects()->Data[7226];

    UOnlineSubsystem_eventSetPartyChatInterface_Parms
        SetPartyChatInterface_Parms;

    this->ProcessEvent(pFnSetPartyChatInterface, &SetPartyChatInterface_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetNewsInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetNewsInterface() {
    static UFunction* pFnSetNewsInterface = NULL;

    if (!pFnSetNewsInterface)
        pFnSetNewsInterface = (UFunction*)UObject::GObjObjects()->Data[7231];

    UOnlineSubsystem_eventSetNewsInterface_Parms SetNewsInterface_Parms;

    this->ProcessEvent(pFnSetNewsInterface, &SetNewsInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetStatsInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetStatsInterface() {
    static UFunction* pFnSetStatsInterface = NULL;

    if (!pFnSetStatsInterface)
        pFnSetStatsInterface = (UFunction*)UObject::GObjObjects()->Data[7236];

    UOnlineSubsystem_eventSetStatsInterface_Parms SetStatsInterface_Parms;

    this->ProcessEvent(pFnSetStatsInterface, &SetStatsInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetVoiceInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetVoiceInterface() {
    static UFunction* pFnSetVoiceInterface = NULL;

    if (!pFnSetVoiceInterface)
        pFnSetVoiceInterface = (UFunction*)UObject::GObjObjects()->Data[7241];

    UOnlineSubsystem_eventSetVoiceInterface_Parms SetVoiceInterface_Parms;

    this->ProcessEvent(pFnSetVoiceInterface, &SetVoiceInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetContentInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetContentInterface() {
    static UFunction* pFnSetContentInterface = NULL;

    if (!pFnSetContentInterface)
        pFnSetContentInterface = (UFunction*)UObject::GObjObjects()->Data[7246];

    UOnlineSubsystem_eventSetContentInterface_Parms SetContentInterface_Parms;

    this->ProcessEvent(pFnSetContentInterface, &SetContentInterface_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetGameInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetGameInterface() {
    static UFunction* pFnSetGameInterface = NULL;

    if (!pFnSetGameInterface)
        pFnSetGameInterface = (UFunction*)UObject::GObjObjects()->Data[7251];

    UOnlineSubsystem_eventSetGameInterface_Parms SetGameInterface_Parms;

    this->ProcessEvent(pFnSetGameInterface, &SetGameInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetSystemInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetSystemInterface() {
    static UFunction* pFnSetSystemInterface = NULL;

    if (!pFnSetSystemInterface)
        pFnSetSystemInterface = (UFunction*)UObject::GObjObjects()->Data[7256];

    UOnlineSubsystem_eventSetSystemInterface_Parms SetSystemInterface_Parms;

    this->ProcessEvent(pFnSetSystemInterface, &SetSystemInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetMarketplaceInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetMarketplaceInterface() {
    static UFunction* pFnSetMarketplaceInterface = NULL;

    if (!pFnSetMarketplaceInterface)
        pFnSetMarketplaceInterface =
            (UFunction*)UObject::GObjObjects()->Data[7260];

    UOnlineSubsystem_eventSetMarketplaceInterface_Parms
        SetMarketplaceInterface_Parms;

    this->ProcessEvent(pFnSetMarketplaceInterface,
                       &SetMarketplaceInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetPlayerInterfaceEx
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetPlayerInterfaceEx() {
    static UFunction* pFnSetPlayerInterfaceEx = NULL;

    if (!pFnSetPlayerInterfaceEx)
        pFnSetPlayerInterfaceEx =
            (UFunction*)UObject::GObjObjects()->Data[7265];

    UOnlineSubsystem_eventSetPlayerInterfaceEx_Parms SetPlayerInterfaceEx_Parms;

    this->ProcessEvent(pFnSetPlayerInterfaceEx, &SetPlayerInterfaceEx_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.SetPlayerInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetPlayerInterface() {
    static UFunction* pFnSetPlayerInterface = NULL;

    if (!pFnSetPlayerInterface)
        pFnSetPlayerInterface = (UFunction*)UObject::GObjObjects()->Data[7270];

    UOnlineSubsystem_eventSetPlayerInterface_Parms SetPlayerInterface_Parms;

    this->ProcessEvent(pFnSetPlayerInterface, &SetPlayerInterface_Parms, NULL);
};

// Function Engine.OnlineSubsystem.SetAccountInterface
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventSetAccountInterface() {
    static UFunction* pFnSetAccountInterface = NULL;

    if (!pFnSetAccountInterface)
        pFnSetAccountInterface = (UFunction*)UObject::GObjObjects()->Data[7275];

    UOnlineSubsystem_eventSetAccountInterface_Parms SetAccountInterface_Parms;

    this->ProcessEvent(pFnSetAccountInterface, &SetAccountInterface_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.Exit
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::eventExit() {
    static UFunction* pFnExit = NULL;

    if (!pFnExit) pFnExit = (UFunction*)UObject::GObjObjects()->Data[7278];

    UOnlineSubsystem_eventExit_Parms Exit_Parms;

    pFnExit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnExit, &Exit_Parms, NULL);

    pFnExit->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.PostInit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UOnlineSubsystem::eventPostInit() {
    static UFunction* pFnPostInit = NULL;

    if (!pFnPostInit)
        pFnPostInit = (UFunction*)UObject::GObjObjects()->Data[7283];

    UOnlineSubsystem_eventPostInit_Parms PostInit_Parms;

    this->ProcessEvent(pFnPostInit, &PostInit_Parms, NULL);
};

// Function Engine.OnlineSubsystem.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[7284];

    UOnlineSubsystem_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.ClearAllInventoryReadCompleteDelegates
// [0x00020002]
// Parameters infos:

void UOnlineSubsystem::ClearAllInventoryReadCompleteDelegates() {
    static UFunction* pFnClearAllInventoryReadCompleteDelegates = NULL;

    if (!pFnClearAllInventoryReadCompleteDelegates)
        pFnClearAllInventoryReadCompleteDelegates =
            (UFunction*)UObject::GObjObjects()->Data[7289];

    UOnlineSubsystem_execClearAllInventoryReadCompleteDelegates_Parms
        ClearAllInventoryReadCompleteDelegates_Parms;

    this->ProcessEvent(pFnClearAllInventoryReadCompleteDelegates,
                       &ClearAllInventoryReadCompleteDelegates_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ClearOnInventoryReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UOnlineSubsystem::ClearOnInventoryReadCompleteDelegate() {
    static UFunction* pFnClearOnInventoryReadCompleteDelegate = NULL;

    if (!pFnClearOnInventoryReadCompleteDelegate)
        pFnClearOnInventoryReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[7291];

    UOnlineSubsystem_execClearOnInventoryReadCompleteDelegate_Parms
        ClearOnInventoryReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearOnInventoryReadCompleteDelegate,
                       &ClearOnInventoryReadCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineSubsystem.AddOnInventoryReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UOnlineSubsystem::AddOnInventoryReadCompleteDelegate() {
    static UFunction* pFnAddOnInventoryReadCompleteDelegate = NULL;

    if (!pFnAddOnInventoryReadCompleteDelegate)
        pFnAddOnInventoryReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[7293];

    UOnlineSubsystem_execAddOnInventoryReadCompleteDelegate_Parms
        AddOnInventoryReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddOnInventoryReadCompleteDelegate,
                       &AddOnInventoryReadCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineSubsystem.OnPingRegionsComplete
// [0x00120000]
// Parameters infos:

void UOnlineSubsystem::OnPingRegionsComplete() {
    static UFunction* pFnOnPingRegionsComplete = NULL;

    if (!pFnOnPingRegionsComplete)
        pFnOnPingRegionsComplete =
            (UFunction*)UObject::GObjObjects()->Data[7025];

    UOnlineSubsystem_execOnPingRegionsComplete_Parms
        OnPingRegionsComplete_Parms;

    this->ProcessEvent(pFnOnPingRegionsComplete, &OnPingRegionsComplete_Parms,
                       NULL);
};

// Function Engine.OnlineSubsystem.OnInventoryReadComplete
// [0x00120000]
// Parameters infos:

void UOnlineSubsystem::OnInventoryReadComplete() {
    static UFunction* pFnOnInventoryReadComplete = NULL;

    if (!pFnOnInventoryReadComplete)
        pFnOnInventoryReadComplete =
            (UFunction*)UObject::GObjObjects()->Data[7296];

    UOnlineSubsystem_execOnInventoryReadComplete_Parms
        OnInventoryReadComplete_Parms;

    this->ProcessEvent(pFnOnInventoryReadComplete,
                       &OnInventoryReadComplete_Parms, NULL);
};

// Function Engine.OnlineSubsystem.ExchangeDuplicates
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::ExchangeDuplicates() {
    static UFunction* pFnExchangeDuplicates = NULL;

    if (!pFnExchangeDuplicates)
        pFnExchangeDuplicates = (UFunction*)UObject::GObjObjects()->Data[7299];

    UOnlineSubsystem_execExchangeDuplicates_Parms ExchangeDuplicates_Parms;

    pFnExchangeDuplicates->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnExchangeDuplicates, &ExchangeDuplicates_Parms, NULL);

    pFnExchangeDuplicates->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.Exchange
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::Exchange() {
    static UFunction* pFnExchange = NULL;

    if (!pFnExchange)
        pFnExchange = (UFunction*)UObject::GObjObjects()->Data[7300];

    UOnlineSubsystem_execExchange_Parms Exchange_Parms;

    pFnExchange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnExchange, &Exchange_Parms, NULL);

    pFnExchange->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.HasKeyForItem
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::HasKeyForItem() {
    static UFunction* pFnHasKeyForItem = NULL;

    if (!pFnHasKeyForItem)
        pFnHasKeyForItem = (UFunction*)UObject::GObjObjects()->Data[7315];

    UOnlineSubsystem_execHasKeyForItem_Parms HasKeyForItem_Parms;

    pFnHasKeyForItem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasKeyForItem, &HasKeyForItem_Parms, NULL);

    pFnHasKeyForItem->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.ExchangeReady
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::ExchangeReady() {
    static UFunction* pFnExchangeReady = NULL;

    if (!pFnExchangeReady)
        pFnExchangeReady = (UFunction*)UObject::GObjObjects()->Data[7318];

    UOnlineSubsystem_execExchangeReady_Parms ExchangeReady_Parms;

    pFnExchangeReady->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnExchangeReady, &ExchangeReady_Parms, NULL);

    pFnExchangeReady->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.ClearInFlight
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::ClearInFlight() {
    static UFunction* pFnClearInFlight = NULL;

    if (!pFnClearInFlight)
        pFnClearInFlight = (UFunction*)UObject::GObjObjects()->Data[7322];

    UOnlineSubsystem_execClearInFlight_Parms ClearInFlight_Parms;

    pFnClearInFlight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearInFlight, &ClearInFlight_Parms, NULL);

    pFnClearInFlight->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.ClearNewlyAdded
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::ClearNewlyAdded() {
    static UFunction* pFnClearNewlyAdded = NULL;

    if (!pFnClearNewlyAdded)
        pFnClearNewlyAdded = (UFunction*)UObject::GObjObjects()->Data[7325];

    UOnlineSubsystem_execClearNewlyAdded_Parms ClearNewlyAdded_Parms;

    pFnClearNewlyAdded->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearNewlyAdded, &ClearNewlyAdded_Parms, NULL);

    pFnClearNewlyAdded->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.IsExchangeable
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::IsExchangeable() {
    static UFunction* pFnIsExchangeable = NULL;

    if (!pFnIsExchangeable)
        pFnIsExchangeable = (UFunction*)UObject::GObjObjects()->Data[7326];

    UOnlineSubsystem_execIsExchangeable_Parms IsExchangeable_Parms;

    pFnIsExchangeable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsExchangeable, &IsExchangeable_Parms, NULL);

    pFnIsExchangeable->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.OpenGameStorePage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::OpenGameStorePage() {
    static UFunction* pFnOpenGameStorePage = NULL;

    if (!pFnOpenGameStorePage)
        pFnOpenGameStorePage = (UFunction*)UObject::GObjObjects()->Data[7327];

    UOnlineSubsystem_execOpenGameStorePage_Parms OpenGameStorePage_Parms;

    pFnOpenGameStorePage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenGameStorePage, &OpenGameStorePage_Parms, NULL);

    pFnOpenGameStorePage->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.OpenURL
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::OpenURL() {
    static UFunction* pFnOpenURL = NULL;

    if (!pFnOpenURL)
        pFnOpenURL = (UFunction*)UObject::GObjObjects()->Data[7332];

    UOnlineSubsystem_execOpenURL_Parms OpenURL_Parms;

    pFnOpenURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenURL, &OpenURL_Parms, NULL);

    pFnOpenURL->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.OpenItemPurchaseOverlay
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::OpenItemPurchaseOverlay() {
    static UFunction* pFnOpenItemPurchaseOverlay = NULL;

    if (!pFnOpenItemPurchaseOverlay)
        pFnOpenItemPurchaseOverlay =
            (UFunction*)UObject::GObjObjects()->Data[7333];

    UOnlineSubsystem_execOpenItemPurchaseOverlay_Parms
        OpenItemPurchaseOverlay_Parms;

    pFnOpenItemPurchaseOverlay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenItemPurchaseOverlay,
                       &OpenItemPurchaseOverlay_Parms, NULL);

    pFnOpenItemPurchaseOverlay->FunctionFlags |= 0x400;
};

// Function Engine.OnlineSubsystem.OpenMarketPlaceSearch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineSubsystem::OpenMarketPlaceSearch() {
    static UFunction* pFnOpenMarketPlaceSearch = NULL;

    if (!pFnOpenMarketPlaceSearch)
        pFnOpenMarketPlaceSearch =
            (UFunction*)UObject::GObjObjects()->Data[7335];

    UOnlineSubsystem_execOpenMarketPlaceSearch_Parms
        OpenMarketPlaceSearch_Parms;

    pFnOpenMarketPlaceSearch->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOpenMarketPlaceSearch, &OpenMarketPlaceSearch_Parms,
                       NULL);

    pFnOpenMarketPlaceSearch->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.ClearDelegate
// [0x00020002]
// Parameters infos:

void UPlatformInterfaceBase::ClearDelegate() {
    static UFunction* pFnClearDelegate = NULL;

    if (!pFnClearDelegate)
        pFnClearDelegate = (UFunction*)UObject::GObjObjects()->Data[13706];

    UPlatformInterfaceBase_execClearDelegate_Parms ClearDelegate_Parms;

    this->ProcessEvent(pFnClearDelegate, &ClearDelegate_Parms, NULL);
};

// Function Engine.PlatformInterfaceBase.AddDelegate
// [0x00020002]
// Parameters infos:

void UPlatformInterfaceBase::AddDelegate() {
    static UFunction* pFnAddDelegate = NULL;

    if (!pFnAddDelegate)
        pFnAddDelegate = (UFunction*)UObject::GObjObjects()->Data[13703];

    UPlatformInterfaceBase_execAddDelegate_Parms AddDelegate_Parms;

    this->ProcessEvent(pFnAddDelegate, &AddDelegate_Parms, NULL);
};

// Function Engine.PlatformInterfaceBase.GetInAppMessageInterface
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetInAppMessageInterface() {
    static UFunction* pFnGetInAppMessageInterface = NULL;

    if (!pFnGetInAppMessageInterface)
        pFnGetInAppMessageInterface =
            (UFunction*)UObject::GObjObjects()->Data[13701];

    UPlatformInterfaceBase_execGetInAppMessageInterface_Parms
        GetInAppMessageInterface_Parms;

    pFnGetInAppMessageInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetInAppMessageInterface,
                       &GetInAppMessageInterface_Parms, NULL);

    pFnGetInAppMessageInterface->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetAppNotificationsInterface
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetAppNotificationsInterface() {
    static UFunction* pFnGetAppNotificationsInterface = NULL;

    if (!pFnGetAppNotificationsInterface)
        pFnGetAppNotificationsInterface =
            (UFunction*)UObject::GObjObjects()->Data[13699];

    UPlatformInterfaceBase_execGetAppNotificationsInterface_Parms
        GetAppNotificationsInterface_Parms;

    pFnGetAppNotificationsInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAppNotificationsInterface,
                       &GetAppNotificationsInterface_Parms, NULL);

    pFnGetAppNotificationsInterface->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetTwitterIntegration
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetTwitterIntegration() {
    static UFunction* pFnGetTwitterIntegration = NULL;

    if (!pFnGetTwitterIntegration)
        pFnGetTwitterIntegration =
            (UFunction*)UObject::GObjObjects()->Data[13697];

    UPlatformInterfaceBase_execGetTwitterIntegration_Parms
        GetTwitterIntegration_Parms;

    pFnGetTwitterIntegration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTwitterIntegration, &GetTwitterIntegration_Parms,
                       NULL);

    pFnGetTwitterIntegration->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetAnalyticEventsInterface
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetAnalyticEventsInterface() {
    static UFunction* pFnGetAnalyticEventsInterface = NULL;

    if (!pFnGetAnalyticEventsInterface)
        pFnGetAnalyticEventsInterface =
            (UFunction*)UObject::GObjObjects()->Data[13695];

    UPlatformInterfaceBase_execGetAnalyticEventsInterface_Parms
        GetAnalyticEventsInterface_Parms;

    pFnGetAnalyticEventsInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAnalyticEventsInterface,
                       &GetAnalyticEventsInterface_Parms, NULL);

    pFnGetAnalyticEventsInterface->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetMicroTransactionInterface
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetMicroTransactionInterface() {
    static UFunction* pFnGetMicroTransactionInterface = NULL;

    if (!pFnGetMicroTransactionInterface)
        pFnGetMicroTransactionInterface =
            (UFunction*)UObject::GObjObjects()->Data[13693];

    UPlatformInterfaceBase_execGetMicroTransactionInterface_Parms
        GetMicroTransactionInterface_Parms;

    pFnGetMicroTransactionInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMicroTransactionInterface,
                       &GetMicroTransactionInterface_Parms, NULL);

    pFnGetMicroTransactionInterface->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetInGameAdManager
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetInGameAdManager() {
    static UFunction* pFnGetInGameAdManager = NULL;

    if (!pFnGetInGameAdManager)
        pFnGetInGameAdManager = (UFunction*)UObject::GObjObjects()->Data[13691];

    UPlatformInterfaceBase_execGetInGameAdManager_Parms
        GetInGameAdManager_Parms;

    pFnGetInGameAdManager->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetInGameAdManager, &GetInGameAdManager_Parms, NULL);

    pFnGetInGameAdManager->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetFacebookIntegration
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetFacebookIntegration() {
    static UFunction* pFnGetFacebookIntegration = NULL;

    if (!pFnGetFacebookIntegration)
        pFnGetFacebookIntegration =
            (UFunction*)UObject::GObjObjects()->Data[13689];

    UPlatformInterfaceBase_execGetFacebookIntegration_Parms
        GetFacebookIntegration_Parms;

    pFnGetFacebookIntegration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFacebookIntegration, &GetFacebookIntegration_Parms,
                       NULL);

    pFnGetFacebookIntegration->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetLocalStorageInterface
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetLocalStorageInterface() {
    static UFunction* pFnGetLocalStorageInterface = NULL;

    if (!pFnGetLocalStorageInterface)
        pFnGetLocalStorageInterface =
            (UFunction*)UObject::GObjObjects()->Data[13687];

    UPlatformInterfaceBase_execGetLocalStorageInterface_Parms
        GetLocalStorageInterface_Parms;

    pFnGetLocalStorageInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLocalStorageInterface,
                       &GetLocalStorageInterface_Parms, NULL);

    pFnGetLocalStorageInterface->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.GetCloudStorageInterface
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::GetCloudStorageInterface() {
    static UFunction* pFnGetCloudStorageInterface = NULL;

    if (!pFnGetCloudStorageInterface)
        pFnGetCloudStorageInterface =
            (UFunction*)UObject::GObjObjects()->Data[13685];

    UPlatformInterfaceBase_execGetCloudStorageInterface_Parms
        GetCloudStorageInterface_Parms;

    pFnGetCloudStorageInterface->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCloudStorageInterface,
                       &GetCloudStorageInterface_Parms, NULL);

    pFnGetCloudStorageInterface->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.CallDelegates
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceBase::CallDelegates() {
    static UFunction* pFnCallDelegates = NULL;

    if (!pFnCallDelegates)
        pFnCallDelegates = (UFunction*)UObject::GObjObjects()->Data[13682];

    UPlatformInterfaceBase_execCallDelegates_Parms CallDelegates_Parms;

    pFnCallDelegates->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCallDelegates, &CallDelegates_Parms, NULL);

    pFnCallDelegates->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceBase.PlatformInterfaceDelegate
// [0x00520000]
// Parameters infos:

void UPlatformInterfaceBase::PlatformInterfaceDelegate() {
    static UFunction* pFnPlatformInterfaceDelegate = NULL;

    if (!pFnPlatformInterfaceDelegate)
        pFnPlatformInterfaceDelegate =
            (UFunction*)UObject::GObjObjects()->Data[13680];

    UPlatformInterfaceBase_execPlatformInterfaceDelegate_Parms
        PlatformInterfaceDelegate_Parms;

    this->ProcessEvent(pFnPlatformInterfaceDelegate,
                       &PlatformInterfaceDelegate_Parms, NULL);
};

// Function Engine.MicroTransactionBase.GetProductIndex
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMicroTransactionBase::eventGetProductIndex() {
    static UFunction* pFnGetProductIndex = NULL;

    if (!pFnGetProductIndex)
        pFnGetProductIndex = (UFunction*)UObject::GObjObjects()->Data[26022];

    UMicroTransactionBase_eventGetProductIndex_Parms GetProductIndex_Parms;

    pFnGetProductIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetProductIndex, &GetProductIndex_Parms, NULL);

    pFnGetProductIndex->FunctionFlags |= 0x400;
};

// Function Engine.MicroTransactionBase.BeginPurchase
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMicroTransactionBase::eventBeginPurchase() {
    static UFunction* pFnBeginPurchase = NULL;

    if (!pFnBeginPurchase)
        pFnBeginPurchase = (UFunction*)UObject::GObjObjects()->Data[26019];

    UMicroTransactionBase_eventBeginPurchase_Parms BeginPurchase_Parms;

    pFnBeginPurchase->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBeginPurchase, &BeginPurchase_Parms, NULL);

    pFnBeginPurchase->FunctionFlags |= 0x400;
};

// Function Engine.MicroTransactionBase.IsAllowedToMakePurchases
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMicroTransactionBase::eventIsAllowedToMakePurchases() {
    static UFunction* pFnIsAllowedToMakePurchases = NULL;

    if (!pFnIsAllowedToMakePurchases)
        pFnIsAllowedToMakePurchases =
            (UFunction*)UObject::GObjObjects()->Data[26017];

    UMicroTransactionBase_eventIsAllowedToMakePurchases_Parms
        IsAllowedToMakePurchases_Parms;

    pFnIsAllowedToMakePurchases->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsAllowedToMakePurchases,
                       &IsAllowedToMakePurchases_Parms, NULL);

    pFnIsAllowedToMakePurchases->FunctionFlags |= 0x400;
};

// Function Engine.MicroTransactionBase.QueryForAvailablePurchases
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMicroTransactionBase::eventQueryForAvailablePurchases() {
    static UFunction* pFnQueryForAvailablePurchases = NULL;

    if (!pFnQueryForAvailablePurchases)
        pFnQueryForAvailablePurchases =
            (UFunction*)UObject::GObjObjects()->Data[26015];

    UMicroTransactionBase_eventQueryForAvailablePurchases_Parms
        QueryForAvailablePurchases_Parms;

    pFnQueryForAvailablePurchases->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnQueryForAvailablePurchases,
                       &QueryForAvailablePurchases_Parms, NULL);

    pFnQueryForAvailablePurchases->FunctionFlags |= 0x400;
};

// Function Engine.MicroTransactionBase.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMicroTransactionBase::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[26014];

    UMicroTransactionBase_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.Player.SwitchController
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayer::SwitchController() {
    static UFunction* pFnSwitchController = NULL;

    if (!pFnSwitchController)
        pFnSwitchController = (UFunction*)UObject::GObjObjects()->Data[24764];

    UPlayer_execSwitchController_Parms SwitchController_Parms;

    pFnSwitchController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSwitchController, &SwitchController_Parms, NULL);

    pFnSwitchController->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.Cleanup
// [0x00024002]
// Parameters infos:

void ULocalPlayer::Cleanup() {
    static UFunction* pFnCleanup = NULL;

    if (!pFnCleanup)
        pFnCleanup = (UFunction*)UObject::GObjObjects()->Data[24895];

    ULocalPlayer_execCleanup_Parms Cleanup_Parms;

    this->ProcessEvent(pFnCleanup, &Cleanup_Parms, NULL);
};

// Function Engine.LocalPlayer.Exit
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventExit() {
    static UFunction* pFnExit = NULL;

    if (!pFnExit) pFnExit = (UFunction*)UObject::GObjObjects()->Data[24894];

    ULocalPlayer_eventExit_Parms Exit_Parms;

    this->ProcessEvent(pFnExit, &Exit_Parms, NULL);
};

// Function Engine.LocalPlayer.NotifyServerConnectionClose
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventNotifyServerConnectionClose() {
    static UFunction* pFnNotifyServerConnectionClose = NULL;

    if (!pFnNotifyServerConnectionClose)
        pFnNotifyServerConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[24893];

    ULocalPlayer_eventNotifyServerConnectionClose_Parms
        NotifyServerConnectionClose_Parms;

    this->ProcessEvent(pFnNotifyServerConnectionClose,
                       &NotifyServerConnectionClose_Parms, NULL);
};

// Function Engine.LocalPlayer.ViewportClosed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventViewportClosed() {
    static UFunction* pFnViewportClosed = NULL;

    if (!pFnViewportClosed)
        pFnViewportClosed = (UFunction*)UObject::GObjObjects()->Data[24892];

    ULocalPlayer_eventViewportClosed_Parms ViewportClosed_Parms;

    this->ProcessEvent(pFnViewportClosed, &ViewportClosed_Parms, NULL);
};

// Function Engine.LocalPlayer.StaticOnServerConnectionClose
// [0x00822003] ( FUNC_Final )
// Parameters infos:

void ULocalPlayer::StaticOnServerConnectionClose() {
    static UFunction* pFnStaticOnServerConnectionClose = NULL;

    if (!pFnStaticOnServerConnectionClose)
        pFnStaticOnServerConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[24887];

    ULocalPlayer_execStaticOnServerConnectionClose_Parms
        StaticOnServerConnectionClose_Parms;

    this->ProcessEvent(pFnStaticOnServerConnectionClose,
                       &StaticOnServerConnectionClose_Parms, NULL);
};

// Function Engine.LocalPlayer.OnServerConnectionClose
// [0x00020002]
// Parameters infos:

void ULocalPlayer::OnServerConnectionClose() {
    static UFunction* pFnOnServerConnectionClose = NULL;

    if (!pFnOnServerConnectionClose)
        pFnOnServerConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[24885];

    ULocalPlayer_execOnServerConnectionClose_Parms
        OnServerConnectionClose_Parms;

    this->ProcessEvent(pFnOnServerConnectionClose,
                       &OnServerConnectionClose_Parms, NULL);
};

// Function Engine.LocalPlayer.ServerAuthFailure
// [0x00020002]
// Parameters infos:

void ULocalPlayer::ServerAuthFailure() {
    static UFunction* pFnServerAuthFailure = NULL;

    if (!pFnServerAuthFailure)
        pFnServerAuthFailure = (UFunction*)UObject::GObjObjects()->Data[24884];

    ULocalPlayer_execServerAuthFailure_Parms ServerAuthFailure_Parms;

    this->ProcessEvent(pFnServerAuthFailure, &ServerAuthFailure_Parms, NULL);
};

// Function Engine.LocalPlayer.ServerAuthTimedOut
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventServerAuthTimedOut() {
    static UFunction* pFnServerAuthTimedOut = NULL;

    if (!pFnServerAuthTimedOut)
        pFnServerAuthTimedOut = (UFunction*)UObject::GObjObjects()->Data[24881];

    ULocalPlayer_eventServerAuthTimedOut_Parms ServerAuthTimedOut_Parms;

    this->ProcessEvent(pFnServerAuthTimedOut, &ServerAuthTimedOut_Parms, NULL);
};

// Function Engine.LocalPlayer.OnServerAuthComplete
// [0x00020002]
// Parameters infos:

void ULocalPlayer::OnServerAuthComplete() {
    static UFunction* pFnOnServerAuthComplete = NULL;

    if (!pFnOnServerAuthComplete)
        pFnOnServerAuthComplete =
            (UFunction*)UObject::GObjObjects()->Data[24876];

    ULocalPlayer_execOnServerAuthComplete_Parms OnServerAuthComplete_Parms;

    this->ProcessEvent(pFnOnServerAuthComplete, &OnServerAuthComplete_Parms,
                       NULL);
};

// Function Engine.LocalPlayer.ProcessServerAuthResponse
// [0x00020002]
// Parameters infos:

void ULocalPlayer::ProcessServerAuthResponse() {
    static UFunction* pFnProcessServerAuthResponse = NULL;

    if (!pFnProcessServerAuthResponse)
        pFnProcessServerAuthResponse =
            (UFunction*)UObject::GObjObjects()->Data[24871];

    ULocalPlayer_execProcessServerAuthResponse_Parms
        ProcessServerAuthResponse_Parms;

    this->ProcessEvent(pFnProcessServerAuthResponse,
                       &ProcessServerAuthResponse_Parms, NULL);
};

// Function Engine.LocalPlayer.ProcessClientAuthEndSessionRequest
// [0x00820002]
// Parameters infos:

void ULocalPlayer::ProcessClientAuthEndSessionRequest() {
    static UFunction* pFnProcessClientAuthEndSessionRequest = NULL;

    if (!pFnProcessClientAuthEndSessionRequest)
        pFnProcessClientAuthEndSessionRequest =
            (UFunction*)UObject::GObjObjects()->Data[24867];

    ULocalPlayer_execProcessClientAuthEndSessionRequest_Parms
        ProcessClientAuthEndSessionRequest_Parms;

    this->ProcessEvent(pFnProcessClientAuthEndSessionRequest,
                       &ProcessClientAuthEndSessionRequest_Parms, NULL);
};

// Function Engine.LocalPlayer.ProcessClientAuthRequest
// [0x00820002]
// Parameters infos:

void ULocalPlayer::ProcessClientAuthRequest() {
    static UFunction* pFnProcessClientAuthRequest = NULL;

    if (!pFnProcessClientAuthRequest)
        pFnProcessClientAuthRequest =
            (UFunction*)UObject::GObjObjects()->Data[24860];

    ULocalPlayer_execProcessClientAuthRequest_Parms
        ProcessClientAuthRequest_Parms;

    this->ProcessEvent(pFnProcessClientAuthRequest,
                       &ProcessClientAuthRequest_Parms, NULL);
};

// Function Engine.LocalPlayer.NotifyServerConnectionOpen
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventNotifyServerConnectionOpen() {
    static UFunction* pFnNotifyServerConnectionOpen = NULL;

    if (!pFnNotifyServerConnectionOpen)
        pFnNotifyServerConnectionOpen =
            (UFunction*)UObject::GObjObjects()->Data[24858];

    ULocalPlayer_eventNotifyServerConnectionOpen_Parms
        NotifyServerConnectionOpen_Parms;

    this->ProcessEvent(pFnNotifyServerConnectionOpen,
                       &NotifyServerConnectionOpen_Parms, NULL);
};

// Function Engine.LocalPlayer.GetNickname
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventGetNickname() {
    static UFunction* pFnGetNickname = NULL;

    if (!pFnGetNickname)
        pFnGetNickname = (UFunction*)UObject::GObjObjects()->Data[24855];

    ULocalPlayer_eventGetNickname_Parms GetNickname_Parms;

    this->ProcessEvent(pFnGetNickname, &GetNickname_Parms, NULL);
};

// Function Engine.LocalPlayer.GetUniqueNetId
// [0x00820803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void ULocalPlayer::eventGetUniqueNetId() {
    static UFunction* pFnGetUniqueNetId = NULL;

    if (!pFnGetUniqueNetId)
        pFnGetUniqueNetId = (UFunction*)UObject::GObjObjects()->Data[24851];

    ULocalPlayer_eventGetUniqueNetId_Parms GetUniqueNetId_Parms;

    this->ProcessEvent(pFnGetUniqueNetId, &GetUniqueNetId_Parms, NULL);
};

// Function Engine.LocalPlayer.FastProject
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::FastProject() {
    static UFunction* pFnFastProject = NULL;

    if (!pFnFastProject)
        pFnFastProject = (UFunction*)UObject::GObjObjects()->Data[24848];

    ULocalPlayer_execFastProject_Parms FastProject_Parms;

    pFnFastProject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFastProject, &FastProject_Parms, NULL);

    pFnFastProject->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.FastDeProject
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::FastDeProject() {
    static UFunction* pFnFastDeProject = NULL;

    if (!pFnFastDeProject)
        pFnFastDeProject = (UFunction*)UObject::GObjObjects()->Data[24844];

    ULocalPlayer_execFastDeProject_Parms FastDeProject_Parms;

    pFnFastDeProject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFastDeProject, &FastDeProject_Parms, NULL);

    pFnFastDeProject->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.Project
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::Project() {
    static UFunction* pFnProject = NULL;

    if (!pFnProject)
        pFnProject = (UFunction*)UObject::GObjObjects()->Data[24841];

    ULocalPlayer_execProject_Parms Project_Parms;

    pFnProject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnProject, &Project_Parms, NULL);

    pFnProject->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.DeProject
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::DeProject() {
    static UFunction* pFnDeProject = NULL;

    if (!pFnDeProject)
        pFnDeProject = (UFunction*)UObject::GObjObjects()->Data[24837];

    ULocalPlayer_execDeProject_Parms DeProject_Parms;

    pFnDeProject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeProject, &DeProject_Parms, NULL);

    pFnDeProject->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.TouchPlayerPostProcessChain
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::TouchPlayerPostProcessChain() {
    static UFunction* pFnTouchPlayerPostProcessChain = NULL;

    if (!pFnTouchPlayerPostProcessChain)
        pFnTouchPlayerPostProcessChain =
            (UFunction*)UObject::GObjObjects()->Data[24836];

    ULocalPlayer_execTouchPlayerPostProcessChain_Parms
        TouchPlayerPostProcessChain_Parms;

    pFnTouchPlayerPostProcessChain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTouchPlayerPostProcessChain,
                       &TouchPlayerPostProcessChain_Parms, NULL);

    pFnTouchPlayerPostProcessChain->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.GetPostProcessChain
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::GetPostProcessChain() {
    static UFunction* pFnGetPostProcessChain = NULL;

    if (!pFnGetPostProcessChain)
        pFnGetPostProcessChain =
            (UFunction*)UObject::GObjObjects()->Data[24833];

    ULocalPlayer_execGetPostProcessChain_Parms GetPostProcessChain_Parms;

    pFnGetPostProcessChain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPostProcessChain, &GetPostProcessChain_Parms,
                       NULL);

    pFnGetPostProcessChain->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.RemoveAllPostProcessingChains
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::RemoveAllPostProcessingChains() {
    static UFunction* pFnRemoveAllPostProcessingChains = NULL;

    if (!pFnRemoveAllPostProcessingChains)
        pFnRemoveAllPostProcessingChains =
            (UFunction*)UObject::GObjObjects()->Data[21862];

    ULocalPlayer_execRemoveAllPostProcessingChains_Parms
        RemoveAllPostProcessingChains_Parms;

    pFnRemoveAllPostProcessingChains->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveAllPostProcessingChains,
                       &RemoveAllPostProcessingChains_Parms, NULL);

    pFnRemoveAllPostProcessingChains->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.RemovePostProcessingChain
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::RemovePostProcessingChain() {
    static UFunction* pFnRemovePostProcessingChain = NULL;

    if (!pFnRemovePostProcessingChain)
        pFnRemovePostProcessingChain =
            (UFunction*)UObject::GObjObjects()->Data[24830];

    ULocalPlayer_execRemovePostProcessingChain_Parms
        RemovePostProcessingChain_Parms;

    pFnRemovePostProcessingChain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemovePostProcessingChain,
                       &RemovePostProcessingChain_Parms, NULL);

    pFnRemovePostProcessingChain->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.InsertPostProcessingChain
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::InsertPostProcessingChain() {
    static UFunction* pFnInsertPostProcessingChain = NULL;

    if (!pFnInsertPostProcessingChain)
        pFnInsertPostProcessingChain =
            (UFunction*)UObject::GObjObjects()->Data[21864];

    ULocalPlayer_execInsertPostProcessingChain_Parms
        InsertPostProcessingChain_Parms;

    pFnInsertPostProcessingChain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInsertPostProcessingChain,
                       &InsertPostProcessingChain_Parms, NULL);

    pFnInsertPostProcessingChain->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.GetTranslationContext
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::GetTranslationContext() {
    static UFunction* pFnGetTranslationContext = NULL;

    if (!pFnGetTranslationContext)
        pFnGetTranslationContext =
            (UFunction*)UObject::GObjObjects()->Data[24825];

    ULocalPlayer_execGetTranslationContext_Parms GetTranslationContext_Parms;

    pFnGetTranslationContext->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTranslationContext, &GetTranslationContext_Parms,
                       NULL);

    pFnGetTranslationContext->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.SetControllerId
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ULocalPlayer::SetControllerId() {
    static UFunction* pFnSetControllerId = NULL;

    if (!pFnSetControllerId)
        pFnSetControllerId = (UFunction*)UObject::GObjObjects()->Data[24821];

    ULocalPlayer_execSetControllerId_Parms SetControllerId_Parms;

    this->ProcessEvent(pFnSetControllerId, &SetControllerId_Parms, NULL);
};

// Function Engine.LocalPlayer.ClearPostProcessSettingsOverride
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::ClearPostProcessSettingsOverride() {
    static UFunction* pFnClearPostProcessSettingsOverride = NULL;

    if (!pFnClearPostProcessSettingsOverride)
        pFnClearPostProcessSettingsOverride =
            (UFunction*)UObject::GObjObjects()->Data[24819];

    ULocalPlayer_execClearPostProcessSettingsOverride_Parms
        ClearPostProcessSettingsOverride_Parms;

    pFnClearPostProcessSettingsOverride->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearPostProcessSettingsOverride,
                       &ClearPostProcessSettingsOverride_Parms, NULL);

    pFnClearPostProcessSettingsOverride->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.OverridePostProcessSettingsCurve
// [0x00420500] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::OverridePostProcessSettingsCurve() {
    static UFunction* pFnOverridePostProcessSettingsCurve = NULL;

    if (!pFnOverridePostProcessSettingsCurve)
        pFnOverridePostProcessSettingsCurve =
            (UFunction*)UObject::GObjObjects()->Data[24816];

    ULocalPlayer_execOverridePostProcessSettingsCurve_Parms
        OverridePostProcessSettingsCurve_Parms;

    pFnOverridePostProcessSettingsCurve->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOverridePostProcessSettingsCurve,
                       &OverridePostProcessSettingsCurve_Parms, NULL);

    pFnOverridePostProcessSettingsCurve->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.OverridePostProcessSettings
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void ULocalPlayer::OverridePostProcessSettings() {
    static UFunction* pFnOverridePostProcessSettings = NULL;

    if (!pFnOverridePostProcessSettings)
        pFnOverridePostProcessSettings =
            (UFunction*)UObject::GObjObjects()->Data[24813];

    ULocalPlayer_execOverridePostProcessSettings_Parms
        OverridePostProcessSettings_Parms;

    pFnOverridePostProcessSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOverridePostProcessSettings,
                       &OverridePostProcessSettings_Parms, NULL);

    pFnOverridePostProcessSettings->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.GetActorVisibility
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::GetActorVisibility() {
    static UFunction* pFnGetActorVisibility = NULL;

    if (!pFnGetActorVisibility)
        pFnGetActorVisibility = (UFunction*)UObject::GObjObjects()->Data[24810];

    ULocalPlayer_execGetActorVisibility_Parms GetActorVisibility_Parms;

    pFnGetActorVisibility->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetActorVisibility, &GetActorVisibility_Parms, NULL);

    pFnGetActorVisibility->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.SendSplitJoin
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::SendSplitJoin() {
    static UFunction* pFnSendSplitJoin = NULL;

    if (!pFnSendSplitJoin)
        pFnSendSplitJoin = (UFunction*)UObject::GObjObjects()->Data[22862];

    ULocalPlayer_execSendSplitJoin_Parms SendSplitJoin_Parms;

    pFnSendSplitJoin->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSendSplitJoin, &SendSplitJoin_Parms, NULL);

    pFnSendSplitJoin->FunctionFlags |= 0x400;
};

// Function Engine.LocalPlayer.SpawnPlayActor
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULocalPlayer::SpawnPlayActor() {
    static UFunction* pFnSpawnPlayActor = NULL;

    if (!pFnSpawnPlayActor)
        pFnSpawnPlayActor = (UFunction*)UObject::GObjObjects()->Data[22860];

    ULocalPlayer_execSpawnPlayActor_Parms SpawnPlayActor_Parms;

    pFnSpawnPlayActor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnPlayActor, &SpawnPlayActor_Parms, NULL);

    pFnSpawnPlayActor->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.OnlineServiceAuthComplete
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPlayfabInterface::OnlineServiceAuthComplete() {
    static UFunction* pFnOnlineServiceAuthComplete = NULL;

    if (!pFnOnlineServiceAuthComplete)
        pFnOnlineServiceAuthComplete =
            (UFunction*)UObject::GObjObjects()->Data[31833];

    UPlayfabInterface_execOnlineServiceAuthComplete_Parms
        OnlineServiceAuthComplete_Parms;

    pFnOnlineServiceAuthComplete->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOnlineServiceAuthComplete,
                       &OnlineServiceAuthComplete_Parms, NULL);

    pFnOnlineServiceAuthComplete->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.OnTokenAndSignatureRetrieved
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UPlayfabInterface::OnTokenAndSignatureRetrieved() {
    static UFunction* pFnOnTokenAndSignatureRetrieved = NULL;

    if (!pFnOnTokenAndSignatureRetrieved)
        pFnOnTokenAndSignatureRetrieved =
            (UFunction*)UObject::GObjObjects()->Data[31828];

    UPlayfabInterface_execOnTokenAndSignatureRetrieved_Parms
        OnTokenAndSignatureRetrieved_Parms;

    this->ProcessEvent(pFnOnTokenAndSignatureRetrieved,
                       &OnTokenAndSignatureRetrieved_Parms, NULL);
};

// Function Engine.PlayfabInterface.AuthWithOnlineService
// [0x00040803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UPlayfabInterface::eventAuthWithOnlineService() {
    static UFunction* pFnAuthWithOnlineService = NULL;

    if (!pFnAuthWithOnlineService)
        pFnAuthWithOnlineService =
            (UFunction*)UObject::GObjObjects()->Data[31824];

    UPlayfabInterface_eventAuthWithOnlineService_Parms
        AuthWithOnlineService_Parms;

    this->ProcessEvent(pFnAuthWithOnlineService, &AuthWithOnlineService_Parms,
                       NULL);
};

// Function Engine.PlayfabInterface.GetGameSettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPlayfabInterface::eventGetGameSettings() {
    static UFunction* pFnGetGameSettings = NULL;

    if (!pFnGetGameSettings)
        pFnGetGameSettings = (UFunction*)UObject::GObjObjects()->Data[21884];

    UPlayfabInterface_eventGetGameSettings_Parms GetGameSettings_Parms;

    this->ProcessEvent(pFnGetGameSettings, &GetGameSettings_Parms, NULL);
};

// Function Engine.PlayfabInterface.CreateGameSettings
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::CreateGameSettings() {
    static UFunction* pFnCreateGameSettings = NULL;

    if (!pFnCreateGameSettings)
        pFnCreateGameSettings = (UFunction*)UObject::GObjObjects()->Data[31822];

    UPlayfabInterface_execCreateGameSettings_Parms CreateGameSettings_Parms;

    this->ProcessEvent(pFnCreateGameSettings, &CreateGameSettings_Parms, NULL);
};

// Function Engine.PlayfabInterface.ServerDeallocate
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerDeallocate() {
    static UFunction* pFnServerDeallocate = NULL;

    if (!pFnServerDeallocate)
        pFnServerDeallocate = (UFunction*)UObject::GObjObjects()->Data[31820];

    UPlayfabInterface_execServerDeallocate_Parms ServerDeallocate_Parms;

    pFnServerDeallocate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerDeallocate, &ServerDeallocate_Parms, NULL);

    pFnServerDeallocate->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerAllocate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerAllocate() {
    static UFunction* pFnServerAllocate = NULL;

    if (!pFnServerAllocate)
        pFnServerAllocate = (UFunction*)UObject::GObjObjects()->Data[31819];

    UPlayfabInterface_execServerAllocate_Parms ServerAllocate_Parms;

    pFnServerAllocate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerAllocate, &ServerAllocate_Parms, NULL);

    pFnServerAllocate->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerGrantItemsForUser
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerGrantItemsForUser() {
    static UFunction* pFnServerGrantItemsForUser = NULL;

    if (!pFnServerGrantItemsForUser)
        pFnServerGrantItemsForUser =
            (UFunction*)UObject::GObjObjects()->Data[31815];

    UPlayfabInterface_execServerGrantItemsForUser_Parms
        ServerGrantItemsForUser_Parms;

    pFnServerGrantItemsForUser->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerGrantItemsForUser,
                       &ServerGrantItemsForUser_Parms, NULL);

    pFnServerGrantItemsForUser->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerRemoveVirtualCurrencyForUser
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerRemoveVirtualCurrencyForUser() {
    static UFunction* pFnServerRemoveVirtualCurrencyForUser = NULL;

    if (!pFnServerRemoveVirtualCurrencyForUser)
        pFnServerRemoveVirtualCurrencyForUser =
            (UFunction*)UObject::GObjObjects()->Data[31811];

    UPlayfabInterface_execServerRemoveVirtualCurrencyForUser_Parms
        ServerRemoveVirtualCurrencyForUser_Parms;

    pFnServerRemoveVirtualCurrencyForUser->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerRemoveVirtualCurrencyForUser,
                       &ServerRemoveVirtualCurrencyForUser_Parms, NULL);

    pFnServerRemoveVirtualCurrencyForUser->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerAddVirtualCurrencyForUser
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerAddVirtualCurrencyForUser() {
    static UFunction* pFnServerAddVirtualCurrencyForUser = NULL;

    if (!pFnServerAddVirtualCurrencyForUser)
        pFnServerAddVirtualCurrencyForUser =
            (UFunction*)UObject::GObjObjects()->Data[31807];

    UPlayfabInterface_execServerAddVirtualCurrencyForUser_Parms
        ServerAddVirtualCurrencyForUser_Parms;

    pFnServerAddVirtualCurrencyForUser->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerAddVirtualCurrencyForUser,
                       &ServerAddVirtualCurrencyForUser_Parms, NULL);

    pFnServerAddVirtualCurrencyForUser->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerRetrieveInternalUserData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerRetrieveInternalUserData() {
    static UFunction* pFnServerRetrieveInternalUserData = NULL;

    if (!pFnServerRetrieveInternalUserData)
        pFnServerRetrieveInternalUserData =
            (UFunction*)UObject::GObjObjects()->Data[31803];

    UPlayfabInterface_execServerRetrieveInternalUserData_Parms
        ServerRetrieveInternalUserData_Parms;

    pFnServerRetrieveInternalUserData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerRetrieveInternalUserData,
                       &ServerRetrieveInternalUserData_Parms, NULL);

    pFnServerRetrieveInternalUserData->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerUpdateInternalUserData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerUpdateInternalUserData() {
    static UFunction* pFnServerUpdateInternalUserData = NULL;

    if (!pFnServerUpdateInternalUserData)
        pFnServerUpdateInternalUserData =
            (UFunction*)UObject::GObjObjects()->Data[31797];

    UPlayfabInterface_execServerUpdateInternalUserData_Parms
        ServerUpdateInternalUserData_Parms;

    pFnServerUpdateInternalUserData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerUpdateInternalUserData,
                       &ServerUpdateInternalUserData_Parms, NULL);

    pFnServerUpdateInternalUserData->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerSetOpenStatus
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerSetOpenStatus() {
    static UFunction* pFnServerSetOpenStatus = NULL;

    if (!pFnServerSetOpenStatus)
        pFnServerSetOpenStatus =
            (UFunction*)UObject::GObjObjects()->Data[31795];

    UPlayfabInterface_execServerSetOpenStatus_Parms ServerSetOpenStatus_Parms;

    pFnServerSetOpenStatus->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerSetOpenStatus, &ServerSetOpenStatus_Parms,
                       NULL);

    pFnServerSetOpenStatus->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerRegisterGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerRegisterGame() {
    static UFunction* pFnServerRegisterGame = NULL;

    if (!pFnServerRegisterGame)
        pFnServerRegisterGame = (UFunction*)UObject::GObjObjects()->Data[31794];

    UPlayfabInterface_execServerRegisterGame_Parms ServerRegisterGame_Parms;

    pFnServerRegisterGame->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerRegisterGame, &ServerRegisterGame_Parms, NULL);

    pFnServerRegisterGame->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerUpdateOnlineGame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerUpdateOnlineGame() {
    static UFunction* pFnServerUpdateOnlineGame = NULL;

    if (!pFnServerUpdateOnlineGame)
        pFnServerUpdateOnlineGame =
            (UFunction*)UObject::GObjObjects()->Data[31793];

    UPlayfabInterface_execServerUpdateOnlineGame_Parms
        ServerUpdateOnlineGame_Parms;

    pFnServerUpdateOnlineGame->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerUpdateOnlineGame, &ServerUpdateOnlineGame_Parms,
                       NULL);

    pFnServerUpdateOnlineGame->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerNotifyPlayerLeft
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerNotifyPlayerLeft() {
    static UFunction* pFnServerNotifyPlayerLeft = NULL;

    if (!pFnServerNotifyPlayerLeft)
        pFnServerNotifyPlayerLeft =
            (UFunction*)UObject::GObjObjects()->Data[31791];

    UPlayfabInterface_execServerNotifyPlayerLeft_Parms
        ServerNotifyPlayerLeft_Parms;

    pFnServerNotifyPlayerLeft->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerNotifyPlayerLeft, &ServerNotifyPlayerLeft_Parms,
                       NULL);

    pFnServerNotifyPlayerLeft->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerNotifyPlayerJoined
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerNotifyPlayerJoined() {
    static UFunction* pFnServerNotifyPlayerJoined = NULL;

    if (!pFnServerNotifyPlayerJoined)
        pFnServerNotifyPlayerJoined =
            (UFunction*)UObject::GObjObjects()->Data[31789];

    UPlayfabInterface_execServerNotifyPlayerJoined_Parms
        ServerNotifyPlayerJoined_Parms;

    pFnServerNotifyPlayerJoined->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerNotifyPlayerJoined,
                       &ServerNotifyPlayerJoined_Parms, NULL);

    pFnServerNotifyPlayerJoined->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ServerValidatePlayer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ServerValidatePlayer() {
    static UFunction* pFnServerValidatePlayer = NULL;

    if (!pFnServerValidatePlayer)
        pFnServerValidatePlayer =
            (UFunction*)UObject::GObjObjects()->Data[31787];

    UPlayfabInterface_execServerValidatePlayer_Parms ServerValidatePlayer_Parms;

    pFnServerValidatePlayer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnServerValidatePlayer, &ServerValidatePlayer_Parms,
                       NULL);

    pFnServerValidatePlayer->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.GetProfileSettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPlayfabInterface::eventGetProfileSettings() {
    static UFunction* pFnGetProfileSettings = NULL;

    if (!pFnGetProfileSettings)
        pFnGetProfileSettings = (UFunction*)UObject::GObjObjects()->Data[31784];

    UPlayfabInterface_eventGetProfileSettings_Parms GetProfileSettings_Parms;

    this->ProcessEvent(pFnGetProfileSettings, &GetProfileSettings_Parms, NULL);
};

// Function Engine.PlayfabInterface.GetLocalizedRegionName
// [0x00022002]
// Parameters infos:

void UPlayfabInterface::GetLocalizedRegionName() {
    static UFunction* pFnGetLocalizedRegionName = NULL;

    if (!pFnGetLocalizedRegionName)
        pFnGetLocalizedRegionName =
            (UFunction*)UObject::GObjObjects()->Data[31781];

    UPlayfabInterface_execGetLocalizedRegionName_Parms
        GetLocalizedRegionName_Parms;

    this->ProcessEvent(pFnGetLocalizedRegionName, &GetLocalizedRegionName_Parms,
                       NULL);
};

// Function Engine.PlayfabInterface.GetLocalizedRegionList
// [0x00022002]
// Parameters infos:

void UPlayfabInterface::GetLocalizedRegionList() {
    static UFunction* pFnGetLocalizedRegionList = NULL;

    if (!pFnGetLocalizedRegionList)
        pFnGetLocalizedRegionList =
            (UFunction*)UObject::GObjObjects()->Data[31775];

    UPlayfabInterface_execGetLocalizedRegionList_Parms
        GetLocalizedRegionList_Parms;

    this->ProcessEvent(pFnGetLocalizedRegionList, &GetLocalizedRegionList_Parms,
                       NULL);
};

// Function Engine.PlayfabInterface.SetIndexForCurrentRegion
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::SetIndexForCurrentRegion() {
    static UFunction* pFnSetIndexForCurrentRegion = NULL;

    if (!pFnSetIndexForCurrentRegion)
        pFnSetIndexForCurrentRegion =
            (UFunction*)UObject::GObjObjects()->Data[31773];

    UPlayfabInterface_execSetIndexForCurrentRegion_Parms
        SetIndexForCurrentRegion_Parms;

    this->ProcessEvent(pFnSetIndexForCurrentRegion,
                       &SetIndexForCurrentRegion_Parms, NULL);
};

// Function Engine.PlayfabInterface.GetIndexForCurrentRegion
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::GetIndexForCurrentRegion() {
    static UFunction* pFnGetIndexForCurrentRegion = NULL;

    if (!pFnGetIndexForCurrentRegion)
        pFnGetIndexForCurrentRegion =
            (UFunction*)UObject::GObjObjects()->Data[31770];

    UPlayfabInterface_execGetIndexForCurrentRegion_Parms
        GetIndexForCurrentRegion_Parms;

    this->ProcessEvent(pFnGetIndexForCurrentRegion,
                       &GetIndexForCurrentRegion_Parms, NULL);
};

// Function Engine.PlayfabInterface.GetServerId
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPlayfabInterface::eventGetServerId() {
    static UFunction* pFnGetServerId = NULL;

    if (!pFnGetServerId)
        pFnGetServerId = (UFunction*)UObject::GObjObjects()->Data[31768];

    UPlayfabInterface_eventGetServerId_Parms GetServerId_Parms;

    this->ProcessEvent(pFnGetServerId, &GetServerId_Parms, NULL);
};

// Function Engine.PlayfabInterface.IsCloudServer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPlayfabInterface::eventIsCloudServer() {
    static UFunction* pFnIsCloudServer = NULL;

    if (!pFnIsCloudServer)
        pFnIsCloudServer = (UFunction*)UObject::GObjObjects()->Data[31766];

    UPlayfabInterface_eventIsCloudServer_Parms IsCloudServer_Parms;

    this->ProcessEvent(pFnIsCloudServer, &IsCloudServer_Parms, NULL);
};

// Function Engine.PlayfabInterface.GetCachedLobbyId
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::GetCachedLobbyId() {
    static UFunction* pFnGetCachedLobbyId = NULL;

    if (!pFnGetCachedLobbyId)
        pFnGetCachedLobbyId = (UFunction*)UObject::GObjObjects()->Data[31764];

    UPlayfabInterface_execGetCachedLobbyId_Parms GetCachedLobbyId_Parms;

    this->ProcessEvent(pFnGetCachedLobbyId, &GetCachedLobbyId_Parms, NULL);
};

// Function Engine.PlayfabInterface.IsRegisteredWithPlayfab
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::IsRegisteredWithPlayfab() {
    static UFunction* pFnIsRegisteredWithPlayfab = NULL;

    if (!pFnIsRegisteredWithPlayfab)
        pFnIsRegisteredWithPlayfab =
            (UFunction*)UObject::GObjObjects()->Data[31762];

    UPlayfabInterface_execIsRegisteredWithPlayfab_Parms
        IsRegisteredWithPlayfab_Parms;

    this->ProcessEvent(pFnIsRegisteredWithPlayfab,
                       &IsRegisteredWithPlayfab_Parms, NULL);
};

// Function Engine.PlayfabInterface.ClearOnCloudScriptExecutionCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearOnCloudScriptExecutionCompleteDelegate() {
    static UFunction* pFnClearOnCloudScriptExecutionCompleteDelegate = NULL;

    if (!pFnClearOnCloudScriptExecutionCompleteDelegate)
        pFnClearOnCloudScriptExecutionCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31759];

    UPlayfabInterface_execClearOnCloudScriptExecutionCompleteDelegate_Parms
        ClearOnCloudScriptExecutionCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearOnCloudScriptExecutionCompleteDelegate,
                       &ClearOnCloudScriptExecutionCompleteDelegate_Parms,
                       NULL);
};

// Function Engine.PlayfabInterface.AddOnCloudScriptExecutionCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddOnCloudScriptExecutionCompleteDelegate() {
    static UFunction* pFnAddOnCloudScriptExecutionCompleteDelegate = NULL;

    if (!pFnAddOnCloudScriptExecutionCompleteDelegate)
        pFnAddOnCloudScriptExecutionCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31757];

    UPlayfabInterface_execAddOnCloudScriptExecutionCompleteDelegate_Parms
        AddOnCloudScriptExecutionCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddOnCloudScriptExecutionCompleteDelegate,
                       &AddOnCloudScriptExecutionCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnCloudScriptExecutionComplete
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnCloudScriptExecutionComplete() {
    static UFunction* pFnOnCloudScriptExecutionComplete = NULL;

    if (!pFnOnCloudScriptExecutionComplete)
        pFnOnCloudScriptExecutionComplete =
            (UFunction*)UObject::GObjObjects()->Data[31753];

    UPlayfabInterface_execOnCloudScriptExecutionComplete_Parms
        OnCloudScriptExecutionComplete_Parms;

    this->ProcessEvent(pFnOnCloudScriptExecutionComplete,
                       &OnCloudScriptExecutionComplete_Parms, NULL);
};

// Function Engine.PlayfabInterface.ExecuteCloudScript
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ExecuteCloudScript() {
    static UFunction* pFnExecuteCloudScript = NULL;

    if (!pFnExecuteCloudScript)
        pFnExecuteCloudScript = (UFunction*)UObject::GObjObjects()->Data[31750];

    UPlayfabInterface_execExecuteCloudScript_Parms ExecuteCloudScript_Parms;

    pFnExecuteCloudScript->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnExecuteCloudScript, &ExecuteCloudScript_Parms, NULL);

    pFnExecuteCloudScript->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearOnServerStartedDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearOnServerStartedDelegate() {
    static UFunction* pFnClearOnServerStartedDelegate = NULL;

    if (!pFnClearOnServerStartedDelegate)
        pFnClearOnServerStartedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31747];

    UPlayfabInterface_execClearOnServerStartedDelegate_Parms
        ClearOnServerStartedDelegate_Parms;

    this->ProcessEvent(pFnClearOnServerStartedDelegate,
                       &ClearOnServerStartedDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddOnServerStartedDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddOnServerStartedDelegate() {
    static UFunction* pFnAddOnServerStartedDelegate = NULL;

    if (!pFnAddOnServerStartedDelegate)
        pFnAddOnServerStartedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31745];

    UPlayfabInterface_execAddOnServerStartedDelegate_Parms
        AddOnServerStartedDelegate_Parms;

    this->ProcessEvent(pFnAddOnServerStartedDelegate,
                       &AddOnServerStartedDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnServerStarted
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnServerStarted() {
    static UFunction* pFnOnServerStarted = NULL;

    if (!pFnOnServerStarted)
        pFnOnServerStarted = (UFunction*)UObject::GObjObjects()->Data[31739];

    UPlayfabInterface_execOnServerStarted_Parms OnServerStarted_Parms;

    this->ProcessEvent(pFnOnServerStarted, &OnServerStarted_Parms, NULL);
};

// Function Engine.PlayfabInterface.StartNewServerInstance
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::StartNewServerInstance() {
    static UFunction* pFnStartNewServerInstance = NULL;

    if (!pFnStartNewServerInstance)
        pFnStartNewServerInstance =
            (UFunction*)UObject::GObjObjects()->Data[31737];

    UPlayfabInterface_execStartNewServerInstance_Parms
        StartNewServerInstance_Parms;

    pFnStartNewServerInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStartNewServerInstance, &StartNewServerInstance_Parms,
                       NULL);

    pFnStartNewServerInstance->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearRegionQueryCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearRegionQueryCompleteDelegate() {
    static UFunction* pFnClearRegionQueryCompleteDelegate = NULL;

    if (!pFnClearRegionQueryCompleteDelegate)
        pFnClearRegionQueryCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31734];

    UPlayfabInterface_execClearRegionQueryCompleteDelegate_Parms
        ClearRegionQueryCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRegionQueryCompleteDelegate,
                       &ClearRegionQueryCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddRegionQueryCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddRegionQueryCompleteDelegate() {
    static UFunction* pFnAddRegionQueryCompleteDelegate = NULL;

    if (!pFnAddRegionQueryCompleteDelegate)
        pFnAddRegionQueryCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31732];

    UPlayfabInterface_execAddRegionQueryCompleteDelegate_Parms
        AddRegionQueryCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRegionQueryCompleteDelegate,
                       &AddRegionQueryCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.QueryAvailableRegions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::QueryAvailableRegions() {
    static UFunction* pFnQueryAvailableRegions = NULL;

    if (!pFnQueryAvailableRegions)
        pFnQueryAvailableRegions =
            (UFunction*)UObject::GObjObjects()->Data[31731];

    UPlayfabInterface_execQueryAvailableRegions_Parms
        QueryAvailableRegions_Parms;

    pFnQueryAvailableRegions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnQueryAvailableRegions, &QueryAvailableRegions_Parms,
                       NULL);

    pFnQueryAvailableRegions->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.OnRegionQueryComplete
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnRegionQueryComplete() {
    static UFunction* pFnOnRegionQueryComplete = NULL;

    if (!pFnOnRegionQueryComplete)
        pFnOnRegionQueryComplete =
            (UFunction*)UObject::GObjObjects()->Data[31727];

    UPlayfabInterface_execOnRegionQueryComplete_Parms
        OnRegionQueryComplete_Parms;

    this->ProcessEvent(pFnOnRegionQueryComplete, &OnRegionQueryComplete_Parms,
                       NULL);
};

// Function Engine.PlayfabInterface.ClearQueryServerInfoCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearQueryServerInfoCompleteDelegate() {
    static UFunction* pFnClearQueryServerInfoCompleteDelegate = NULL;

    if (!pFnClearQueryServerInfoCompleteDelegate)
        pFnClearQueryServerInfoCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31724];

    UPlayfabInterface_execClearQueryServerInfoCompleteDelegate_Parms
        ClearQueryServerInfoCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearQueryServerInfoCompleteDelegate,
                       &ClearQueryServerInfoCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddQueryServerInfoCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddQueryServerInfoCompleteDelegate() {
    static UFunction* pFnAddQueryServerInfoCompleteDelegate = NULL;

    if (!pFnAddQueryServerInfoCompleteDelegate)
        pFnAddQueryServerInfoCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31722];

    UPlayfabInterface_execAddQueryServerInfoCompleteDelegate_Parms
        AddQueryServerInfoCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddQueryServerInfoCompleteDelegate,
                       &AddQueryServerInfoCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnQueryServerInfoComplete
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnQueryServerInfoComplete() {
    static UFunction* pFnOnQueryServerInfoComplete = NULL;

    if (!pFnOnQueryServerInfoComplete)
        pFnOnQueryServerInfoComplete =
            (UFunction*)UObject::GObjObjects()->Data[31716];

    UPlayfabInterface_execOnQueryServerInfoComplete_Parms
        OnQueryServerInfoComplete_Parms;

    this->ProcessEvent(pFnOnQueryServerInfoComplete,
                       &OnQueryServerInfoComplete_Parms, NULL);
};

// Function Engine.PlayfabInterface.QueryServerInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::QueryServerInfo() {
    static UFunction* pFnQueryServerInfo = NULL;

    if (!pFnQueryServerInfo)
        pFnQueryServerInfo = (UFunction*)UObject::GObjObjects()->Data[31714];

    UPlayfabInterface_execQueryServerInfo_Parms QueryServerInfo_Parms;

    pFnQueryServerInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnQueryServerInfo, &QueryServerInfo_Parms, NULL);

    pFnQueryServerInfo->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.CancelGameSearch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::CancelGameSearch() {
    static UFunction* pFnCancelGameSearch = NULL;

    if (!pFnCancelGameSearch)
        pFnCancelGameSearch = (UFunction*)UObject::GObjObjects()->Data[31713];

    UPlayfabInterface_execCancelGameSearch_Parms CancelGameSearch_Parms;

    pFnCancelGameSearch->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCancelGameSearch, &CancelGameSearch_Parms, NULL);

    pFnCancelGameSearch->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearFindOnlineGamesCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearFindOnlineGamesCompleteDelegate() {
    static UFunction* pFnClearFindOnlineGamesCompleteDelegate = NULL;

    if (!pFnClearFindOnlineGamesCompleteDelegate)
        pFnClearFindOnlineGamesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31710];

    UPlayfabInterface_execClearFindOnlineGamesCompleteDelegate_Parms
        ClearFindOnlineGamesCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearFindOnlineGamesCompleteDelegate,
                       &ClearFindOnlineGamesCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddFindOnlineGamesCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddFindOnlineGamesCompleteDelegate() {
    static UFunction* pFnAddFindOnlineGamesCompleteDelegate = NULL;

    if (!pFnAddFindOnlineGamesCompleteDelegate)
        pFnAddFindOnlineGamesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31708];

    UPlayfabInterface_execAddFindOnlineGamesCompleteDelegate_Parms
        AddFindOnlineGamesCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddFindOnlineGamesCompleteDelegate,
                       &AddFindOnlineGamesCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnFindOnlineGamesComplete
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnFindOnlineGamesComplete() {
    static UFunction* pFnOnFindOnlineGamesComplete = NULL;

    if (!pFnOnFindOnlineGamesComplete)
        pFnOnFindOnlineGamesComplete =
            (UFunction*)UObject::GObjObjects()->Data[31706];

    UPlayfabInterface_execOnFindOnlineGamesComplete_Parms
        OnFindOnlineGamesComplete_Parms;

    this->ProcessEvent(pFnOnFindOnlineGamesComplete,
                       &OnFindOnlineGamesComplete_Parms, NULL);
};

// Function Engine.PlayfabInterface.FindOnlineGames
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::FindOnlineGames() {
    static UFunction* pFnFindOnlineGames = NULL;

    if (!pFnFindOnlineGames)
        pFnFindOnlineGames = (UFunction*)UObject::GObjObjects()->Data[31703];

    UPlayfabInterface_execFindOnlineGames_Parms FindOnlineGames_Parms;

    pFnFindOnlineGames->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindOnlineGames, &FindOnlineGames_Parms, NULL);

    pFnFindOnlineGames->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ConsumeEntitlements
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ConsumeEntitlements() {
    static UFunction* pFnConsumeEntitlements = NULL;

    if (!pFnConsumeEntitlements)
        pFnConsumeEntitlements =
            (UFunction*)UObject::GObjObjects()->Data[31702];

    UPlayfabInterface_execConsumeEntitlements_Parms ConsumeEntitlements_Parms;

    pFnConsumeEntitlements->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnConsumeEntitlements, &ConsumeEntitlements_Parms,
                       NULL);

    pFnConsumeEntitlements->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.UnlockContainer
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::UnlockContainer() {
    static UFunction* pFnUnlockContainer = NULL;

    if (!pFnUnlockContainer)
        pFnUnlockContainer = (UFunction*)UObject::GObjObjects()->Data[31700];

    UPlayfabInterface_execUnlockContainer_Parms UnlockContainer_Parms;

    pFnUnlockContainer->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnlockContainer, &UnlockContainer_Parms, NULL);

    pFnUnlockContainer->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.GetTitleDataForKey
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::GetTitleDataForKey() {
    static UFunction* pFnGetTitleDataForKey = NULL;

    if (!pFnGetTitleDataForKey)
        pFnGetTitleDataForKey = (UFunction*)UObject::GObjObjects()->Data[31697];

    UPlayfabInterface_execGetTitleDataForKey_Parms GetTitleDataForKey_Parms;

    pFnGetTitleDataForKey->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTitleDataForKey, &GetTitleDataForKey_Parms, NULL);

    pFnGetTitleDataForKey->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearTitleDataReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearTitleDataReadCompleteDelegate() {
    static UFunction* pFnClearTitleDataReadCompleteDelegate = NULL;

    if (!pFnClearTitleDataReadCompleteDelegate)
        pFnClearTitleDataReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31694];

    UPlayfabInterface_execClearTitleDataReadCompleteDelegate_Parms
        ClearTitleDataReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearTitleDataReadCompleteDelegate,
                       &ClearTitleDataReadCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddTitleDataReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddTitleDataReadCompleteDelegate() {
    static UFunction* pFnAddTitleDataReadCompleteDelegate = NULL;

    if (!pFnAddTitleDataReadCompleteDelegate)
        pFnAddTitleDataReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31692];

    UPlayfabInterface_execAddTitleDataReadCompleteDelegate_Parms
        AddTitleDataReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddTitleDataReadCompleteDelegate,
                       &AddTitleDataReadCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnTitleDataRead
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnTitleDataRead() {
    static UFunction* pFnOnTitleDataRead = NULL;

    if (!pFnOnTitleDataRead)
        pFnOnTitleDataRead = (UFunction*)UObject::GObjObjects()->Data[31691];

    UPlayfabInterface_execOnTitleDataRead_Parms OnTitleDataRead_Parms;

    this->ProcessEvent(pFnOnTitleDataRead, &OnTitleDataRead_Parms, NULL);
};

// Function Engine.PlayfabInterface.ReadTitleData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ReadTitleData() {
    static UFunction* pFnReadTitleData = NULL;

    if (!pFnReadTitleData)
        pFnReadTitleData = (UFunction*)UObject::GObjObjects()->Data[31690];

    UPlayfabInterface_execReadTitleData_Parms ReadTitleData_Parms;

    pFnReadTitleData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReadTitleData, &ReadTitleData_Parms, NULL);

    pFnReadTitleData->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearInventoryReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearInventoryReadCompleteDelegate() {
    static UFunction* pFnClearInventoryReadCompleteDelegate = NULL;

    if (!pFnClearInventoryReadCompleteDelegate)
        pFnClearInventoryReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31687];

    UPlayfabInterface_execClearInventoryReadCompleteDelegate_Parms
        ClearInventoryReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearInventoryReadCompleteDelegate,
                       &ClearInventoryReadCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddInventoryReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddInventoryReadCompleteDelegate() {
    static UFunction* pFnAddInventoryReadCompleteDelegate = NULL;

    if (!pFnAddInventoryReadCompleteDelegate)
        pFnAddInventoryReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31685];

    UPlayfabInterface_execAddInventoryReadCompleteDelegate_Parms
        AddInventoryReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddInventoryReadCompleteDelegate,
                       &AddInventoryReadCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnInventoryRead
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnInventoryRead() {
    static UFunction* pFnOnInventoryRead = NULL;

    if (!pFnOnInventoryRead)
        pFnOnInventoryRead = (UFunction*)UObject::GObjObjects()->Data[31683];

    UPlayfabInterface_execOnInventoryRead_Parms OnInventoryRead_Parms;

    this->ProcessEvent(pFnOnInventoryRead, &OnInventoryRead_Parms, NULL);
};

// Function Engine.PlayfabInterface.ReadInventory
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ReadInventory() {
    static UFunction* pFnReadInventory = NULL;

    if (!pFnReadInventory)
        pFnReadInventory = (UFunction*)UObject::GObjObjects()->Data[31682];

    UPlayfabInterface_execReadInventory_Parms ReadInventory_Parms;

    pFnReadInventory->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReadInventory, &ReadInventory_Parms, NULL);

    pFnReadInventory->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearStoreDataReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearStoreDataReadCompleteDelegate() {
    static UFunction* pFnClearStoreDataReadCompleteDelegate = NULL;

    if (!pFnClearStoreDataReadCompleteDelegate)
        pFnClearStoreDataReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31679];

    UPlayfabInterface_execClearStoreDataReadCompleteDelegate_Parms
        ClearStoreDataReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearStoreDataReadCompleteDelegate,
                       &ClearStoreDataReadCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddStoreDataReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddStoreDataReadCompleteDelegate() {
    static UFunction* pFnAddStoreDataReadCompleteDelegate = NULL;

    if (!pFnAddStoreDataReadCompleteDelegate)
        pFnAddStoreDataReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31677];

    UPlayfabInterface_execAddStoreDataReadCompleteDelegate_Parms
        AddStoreDataReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddStoreDataReadCompleteDelegate,
                       &AddStoreDataReadCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnStoreDataRead
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnStoreDataRead() {
    static UFunction* pFnOnStoreDataRead = NULL;

    if (!pFnOnStoreDataRead)
        pFnOnStoreDataRead = (UFunction*)UObject::GObjObjects()->Data[31675];

    UPlayfabInterface_execOnStoreDataRead_Parms OnStoreDataRead_Parms;

    this->ProcessEvent(pFnOnStoreDataRead, &OnStoreDataRead_Parms, NULL);
};

// Function Engine.PlayfabInterface.ReadStoreData
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::ReadStoreData() {
    static UFunction* pFnReadStoreData = NULL;

    if (!pFnReadStoreData)
        pFnReadStoreData = (UFunction*)UObject::GObjObjects()->Data[31674];

    UPlayfabInterface_execReadStoreData_Parms ReadStoreData_Parms;

    pFnReadStoreData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReadStoreData, &ReadStoreData_Parms, NULL);

    pFnReadStoreData->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.Logout
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::Logout() {
    static UFunction* pFnLogout = NULL;

    if (!pFnLogout) pFnLogout = (UFunction*)UObject::GObjObjects()->Data[31672];

    UPlayfabInterface_execLogout_Parms Logout_Parms;

    pFnLogout->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogout, &Logout_Parms, NULL);

    pFnLogout->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.SetDefaultRegion
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::SetDefaultRegion() {
    static UFunction* pFnSetDefaultRegion = NULL;

    if (!pFnSetDefaultRegion)
        pFnSetDefaultRegion = (UFunction*)UObject::GObjObjects()->Data[31670];

    UPlayfabInterface_execSetDefaultRegion_Parms SetDefaultRegion_Parms;

    pFnSetDefaultRegion->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDefaultRegion, &SetDefaultRegion_Parms, NULL);

    pFnSetDefaultRegion->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.GetRegionIndex
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::GetRegionIndex() {
    static UFunction* pFnGetRegionIndex = NULL;

    if (!pFnGetRegionIndex)
        pFnGetRegionIndex = (UFunction*)UObject::GObjObjects()->Data[31667];

    UPlayfabInterface_execGetRegionIndex_Parms GetRegionIndex_Parms;

    pFnGetRegionIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRegionIndex, &GetRegionIndex_Parms, NULL);

    pFnGetRegionIndex->FunctionFlags |= 0x400;
};

// Function Engine.PlayfabInterface.ClearOnLoginCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::ClearOnLoginCompleteDelegate() {
    static UFunction* pFnClearOnLoginCompleteDelegate = NULL;

    if (!pFnClearOnLoginCompleteDelegate)
        pFnClearOnLoginCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31664];

    UPlayfabInterface_execClearOnLoginCompleteDelegate_Parms
        ClearOnLoginCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearOnLoginCompleteDelegate,
                       &ClearOnLoginCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.AddOnLoginCompleteDelegate
// [0x00020002]
// Parameters infos:

void UPlayfabInterface::AddOnLoginCompleteDelegate() {
    static UFunction* pFnAddOnLoginCompleteDelegate = NULL;

    if (!pFnAddOnLoginCompleteDelegate)
        pFnAddOnLoginCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[31662];

    UPlayfabInterface_execAddOnLoginCompleteDelegate_Parms
        AddOnLoginCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddOnLoginCompleteDelegate,
                       &AddOnLoginCompleteDelegate_Parms, NULL);
};

// Function Engine.PlayfabInterface.OnLoginComplete
// [0x00120000]
// Parameters infos:

void UPlayfabInterface::OnLoginComplete() {
    static UFunction* pFnOnLoginComplete = NULL;

    if (!pFnOnLoginComplete)
        pFnOnLoginComplete = (UFunction*)UObject::GObjObjects()->Data[31658];

    UPlayfabInterface_execOnLoginComplete_Parms OnLoginComplete_Parms;

    this->ProcessEvent(pFnOnLoginComplete, &OnLoginComplete_Parms, NULL);
};

// Function Engine.PlayfabInterface.Login
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayfabInterface::Login() {
    static UFunction* pFnLogin = NULL;

    if (!pFnLogin) pFnLogin = (UFunction*)UObject::GObjObjects()->Data[31655];

    UPlayfabInterface_execLogin_Parms Login_Parms;

    pFnLogin->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogin, &Login_Parms, NULL);

    pFnLogin->FunctionFlags |= 0x400;
};

// Function Engine.PostProcessChain.FindPostProcessEffect
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UPostProcessChain::FindPostProcessEffect() {
    static UFunction* pFnFindPostProcessEffect = NULL;

    if (!pFnFindPostProcessEffect)
        pFnFindPostProcessEffect =
            (UFunction*)UObject::GObjObjects()->Data[31926];

    UPostProcessChain_execFindPostProcessEffect_Parms
        FindPostProcessEffect_Parms;

    this->ProcessEvent(pFnFindPostProcessEffect, &FindPostProcessEffect_Parms,
                       NULL);
};

// Function Engine.ReachSpec.GetCostFor
// [0x00020002]
// Parameters infos:

void UReachSpec::GetCostFor() {
    static UFunction* pFnGetCostFor = NULL;

    if (!pFnGetCostFor)
        pFnGetCostFor = (UFunction*)UObject::GObjObjects()->Data[12719];

    UReachSpec_execGetCostFor_Parms GetCostFor_Parms;

    this->ProcessEvent(pFnGetCostFor, &GetCostFor_Parms, NULL);
};

// Function Engine.ReachSpec.IsBlockedFor
// [0x00020002]
// Parameters infos:

void UReachSpec::IsBlockedFor() {
    static UFunction* pFnIsBlockedFor = NULL;

    if (!pFnIsBlockedFor)
        pFnIsBlockedFor = (UFunction*)UObject::GObjObjects()->Data[12716];

    UReachSpec_execIsBlockedFor_Parms IsBlockedFor_Parms;

    this->ProcessEvent(pFnIsBlockedFor, &IsBlockedFor_Parms, NULL);
};

// Function Engine.ReachSpec.GetDirection
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UReachSpec::GetDirection() {
    static UFunction* pFnGetDirection = NULL;

    if (!pFnGetDirection)
        pFnGetDirection = (UFunction*)UObject::GObjObjects()->Data[12714];

    UReachSpec_execGetDirection_Parms GetDirection_Parms;

    pFnGetDirection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDirection, &GetDirection_Parms, NULL);

    pFnGetDirection->FunctionFlags |= 0x400;
};

// Function Engine.ReachSpec.GetEnd
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UReachSpec::GetEnd() {
    static UFunction* pFnGetEnd = NULL;

    if (!pFnGetEnd) pFnGetEnd = (UFunction*)UObject::GObjObjects()->Data[12712];

    UReachSpec_execGetEnd_Parms GetEnd_Parms;

    pFnGetEnd->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetEnd, &GetEnd_Parms, NULL);

    pFnGetEnd->FunctionFlags |= 0x400;
};

// Function Engine.ReachSpec.CostFor
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UReachSpec::CostFor() {
    static UFunction* pFnCostFor = NULL;

    if (!pFnCostFor)
        pFnCostFor = (UFunction*)UObject::GObjObjects()->Data[12709];

    UReachSpec_execCostFor_Parms CostFor_Parms;

    pFnCostFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCostFor, &CostFor_Parms, NULL);

    pFnCostFor->FunctionFlags |= 0x400;
};

// Function Engine.SavedMove.GetDebugString
// [0x00020002]
// Parameters infos:

void USavedMove::GetDebugString() {
    static UFunction* pFnGetDebugString = NULL;

    if (!pFnGetDebugString)
        pFnGetDebugString = (UFunction*)UObject::GObjObjects()->Data[12475];

    USavedMove_execGetDebugString_Parms GetDebugString_Parms;

    this->ProcessEvent(pFnGetDebugString, &GetDebugString_Parms, NULL);
};

// Function Engine.SavedMove.SetFlags
// [0x00022002]
// Parameters infos:

void USavedMove::SetFlags() {
    static UFunction* pFnSetFlags = NULL;

    if (!pFnSetFlags)
        pFnSetFlags = (UFunction*)UObject::GObjObjects()->Data[12484];

    USavedMove_execSetFlags_Parms SetFlags_Parms;

    this->ProcessEvent(pFnSetFlags, &SetFlags_Parms, NULL);
};

// Function Engine.SavedMove.CompressedFlags
// [0x00020002]
// Parameters infos:

void USavedMove::CompressedFlags() {
    static UFunction* pFnCompressedFlags = NULL;

    if (!pFnCompressedFlags)
        pFnCompressedFlags = (UFunction*)UObject::GObjObjects()->Data[12469];

    USavedMove_execCompressedFlags_Parms CompressedFlags_Parms;

    this->ProcessEvent(pFnCompressedFlags, &CompressedFlags_Parms, NULL);
};

// Function Engine.SavedMove.ResetMoveFor
// [0x00020002]
// Parameters infos:

void USavedMove::ResetMoveFor() {
    static UFunction* pFnResetMoveFor = NULL;

    if (!pFnResetMoveFor)
        pFnResetMoveFor = (UFunction*)UObject::GObjObjects()->Data[32590];

    USavedMove_execResetMoveFor_Parms ResetMoveFor_Parms;

    this->ProcessEvent(pFnResetMoveFor, &ResetMoveFor_Parms, NULL);
};

// Function Engine.SavedMove.PrepMoveFor
// [0x00020002]
// Parameters infos:

void USavedMove::PrepMoveFor() {
    static UFunction* pFnPrepMoveFor = NULL;

    if (!pFnPrepMoveFor)
        pFnPrepMoveFor = (UFunction*)UObject::GObjObjects()->Data[32588];

    USavedMove_execPrepMoveFor_Parms PrepMoveFor_Parms;

    this->ProcessEvent(pFnPrepMoveFor, &PrepMoveFor_Parms, NULL);
};

// Function Engine.SavedMove.SetMoveFor
// [0x00020002]
// Parameters infos:

void USavedMove::SetMoveFor() {
    static UFunction* pFnSetMoveFor = NULL;

    if (!pFnSetMoveFor)
        pFnSetMoveFor = (UFunction*)UObject::GObjObjects()->Data[32583];

    USavedMove_execSetMoveFor_Parms SetMoveFor_Parms;

    this->ProcessEvent(pFnSetMoveFor, &SetMoveFor_Parms, NULL);
};

// Function Engine.SavedMove.CanCombineWith
// [0x00020002]
// Parameters infos:

void USavedMove::CanCombineWith() {
    static UFunction* pFnCanCombineWith = NULL;

    if (!pFnCanCombineWith)
        pFnCanCombineWith = (UFunction*)UObject::GObjObjects()->Data[12387];

    USavedMove_execCanCombineWith_Parms CanCombineWith_Parms;

    this->ProcessEvent(pFnCanCombineWith, &CanCombineWith_Parms, NULL);
};

// Function Engine.SavedMove.SetInitialPosition
// [0x00020002]
// Parameters infos:

void USavedMove::SetInitialPosition() {
    static UFunction* pFnSetInitialPosition = NULL;

    if (!pFnSetInitialPosition)
        pFnSetInitialPosition = (UFunction*)UObject::GObjObjects()->Data[32578];

    USavedMove_execSetInitialPosition_Parms SetInitialPosition_Parms;

    this->ProcessEvent(pFnSetInitialPosition, &SetInitialPosition_Parms, NULL);
};

// Function Engine.SavedMove.GetStartLocation
// [0x00020002]
// Parameters infos:

void USavedMove::GetStartLocation() {
    static UFunction* pFnGetStartLocation = NULL;

    if (!pFnGetStartLocation)
        pFnGetStartLocation = (UFunction*)UObject::GObjObjects()->Data[12389];

    USavedMove_execGetStartLocation_Parms GetStartLocation_Parms;

    this->ProcessEvent(pFnGetStartLocation, &GetStartLocation_Parms, NULL);
};

// Function Engine.SavedMove.IsImportantMove
// [0x00820002]
// Parameters infos:

void USavedMove::IsImportantMove() {
    static UFunction* pFnIsImportantMove = NULL;

    if (!pFnIsImportantMove)
        pFnIsImportantMove = (UFunction*)UObject::GObjObjects()->Data[12381];

    USavedMove_execIsImportantMove_Parms IsImportantMove_Parms;

    this->ProcessEvent(pFnIsImportantMove, &IsImportantMove_Parms, NULL);
};

// Function Engine.SavedMove.PostUpdate
// [0x00020002]
// Parameters infos:

void USavedMove::PostUpdate() {
    static UFunction* pFnPostUpdate = NULL;

    if (!pFnPostUpdate)
        pFnPostUpdate = (UFunction*)UObject::GObjObjects()->Data[32574];

    USavedMove_execPostUpdate_Parms PostUpdate_Parms;

    this->ProcessEvent(pFnPostUpdate, &PostUpdate_Parms, NULL);
};

// Function Engine.SavedMove.Clear
// [0x00020002]
// Parameters infos:

void USavedMove::Clear() {
    static UFunction* pFnClear = NULL;

    if (!pFnClear) pFnClear = (UFunction*)UObject::GObjObjects()->Data[32573];

    USavedMove_execClear_Parms Clear_Parms;

    this->ProcessEvent(pFnClear, &Clear_Parms, NULL);
};

// Function Engine.GameViewportClient.SetHardwareMouseCursorVisibility
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventSetHardwareMouseCursorVisibility() {
    static UFunction* pFnSetHardwareMouseCursorVisibility = NULL;

    if (!pFnSetHardwareMouseCursorVisibility)
        pFnSetHardwareMouseCursorVisibility =
            (UFunction*)UObject::GObjObjects()->Data[22827];

    UGameViewportClient_eventSetHardwareMouseCursorVisibility_Parms
        SetHardwareMouseCursorVisibility_Parms;

    this->ProcessEvent(pFnSetHardwareMouseCursorVisibility,
                       &SetHardwareMouseCursorVisibility_Parms, NULL);
};

// Function Engine.GameViewportClient.DebugSetUISystemEnabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::DebugSetUISystemEnabled() {
    static UFunction* pFnDebugSetUISystemEnabled = NULL;

    if (!pFnDebugSetUISystemEnabled)
        pFnDebugSetUISystemEnabled =
            (UFunction*)UObject::GObjObjects()->Data[22824];

    UGameViewportClient_execDebugSetUISystemEnabled_Parms
        DebugSetUISystemEnabled_Parms;

    pFnDebugSetUISystemEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDebugSetUISystemEnabled,
                       &DebugSetUISystemEnabled_Parms, NULL);

    pFnDebugSetUISystemEnabled->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.IsScaleformEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::IsScaleformEnabled() {
    static UFunction* pFnIsScaleformEnabled = NULL;

    if (!pFnIsScaleformEnabled)
        pFnIsScaleformEnabled = (UFunction*)UObject::GObjObjects()->Data[22822];

    UGameViewportClient_execIsScaleformEnabled_Parms IsScaleformEnabled_Parms;

    pFnIsScaleformEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsScaleformEnabled, &IsScaleformEnabled_Parms, NULL);

    pFnIsScaleformEnabled->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.DisableScaleform
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::DisableScaleform() {
    static UFunction* pFnDisableScaleform = NULL;

    if (!pFnDisableScaleform)
        pFnDisableScaleform = (UFunction*)UObject::GObjObjects()->Data[22821];

    UGameViewportClient_execDisableScaleform_Parms DisableScaleform_Parms;

    pFnDisableScaleform->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDisableScaleform, &DisableScaleform_Parms, NULL);

    pFnDisableScaleform->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.EnableScaleform
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::EnableScaleform() {
    static UFunction* pFnEnableScaleform = NULL;

    if (!pFnEnableScaleform)
        pFnEnableScaleform = (UFunction*)UObject::GObjObjects()->Data[22820];

    UGameViewportClient_execEnableScaleform_Parms EnableScaleform_Parms;

    pFnEnableScaleform->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableScaleform, &EnableScaleform_Parms, NULL);

    pFnEnableScaleform->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.BecomePrimaryPlayer
// [0x00020002]
// Parameters infos:

void UGameViewportClient::BecomePrimaryPlayer() {
    static UFunction* pFnBecomePrimaryPlayer = NULL;

    if (!pFnBecomePrimaryPlayer)
        pFnBecomePrimaryPlayer =
            (UFunction*)UObject::GObjObjects()->Data[22808];

    UGameViewportClient_execBecomePrimaryPlayer_Parms BecomePrimaryPlayer_Parms;

    this->ProcessEvent(pFnBecomePrimaryPlayer, &BecomePrimaryPlayer_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.OnPrimaryPlayerSwitch
// [0x00020000]
// Parameters infos:

void UGameViewportClient::OnPrimaryPlayerSwitch() {
    static UFunction* pFnOnPrimaryPlayerSwitch = NULL;

    if (!pFnOnPrimaryPlayerSwitch)
        pFnOnPrimaryPlayerSwitch =
            (UFunction*)UObject::GObjObjects()->Data[22805];

    UGameViewportClient_execOnPrimaryPlayerSwitch_Parms
        OnPrimaryPlayerSwitch_Parms;

    this->ProcessEvent(pFnOnPrimaryPlayerSwitch, &OnPrimaryPlayerSwitch_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.FixupOwnerReferences
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::FixupOwnerReferences() {
    static UFunction* pFnFixupOwnerReferences = NULL;

    if (!pFnFixupOwnerReferences)
        pFnFixupOwnerReferences =
            (UFunction*)UObject::GObjObjects()->Data[22802];

    UGameViewportClient_execFixupOwnerReferences_Parms
        FixupOwnerReferences_Parms;

    pFnFixupOwnerReferences->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFixupOwnerReferences, &FixupOwnerReferences_Parms,
                       NULL);

    pFnFixupOwnerReferences->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.GetPlayerOwner
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::GetPlayerOwner() {
    static UFunction* pFnGetPlayerOwner = NULL;

    if (!pFnGetPlayerOwner)
        pFnGetPlayerOwner = (UFunction*)UObject::GObjObjects()->Data[22799];

    UGameViewportClient_execGetPlayerOwner_Parms GetPlayerOwner_Parms;

    pFnGetPlayerOwner->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerOwner, &GetPlayerOwner_Parms, NULL);

    pFnGetPlayerOwner->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.ClearProgressMessages
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UGameViewportClient::ClearProgressMessages() {
    static UFunction* pFnClearProgressMessages = NULL;

    if (!pFnClearProgressMessages)
        pFnClearProgressMessages =
            (UFunction*)UObject::GObjObjects()->Data[22797];

    UGameViewportClient_execClearProgressMessages_Parms
        ClearProgressMessages_Parms;

    this->ProcessEvent(pFnClearProgressMessages, &ClearProgressMessages_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.SetProgressTime
// [0x00020A02] ( FUNC_Exec | FUNC_Event )
// Parameters infos:

void UGameViewportClient::SetProgressTime() {
    static UFunction* pFnSetProgressTime = NULL;

    if (!pFnSetProgressTime)
        pFnSetProgressTime = (UFunction*)UObject::GObjObjects()->Data[22795];

    UGameViewportClient_execSetProgressTime_Parms SetProgressTime_Parms;

    this->ProcessEvent(pFnSetProgressTime, &SetProgressTime_Parms, NULL);
};

// Function Engine.GameViewportClient.NotifyConnectionError
// [0x00024002]
// Parameters infos:

void UGameViewportClient::NotifyConnectionError() {
    static UFunction* pFnNotifyConnectionError = NULL;

    if (!pFnNotifyConnectionError)
        pFnNotifyConnectionError =
            (UFunction*)UObject::GObjObjects()->Data[22790];

    UGameViewportClient_execNotifyConnectionError_Parms
        NotifyConnectionError_Parms;

    this->ProcessEvent(pFnNotifyConnectionError, &NotifyConnectionError_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.SetProgressMessage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventSetProgressMessage() {
    static UFunction* pFnSetProgressMessage = NULL;

    if (!pFnSetProgressMessage)
        pFnSetProgressMessage = (UFunction*)UObject::GObjObjects()->Data[22784];

    UGameViewportClient_eventSetProgressMessage_Parms SetProgressMessage_Parms;

    this->ProcessEvent(pFnSetProgressMessage, &SetProgressMessage_Parms, NULL);
};

// Function Engine.GameViewportClient.RemoveLocalPlayer
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::RemoveLocalPlayer() {
    static UFunction* pFnRemoveLocalPlayer = NULL;

    if (!pFnRemoveLocalPlayer)
        pFnRemoveLocalPlayer = (UFunction*)UObject::GObjObjects()->Data[22780];

    UGameViewportClient_execRemoveLocalPlayer_Parms RemoveLocalPlayer_Parms;

    this->ProcessEvent(pFnRemoveLocalPlayer, &RemoveLocalPlayer_Parms, NULL);
};

// Function Engine.GameViewportClient.AddLocalPlayer
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::AddLocalPlayer() {
    static UFunction* pFnAddLocalPlayer = NULL;

    if (!pFnAddLocalPlayer)
        pFnAddLocalPlayer = (UFunction*)UObject::GObjObjects()->Data[22776];

    UGameViewportClient_execAddLocalPlayer_Parms AddLocalPlayer_Parms;

    this->ProcessEvent(pFnAddLocalPlayer, &AddLocalPlayer_Parms, NULL);
};

// Function Engine.GameViewportClient.NotifyPlayerRemoved
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::NotifyPlayerRemoved() {
    static UFunction* pFnNotifyPlayerRemoved = NULL;

    if (!pFnNotifyPlayerRemoved)
        pFnNotifyPlayerRemoved =
            (UFunction*)UObject::GObjObjects()->Data[22772];

    UGameViewportClient_execNotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;

    this->ProcessEvent(pFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.NotifyPlayerAdded
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::NotifyPlayerAdded() {
    static UFunction* pFnNotifyPlayerAdded = NULL;

    if (!pFnNotifyPlayerAdded)
        pFnNotifyPlayerAdded = (UFunction*)UObject::GObjObjects()->Data[22768];

    UGameViewportClient_execNotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;

    this->ProcessEvent(pFnNotifyPlayerAdded, &NotifyPlayerAdded_Parms, NULL);
};

// Function Engine.GameViewportClient.DrawTransitionMessage
// [0x00020002]
// Parameters infos:

void UGameViewportClient::DrawTransitionMessage() {
    static UFunction* pFnDrawTransitionMessage = NULL;

    if (!pFnDrawTransitionMessage)
        pFnDrawTransitionMessage =
            (UFunction*)UObject::GObjObjects()->Data[22763];

    UGameViewportClient_execDrawTransitionMessage_Parms
        DrawTransitionMessage_Parms;

    this->ProcessEvent(pFnDrawTransitionMessage, &DrawTransitionMessage_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.DrawTransition
// [0x00020002]
// Parameters infos:

void UGameViewportClient::DrawTransition() {
    static UFunction* pFnDrawTransition = NULL;

    if (!pFnDrawTransition)
        pFnDrawTransition = (UFunction*)UObject::GObjObjects()->Data[22761];

    UGameViewportClient_execDrawTransition_Parms DrawTransition_Parms;

    this->ProcessEvent(pFnDrawTransition, &DrawTransition_Parms, NULL);
};

// Function Engine.GameViewportClient.DisplayProgressMessage
// [0x00020002]
// Parameters infos:

void UGameViewportClient::DisplayProgressMessage() {
    static UFunction* pFnDisplayProgressMessage = NULL;

    if (!pFnDisplayProgressMessage)
        pFnDisplayProgressMessage =
            (UFunction*)UObject::GObjObjects()->Data[22751];

    UGameViewportClient_execDisplayProgressMessage_Parms
        DisplayProgressMessage_Parms;

    this->ProcessEvent(pFnDisplayProgressMessage, &DisplayProgressMessage_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.PostRender
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventPostRender() {
    static UFunction* pFnPostRender = NULL;

    if (!pFnPostRender)
        pFnPostRender = (UFunction*)UObject::GObjObjects()->Data[22749];

    UGameViewportClient_eventPostRender_Parms PostRender_Parms;

    this->ProcessEvent(pFnPostRender, &PostRender_Parms, NULL);
};

// Function Engine.GameViewportClient.DrawTitleSafeArea
// [0x00020002]
// Parameters infos:

void UGameViewportClient::DrawTitleSafeArea() {
    static UFunction* pFnDrawTitleSafeArea = NULL;

    if (!pFnDrawTitleSafeArea)
        pFnDrawTitleSafeArea = (UFunction*)UObject::GObjObjects()->Data[22747];

    UGameViewportClient_execDrawTitleSafeArea_Parms DrawTitleSafeArea_Parms;

    this->ProcessEvent(pFnDrawTitleSafeArea, &DrawTitleSafeArea_Parms, NULL);
};

// Function Engine.GameViewportClient.Tick
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventTick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[22745];

    UGameViewportClient_eventTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.GameViewportClient.CalculateDeadZoneForAllSides
// [0x00424003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::CalculateDeadZoneForAllSides() {
    static UFunction* pFnCalculateDeadZoneForAllSides = NULL;

    if (!pFnCalculateDeadZoneForAllSides)
        pFnCalculateDeadZoneForAllSides =
            (UFunction*)UObject::GObjObjects()->Data[22729];

    UGameViewportClient_execCalculateDeadZoneForAllSides_Parms
        CalculateDeadZoneForAllSides_Parms;

    this->ProcessEvent(pFnCalculateDeadZoneForAllSides,
                       &CalculateDeadZoneForAllSides_Parms, NULL);
};

// Function Engine.GameViewportClient.CalculateSafeZoneValues
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::CalculateSafeZoneValues() {
    static UFunction* pFnCalculateSafeZoneValues = NULL;

    if (!pFnCalculateSafeZoneValues)
        pFnCalculateSafeZoneValues =
            (UFunction*)UObject::GObjObjects()->Data[22719];

    UGameViewportClient_execCalculateSafeZoneValues_Parms
        CalculateSafeZoneValues_Parms;

    this->ProcessEvent(pFnCalculateSafeZoneValues,
                       &CalculateSafeZoneValues_Parms, NULL);
};

// Function Engine.GameViewportClient.GetPixelSizeOfScreen
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::GetPixelSizeOfScreen() {
    static UFunction* pFnGetPixelSizeOfScreen = NULL;

    if (!pFnGetPixelSizeOfScreen)
        pFnGetPixelSizeOfScreen =
            (UFunction*)UObject::GObjObjects()->Data[22714];

    UGameViewportClient_execGetPixelSizeOfScreen_Parms
        GetPixelSizeOfScreen_Parms;

    this->ProcessEvent(pFnGetPixelSizeOfScreen, &GetPixelSizeOfScreen_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.HasRightSafeZone
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::HasRightSafeZone() {
    static UFunction* pFnHasRightSafeZone = NULL;

    if (!pFnHasRightSafeZone)
        pFnHasRightSafeZone = (UFunction*)UObject::GObjObjects()->Data[22711];

    UGameViewportClient_execHasRightSafeZone_Parms HasRightSafeZone_Parms;

    this->ProcessEvent(pFnHasRightSafeZone, &HasRightSafeZone_Parms, NULL);
};

// Function Engine.GameViewportClient.HasLeftSafeZone
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::HasLeftSafeZone() {
    static UFunction* pFnHasLeftSafeZone = NULL;

    if (!pFnHasLeftSafeZone)
        pFnHasLeftSafeZone = (UFunction*)UObject::GObjObjects()->Data[22708];

    UGameViewportClient_execHasLeftSafeZone_Parms HasLeftSafeZone_Parms;

    this->ProcessEvent(pFnHasLeftSafeZone, &HasLeftSafeZone_Parms, NULL);
};

// Function Engine.GameViewportClient.HasBottomSafeZone
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::HasBottomSafeZone() {
    static UFunction* pFnHasBottomSafeZone = NULL;

    if (!pFnHasBottomSafeZone)
        pFnHasBottomSafeZone = (UFunction*)UObject::GObjObjects()->Data[22705];

    UGameViewportClient_execHasBottomSafeZone_Parms HasBottomSafeZone_Parms;

    this->ProcessEvent(pFnHasBottomSafeZone, &HasBottomSafeZone_Parms, NULL);
};

// Function Engine.GameViewportClient.HasTopSafeZone
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::HasTopSafeZone() {
    static UFunction* pFnHasTopSafeZone = NULL;

    if (!pFnHasTopSafeZone)
        pFnHasTopSafeZone = (UFunction*)UObject::GObjObjects()->Data[22702];

    UGameViewportClient_execHasTopSafeZone_Parms HasTopSafeZone_Parms;

    this->ProcessEvent(pFnHasTopSafeZone, &HasTopSafeZone_Parms, NULL);
};

// Function Engine.GameViewportClient.ConvertLocalPlayerToGamePlayerIndex
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UGameViewportClient::ConvertLocalPlayerToGamePlayerIndex() {
    static UFunction* pFnConvertLocalPlayerToGamePlayerIndex = NULL;

    if (!pFnConvertLocalPlayerToGamePlayerIndex)
        pFnConvertLocalPlayerToGamePlayerIndex =
            (UFunction*)UObject::GObjObjects()->Data[22699];

    UGameViewportClient_execConvertLocalPlayerToGamePlayerIndex_Parms
        ConvertLocalPlayerToGamePlayerIndex_Parms;

    this->ProcessEvent(pFnConvertLocalPlayerToGamePlayerIndex,
                       &ConvertLocalPlayerToGamePlayerIndex_Parms, NULL);
};

// Function Engine.GameViewportClient.GetSubtitleRegion
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventGetSubtitleRegion() {
    static UFunction* pFnGetSubtitleRegion = NULL;

    if (!pFnGetSubtitleRegion)
        pFnGetSubtitleRegion = (UFunction*)UObject::GObjObjects()->Data[22696];

    UGameViewportClient_eventGetSubtitleRegion_Parms GetSubtitleRegion_Parms;

    this->ProcessEvent(pFnGetSubtitleRegion, &GetSubtitleRegion_Parms, NULL);
};

// Function Engine.GameViewportClient.LayoutPlayers
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventLayoutPlayers() {
    static UFunction* pFnLayoutPlayers = NULL;

    if (!pFnLayoutPlayers)
        pFnLayoutPlayers = (UFunction*)UObject::GObjObjects()->Data[22692];

    UGameViewportClient_eventLayoutPlayers_Parms LayoutPlayers_Parms;

    this->ProcessEvent(pFnLayoutPlayers, &LayoutPlayers_Parms, NULL);
};

// Function Engine.GameViewportClient.UpdateActiveSplitscreenType
// [0x00020002]
// Parameters infos:

void UGameViewportClient::UpdateActiveSplitscreenType() {
    static UFunction* pFnUpdateActiveSplitscreenType = NULL;

    if (!pFnUpdateActiveSplitscreenType)
        pFnUpdateActiveSplitscreenType =
            (UFunction*)UObject::GObjObjects()->Data[22690];

    UGameViewportClient_execUpdateActiveSplitscreenType_Parms
        UpdateActiveSplitscreenType_Parms;

    this->ProcessEvent(pFnUpdateActiveSplitscreenType,
                       &UpdateActiveSplitscreenType_Parms, NULL);
};

// Function Engine.GameViewportClient.GetSplitscreenConfiguration
// [0x00020002]
// Parameters infos:

void UGameViewportClient::GetSplitscreenConfiguration() {
    static UFunction* pFnGetSplitscreenConfiguration = NULL;

    if (!pFnGetSplitscreenConfiguration)
        pFnGetSplitscreenConfiguration =
            (UFunction*)UObject::GObjObjects()->Data[22688];

    UGameViewportClient_execGetSplitscreenConfiguration_Parms
        GetSplitscreenConfiguration_Parms;

    this->ProcessEvent(pFnGetSplitscreenConfiguration,
                       &GetSplitscreenConfiguration_Parms, NULL);
};

// Function Engine.GameViewportClient.SetSplitscreenConfiguration
// [0x00020002]
// Parameters infos:

void UGameViewportClient::SetSplitscreenConfiguration() {
    static UFunction* pFnSetSplitscreenConfiguration = NULL;

    if (!pFnSetSplitscreenConfiguration)
        pFnSetSplitscreenConfiguration =
            (UFunction*)UObject::GObjObjects()->Data[22686];

    UGameViewportClient_execSetSplitscreenConfiguration_Parms
        SetSplitscreenConfiguration_Parms;

    this->ProcessEvent(pFnSetSplitscreenConfiguration,
                       &SetSplitscreenConfiguration_Parms, NULL);
};

// Function Engine.GameViewportClient.GameSessionEnded
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventGameSessionEnded() {
    static UFunction* pFnGameSessionEnded = NULL;

    if (!pFnGameSessionEnded)
        pFnGameSessionEnded = (UFunction*)UObject::GObjObjects()->Data[22684];

    UGameViewportClient_eventGameSessionEnded_Parms GameSessionEnded_Parms;

    this->ProcessEvent(pFnGameSessionEnded, &GameSessionEnded_Parms, NULL);
};

// Function Engine.GameViewportClient.InsertInteraction
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventInsertInteraction() {
    static UFunction* pFnInsertInteraction = NULL;

    if (!pFnInsertInteraction)
        pFnInsertInteraction = (UFunction*)UObject::GObjObjects()->Data[22679];

    UGameViewportClient_eventInsertInteraction_Parms InsertInteraction_Parms;

    this->ProcessEvent(pFnInsertInteraction, &InsertInteraction_Parms, NULL);
};

// Function Engine.GameViewportClient.CreateInitialPlayer
// [0x00420002]
// Parameters infos:

void UGameViewportClient::CreateInitialPlayer() {
    static UFunction* pFnCreateInitialPlayer = NULL;

    if (!pFnCreateInitialPlayer)
        pFnCreateInitialPlayer =
            (UFunction*)UObject::GObjObjects()->Data[22673];

    UGameViewportClient_execCreateInitialPlayer_Parms CreateInitialPlayer_Parms;

    this->ProcessEvent(pFnCreateInitialPlayer, &CreateInitialPlayer_Parms,
                       NULL);
};

// Function Engine.GameViewportClient.Init
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[22665];

    UGameViewportClient_eventInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.GameViewportClient.FindPlayerByControllerId
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventFindPlayerByControllerId() {
    static UFunction* pFnFindPlayerByControllerId = NULL;

    if (!pFnFindPlayerByControllerId)
        pFnFindPlayerByControllerId =
            (UFunction*)UObject::GObjObjects()->Data[22661];

    UGameViewportClient_eventFindPlayerByControllerId_Parms
        FindPlayerByControllerId_Parms;

    this->ProcessEvent(pFnFindPlayerByControllerId,
                       &FindPlayerByControllerId_Parms, NULL);
};

// Function Engine.GameViewportClient.RemovePlayer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventRemovePlayer() {
    static UFunction* pFnRemovePlayer = NULL;

    if (!pFnRemovePlayer)
        pFnRemovePlayer = (UFunction*)UObject::GObjObjects()->Data[22654];

    UGameViewportClient_eventRemovePlayer_Parms RemovePlayer_Parms;

    this->ProcessEvent(pFnRemovePlayer, &RemovePlayer_Parms, NULL);
};

// Function Engine.GameViewportClient.CreatePlayer
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void UGameViewportClient::eventCreatePlayer() {
    static UFunction* pFnCreatePlayer = NULL;

    if (!pFnCreatePlayer)
        pFnCreatePlayer = (UFunction*)UObject::GObjObjects()->Data[22647];

    UGameViewportClient_eventCreatePlayer_Parms CreatePlayer_Parms;

    this->ProcessEvent(pFnCreatePlayer, &CreatePlayer_Parms, NULL);
};

// Function Engine.GameViewportClient.SetMouse
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::SetMouse() {
    static UFunction* pFnSetMouse = NULL;

    if (!pFnSetMouse)
        pFnSetMouse = (UFunction*)UObject::GObjObjects()->Data[22644];

    UGameViewportClient_execSetMouse_Parms SetMouse_Parms;

    pFnSetMouse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMouse, &SetMouse_Parms, NULL);

    pFnSetMouse->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.ForceUpdateMouseCursor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::ForceUpdateMouseCursor() {
    static UFunction* pFnForceUpdateMouseCursor = NULL;

    if (!pFnForceUpdateMouseCursor)
        pFnForceUpdateMouseCursor =
            (UFunction*)UObject::GObjObjects()->Data[22642];

    UGameViewportClient_execForceUpdateMouseCursor_Parms
        ForceUpdateMouseCursor_Parms;

    pFnForceUpdateMouseCursor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceUpdateMouseCursor, &ForceUpdateMouseCursor_Parms,
                       NULL);

    pFnForceUpdateMouseCursor->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.NotifySplitscreenLayoutChanged
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::NotifySplitscreenLayoutChanged() {
    static UFunction* pFnNotifySplitscreenLayoutChanged = NULL;

    if (!pFnNotifySplitscreenLayoutChanged)
        pFnNotifySplitscreenLayoutChanged =
            (UFunction*)UObject::GObjObjects()->Data[22641];

    UGameViewportClient_execNotifySplitscreenLayoutChanged_Parms
        NotifySplitscreenLayoutChanged_Parms;

    pFnNotifySplitscreenLayoutChanged->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnNotifySplitscreenLayoutChanged,
                       &NotifySplitscreenLayoutChanged_Parms, NULL);

    pFnNotifySplitscreenLayoutChanged->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.SetCustomInteractionObject
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::SetCustomInteractionObject() {
    static UFunction* pFnSetCustomInteractionObject = NULL;

    if (!pFnSetCustomInteractionObject)
        pFnSetCustomInteractionObject =
            (UFunction*)UObject::GObjObjects()->Data[22639];

    UGameViewportClient_execSetCustomInteractionObject_Parms
        SetCustomInteractionObject_Parms;

    pFnSetCustomInteractionObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCustomInteractionObject,
                       &SetCustomInteractionObject_Parms, NULL);

    pFnSetCustomInteractionObject->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.GetCustomInteractionClass
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::GetCustomInteractionClass() {
    static UFunction* pFnGetCustomInteractionClass = NULL;

    if (!pFnGetCustomInteractionClass)
        pFnGetCustomInteractionClass =
            (UFunction*)UObject::GObjObjects()->Data[22636];

    UGameViewportClient_execGetCustomInteractionClass_Parms
        GetCustomInteractionClass_Parms;

    pFnGetCustomInteractionClass->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCustomInteractionClass,
                       &GetCustomInteractionClass_Parms, NULL);

    pFnGetCustomInteractionClass->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.GetNumCustomInteractions
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::GetNumCustomInteractions() {
    static UFunction* pFnGetNumCustomInteractions = NULL;

    if (!pFnGetNumCustomInteractions)
        pFnGetNumCustomInteractions =
            (UFunction*)UObject::GObjObjects()->Data[22634];

    UGameViewportClient_execGetNumCustomInteractions_Parms
        GetNumCustomInteractions_Parms;

    pFnGetNumCustomInteractions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumCustomInteractions,
                       &GetNumCustomInteractions_Parms, NULL);

    pFnGetNumCustomInteractions->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.ShouldForceFullscreenViewport
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::ShouldForceFullscreenViewport() {
    static UFunction* pFnShouldForceFullscreenViewport = NULL;

    if (!pFnShouldForceFullscreenViewport)
        pFnShouldForceFullscreenViewport =
            (UFunction*)UObject::GObjObjects()->Data[22632];

    UGameViewportClient_execShouldForceFullscreenViewport_Parms
        ShouldForceFullscreenViewport_Parms;

    pFnShouldForceFullscreenViewport->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldForceFullscreenViewport,
                       &ShouldForceFullscreenViewport_Parms, NULL);

    pFnShouldForceFullscreenViewport->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.GetMousePosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::GetMousePosition() {
    static UFunction* pFnGetMousePosition = NULL;

    if (!pFnGetMousePosition)
        pFnGetMousePosition = (UFunction*)UObject::GObjObjects()->Data[22630];

    UGameViewportClient_execGetMousePosition_Parms GetMousePosition_Parms;

    pFnGetMousePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMousePosition, &GetMousePosition_Parms, NULL);

    pFnGetMousePosition->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.IsFullScreenViewport
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::IsFullScreenViewport() {
    static UFunction* pFnIsFullScreenViewport = NULL;

    if (!pFnIsFullScreenViewport)
        pFnIsFullScreenViewport =
            (UFunction*)UObject::GObjObjects()->Data[22628];

    UGameViewportClient_execIsFullScreenViewport_Parms
        IsFullScreenViewport_Parms;

    pFnIsFullScreenViewport->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsFullScreenViewport, &IsFullScreenViewport_Parms,
                       NULL);

    pFnIsFullScreenViewport->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.GetViewportSize
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameViewportClient::GetViewportSize() {
    static UFunction* pFnGetViewportSize = NULL;

    if (!pFnGetViewportSize)
        pFnGetViewportSize = (UFunction*)UObject::GObjObjects()->Data[22626];

    UGameViewportClient_execGetViewportSize_Parms GetViewportSize_Parms;

    pFnGetViewportSize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetViewportSize, &GetViewportSize_Parms, NULL);

    pFnGetViewportSize->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.ConsoleCommand
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UGameViewportClient::ConsoleCommand() {
    static UFunction* pFnConsoleCommand = NULL;

    if (!pFnConsoleCommand)
        pFnConsoleCommand = (UFunction*)UObject::GObjObjects()->Data[16945];

    UGameViewportClient_execConsoleCommand_Parms ConsoleCommand_Parms;

    pFnConsoleCommand->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnConsoleCommand, &ConsoleCommand_Parms, NULL);

    pFnConsoleCommand->FunctionFlags |= 0x400;
};

// Function Engine.GameViewportClient.HandleInputChar
// [0x00120000]
// Parameters infos:

void UGameViewportClient::HandleInputChar() {
    static UFunction* pFnHandleInputChar = NULL;

    if (!pFnHandleInputChar)
        pFnHandleInputChar = (UFunction*)UObject::GObjObjects()->Data[22621];

    UGameViewportClient_execHandleInputChar_Parms HandleInputChar_Parms;

    this->ProcessEvent(pFnHandleInputChar, &HandleInputChar_Parms, NULL);
};

// Function Engine.GameViewportClient.HandleInputAxis
// [0x00120000]
// Parameters infos:

void UGameViewportClient::HandleInputAxis() {
    static UFunction* pFnHandleInputAxis = NULL;

    if (!pFnHandleInputAxis)
        pFnHandleInputAxis = (UFunction*)UObject::GObjObjects()->Data[22614];

    UGameViewportClient_execHandleInputAxis_Parms HandleInputAxis_Parms;

    this->ProcessEvent(pFnHandleInputAxis, &HandleInputAxis_Parms, NULL);
};

// Function Engine.GameViewportClient.HandleInputKey
// [0x00124000]
// Parameters infos:

void UGameViewportClient::HandleInputKey() {
    static UFunction* pFnHandleInputKey = NULL;

    if (!pFnHandleInputKey)
        pFnHandleInputKey = (UFunction*)UObject::GObjObjects()->Data[22607];

    UGameViewportClient_execHandleInputKey_Parms HandleInputKey_Parms;

    this->ProcessEvent(pFnHandleInputKey, &HandleInputKey_Parms, NULL);
};

// Function Engine.Settings.UpdateFromURL
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::UpdateFromURL() {
    static UFunction* pFnUpdateFromURL = NULL;

    if (!pFnUpdateFromURL)
        pFnUpdateFromURL = (UFunction*)UObject::GObjObjects()->Data[9483];

    USettings_execUpdateFromURL_Parms UpdateFromURL_Parms;

    pFnUpdateFromURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateFromURL, &UpdateFromURL_Parms, NULL);

    pFnUpdateFromURL->FunctionFlags |= 0x400;
};

// Function Engine.Settings.BuildURL
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::BuildURL() {
    static UFunction* pFnBuildURL = NULL;

    if (!pFnBuildURL)
        pFnBuildURL = (UFunction*)UObject::GObjObjects()->Data[9481];

    USettings_execBuildURL_Parms BuildURL_Parms;

    pFnBuildURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBuildURL, &BuildURL_Parms, NULL);

    pFnBuildURL->FunctionFlags |= 0x400;
};

// Function Engine.Settings.AppendContextsToURL
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::AppendContextsToURL() {
    static UFunction* pFnAppendContextsToURL = NULL;

    if (!pFnAppendContextsToURL)
        pFnAppendContextsToURL = (UFunction*)UObject::GObjObjects()->Data[9479];

    USettings_execAppendContextsToURL_Parms AppendContextsToURL_Parms;

    pFnAppendContextsToURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAppendContextsToURL, &AppendContextsToURL_Parms,
                       NULL);

    pFnAppendContextsToURL->FunctionFlags |= 0x400;
};

// Function Engine.Settings.AppendPropertiesToURL
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::AppendPropertiesToURL() {
    static UFunction* pFnAppendPropertiesToURL = NULL;

    if (!pFnAppendPropertiesToURL)
        pFnAppendPropertiesToURL =
            (UFunction*)UObject::GObjObjects()->Data[9477];

    USettings_execAppendPropertiesToURL_Parms AppendPropertiesToURL_Parms;

    pFnAppendPropertiesToURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAppendPropertiesToURL, &AppendPropertiesToURL_Parms,
                       NULL);

    pFnAppendPropertiesToURL->FunctionFlags |= 0x400;
};

// Function Engine.Settings.AppendDataBindingsToURL
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::AppendDataBindingsToURL() {
    static UFunction* pFnAppendDataBindingsToURL = NULL;

    if (!pFnAppendDataBindingsToURL)
        pFnAppendDataBindingsToURL =
            (UFunction*)UObject::GObjObjects()->Data[9475];

    USettings_execAppendDataBindingsToURL_Parms AppendDataBindingsToURL_Parms;

    pFnAppendDataBindingsToURL->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAppendDataBindingsToURL,
                       &AppendDataBindingsToURL_Parms, NULL);

    pFnAppendDataBindingsToURL->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetQoSAdvertisedStringSettings
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetQoSAdvertisedStringSettings() {
    static UFunction* pFnGetQoSAdvertisedStringSettings = NULL;

    if (!pFnGetQoSAdvertisedStringSettings)
        pFnGetQoSAdvertisedStringSettings =
            (UFunction*)UObject::GObjObjects()->Data[9472];

    USettings_execGetQoSAdvertisedStringSettings_Parms
        GetQoSAdvertisedStringSettings_Parms;

    pFnGetQoSAdvertisedStringSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetQoSAdvertisedStringSettings,
                       &GetQoSAdvertisedStringSettings_Parms, NULL);

    pFnGetQoSAdvertisedStringSettings->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetQoSAdvertisedProperties
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetQoSAdvertisedProperties() {
    static UFunction* pFnGetQoSAdvertisedProperties = NULL;

    if (!pFnGetQoSAdvertisedProperties)
        pFnGetQoSAdvertisedProperties =
            (UFunction*)UObject::GObjObjects()->Data[9469];

    USettings_execGetQoSAdvertisedProperties_Parms
        GetQoSAdvertisedProperties_Parms;

    pFnGetQoSAdvertisedProperties->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetQoSAdvertisedProperties,
                       &GetQoSAdvertisedProperties_Parms, NULL);

    pFnGetQoSAdvertisedProperties->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetRangedPropertyValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetRangedPropertyValue() {
    static UFunction* pFnGetRangedPropertyValue = NULL;

    if (!pFnGetRangedPropertyValue)
        pFnGetRangedPropertyValue =
            (UFunction*)UObject::GObjObjects()->Data[9465];

    USettings_execGetRangedPropertyValue_Parms GetRangedPropertyValue_Parms;

    pFnGetRangedPropertyValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRangedPropertyValue, &GetRangedPropertyValue_Parms,
                       NULL);

    pFnGetRangedPropertyValue->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetRangedPropertyValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::SetRangedPropertyValue() {
    static UFunction* pFnSetRangedPropertyValue = NULL;

    if (!pFnSetRangedPropertyValue)
        pFnSetRangedPropertyValue =
            (UFunction*)UObject::GObjObjects()->Data[9461];

    USettings_execSetRangedPropertyValue_Parms SetRangedPropertyValue_Parms;

    pFnSetRangedPropertyValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRangedPropertyValue, &SetRangedPropertyValue_Parms,
                       NULL);

    pFnSetRangedPropertyValue->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyRange
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyRange() {
    static UFunction* pFnGetPropertyRange = NULL;

    if (!pFnGetPropertyRange)
        pFnGetPropertyRange = (UFunction*)UObject::GObjObjects()->Data[9454];

    USettings_execGetPropertyRange_Parms GetPropertyRange_Parms;

    pFnGetPropertyRange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyRange, &GetPropertyRange_Parms, NULL);

    pFnGetPropertyRange->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyMappingType
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyMappingType() {
    static UFunction* pFnGetPropertyMappingType = NULL;

    if (!pFnGetPropertyMappingType)
        pFnGetPropertyMappingType =
            (UFunction*)UObject::GObjObjects()->Data[9450];

    USettings_execGetPropertyMappingType_Parms GetPropertyMappingType_Parms;

    pFnGetPropertyMappingType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyMappingType, &GetPropertyMappingType_Parms,
                       NULL);

    pFnGetPropertyMappingType->FunctionFlags |= 0x400;
};

// Function Engine.Settings.HasStringSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::HasStringSetting() {
    static UFunction* pFnHasStringSetting = NULL;

    if (!pFnHasStringSetting)
        pFnHasStringSetting = (UFunction*)UObject::GObjObjects()->Data[9447];

    USettings_execHasStringSetting_Parms HasStringSetting_Parms;

    pFnHasStringSetting->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasStringSetting, &HasStringSetting_Parms, NULL);

    pFnHasStringSetting->FunctionFlags |= 0x400;
};

// Function Engine.Settings.HasProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::HasProperty() {
    static UFunction* pFnHasProperty = NULL;

    if (!pFnHasProperty)
        pFnHasProperty = (UFunction*)UObject::GObjObjects()->Data[9444];

    USettings_execHasProperty_Parms HasProperty_Parms;

    pFnHasProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasProperty, &HasProperty_Parms, NULL);

    pFnHasProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.UpdateProperties
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void USettings::UpdateProperties() {
    static UFunction* pFnUpdateProperties = NULL;

    if (!pFnUpdateProperties)
        pFnUpdateProperties = (UFunction*)UObject::GObjObjects()->Data[9440];

    USettings_execUpdateProperties_Parms UpdateProperties_Parms;

    pFnUpdateProperties->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateProperties, &UpdateProperties_Parms, NULL);

    pFnUpdateProperties->FunctionFlags |= 0x400;
};

// Function Engine.Settings.UpdateStringSettings
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void USettings::UpdateStringSettings() {
    static UFunction* pFnUpdateStringSettings = NULL;

    if (!pFnUpdateStringSettings)
        pFnUpdateStringSettings =
            (UFunction*)UObject::GObjObjects()->Data[9436];

    USettings_execUpdateStringSettings_Parms UpdateStringSettings_Parms;

    pFnUpdateStringSettings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateStringSettings, &UpdateStringSettings_Parms,
                       NULL);

    pFnUpdateStringSettings->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyType
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyType() {
    static UFunction* pFnGetPropertyType = NULL;

    if (!pFnGetPropertyType)
        pFnGetPropertyType = (UFunction*)UObject::GObjObjects()->Data[9433];

    USettings_execGetPropertyType_Parms GetPropertyType_Parms;

    pFnGetPropertyType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyType, &GetPropertyType_Parms, NULL);

    pFnGetPropertyType->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyValueId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyValueId() {
    static UFunction* pFnGetPropertyValueId = NULL;

    if (!pFnGetPropertyValueId)
        pFnGetPropertyValueId = (UFunction*)UObject::GObjObjects()->Data[9429];

    USettings_execGetPropertyValueId_Parms GetPropertyValueId_Parms;

    pFnGetPropertyValueId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyValueId, &GetPropertyValueId_Parms, NULL);

    pFnGetPropertyValueId->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetPropertyValueId
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::SetPropertyValueId() {
    static UFunction* pFnSetPropertyValueId = NULL;

    if (!pFnSetPropertyValueId)
        pFnSetPropertyValueId = (UFunction*)UObject::GObjObjects()->Data[9425];

    USettings_execSetPropertyValueId_Parms SetPropertyValueId_Parms;

    pFnSetPropertyValueId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPropertyValueId, &SetPropertyValueId_Parms, NULL);

    pFnSetPropertyValueId->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringProperty
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringProperty() {
    static UFunction* pFnGetStringProperty = NULL;

    if (!pFnGetStringProperty)
        pFnGetStringProperty = (UFunction*)UObject::GObjObjects()->Data[9421];

    USettings_execGetStringProperty_Parms GetStringProperty_Parms;

    pFnGetStringProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringProperty, &GetStringProperty_Parms, NULL);

    pFnGetStringProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetStringProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::SetStringProperty() {
    static UFunction* pFnSetStringProperty = NULL;

    if (!pFnSetStringProperty)
        pFnSetStringProperty = (UFunction*)UObject::GObjObjects()->Data[9418];

    USettings_execSetStringProperty_Parms SetStringProperty_Parms;

    pFnSetStringProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStringProperty, &SetStringProperty_Parms, NULL);

    pFnSetStringProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetIntProperty
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetIntProperty() {
    static UFunction* pFnGetIntProperty = NULL;

    if (!pFnGetIntProperty)
        pFnGetIntProperty = (UFunction*)UObject::GObjObjects()->Data[9414];

    USettings_execGetIntProperty_Parms GetIntProperty_Parms;

    pFnGetIntProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetIntProperty, &GetIntProperty_Parms, NULL);

    pFnGetIntProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetIntProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::SetIntProperty() {
    static UFunction* pFnSetIntProperty = NULL;

    if (!pFnSetIntProperty)
        pFnSetIntProperty = (UFunction*)UObject::GObjObjects()->Data[9411];

    USettings_execSetIntProperty_Parms SetIntProperty_Parms;

    pFnSetIntProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetIntProperty, &SetIntProperty_Parms, NULL);

    pFnSetIntProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetFloatProperty
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetFloatProperty() {
    static UFunction* pFnGetFloatProperty = NULL;

    if (!pFnGetFloatProperty)
        pFnGetFloatProperty = (UFunction*)UObject::GObjObjects()->Data[9407];

    USettings_execGetFloatProperty_Parms GetFloatProperty_Parms;

    pFnGetFloatProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFloatProperty, &GetFloatProperty_Parms, NULL);

    pFnGetFloatProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetFloatProperty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::SetFloatProperty() {
    static UFunction* pFnSetFloatProperty = NULL;

    if (!pFnSetFloatProperty)
        pFnSetFloatProperty = (UFunction*)UObject::GObjObjects()->Data[9404];

    USettings_execSetFloatProperty_Parms SetFloatProperty_Parms;

    pFnSetFloatProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFloatProperty, &SetFloatProperty_Parms, NULL);

    pFnSetFloatProperty->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetPropertyFromStringByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::SetPropertyFromStringByName() {
    static UFunction* pFnSetPropertyFromStringByName = NULL;

    if (!pFnSetPropertyFromStringByName)
        pFnSetPropertyFromStringByName =
            (UFunction*)UObject::GObjObjects()->Data[9400];

    USettings_execSetPropertyFromStringByName_Parms
        SetPropertyFromStringByName_Parms;

    pFnSetPropertyFromStringByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPropertyFromStringByName,
                       &SetPropertyFromStringByName_Parms, NULL);

    pFnSetPropertyFromStringByName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyAsStringByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyAsStringByName() {
    static UFunction* pFnGetPropertyAsStringByName = NULL;

    if (!pFnGetPropertyAsStringByName)
        pFnGetPropertyAsStringByName =
            (UFunction*)UObject::GObjObjects()->Data[9397];

    USettings_execGetPropertyAsStringByName_Parms
        GetPropertyAsStringByName_Parms;

    pFnGetPropertyAsStringByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyAsStringByName,
                       &GetPropertyAsStringByName_Parms, NULL);

    pFnGetPropertyAsStringByName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyAsString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyAsString() {
    static UFunction* pFnGetPropertyAsString = NULL;

    if (!pFnGetPropertyAsString)
        pFnGetPropertyAsString = (UFunction*)UObject::GObjObjects()->Data[9394];

    USettings_execGetPropertyAsString_Parms GetPropertyAsString_Parms;

    pFnGetPropertyAsString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyAsString, &GetPropertyAsString_Parms,
                       NULL);

    pFnGetPropertyAsString->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyColumnHeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyColumnHeader() {
    static UFunction* pFnGetPropertyColumnHeader = NULL;

    if (!pFnGetPropertyColumnHeader)
        pFnGetPropertyColumnHeader =
            (UFunction*)UObject::GObjObjects()->Data[9391];

    USettings_execGetPropertyColumnHeader_Parms GetPropertyColumnHeader_Parms;

    pFnGetPropertyColumnHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyColumnHeader,
                       &GetPropertyColumnHeader_Parms, NULL);

    pFnGetPropertyColumnHeader->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyName() {
    static UFunction* pFnGetPropertyName = NULL;

    if (!pFnGetPropertyName)
        pFnGetPropertyName = (UFunction*)UObject::GObjObjects()->Data[9388];

    USettings_execGetPropertyName_Parms GetPropertyName_Parms;

    pFnGetPropertyName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyName, &GetPropertyName_Parms, NULL);

    pFnGetPropertyName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetPropertyId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetPropertyId() {
    static UFunction* pFnGetPropertyId = NULL;

    if (!pFnGetPropertyId)
        pFnGetPropertyId = (UFunction*)UObject::GObjObjects()->Data[9384];

    USettings_execGetPropertyId_Parms GetPropertyId_Parms;

    pFnGetPropertyId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPropertyId, &GetPropertyId_Parms, NULL);

    pFnGetPropertyId->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetStringSettingValueFromStringByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::SetStringSettingValueFromStringByName() {
    static UFunction* pFnSetStringSettingValueFromStringByName = NULL;

    if (!pFnSetStringSettingValueFromStringByName)
        pFnSetStringSettingValueFromStringByName =
            (UFunction*)UObject::GObjObjects()->Data[9380];

    USettings_execSetStringSettingValueFromStringByName_Parms
        SetStringSettingValueFromStringByName_Parms;

    pFnSetStringSettingValueFromStringByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStringSettingValueFromStringByName,
                       &SetStringSettingValueFromStringByName_Parms, NULL);

    pFnSetStringSettingValueFromStringByName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingValueNameByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingValueNameByName() {
    static UFunction* pFnGetStringSettingValueNameByName = NULL;

    if (!pFnGetStringSettingValueNameByName)
        pFnGetStringSettingValueNameByName =
            (UFunction*)UObject::GObjObjects()->Data[9377];

    USettings_execGetStringSettingValueNameByName_Parms
        GetStringSettingValueNameByName_Parms;

    pFnGetStringSettingValueNameByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingValueNameByName,
                       &GetStringSettingValueNameByName_Parms, NULL);

    pFnGetStringSettingValueNameByName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingValueName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingValueName() {
    static UFunction* pFnGetStringSettingValueName = NULL;

    if (!pFnGetStringSettingValueName)
        pFnGetStringSettingValueName =
            (UFunction*)UObject::GObjObjects()->Data[9373];

    USettings_execGetStringSettingValueName_Parms
        GetStringSettingValueName_Parms;

    pFnGetStringSettingValueName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingValueName,
                       &GetStringSettingValueName_Parms, NULL);

    pFnGetStringSettingValueName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.IsWildcardStringSetting
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::IsWildcardStringSetting() {
    static UFunction* pFnIsWildcardStringSetting = NULL;

    if (!pFnIsWildcardStringSetting)
        pFnIsWildcardStringSetting =
            (UFunction*)UObject::GObjObjects()->Data[9370];

    USettings_execIsWildcardStringSetting_Parms IsWildcardStringSetting_Parms;

    pFnIsWildcardStringSetting->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsWildcardStringSetting,
                       &IsWildcardStringSetting_Parms, NULL);

    pFnIsWildcardStringSetting->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingColumnHeader
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingColumnHeader() {
    static UFunction* pFnGetStringSettingColumnHeader = NULL;

    if (!pFnGetStringSettingColumnHeader)
        pFnGetStringSettingColumnHeader =
            (UFunction*)UObject::GObjObjects()->Data[9367];

    USettings_execGetStringSettingColumnHeader_Parms
        GetStringSettingColumnHeader_Parms;

    pFnGetStringSettingColumnHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingColumnHeader,
                       &GetStringSettingColumnHeader_Parms, NULL);

    pFnGetStringSettingColumnHeader->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingName() {
    static UFunction* pFnGetStringSettingName = NULL;

    if (!pFnGetStringSettingName)
        pFnGetStringSettingName =
            (UFunction*)UObject::GObjObjects()->Data[9364];

    USettings_execGetStringSettingName_Parms GetStringSettingName_Parms;

    pFnGetStringSettingName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingName, &GetStringSettingName_Parms,
                       NULL);

    pFnGetStringSettingName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingId
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingId() {
    static UFunction* pFnGetStringSettingId = NULL;

    if (!pFnGetStringSettingId)
        pFnGetStringSettingId = (UFunction*)UObject::GObjObjects()->Data[9360];

    USettings_execGetStringSettingId_Parms GetStringSettingId_Parms;

    pFnGetStringSettingId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingId, &GetStringSettingId_Parms, NULL);

    pFnGetStringSettingId->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingValueByName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingValueByName() {
    static UFunction* pFnGetStringSettingValueByName = NULL;

    if (!pFnGetStringSettingValueByName)
        pFnGetStringSettingValueByName =
            (UFunction*)UObject::GObjObjects()->Data[9356];

    USettings_execGetStringSettingValueByName_Parms
        GetStringSettingValueByName_Parms;

    pFnGetStringSettingValueByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingValueByName,
                       &GetStringSettingValueByName_Parms, NULL);

    pFnGetStringSettingValueByName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetStringSettingValueByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::SetStringSettingValueByName() {
    static UFunction* pFnSetStringSettingValueByName = NULL;

    if (!pFnSetStringSettingValueByName)
        pFnSetStringSettingValueByName =
            (UFunction*)UObject::GObjObjects()->Data[9352];

    USettings_execSetStringSettingValueByName_Parms
        SetStringSettingValueByName_Parms;

    pFnSetStringSettingValueByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStringSettingValueByName,
                       &SetStringSettingValueByName_Parms, NULL);

    pFnSetStringSettingValueByName->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingValueNames
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingValueNames() {
    static UFunction* pFnGetStringSettingValueNames = NULL;

    if (!pFnGetStringSettingValueNames)
        pFnGetStringSettingValueNames =
            (UFunction*)UObject::GObjObjects()->Data[9347];

    USettings_execGetStringSettingValueNames_Parms
        GetStringSettingValueNames_Parms;

    pFnGetStringSettingValueNames->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingValueNames,
                       &GetStringSettingValueNames_Parms, NULL);

    pFnGetStringSettingValueNames->FunctionFlags |= 0x400;
};

// Function Engine.Settings.IncrementStringSettingValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USettings::IncrementStringSettingValue() {
    static UFunction* pFnIncrementStringSettingValue = NULL;

    if (!pFnIncrementStringSettingValue)
        pFnIncrementStringSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[9342];

    USettings_execIncrementStringSettingValue_Parms
        IncrementStringSettingValue_Parms;

    pFnIncrementStringSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIncrementStringSettingValue,
                       &IncrementStringSettingValue_Parms, NULL);

    pFnIncrementStringSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetStringSettingValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void USettings::GetStringSettingValue() {
    static UFunction* pFnGetStringSettingValue = NULL;

    if (!pFnGetStringSettingValue)
        pFnGetStringSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[9338];

    USettings_execGetStringSettingValue_Parms GetStringSettingValue_Parms;

    pFnGetStringSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringSettingValue, &GetStringSettingValue_Parms,
                       NULL);

    pFnGetStringSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetStringSettingValue
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void USettings::SetStringSettingValue() {
    static UFunction* pFnSetStringSettingValue = NULL;

    if (!pFnSetStringSettingValue)
        pFnSetStringSettingValue =
            (UFunction*)UObject::GObjObjects()->Data[9334];

    USettings_execSetStringSettingValue_Parms SetStringSettingValue_Parms;

    pFnSetStringSettingValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStringSettingValue, &SetStringSettingValue_Parms,
                       NULL);

    pFnSetStringSettingValue->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetSettingsDataDateTime
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::GetSettingsDataDateTime() {
    static UFunction* pFnGetSettingsDataDateTime = NULL;

    if (!pFnGetSettingsDataDateTime)
        pFnGetSettingsDataDateTime =
            (UFunction*)UObject::GObjObjects()->Data[9330];

    USettings_execGetSettingsDataDateTime_Parms GetSettingsDataDateTime_Parms;

    pFnGetSettingsDataDateTime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSettingsDataDateTime,
                       &GetSettingsDataDateTime_Parms, NULL);

    pFnGetSettingsDataDateTime->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetSettingsDataBlob
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::GetSettingsDataBlob() {
    static UFunction* pFnGetSettingsDataBlob = NULL;

    if (!pFnGetSettingsDataBlob)
        pFnGetSettingsDataBlob = (UFunction*)UObject::GObjObjects()->Data[9326];

    USettings_execGetSettingsDataBlob_Parms GetSettingsDataBlob_Parms;

    pFnGetSettingsDataBlob->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSettingsDataBlob, &GetSettingsDataBlob_Parms,
                       NULL);

    pFnGetSettingsDataBlob->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetSettingsDataInt
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::GetSettingsDataInt() {
    static UFunction* pFnGetSettingsDataInt = NULL;

    if (!pFnGetSettingsDataInt)
        pFnGetSettingsDataInt = (UFunction*)UObject::GObjObjects()->Data[9323];

    USettings_execGetSettingsDataInt_Parms GetSettingsDataInt_Parms;

    pFnGetSettingsDataInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSettingsDataInt, &GetSettingsDataInt_Parms, NULL);

    pFnGetSettingsDataInt->FunctionFlags |= 0x400;
};

// Function Engine.Settings.GetSettingsDataFloat
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::GetSettingsDataFloat() {
    static UFunction* pFnGetSettingsDataFloat = NULL;

    if (!pFnGetSettingsDataFloat)
        pFnGetSettingsDataFloat =
            (UFunction*)UObject::GObjObjects()->Data[9320];

    USettings_execGetSettingsDataFloat_Parms GetSettingsDataFloat_Parms;

    pFnGetSettingsDataFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSettingsDataFloat, &GetSettingsDataFloat_Parms,
                       NULL);

    pFnGetSettingsDataFloat->FunctionFlags |= 0x400;
};

// Function Engine.Settings.EmptySettingsData
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::EmptySettingsData() {
    static UFunction* pFnEmptySettingsData = NULL;

    if (!pFnEmptySettingsData)
        pFnEmptySettingsData = (UFunction*)UObject::GObjObjects()->Data[9318];

    USettings_execEmptySettingsData_Parms EmptySettingsData_Parms;

    pFnEmptySettingsData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEmptySettingsData, &EmptySettingsData_Parms, NULL);

    pFnEmptySettingsData->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetSettingsData
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::SetSettingsData() {
    static UFunction* pFnSetSettingsData = NULL;

    if (!pFnSetSettingsData)
        pFnSetSettingsData = (UFunction*)UObject::GObjObjects()->Data[9315];

    USettings_execSetSettingsData_Parms SetSettingsData_Parms;

    pFnSetSettingsData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSettingsData, &SetSettingsData_Parms, NULL);

    pFnSetSettingsData->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetSettingsDataBlob
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::SetSettingsDataBlob() {
    static UFunction* pFnSetSettingsDataBlob = NULL;

    if (!pFnSetSettingsDataBlob)
        pFnSetSettingsDataBlob = (UFunction*)UObject::GObjObjects()->Data[9311];

    USettings_execSetSettingsDataBlob_Parms SetSettingsDataBlob_Parms;

    pFnSetSettingsDataBlob->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSettingsDataBlob, &SetSettingsDataBlob_Parms,
                       NULL);

    pFnSetSettingsDataBlob->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetSettingsDataDateTime
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::SetSettingsDataDateTime() {
    static UFunction* pFnSetSettingsDataDateTime = NULL;

    if (!pFnSetSettingsDataDateTime)
        pFnSetSettingsDataDateTime =
            (UFunction*)UObject::GObjObjects()->Data[9307];

    USettings_execSetSettingsDataDateTime_Parms SetSettingsDataDateTime_Parms;

    pFnSetSettingsDataDateTime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSettingsDataDateTime,
                       &SetSettingsDataDateTime_Parms, NULL);

    pFnSetSettingsDataDateTime->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetSettingsDataInt
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::SetSettingsDataInt() {
    static UFunction* pFnSetSettingsDataInt = NULL;

    if (!pFnSetSettingsDataInt)
        pFnSetSettingsDataInt = (UFunction*)UObject::GObjObjects()->Data[9304];

    USettings_execSetSettingsDataInt_Parms SetSettingsDataInt_Parms;

    pFnSetSettingsDataInt->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSettingsDataInt, &SetSettingsDataInt_Parms, NULL);

    pFnSetSettingsDataInt->FunctionFlags |= 0x400;
};

// Function Engine.Settings.SetSettingsDataFloat
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void USettings::SetSettingsDataFloat() {
    static UFunction* pFnSetSettingsDataFloat = NULL;

    if (!pFnSetSettingsDataFloat)
        pFnSetSettingsDataFloat =
            (UFunction*)UObject::GObjObjects()->Data[9301];

    USettings_execSetSettingsDataFloat_Parms SetSettingsDataFloat_Parms;

    pFnSetSettingsDataFloat->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSettingsDataFloat, &SetSettingsDataFloat_Parms,
                       NULL);

    pFnSetSettingsDataFloat->FunctionFlags |= 0x400;
};

// Function Engine.OnlineGameSearch.GetGametagStringBool
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineGameSearch::GetGametagStringBool() {
    static UFunction* pFnGetGametagStringBool = NULL;

    if (!pFnGetGametagStringBool)
        pFnGetGametagStringBool =
            (UFunction*)UObject::GObjObjects()->Data[9524];

    UOnlineGameSearch_execGetGametagStringBool_Parms GetGametagStringBool_Parms;

    pFnGetGametagStringBool->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGametagStringBool, &GetGametagStringBool_Parms,
                       NULL);

    pFnGetGametagStringBool->FunctionFlags |= 0x400;
};

// Function Engine.OnlineGameSearch.GetGametagString
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UOnlineGameSearch::GetGametagString() {
    static UFunction* pFnGetGametagString = NULL;

    if (!pFnGetGametagString)
        pFnGetGametagString = (UFunction*)UObject::GObjObjects()->Data[9520];

    UOnlineGameSearch_execGetGametagString_Parms GetGametagString_Parms;

    pFnGetGametagString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGametagString, &GetGametagString_Parms, NULL);

    pFnGetGametagString->FunctionFlags |= 0x400;
};

// Function Engine.OnlineGameSearch.AddGametagFilter
// [0x00420002]
// Parameters infos:

void UOnlineGameSearch::AddGametagFilter() {
    static UFunction* pFnAddGametagFilter = NULL;

    if (!pFnAddGametagFilter)
        pFnAddGametagFilter = (UFunction*)UObject::GObjObjects()->Data[9516];

    UOnlineGameSearch_execAddGametagFilter_Parms AddGametagFilter_Parms;

    this->ProcessEvent(pFnAddGametagFilter, &AddGametagFilter_Parms, NULL);
};

// Function Engine.OnlineGameSearch.TestAddBoolGametagFilter
// [0x00420002]
// Parameters infos:

void UOnlineGameSearch::TestAddBoolGametagFilter() {
    static UFunction* pFnTestAddBoolGametagFilter = NULL;

    if (!pFnTestAddBoolGametagFilter)
        pFnTestAddBoolGametagFilter =
            (UFunction*)UObject::GObjObjects()->Data[9511];

    UOnlineGameSearch_execTestAddBoolGametagFilter_Parms
        TestAddBoolGametagFilter_Parms;

    this->ProcessEvent(pFnTestAddBoolGametagFilter,
                       &TestAddBoolGametagFilter_Parms, NULL);
};

// Function Engine.OnlineGameSearch.TestAddServerFilter
// [0x00024002]
// Parameters infos:

void UOnlineGameSearch::TestAddServerFilter() {
    static UFunction* pFnTestAddServerFilter = NULL;

    if (!pFnTestAddServerFilter)
        pFnTestAddServerFilter = (UFunction*)UObject::GObjObjects()->Data[9507];

    UOnlineGameSearch_execTestAddServerFilter_Parms TestAddServerFilter_Parms;

    this->ProcessEvent(pFnTestAddServerFilter, &TestAddServerFilter_Parms,
                       NULL);
};

// Function Engine.OnlineGameSearch.AddServerFilter
// [0x00024002]
// Parameters infos:

void UOnlineGameSearch::AddServerFilter() {
    static UFunction* pFnAddServerFilter = NULL;

    if (!pFnAddServerFilter)
        pFnAddServerFilter = (UFunction*)UObject::GObjObjects()->Data[9503];

    UOnlineGameSearch_execAddServerFilter_Parms AddServerFilter_Parms;

    this->ProcessEvent(pFnAddServerFilter, &AddServerFilter_Parms, NULL);
};

// Function Engine.OnlineGameSearch.ClearServerFilters
// [0x00020002]
// Parameters infos:

void UOnlineGameSearch::ClearServerFilters() {
    static UFunction* pFnClearServerFilters = NULL;

    if (!pFnClearServerFilters)
        pFnClearServerFilters = (UFunction*)UObject::GObjObjects()->Data[9502];

    UOnlineGameSearch_execClearServerFilters_Parms ClearServerFilters_Parms;

    this->ProcessEvent(pFnClearServerFilters, &ClearServerFilters_Parms, NULL);
};

// Function Engine.OnlineGameSearch.GetNamedProperty
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineGameSearch::eventGetNamedProperty() {
    static UFunction* pFnGetNamedProperty = NULL;

    if (!pFnGetNamedProperty)
        pFnGetNamedProperty = (UFunction*)UObject::GObjObjects()->Data[9498];

    UOnlineGameSearch_eventGetNamedProperty_Parms GetNamedProperty_Parms;

    pFnGetNamedProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNamedProperty, &GetNamedProperty_Parms, NULL);

    pFnGetNamedProperty->FunctionFlags |= 0x400;
};

// Function Engine.OnlineGameSearch.SetNamedProperty
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineGameSearch::eventSetNamedProperty() {
    static UFunction* pFnSetNamedProperty = NULL;

    if (!pFnSetNamedProperty)
        pFnSetNamedProperty = (UFunction*)UObject::GObjObjects()->Data[9494];

    UOnlineGameSearch_eventSetNamedProperty_Parms SetNamedProperty_Parms;

    pFnSetNamedProperty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNamedProperty, &SetNamedProperty_Parms, NULL);

    pFnSetNamedProperty->FunctionFlags |= 0x400;
};

// Function Engine.OnlineGameSearch.SortSearchResults
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UOnlineGameSearch::eventSortSearchResults() {
    static UFunction* pFnSortSearchResults = NULL;

    if (!pFnSortSearchResults)
        pFnSortSearchResults = (UFunction*)UObject::GObjObjects()->Data[9493];

    UOnlineGameSearch_eventSortSearchResults_Parms SortSearchResults_Parms;

    pFnSortSearchResults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSortSearchResults, &SortSearchResults_Parms, NULL);

    pFnSortSearchResults->FunctionFlags |= 0x400;
};

// Function Engine.OnlineGameSearch.SetSkillOverride
// [0x00420002]
// Parameters infos:

void UOnlineGameSearch::SetSkillOverride() {
    static UFunction* pFnSetSkillOverride = NULL;

    if (!pFnSetSkillOverride)
        pFnSetSkillOverride = (UFunction*)UObject::GObjObjects()->Data[9489];

    UOnlineGameSearch_execSetSkillOverride_Parms SetSkillOverride_Parms;

    this->ProcessEvent(pFnSetSkillOverride, &SetSkillOverride_Parms, NULL);
};

// Function Engine.Surface.GetSurfaceHeight
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USurface::GetSurfaceHeight() {
    static UFunction* pFnGetSurfaceHeight = NULL;

    if (!pFnGetSurfaceHeight)
        pFnGetSurfaceHeight = (UFunction*)UObject::GObjObjects()->Data[6815];

    USurface_execGetSurfaceHeight_Parms GetSurfaceHeight_Parms;

    pFnGetSurfaceHeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSurfaceHeight, &GetSurfaceHeight_Parms, NULL);

    pFnGetSurfaceHeight->FunctionFlags |= 0x400;
};

// Function Engine.Surface.GetSurfaceWidth
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USurface::GetSurfaceWidth() {
    static UFunction* pFnGetSurfaceWidth = NULL;

    if (!pFnGetSurfaceWidth)
        pFnGetSurfaceWidth = (UFunction*)UObject::GObjObjects()->Data[6813];

    USurface_execGetSurfaceWidth_Parms GetSurfaceWidth_Parms;

    pFnGetSurfaceWidth->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSurfaceWidth, &GetSurfaceWidth_Parms, NULL);

    pFnGetSurfaceWidth->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.SetForceMipLevelsToBeResident
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::SetForceMipLevelsToBeResident() {
    static UFunction* pFnSetForceMipLevelsToBeResident = NULL;

    if (!pFnSetForceMipLevelsToBeResident)
        pFnSetForceMipLevelsToBeResident =
            (UFunction*)UObject::GObjObjects()->Data[17892];

    UMaterialInterface_execSetForceMipLevelsToBeResident_Parms
        SetForceMipLevelsToBeResident_Parms;

    pFnSetForceMipLevelsToBeResident->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetForceMipLevelsToBeResident,
                       &SetForceMipLevelsToBeResident_Parms, NULL);

    pFnSetForceMipLevelsToBeResident->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetMobileVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetMobileVectorParameterValue() {
    static UFunction* pFnGetMobileVectorParameterValue = NULL;

    if (!pFnGetMobileVectorParameterValue)
        pFnGetMobileVectorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17888];

    UMaterialInterface_execGetMobileVectorParameterValue_Parms
        GetMobileVectorParameterValue_Parms;

    pFnGetMobileVectorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMobileVectorParameterValue,
                       &GetMobileVectorParameterValue_Parms, NULL);

    pFnGetMobileVectorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetMobileTextureParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetMobileTextureParameterValue() {
    static UFunction* pFnGetMobileTextureParameterValue = NULL;

    if (!pFnGetMobileTextureParameterValue)
        pFnGetMobileTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17884];

    UMaterialInterface_execGetMobileTextureParameterValue_Parms
        GetMobileTextureParameterValue_Parms;

    pFnGetMobileTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMobileTextureParameterValue,
                       &GetMobileTextureParameterValue_Parms, NULL);

    pFnGetMobileTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetMobileScalarParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetMobileScalarParameterValue() {
    static UFunction* pFnGetMobileScalarParameterValue = NULL;

    if (!pFnGetMobileScalarParameterValue)
        pFnGetMobileScalarParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17880];

    UMaterialInterface_execGetMobileScalarParameterValue_Parms
        GetMobileScalarParameterValue_Parms;

    pFnGetMobileScalarParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMobileScalarParameterValue,
                       &GetMobileScalarParameterValue_Parms, NULL);

    pFnGetMobileScalarParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetGroupName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetGroupName() {
    static UFunction* pFnGetGroupName = NULL;

    if (!pFnGetGroupName)
        pFnGetGroupName = (UFunction*)UObject::GObjObjects()->Data[17876];

    UMaterialInterface_execGetGroupName_Parms GetGroupName_Parms;

    pFnGetGroupName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupName, &GetGroupName_Parms, NULL);

    pFnGetGroupName->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetLinearColorCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetLinearColorCurveParameterValue() {
    static UFunction* pFnGetLinearColorCurveParameterValue = NULL;

    if (!pFnGetLinearColorCurveParameterValue)
        pFnGetLinearColorCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17872];

    UMaterialInterface_execGetLinearColorCurveParameterValue_Parms
        GetLinearColorCurveParameterValue_Parms;

    pFnGetLinearColorCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLinearColorCurveParameterValue,
                       &GetLinearColorCurveParameterValue_Parms, NULL);

    pFnGetLinearColorCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetLinearColorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetLinearColorParameterValue() {
    static UFunction* pFnGetLinearColorParameterValue = NULL;

    if (!pFnGetLinearColorParameterValue)
        pFnGetLinearColorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17868];

    UMaterialInterface_execGetLinearColorParameterValue_Parms
        GetLinearColorParameterValue_Parms;

    pFnGetLinearColorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLinearColorParameterValue,
                       &GetLinearColorParameterValue_Parms, NULL);

    pFnGetLinearColorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetVectorCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetVectorCurveParameterValue() {
    static UFunction* pFnGetVectorCurveParameterValue = NULL;

    if (!pFnGetVectorCurveParameterValue)
        pFnGetVectorCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17864];

    UMaterialInterface_execGetVectorCurveParameterValue_Parms
        GetVectorCurveParameterValue_Parms;

    pFnGetVectorCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVectorCurveParameterValue,
                       &GetVectorCurveParameterValue_Parms, NULL);

    pFnGetVectorCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetVectorParameterValue() {
    static UFunction* pFnGetVectorParameterValue = NULL;

    if (!pFnGetVectorParameterValue)
        pFnGetVectorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17860];

    UMaterialInterface_execGetVectorParameterValue_Parms
        GetVectorParameterValue_Parms;

    pFnGetVectorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVectorParameterValue,
                       &GetVectorParameterValue_Parms, NULL);

    pFnGetVectorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetTextureParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetTextureParameterValue() {
    static UFunction* pFnGetTextureParameterValue = NULL;

    if (!pFnGetTextureParameterValue)
        pFnGetTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17856];

    UMaterialInterface_execGetTextureParameterValue_Parms
        GetTextureParameterValue_Parms;

    pFnGetTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTextureParameterValue,
                       &GetTextureParameterValue_Parms, NULL);

    pFnGetTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetScalarCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetScalarCurveParameterValue() {
    static UFunction* pFnGetScalarCurveParameterValue = NULL;

    if (!pFnGetScalarCurveParameterValue)
        pFnGetScalarCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17852];

    UMaterialInterface_execGetScalarCurveParameterValue_Parms
        GetScalarCurveParameterValue_Parms;

    pFnGetScalarCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetScalarCurveParameterValue,
                       &GetScalarCurveParameterValue_Parms, NULL);

    pFnGetScalarCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetScalarParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetScalarParameterValue() {
    static UFunction* pFnGetScalarParameterValue = NULL;

    if (!pFnGetScalarParameterValue)
        pFnGetScalarParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17848];

    UMaterialInterface_execGetScalarParameterValue_Parms
        GetScalarParameterValue_Parms;

    pFnGetScalarParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetScalarParameterValue,
                       &GetScalarParameterValue_Parms, NULL);

    pFnGetScalarParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetFontParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetFontParameterValue() {
    static UFunction* pFnGetFontParameterValue = NULL;

    if (!pFnGetFontParameterValue)
        pFnGetFontParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[17843];

    UMaterialInterface_execGetFontParameterValue_Parms
        GetFontParameterValue_Parms;

    pFnGetFontParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFontParameterValue, &GetFontParameterValue_Parms,
                       NULL);

    pFnGetFontParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetParameterDesc
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetParameterDesc() {
    static UFunction* pFnGetParameterDesc = NULL;

    if (!pFnGetParameterDesc)
        pFnGetParameterDesc = (UFunction*)UObject::GObjObjects()->Data[17839];

    UMaterialInterface_execGetParameterDesc_Parms GetParameterDesc_Parms;

    pFnGetParameterDesc->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetParameterDesc, &GetParameterDesc_Parms, NULL);

    pFnGetParameterDesc->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetPhysicalMaterial
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetPhysicalMaterial() {
    static UFunction* pFnGetPhysicalMaterial = NULL;

    if (!pFnGetPhysicalMaterial)
        pFnGetPhysicalMaterial =
            (UFunction*)UObject::GObjObjects()->Data[17837];

    UMaterialInterface_execGetPhysicalMaterial_Parms GetPhysicalMaterial_Parms;

    pFnGetPhysicalMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPhysicalMaterial, &GetPhysicalMaterial_Parms,
                       NULL);

    pFnGetPhysicalMaterial->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInterface.GetMaterial
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMaterialInterface::GetMaterial() {
    static UFunction* pFnGetMaterial = NULL;

    if (!pFnGetMaterial)
        pFnGetMaterial = (UFunction*)UObject::GObjObjects()->Data[17835];

    UMaterialInterface_execGetMaterial_Parms GetMaterial_Parms;

    pFnGetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaterial, &GetMaterial_Parms, NULL);

    pFnGetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.GetMaxLifespan
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::GetMaxLifespan() {
    static UFunction* pFnGetMaxLifespan = NULL;

    if (!pFnGetMaxLifespan)
        pFnGetMaxLifespan = (UFunction*)UObject::GObjObjects()->Data[30679];

    UParticleSystem_execGetMaxLifespan_Parms GetMaxLifespan_Parms;

    pFnGetMaxLifespan->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxLifespan, &GetMaxLifespan_Parms, NULL);

    pFnGetMaxLifespan->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.SetLODDistance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::SetLODDistance() {
    static UFunction* pFnSetLODDistance = NULL;

    if (!pFnSetLODDistance)
        pFnSetLODDistance = (UFunction*)UObject::GObjObjects()->Data[30675];

    UParticleSystem_execSetLODDistance_Parms SetLODDistance_Parms;

    pFnSetLODDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLODDistance, &SetLODDistance_Parms, NULL);

    pFnSetLODDistance->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.SetCurrentLODMethod
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::SetCurrentLODMethod() {
    static UFunction* pFnSetCurrentLODMethod = NULL;

    if (!pFnSetCurrentLODMethod)
        pFnSetCurrentLODMethod =
            (UFunction*)UObject::GObjObjects()->Data[30673];

    UParticleSystem_execSetCurrentLODMethod_Parms SetCurrentLODMethod_Parms;

    pFnSetCurrentLODMethod->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCurrentLODMethod, &SetCurrentLODMethod_Parms,
                       NULL);

    pFnSetCurrentLODMethod->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.GetLODDistance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::GetLODDistance() {
    static UFunction* pFnGetLODDistance = NULL;

    if (!pFnGetLODDistance)
        pFnGetLODDistance = (UFunction*)UObject::GObjObjects()->Data[30670];

    UParticleSystem_execGetLODDistance_Parms GetLODDistance_Parms;

    pFnGetLODDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLODDistance, &GetLODDistance_Parms, NULL);

    pFnGetLODDistance->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.GetLODLevelCount
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::GetLODLevelCount() {
    static UFunction* pFnGetLODLevelCount = NULL;

    if (!pFnGetLODLevelCount)
        pFnGetLODLevelCount = (UFunction*)UObject::GObjObjects()->Data[30668];

    UParticleSystem_execGetLODLevelCount_Parms GetLODLevelCount_Parms;

    pFnGetLODLevelCount->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLODLevelCount, &GetLODLevelCount_Parms, NULL);

    pFnGetLODLevelCount->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.GetCurrentLODMethod
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::GetCurrentLODMethod() {
    static UFunction* pFnGetCurrentLODMethod = NULL;

    if (!pFnGetCurrentLODMethod)
        pFnGetCurrentLODMethod =
            (UFunction*)UObject::GObjObjects()->Data[30666];

    UParticleSystem_execGetCurrentLODMethod_Parms GetCurrentLODMethod_Parms;

    pFnGetCurrentLODMethod->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCurrentLODMethod, &GetCurrentLODMethod_Parms,
                       NULL);

    pFnGetCurrentLODMethod->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.EffectiveParticleSystemAfterPhysXExtension
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::EffectiveParticleSystemAfterPhysXExtension() {
    static UFunction* pFnEffectiveParticleSystemAfterPhysXExtension = NULL;

    if (!pFnEffectiveParticleSystemAfterPhysXExtension)
        pFnEffectiveParticleSystemAfterPhysXExtension =
            (UFunction*)UObject::GObjObjects()->Data[30663];

    UParticleSystem_execEffectiveParticleSystemAfterPhysXExtension_Parms
        EffectiveParticleSystemAfterPhysXExtension_Parms;

    pFnEffectiveParticleSystemAfterPhysXExtension->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEffectiveParticleSystemAfterPhysXExtension,
                       &EffectiveParticleSystemAfterPhysXExtension_Parms, NULL);

    pFnEffectiveParticleSystemAfterPhysXExtension->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystem.EffectiveParticleSystemAfterPhysXOverride
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystem::EffectiveParticleSystemAfterPhysXOverride() {
    static UFunction* pFnEffectiveParticleSystemAfterPhysXOverride = NULL;

    if (!pFnEffectiveParticleSystemAfterPhysXOverride)
        pFnEffectiveParticleSystemAfterPhysXOverride =
            (UFunction*)UObject::GObjObjects()->Data[30661];

    UParticleSystem_execEffectiveParticleSystemAfterPhysXOverride_Parms
        EffectiveParticleSystemAfterPhysXOverride_Parms;

    pFnEffectiveParticleSystemAfterPhysXOverride->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEffectiveParticleSystemAfterPhysXOverride,
                       &EffectiveParticleSystemAfterPhysXOverride_Parms, NULL);

    pFnEffectiveParticleSystemAfterPhysXOverride->FunctionFlags |= 0x400;
};

// Function Engine.Texture2D.Create
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2D::Create() {
    static UFunction* pFnCreate = NULL;

    if (!pFnCreate) pFnCreate = (UFunction*)UObject::GObjObjects()->Data[6953];

    UTexture2D_execCreate_Parms Create_Parms;

    pFnCreate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreate, &Create_Parms, NULL);

    pFnCreate->FunctionFlags |= 0x400;
};

// Function Engine.Texture2D.SetForceMipLevelsToBeResident
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2D::SetForceMipLevelsToBeResident() {
    static UFunction* pFnSetForceMipLevelsToBeResident = NULL;

    if (!pFnSetForceMipLevelsToBeResident)
        pFnSetForceMipLevelsToBeResident =
            (UFunction*)UObject::GObjObjects()->Data[6950];

    UTexture2D_execSetForceMipLevelsToBeResident_Parms
        SetForceMipLevelsToBeResident_Parms;

    pFnSetForceMipLevelsToBeResident->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetForceMipLevelsToBeResident,
                       &SetForceMipLevelsToBeResident_Parms, NULL);

    pFnSetForceMipLevelsToBeResident->FunctionFlags |= 0x400;
};

// Function Engine.TranslationContext.RegisterTranslatorTag
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTranslationContext::RegisterTranslatorTag() {
    static UFunction* pFnRegisterTranslatorTag = NULL;

    if (!pFnRegisterTranslatorTag)
        pFnRegisterTranslatorTag =
            (UFunction*)UObject::GObjObjects()->Data[35441];

    UTranslationContext_execRegisterTranslatorTag_Parms
        RegisterTranslatorTag_Parms;

    pFnRegisterTranslatorTag->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRegisterTranslatorTag, &RegisterTranslatorTag_Parms,
                       NULL);

    pFnRegisterTranslatorTag->FunctionFlags |= 0x400;
};

// Function Engine.TranslatorTag.Translate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTranslatorTag::Translate() {
    static UFunction* pFnTranslate = NULL;

    if (!pFnTranslate)
        pFnTranslate = (UFunction*)UObject::GObjObjects()->Data[34616];

    UTranslatorTag_execTranslate_Parms Translate_Parms;

    pFnTranslate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTranslate, &Translate_Parms, NULL);

    pFnTranslate->FunctionFlags |= 0x400;
};

// Function Engine.StringsTag.Translate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UStringsTag::Translate() {
    static UFunction* pFnTranslate = NULL;

    if (!pFnTranslate)
        pFnTranslate = (UFunction*)UObject::GObjObjects()->Data[34619];

    UStringsTag_execTranslate_Parms Translate_Parms;

    pFnTranslate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTranslate, &Translate_Parms, NULL);

    pFnTranslate->FunctionFlags |= 0x400;
};

// Function Engine.TWFixupSplattermapUVCommandlet.Main
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTWFixupSplattermapUVCommandlet::eventMain() {
    static UFunction* pFnMain = NULL;

    if (!pFnMain) pFnMain = (UFunction*)UObject::GObjObjects()->Data[35560];

    UTWFixupSplattermapUVCommandlet_eventMain_Parms Main_Parms;

    pFnMain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMain, &Main_Parms, NULL);

    pFnMain->FunctionFlags |= 0x400;
};

// Function Engine.TWGenerateLightmapUVCommandlet.Main
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTWGenerateLightmapUVCommandlet::eventMain() {
    static UFunction* pFnMain = NULL;

    if (!pFnMain) pFnMain = (UFunction*)UObject::GObjObjects()->Data[35567];

    UTWGenerateLightmapUVCommandlet_eventMain_Parms Main_Parms;

    pFnMain->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMain, &Main_Parms, NULL);

    pFnMain->FunctionFlags |= 0x400;
};

// Function Engine.TWOnlineLobby.LobbyInvite
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::LobbyInvite() {
    static UFunction* pFnLobbyInvite = NULL;

    if (!pFnLobbyInvite)
        pFnLobbyInvite = (UFunction*)UObject::GObjObjects()->Data[35671];

    UTWOnlineLobby_execLobbyInvite_Parms LobbyInvite_Parms;

    this->ProcessEvent(pFnLobbyInvite, &LobbyInvite_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetLobbyFromCommandline
// [0x00424000]
// Parameters infos:

void UTWOnlineLobby::GetLobbyFromCommandline() {
    static UFunction* pFnGetLobbyFromCommandline = NULL;

    if (!pFnGetLobbyFromCommandline)
        pFnGetLobbyFromCommandline =
            (UFunction*)UObject::GObjObjects()->Data[35667];

    UTWOnlineLobby_execGetLobbyFromCommandline_Parms
        GetLobbyFromCommandline_Parms;

    this->ProcessEvent(pFnGetLobbyFromCommandline,
                       &GetLobbyFromCommandline_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetCurrentLobbyId
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::GetCurrentLobbyId() {
    static UFunction* pFnGetCurrentLobbyId = NULL;

    if (!pFnGetCurrentLobbyId)
        pFnGetCurrentLobbyId = (UFunction*)UObject::GObjObjects()->Data[35665];

    UTWOnlineLobby_execGetCurrentLobbyId_Parms GetCurrentLobbyId_Parms;

    this->ProcessEvent(pFnGetCurrentLobbyId, &GetCurrentLobbyId_Parms, NULL);
};

// Function Engine.TWOnlineLobby.MakeLobby
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::MakeLobby() {
    static UFunction* pFnMakeLobby = NULL;

    if (!pFnMakeLobby)
        pFnMakeLobby = (UFunction*)UObject::GObjObjects()->Data[35661];

    UTWOnlineLobby_execMakeLobby_Parms MakeLobby_Parms;

    this->ProcessEvent(pFnMakeLobby, &MakeLobby_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetCurrentPartySize
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::GetCurrentPartySize() {
    static UFunction* pFnGetCurrentPartySize = NULL;

    if (!pFnGetCurrentPartySize)
        pFnGetCurrentPartySize =
            (UFunction*)UObject::GObjObjects()->Data[35659];

    UTWOnlineLobby_execGetCurrentPartySize_Parms GetCurrentPartySize_Parms;

    this->ProcessEvent(pFnGetCurrentPartySize, &GetCurrentPartySize_Parms,
                       NULL);
};

// Function Engine.TWOnlineLobby.GetCurrentLobby
// [0x00420000]
// Parameters infos:

void UTWOnlineLobby::GetCurrentLobby() {
    static UFunction* pFnGetCurrentLobby = NULL;

    if (!pFnGetCurrentLobby)
        pFnGetCurrentLobby = (UFunction*)UObject::GObjObjects()->Data[35656];

    UTWOnlineLobby_execGetCurrentLobby_Parms GetCurrentLobby_Parms;

    this->ProcessEvent(pFnGetCurrentLobby, &GetCurrentLobby_Parms, NULL);
};

// Function Engine.TWOnlineLobby.LobbyMessage
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::LobbyMessage() {
    static UFunction* pFnLobbyMessage = NULL;

    if (!pFnLobbyMessage)
        pFnLobbyMessage = (UFunction*)UObject::GObjObjects()->Data[35653];

    UTWOnlineLobby_execLobbyMessage_Parms LobbyMessage_Parms;

    this->ProcessEvent(pFnLobbyMessage, &LobbyMessage_Parms, NULL);
};

// Function Engine.TWOnlineLobby.SendInviteToUsers
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::SendInviteToUsers() {
    static UFunction* pFnSendInviteToUsers = NULL;

    if (!pFnSendInviteToUsers)
        pFnSendInviteToUsers = (UFunction*)UObject::GObjObjects()->Data[35648];

    UTWOnlineLobby_execSendInviteToUsers_Parms SendInviteToUsers_Parms;

    this->ProcessEvent(pFnSendInviteToUsers, &SendInviteToUsers_Parms, NULL);
};

// Function Engine.TWOnlineLobby.ShowLobbyInviteInterface
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::ShowLobbyInviteInterface() {
    static UFunction* pFnShowLobbyInviteInterface = NULL;

    if (!pFnShowLobbyInviteInterface)
        pFnShowLobbyInviteInterface =
            (UFunction*)UObject::GObjObjects()->Data[35646];

    UTWOnlineLobby_execShowLobbyInviteInterface_Parms
        ShowLobbyInviteInterface_Parms;

    this->ProcessEvent(pFnShowLobbyInviteInterface,
                       &ShowLobbyInviteInterface_Parms, NULL);
};

// Function Engine.TWOnlineLobby.SetVisibility
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::SetVisibility() {
    static UFunction* pFnSetVisibility = NULL;

    if (!pFnSetVisibility)
        pFnSetVisibility = (UFunction*)UObject::GObjObjects()->Data[35643];

    UTWOnlineLobby_execSetVisibility_Parms SetVisibility_Parms;

    this->ProcessEvent(pFnSetVisibility, &SetVisibility_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetLobbyData
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::GetLobbyData() {
    static UFunction* pFnGetLobbyData = NULL;

    if (!pFnGetLobbyData)
        pFnGetLobbyData = (UFunction*)UObject::GObjObjects()->Data[35639];

    UTWOnlineLobby_execGetLobbyData_Parms GetLobbyData_Parms;

    this->ProcessEvent(pFnGetLobbyData, &GetLobbyData_Parms, NULL);
};

// Function Engine.TWOnlineLobby.SetLobbyData
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::SetLobbyData() {
    static UFunction* pFnSetLobbyData = NULL;

    if (!pFnSetLobbyData)
        pFnSetLobbyData = (UFunction*)UObject::GObjObjects()->Data[35636];

    UTWOnlineLobby_execSetLobbyData_Parms SetLobbyData_Parms;

    this->ProcessEvent(pFnSetLobbyData, &SetLobbyData_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetFriendNickname
// [0x00024000]
// Parameters infos:

void UTWOnlineLobby::GetFriendNickname() {
    static UFunction* pFnGetFriendNickname = NULL;

    if (!pFnGetFriendNickname)
        pFnGetFriendNickname = (UFunction*)UObject::GObjObjects()->Data[35632];

    UTWOnlineLobby_execGetFriendNickname_Parms GetFriendNickname_Parms;

    this->ProcessEvent(pFnGetFriendNickname, &GetFriendNickname_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetMyId
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::GetMyId() {
    static UFunction* pFnGetMyId = NULL;

    if (!pFnGetMyId)
        pFnGetMyId = (UFunction*)UObject::GObjObjects()->Data[35630];

    UTWOnlineLobby_execGetMyId_Parms GetMyId_Parms;

    this->ProcessEvent(pFnGetMyId, &GetMyId_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetLobbyAdmin
// [0x00420000]
// Parameters infos:

void UTWOnlineLobby::GetLobbyAdmin() {
    static UFunction* pFnGetLobbyAdmin = NULL;

    if (!pFnGetLobbyAdmin)
        pFnGetLobbyAdmin = (UFunction*)UObject::GObjObjects()->Data[35626];

    UTWOnlineLobby_execGetLobbyAdmin_Parms GetLobbyAdmin_Parms;

    this->ProcessEvent(pFnGetLobbyAdmin, &GetLobbyAdmin_Parms, NULL);
};

// Function Engine.TWOnlineLobby.QuitLobby
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::QuitLobby() {
    static UFunction* pFnQuitLobby = NULL;

    if (!pFnQuitLobby)
        pFnQuitLobby = (UFunction*)UObject::GObjObjects()->Data[35624];

    UTWOnlineLobby_execQuitLobby_Parms QuitLobby_Parms;

    this->ProcessEvent(pFnQuitLobby, &QuitLobby_Parms, NULL);
};

// Function Engine.TWOnlineLobby.IsLobbyOwner
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::IsLobbyOwner() {
    static UFunction* pFnIsLobbyOwner = NULL;

    if (!pFnIsLobbyOwner)
        pFnIsLobbyOwner = (UFunction*)UObject::GObjObjects()->Data[35622];

    UTWOnlineLobby_execIsLobbyOwner_Parms IsLobbyOwner_Parms;

    this->ProcessEvent(pFnIsLobbyOwner, &IsLobbyOwner_Parms, NULL);
};

// Function Engine.TWOnlineLobby.IsInLobby
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::IsInLobby() {
    static UFunction* pFnIsInLobby = NULL;

    if (!pFnIsInLobby)
        pFnIsInLobby = (UFunction*)UObject::GObjObjects()->Data[35620];

    UTWOnlineLobby_execIsInLobby_Parms IsInLobby_Parms;

    this->ProcessEvent(pFnIsInLobby, &IsInLobby_Parms, NULL);
};

// Function Engine.TWOnlineLobby.GetLobbyURLString
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::GetLobbyURLString() {
    static UFunction* pFnGetLobbyURLString = NULL;

    if (!pFnGetLobbyURLString)
        pFnGetLobbyURLString = (UFunction*)UObject::GObjObjects()->Data[35618];

    UTWOnlineLobby_execGetLobbyURLString_Parms GetLobbyURLString_Parms;

    this->ProcessEvent(pFnGetLobbyURLString, &GetLobbyURLString_Parms, NULL);
};

// Function Engine.TWOnlineLobby.SetServerPassword
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::SetServerPassword() {
    static UFunction* pFnSetServerPassword = NULL;

    if (!pFnSetServerPassword)
        pFnSetServerPassword = (UFunction*)UObject::GObjObjects()->Data[35616];

    UTWOnlineLobby_execSetServerPassword_Parms SetServerPassword_Parms;

    this->ProcessEvent(pFnSetServerPassword, &SetServerPassword_Parms, NULL);
};

// Function Engine.TWOnlineLobby.LobbyJoinServer
// [0x00020000]
// Parameters infos:

void UTWOnlineLobby::LobbyJoinServer() {
    static UFunction* pFnLobbyJoinServer = NULL;

    if (!pFnLobbyJoinServer)
        pFnLobbyJoinServer = (UFunction*)UObject::GObjObjects()->Data[35613];

    UTWOnlineLobby_execLobbyJoinServer_Parms LobbyJoinServer_Parms;

    this->ProcessEvent(pFnLobbyJoinServer, &LobbyJoinServer_Parms, NULL);
};

// Function Engine.TWOnlineLobby.LobbyJoinGame
// [0x00024000]
// Parameters infos:

void UTWOnlineLobby::LobbyJoinGame() {
    static UFunction* pFnLobbyJoinGame = NULL;

    if (!pFnLobbyJoinGame)
        pFnLobbyJoinGame = (UFunction*)UObject::GObjObjects()->Data[35610];

    UTWOnlineLobby_execLobbyJoinGame_Parms LobbyJoinGame_Parms;

    this->ProcessEvent(pFnLobbyJoinGame, &LobbyJoinGame_Parms, NULL);
};

// Function Engine.TWOnlineUGCInterface.GetUGCForPackage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTWOnlineUGCInterface::GetUGCForPackage() {
    static UFunction* pFnGetUGCForPackage = NULL;

    if (!pFnGetUGCForPackage)
        pFnGetUGCForPackage = (UFunction*)UObject::GObjObjects()->Data[35703];

    UTWOnlineUGCInterface_execGetUGCForPackage_Parms GetUGCForPackage_Parms;

    pFnGetUGCForPackage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUGCForPackage, &GetUGCForPackage_Parms, NULL);

    pFnGetUGCForPackage->FunctionFlags |= 0x400;
};

// Function Engine.TWOnlineUGCInterface.ClearUGCDownloadProgressDelegate
// [0x00020000]
// Parameters infos:

void UTWOnlineUGCInterface::ClearUGCDownloadProgressDelegate() {
    static UFunction* pFnClearUGCDownloadProgressDelegate = NULL;

    if (!pFnClearUGCDownloadProgressDelegate)
        pFnClearUGCDownloadProgressDelegate =
            (UFunction*)UObject::GObjObjects()->Data[35702];

    UTWOnlineUGCInterface_execClearUGCDownloadProgressDelegate_Parms
        ClearUGCDownloadProgressDelegate_Parms;

    this->ProcessEvent(pFnClearUGCDownloadProgressDelegate,
                       &ClearUGCDownloadProgressDelegate_Parms, NULL);
};

// Function Engine.TWOnlineUGCInterface.SetUGCDownloadProgressDelegate
// [0x00020000]
// Parameters infos:

void UTWOnlineUGCInterface::SetUGCDownloadProgressDelegate() {
    static UFunction* pFnSetUGCDownloadProgressDelegate = NULL;

    if (!pFnSetUGCDownloadProgressDelegate)
        pFnSetUGCDownloadProgressDelegate =
            (UFunction*)UObject::GObjObjects()->Data[35700];

    UTWOnlineUGCInterface_execSetUGCDownloadProgressDelegate_Parms
        SetUGCDownloadProgressDelegate_Parms;

    this->ProcessEvent(pFnSetUGCDownloadProgressDelegate,
                       &SetUGCDownloadProgressDelegate_Parms, NULL);
};

// Function Engine.TWOnlineUGCInterface.UGCDownloadProgressDelegate
// [0x00120000]
// Parameters infos:

void UTWOnlineUGCInterface::UGCDownloadProgressDelegate() {
    static UFunction* pFnUGCDownloadProgressDelegate = NULL;

    if (!pFnUGCDownloadProgressDelegate)
        pFnUGCDownloadProgressDelegate =
            (UFunction*)UObject::GObjObjects()->Data[35695];

    UTWOnlineUGCInterface_execUGCDownloadProgressDelegate_Parms
        UGCDownloadProgressDelegate_Parms;

    this->ProcessEvent(pFnUGCDownloadProgressDelegate,
                       &UGCDownloadProgressDelegate_Parms, NULL);
};

// Function Engine.TWOnlineUGCInterface.EnumerateWorkshopFiles
// [0x00020000]
// Parameters infos:

void UTWOnlineUGCInterface::EnumerateWorkshopFiles() {
    static UFunction* pFnEnumerateWorkshopFiles = NULL;

    if (!pFnEnumerateWorkshopFiles)
        pFnEnumerateWorkshopFiles =
            (UFunction*)UObject::GObjObjects()->Data[35694];

    UTWOnlineUGCInterface_execEnumerateWorkshopFiles_Parms
        EnumerateWorkshopFiles_Parms;

    this->ProcessEvent(pFnEnumerateWorkshopFiles, &EnumerateWorkshopFiles_Parms,
                       NULL);
};

// Function Engine.UIRoot.SafeCaps
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIRoot::SafeCaps() {
    static UFunction* pFnSafeCaps = NULL;

    if (!pFnSafeCaps)
        pFnSafeCaps = (UFunction*)UObject::GObjObjects()->Data[16737];

    UUIRoot_execSafeCaps_Parms SafeCaps_Parms;

    this->ProcessEvent(pFnSafeCaps, &SafeCaps_Parms, NULL);
};

// Function Engine.UIRoot.GetOnlinePlayerInterfaceEx
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIRoot::GetOnlinePlayerInterfaceEx() {
    static UFunction* pFnGetOnlinePlayerInterfaceEx = NULL;

    if (!pFnGetOnlinePlayerInterfaceEx)
        pFnGetOnlinePlayerInterfaceEx =
            (UFunction*)UObject::GObjObjects()->Data[16733];

    UUIRoot_execGetOnlinePlayerInterfaceEx_Parms
        GetOnlinePlayerInterfaceEx_Parms;

    this->ProcessEvent(pFnGetOnlinePlayerInterfaceEx,
                       &GetOnlinePlayerInterfaceEx_Parms, NULL);
};

// Function Engine.UIRoot.GetOnlinePlayerInterface
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIRoot::GetOnlinePlayerInterface() {
    static UFunction* pFnGetOnlinePlayerInterface = NULL;

    if (!pFnGetOnlinePlayerInterface)
        pFnGetOnlinePlayerInterface =
            (UFunction*)UObject::GObjObjects()->Data[16729];

    UUIRoot_execGetOnlinePlayerInterface_Parms GetOnlinePlayerInterface_Parms;

    this->ProcessEvent(pFnGetOnlinePlayerInterface,
                       &GetOnlinePlayerInterface_Parms, NULL);
};

// Function Engine.UIRoot.GetOnlineGameInterface
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIRoot::GetOnlineGameInterface() {
    static UFunction* pFnGetOnlineGameInterface = NULL;

    if (!pFnGetOnlineGameInterface)
        pFnGetOnlineGameInterface =
            (UFunction*)UObject::GObjObjects()->Data[16725];

    UUIRoot_execGetOnlineGameInterface_Parms GetOnlineGameInterface_Parms;

    this->ProcessEvent(pFnGetOnlineGameInterface, &GetOnlineGameInterface_Parms,
                       NULL);
};

// Function Engine.UIRoot.StaticResolveDataStore
// [0x00026003] ( FUNC_Final )
// Parameters infos:

void UUIRoot::StaticResolveDataStore() {
    static UFunction* pFnStaticResolveDataStore = NULL;

    if (!pFnStaticResolveDataStore)
        pFnStaticResolveDataStore =
            (UFunction*)UObject::GObjObjects()->Data[16719];

    UUIRoot_execStaticResolveDataStore_Parms StaticResolveDataStore_Parms;

    this->ProcessEvent(pFnStaticResolveDataStore, &StaticResolveDataStore_Parms,
                       NULL);
};

// Function Engine.UIRoot.GetSceneClient
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIRoot::GetSceneClient() {
    static UFunction* pFnGetSceneClient = NULL;

    if (!pFnGetSceneClient)
        pFnGetSceneClient = (UFunction*)UObject::GObjObjects()->Data[16717];

    UUIRoot_execGetSceneClient_Parms GetSceneClient_Parms;

    pFnGetSceneClient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSceneClient, &GetSceneClient_Parms, NULL);

    pFnGetSceneClient->FunctionFlags |= 0x400;
};

// Function Engine.UIRoot.GetCurrentUIController
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIRoot::GetCurrentUIController() {
    static UFunction* pFnGetCurrentUIController = NULL;

    if (!pFnGetCurrentUIController)
        pFnGetCurrentUIController =
            (UFunction*)UObject::GObjObjects()->Data[16715];

    UUIRoot_execGetCurrentUIController_Parms GetCurrentUIController_Parms;

    pFnGetCurrentUIController->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCurrentUIController, &GetCurrentUIController_Parms,
                       NULL);

    pFnGetCurrentUIController->FunctionFlags |= 0x400;
};

// Function Engine.UIRoot.GetInputPlatformType
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIRoot::GetInputPlatformType() {
    static UFunction* pFnGetInputPlatformType = NULL;

    if (!pFnGetInputPlatformType)
        pFnGetInputPlatformType =
            (UFunction*)UObject::GObjObjects()->Data[16712];

    UUIRoot_execGetInputPlatformType_Parms GetInputPlatformType_Parms;

    pFnGetInputPlatformType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetInputPlatformType, &GetInputPlatformType_Parms,
                       NULL);

    pFnGetInputPlatformType->FunctionFlags |= 0x400;
};

// Function Engine.Interaction.NotifyPlayerRemoved
// [0x00020000]
// Parameters infos:

void UInteraction::NotifyPlayerRemoved() {
    static UFunction* pFnNotifyPlayerRemoved = NULL;

    if (!pFnNotifyPlayerRemoved)
        pFnNotifyPlayerRemoved =
            (UFunction*)UObject::GObjObjects()->Data[16774];

    UInteraction_execNotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;

    this->ProcessEvent(pFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Parms,
                       NULL);
};

// Function Engine.Interaction.NotifyPlayerAdded
// [0x00020000]
// Parameters infos:

void UInteraction::NotifyPlayerAdded() {
    static UFunction* pFnNotifyPlayerAdded = NULL;

    if (!pFnNotifyPlayerAdded)
        pFnNotifyPlayerAdded = (UFunction*)UObject::GObjObjects()->Data[16771];

    UInteraction_execNotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;

    this->ProcessEvent(pFnNotifyPlayerAdded, &NotifyPlayerAdded_Parms, NULL);
};

// Function Engine.Interaction.NotifyGameSessionEnded
// [0x00020000]
// Parameters infos:

void UInteraction::NotifyGameSessionEnded() {
    static UFunction* pFnNotifyGameSessionEnded = NULL;

    if (!pFnNotifyGameSessionEnded)
        pFnNotifyGameSessionEnded =
            (UFunction*)UObject::GObjObjects()->Data[16770];

    UInteraction_execNotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;

    this->ProcessEvent(pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms,
                       NULL);
};

// Function Engine.Interaction.Initialized
// [0x00020000]
// Parameters infos:

void UInteraction::Initialized() {
    static UFunction* pFnInitialized = NULL;

    if (!pFnInitialized)
        pFnInitialized = (UFunction*)UObject::GObjObjects()->Data[16769];

    UInteraction_execInitialized_Parms Initialized_Parms;

    this->ProcessEvent(pFnInitialized, &Initialized_Parms, NULL);
};

// Function Engine.Interaction.OnInitialize
// [0x00120000]
// Parameters infos:

void UInteraction::OnInitialize() {
    static UFunction* pFnOnInitialize = NULL;

    if (!pFnOnInitialize)
        pFnOnInitialize = (UFunction*)UObject::GObjObjects()->Data[16768];

    UInteraction_execOnInitialize_Parms OnInitialize_Parms;

    this->ProcessEvent(pFnOnInitialize, &OnInitialize_Parms, NULL);
};

// Function Engine.Interaction.Init
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UInteraction::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[16767];

    UInteraction_execInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.Interaction.PostRender
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UInteraction::eventPostRender() {
    static UFunction* pFnPostRender = NULL;

    if (!pFnPostRender)
        pFnPostRender = (UFunction*)UObject::GObjObjects()->Data[16765];

    UInteraction_eventPostRender_Parms PostRender_Parms;

    this->ProcessEvent(pFnPostRender, &PostRender_Parms, NULL);
};

// Function Engine.Interaction.Tick
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UInteraction::eventTick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[16763];

    UInteraction_eventTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.Interaction.OnReceivedNativeInputChar
// [0x00120000]
// Parameters infos:

void UInteraction::OnReceivedNativeInputChar() {
    static UFunction* pFnOnReceivedNativeInputChar = NULL;

    if (!pFnOnReceivedNativeInputChar)
        pFnOnReceivedNativeInputChar =
            (UFunction*)UObject::GObjObjects()->Data[16759];

    UInteraction_execOnReceivedNativeInputChar_Parms
        OnReceivedNativeInputChar_Parms;

    this->ProcessEvent(pFnOnReceivedNativeInputChar,
                       &OnReceivedNativeInputChar_Parms, NULL);
};

// Function Engine.Interaction.OnReceivedNativeInputAxis
// [0x00124000]
// Parameters infos:

void UInteraction::OnReceivedNativeInputAxis() {
    static UFunction* pFnOnReceivedNativeInputAxis = NULL;

    if (!pFnOnReceivedNativeInputAxis)
        pFnOnReceivedNativeInputAxis =
            (UFunction*)UObject::GObjObjects()->Data[16752];

    UInteraction_execOnReceivedNativeInputAxis_Parms
        OnReceivedNativeInputAxis_Parms;

    this->ProcessEvent(pFnOnReceivedNativeInputAxis,
                       &OnReceivedNativeInputAxis_Parms, NULL);
};

// Function Engine.Interaction.OnReceivedNativeInputKey
// [0x00124000]
// Parameters infos:

void UInteraction::OnReceivedNativeInputKey() {
    static UFunction* pFnOnReceivedNativeInputKey = NULL;

    if (!pFnOnReceivedNativeInputKey)
        pFnOnReceivedNativeInputKey =
            (UFunction*)UObject::GObjObjects()->Data[16741];

    UInteraction_execOnReceivedNativeInputKey_Parms
        OnReceivedNativeInputKey_Parms;

    this->ProcessEvent(pFnOnReceivedNativeInputKey,
                       &OnReceivedNativeInputKey_Parms, NULL);
};

// Function Engine.UIInteraction.NotifyGameSessionEnded
// [0x00020002]
// Parameters infos:

void UUIInteraction::NotifyGameSessionEnded() {
    static UFunction* pFnNotifyGameSessionEnded = NULL;

    if (!pFnNotifyGameSessionEnded)
        pFnNotifyGameSessionEnded =
            (UFunction*)UObject::GObjObjects()->Data[36525];

    UUIInteraction_execNotifyGameSessionEnded_Parms
        NotifyGameSessionEnded_Parms;

    this->ProcessEvent(pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms,
                       NULL);
};

// Function Engine.UIInteraction.GetNATType
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UUIInteraction::eventGetNATType() {
    static UFunction* pFnGetNATType = NULL;

    if (!pFnGetNATType)
        pFnGetNATType = (UFunction*)UObject::GObjObjects()->Data[36520];

    UUIInteraction_eventGetNATType_Parms GetNATType_Parms;

    this->ProcessEvent(pFnGetNATType, &GetNATType_Parms, NULL);
};

// Function Engine.UIInteraction.GetConnectedGamepadCount
// [0x00026003] ( FUNC_Final )
// Parameters infos:

void UUIInteraction::GetConnectedGamepadCount() {
    static UFunction* pFnGetConnectedGamepadCount = NULL;

    if (!pFnGetConnectedGamepadCount)
        pFnGetConnectedGamepadCount =
            (UFunction*)UObject::GObjObjects()->Data[36514];

    UUIInteraction_execGetConnectedGamepadCount_Parms
        GetConnectedGamepadCount_Parms;

    this->ProcessEvent(pFnGetConnectedGamepadCount,
                       &GetConnectedGamepadCount_Parms, NULL);
};

// Function Engine.UIInteraction.IsGamepadConnected
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIInteraction::IsGamepadConnected() {
    static UFunction* pFnIsGamepadConnected = NULL;

    if (!pFnIsGamepadConnected)
        pFnIsGamepadConnected = (UFunction*)UObject::GObjObjects()->Data[22856];

    UUIInteraction_execIsGamepadConnected_Parms IsGamepadConnected_Parms;

    this->ProcessEvent(pFnIsGamepadConnected, &IsGamepadConnected_Parms, NULL);
};

// Function Engine.UIInteraction.GetNumGuestsLoggedIn
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIInteraction::GetNumGuestsLoggedIn() {
    static UFunction* pFnGetNumGuestsLoggedIn = NULL;

    if (!pFnGetNumGuestsLoggedIn)
        pFnGetNumGuestsLoggedIn =
            (UFunction*)UObject::GObjObjects()->Data[36505];

    UUIInteraction_execGetNumGuestsLoggedIn_Parms GetNumGuestsLoggedIn_Parms;

    this->ProcessEvent(pFnGetNumGuestsLoggedIn, &GetNumGuestsLoggedIn_Parms,
                       NULL);
};

// Function Engine.UIInteraction.GetLoggedInPlayerCount
// [0x00026003] ( FUNC_Final )
// Parameters infos:

void UUIInteraction::GetLoggedInPlayerCount() {
    static UFunction* pFnGetLoggedInPlayerCount = NULL;

    if (!pFnGetLoggedInPlayerCount)
        pFnGetLoggedInPlayerCount =
            (UFunction*)UObject::GObjObjects()->Data[36500];

    UUIInteraction_execGetLoggedInPlayerCount_Parms
        GetLoggedInPlayerCount_Parms;

    this->ProcessEvent(pFnGetLoggedInPlayerCount, &GetLoggedInPlayerCount_Parms,
                       NULL);
};

// Function Engine.UIInteraction.IsLoggedIn
// [0x00026803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UUIInteraction::eventIsLoggedIn() {
    static UFunction* pFnIsLoggedIn = NULL;

    if (!pFnIsLoggedIn)
        pFnIsLoggedIn = (UFunction*)UObject::GObjObjects()->Data[22854];

    UUIInteraction_eventIsLoggedIn_Parms IsLoggedIn_Parms;

    this->ProcessEvent(pFnIsLoggedIn, &IsLoggedIn_Parms, NULL);
};

// Function Engine.UIInteraction.HasLinkConnection
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UUIInteraction::eventHasLinkConnection() {
    static UFunction* pFnHasLinkConnection = NULL;

    if (!pFnHasLinkConnection)
        pFnHasLinkConnection = (UFunction*)UObject::GObjObjects()->Data[36491];

    UUIInteraction_eventHasLinkConnection_Parms HasLinkConnection_Parms;

    this->ProcessEvent(pFnHasLinkConnection, &HasLinkConnection_Parms, NULL);
};

// Function Engine.UIInteraction.GetLowestLoginStatusOfControllers
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UUIInteraction::GetLowestLoginStatusOfControllers() {
    static UFunction* pFnGetLowestLoginStatusOfControllers = NULL;

    if (!pFnGetLowestLoginStatusOfControllers)
        pFnGetLowestLoginStatusOfControllers =
            (UFunction*)UObject::GObjObjects()->Data[36486];

    UUIInteraction_execGetLowestLoginStatusOfControllers_Parms
        GetLowestLoginStatusOfControllers_Parms;

    this->ProcessEvent(pFnGetLowestLoginStatusOfControllers,
                       &GetLowestLoginStatusOfControllers_Parms, NULL);
};

// Function Engine.UIInteraction.GetLoginStatus
// [0x00022803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UUIInteraction::eventGetLoginStatus() {
    static UFunction* pFnGetLoginStatus = NULL;

    if (!pFnGetLoginStatus)
        pFnGetLoginStatus = (UFunction*)UObject::GObjObjects()->Data[36480];

    UUIInteraction_eventGetLoginStatus_Parms GetLoginStatus_Parms;

    this->ProcessEvent(pFnGetLoginStatus, &GetLoginStatus_Parms, NULL);
};

// Function Engine.UIInteraction.NotifyPlayerRemoved
// [0x00820002]
// Parameters infos:

void UUIInteraction::NotifyPlayerRemoved() {
    static UFunction* pFnNotifyPlayerRemoved = NULL;

    if (!pFnNotifyPlayerRemoved)
        pFnNotifyPlayerRemoved =
            (UFunction*)UObject::GObjObjects()->Data[36473];

    UUIInteraction_execNotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;

    this->ProcessEvent(pFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Parms,
                       NULL);
};

// Function Engine.UIInteraction.NotifyPlayerAdded
// [0x00820002]
// Parameters infos:

void UUIInteraction::NotifyPlayerAdded() {
    static UFunction* pFnNotifyPlayerAdded = NULL;

    if (!pFnNotifyPlayerAdded)
        pFnNotifyPlayerAdded = (UFunction*)UObject::GObjObjects()->Data[36469];

    UUIInteraction_execNotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;

    this->ProcessEvent(pFnNotifyPlayerAdded, &NotifyPlayerAdded_Parms, NULL);
};

// Function Engine.UIInteraction.GetLocalPlayer
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UUIInteraction::GetLocalPlayer() {
    static UFunction* pFnGetLocalPlayer = NULL;

    if (!pFnGetLocalPlayer)
        pFnGetLocalPlayer = (UFunction*)UObject::GObjObjects()->Data[36464];

    UUIInteraction_execGetLocalPlayer_Parms GetLocalPlayer_Parms;

    this->ProcessEvent(pFnGetLocalPlayer, &GetLocalPlayer_Parms, NULL);
};

// Function Engine.UIInteraction.GetDataStoreClient
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIInteraction::GetDataStoreClient() {
    static UFunction* pFnGetDataStoreClient = NULL;

    if (!pFnGetDataStoreClient)
        pFnGetDataStoreClient = (UFunction*)UObject::GObjObjects()->Data[12534];

    UUIInteraction_execGetDataStoreClient_Parms GetDataStoreClient_Parms;

    pFnGetDataStoreClient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDataStoreClient, &GetDataStoreClient_Parms, NULL);

    pFnGetDataStoreClient->FunctionFlags |= 0x400;
};

// Function Engine.UIInteraction.GetPlayerControllerId
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIInteraction::GetPlayerControllerId() {
    static UFunction* pFnGetPlayerControllerId = NULL;

    if (!pFnGetPlayerControllerId)
        pFnGetPlayerControllerId =
            (UFunction*)UObject::GObjObjects()->Data[36461];

    UUIInteraction_execGetPlayerControllerId_Parms GetPlayerControllerId_Parms;

    pFnGetPlayerControllerId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerControllerId, &GetPlayerControllerId_Parms,
                       NULL);

    pFnGetPlayerControllerId->FunctionFlags |= 0x400;
};

// Function Engine.UIInteraction.GetPlayerIndex
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIInteraction::GetPlayerIndex() {
    static UFunction* pFnGetPlayerIndex = NULL;

    if (!pFnGetPlayerIndex)
        pFnGetPlayerIndex = (UFunction*)UObject::GObjObjects()->Data[12583];

    UUIInteraction_execGetPlayerIndex_Parms GetPlayerIndex_Parms;

    pFnGetPlayerIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerIndex, &GetPlayerIndex_Parms, NULL);

    pFnGetPlayerIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIInteraction.GetPlayerCount
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIInteraction::GetPlayerCount() {
    static UFunction* pFnGetPlayerCount = NULL;

    if (!pFnGetPlayerCount)
        pFnGetPlayerCount = (UFunction*)UObject::GObjObjects()->Data[22831];

    UUIInteraction_execGetPlayerCount_Parms GetPlayerCount_Parms;

    pFnGetPlayerCount->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerCount, &GetPlayerCount_Parms, NULL);

    pFnGetPlayerCount->FunctionFlags |= 0x400;
};

// Function Engine.UIManager.FindLocalPlayerIndex
// [0x00020002]
// Parameters infos:

void UUIManager::FindLocalPlayerIndex() {
    static UFunction* pFnFindLocalPlayerIndex = NULL;

    if (!pFnFindLocalPlayerIndex)
        pFnFindLocalPlayerIndex =
            (UFunction*)UObject::GObjObjects()->Data[36541];

    UUIManager_execFindLocalPlayerIndex_Parms FindLocalPlayerIndex_Parms;

    this->ProcessEvent(pFnFindLocalPlayerIndex, &FindLocalPlayerIndex_Parms,
                       NULL);
};

// Function Engine.UIManager.NotifyPlayerRemoved
// [0x00020000]
// Parameters infos:

void UUIManager::NotifyPlayerRemoved() {
    static UFunction* pFnNotifyPlayerRemoved = NULL;

    if (!pFnNotifyPlayerRemoved)
        pFnNotifyPlayerRemoved =
            (UFunction*)UObject::GObjObjects()->Data[36538];

    UUIManager_execNotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;

    this->ProcessEvent(pFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Parms,
                       NULL);
};

// Function Engine.UIManager.NotifyPlayerAdded
// [0x00020000]
// Parameters infos:

void UUIManager::NotifyPlayerAdded() {
    static UFunction* pFnNotifyPlayerAdded = NULL;

    if (!pFnNotifyPlayerAdded)
        pFnNotifyPlayerAdded = (UFunction*)UObject::GObjObjects()->Data[36535];

    UUIManager_execNotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;

    this->ProcessEvent(pFnNotifyPlayerAdded, &NotifyPlayerAdded_Parms, NULL);
};

// Function Engine.UIManager.PauseGame
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUIManager::eventPauseGame() {
    static UFunction* pFnPauseGame = NULL;

    if (!pFnPauseGame)
        pFnPauseGame = (UFunction*)UObject::GObjObjects()->Data[36530];

    UUIManager_eventPauseGame_Parms PauseGame_Parms;

    this->ProcessEvent(pFnPauseGame, &PauseGame_Parms, NULL);
};

// Function Engine.UIManager.CanUnpauseInternalUI
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIManager::CanUnpauseInternalUI() {
    static UFunction* pFnCanUnpauseInternalUI = NULL;

    if (!pFnCanUnpauseInternalUI)
        pFnCanUnpauseInternalUI =
            (UFunction*)UObject::GObjObjects()->Data[36528];

    UUIManager_execCanUnpauseInternalUI_Parms CanUnpauseInternalUI_Parms;

    pFnCanUnpauseInternalUI->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanUnpauseInternalUI, &CanUnpauseInternalUI_Parms,
                       NULL);

    pFnCanUnpauseInternalUI->FunctionFlags |= 0x400;
};

// Function Engine.UIManager.GetUIManager
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIManager::GetUIManager() {
    static UFunction* pFnGetUIManager = NULL;

    if (!pFnGetUIManager)
        pFnGetUIManager = (UFunction*)UObject::GObjObjects()->Data[36526];

    UUIManager_execGetUIManager_Parms GetUIManager_Parms;

    pFnGetUIManager->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUIManager, &GetUIManager_Parms, NULL);

    pFnGetUIManager->FunctionFlags |= 0x400;
};

// Function Engine.EnvironmentVolume.SetSplitNavMesh
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AEnvironmentVolume::SetSplitNavMesh() {
    static UFunction* pFnSetSplitNavMesh = NULL;

    if (!pFnSetSplitNavMesh)
        pFnSetSplitNavMesh = (UFunction*)UObject::GObjObjects()->Data[19469];

    AEnvironmentVolume_execSetSplitNavMesh_Parms SetSplitNavMesh_Parms;

    pFnSetSplitNavMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSplitNavMesh, &SetSplitNavMesh_Parms, NULL);

    pFnSetSplitNavMesh->FunctionFlags |= 0x400;
};

// Function Engine.AIController.CanFireWeapon
// [0x00020002]
// Parameters infos:

void AAIController::CanFireWeapon() {
    static UFunction* pFnCanFireWeapon = NULL;

    if (!pFnCanFireWeapon)
        pFnCanFireWeapon = (UFunction*)UObject::GObjObjects()->Data[12766];

    AAIController_execCanFireWeapon_Parms CanFireWeapon_Parms;

    this->ProcessEvent(pFnCanFireWeapon, &CanFireWeapon_Parms, NULL);
};

// Function Engine.AIController.NotifyWeaponFinishedFiring
// [0x00020000]
// Parameters infos:

void AAIController::NotifyWeaponFinishedFiring() {
    static UFunction* pFnNotifyWeaponFinishedFiring = NULL;

    if (!pFnNotifyWeaponFinishedFiring)
        pFnNotifyWeaponFinishedFiring =
            (UFunction*)UObject::GObjObjects()->Data[12763];

    AAIController_execNotifyWeaponFinishedFiring_Parms
        NotifyWeaponFinishedFiring_Parms;

    this->ProcessEvent(pFnNotifyWeaponFinishedFiring,
                       &NotifyWeaponFinishedFiring_Parms, NULL);
};

// Function Engine.AIController.NotifyWeaponFired
// [0x00020000]
// Parameters infos:

void AAIController::NotifyWeaponFired() {
    static UFunction* pFnNotifyWeaponFired = NULL;

    if (!pFnNotifyWeaponFired)
        pFnNotifyWeaponFired = (UFunction*)UObject::GObjObjects()->Data[12760];

    AAIController_execNotifyWeaponFired_Parms NotifyWeaponFired_Parms;

    this->ProcessEvent(pFnNotifyWeaponFired, &NotifyWeaponFired_Parms, NULL);
};

// Function Engine.AIController.OnAIMoveToActor
// [0x00020002]
// Parameters infos:

void AAIController::OnAIMoveToActor() {
    static UFunction* pFnOnAIMoveToActor = NULL;

    if (!pFnOnAIMoveToActor)
        pFnOnAIMoveToActor = (UFunction*)UObject::GObjObjects()->Data[12751];

    AAIController_execOnAIMoveToActor_Parms OnAIMoveToActor_Parms;

    this->ProcessEvent(pFnOnAIMoveToActor, &OnAIMoveToActor_Parms, NULL);
};

// Function Engine.AIController.GetPlayerViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void AAIController::eventGetPlayerViewPoint() {
    static UFunction* pFnGetPlayerViewPoint = NULL;

    if (!pFnGetPlayerViewPoint)
        pFnGetPlayerViewPoint = (UFunction*)UObject::GObjObjects()->Data[12748];

    AAIController_eventGetPlayerViewPoint_Parms GetPlayerViewPoint_Parms;

    this->ProcessEvent(pFnGetPlayerViewPoint, &GetPlayerViewPoint_Parms, NULL);
};

// Function Engine.AIController.SetTeam
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAIController::eventSetTeam() {
    static UFunction* pFnSetTeam = NULL;

    if (!pFnSetTeam)
        pFnSetTeam = (UFunction*)UObject::GObjObjects()->Data[12746];

    AAIController_eventSetTeam_Parms SetTeam_Parms;

    this->ProcessEvent(pFnSetTeam, &SetTeam_Parms, NULL);
};

// Function Engine.AIController.DisplayDebug
// [0x00420102]
// Parameters infos:

void AAIController::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[12739];

    AAIController_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.AIController.Reset
// [0x00020002]
// Parameters infos:

void AAIController::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[12738];

    AAIController_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.AIController.AILog_Internal
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void AAIController::eventAILog_Internal() {
    static UFunction* pFnAILog_Internal = NULL;

    if (!pFnAILog_Internal)
        pFnAILog_Internal = (UFunction*)UObject::GObjObjects()->Data[12732];

    AAIController_eventAILog_Internal_Parms AILog_Internal_Parms;

    this->ProcessEvent(pFnAILog_Internal, &AILog_Internal_Parms, NULL);
};

// Function Engine.AIController.PreBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AAIController::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[12731];

    AAIController_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.CrowdAgentBase.NotifyPathChanged
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void ACrowdAgentBase::eventNotifyPathChanged() {
    static UFunction* pFnNotifyPathChanged = NULL;

    if (!pFnNotifyPathChanged)
        pFnNotifyPathChanged = (UFunction*)UObject::GObjObjects()->Data[17492];

    ACrowdAgentBase_eventNotifyPathChanged_Parms NotifyPathChanged_Parms;

    this->ProcessEvent(pFnNotifyPathChanged, &NotifyPathChanged_Parms, NULL);
};

// Function Engine.PathTargetPoint.ShouldBeHiddenBySHOW_NavigationNodes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APathTargetPoint::ShouldBeHiddenBySHOW_NavigationNodes() {
    static UFunction* pFnShouldBeHiddenBySHOW_NavigationNodes = NULL;

    if (!pFnShouldBeHiddenBySHOW_NavigationNodes)
        pFnShouldBeHiddenBySHOW_NavigationNodes =
            (UFunction*)UObject::GObjObjects()->Data[30824];

    APathTargetPoint_execShouldBeHiddenBySHOW_NavigationNodes_Parms
        ShouldBeHiddenBySHOW_NavigationNodes_Parms;

    pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShouldBeHiddenBySHOW_NavigationNodes,
                       &ShouldBeHiddenBySHOW_NavigationNodes_Parms, NULL);

    pFnShouldBeHiddenBySHOW_NavigationNodes->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshObstacle.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ANavMeshObstacle::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[26634];

    ANavMeshObstacle_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.NavMeshObstacle.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ANavMeshObstacle::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[26632];

    ANavMeshObstacle_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.NavMeshObstacle.SetEnabled
// [0x00020002]
// Parameters infos:

void ANavMeshObstacle::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[26630];

    ANavMeshObstacle_execSetEnabled_Parms SetEnabled_Parms;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);
};

// Function Engine.NavMeshObstacle.OnToggle
// [0x00020102]
// Parameters infos:

void ANavMeshObstacle::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[26628];

    ANavMeshObstacle_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.NavMeshObstacle.PostBeginPlay
// [0x00020102]
// Parameters infos:

void ANavMeshObstacle::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[26627];

    ANavMeshObstacle_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.NavMeshObstacle.UnRegisterObstacle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANavMeshObstacle::UnRegisterObstacle() {
    static UFunction* pFnUnRegisterObstacle = NULL;

    if (!pFnUnRegisterObstacle)
        pFnUnRegisterObstacle = (UFunction*)UObject::GObjObjects()->Data[26626];

    ANavMeshObstacle_execUnRegisterObstacle_Parms UnRegisterObstacle_Parms;

    pFnUnRegisterObstacle->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnRegisterObstacle, &UnRegisterObstacle_Parms, NULL);

    pFnUnRegisterObstacle->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshObstacle.RegisterObstacle
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANavMeshObstacle::RegisterObstacle() {
    static UFunction* pFnRegisterObstacle = NULL;

    if (!pFnRegisterObstacle)
        pFnRegisterObstacle = (UFunction*)UObject::GObjObjects()->Data[26625];

    ANavMeshObstacle_execRegisterObstacle_Parms RegisterObstacle_Parms;

    pFnRegisterObstacle->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRegisterObstacle, &RegisterObstacle_Parms, NULL);

    pFnRegisterObstacle->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshObstacle.GetObstacleBoudingShape
// [0x00C20802] ( FUNC_Event )
// Parameters infos:

void ANavMeshObstacle::eventGetObstacleBoudingShape() {
    static UFunction* pFnGetObstacleBoudingShape = NULL;

    if (!pFnGetObstacleBoudingShape)
        pFnGetObstacleBoudingShape =
            (UFunction*)UObject::GObjObjects()->Data[26619];

    ANavMeshObstacle_eventGetObstacleBoudingShape_Parms
        GetObstacleBoudingShape_Parms;

    this->ProcessEvent(pFnGetObstacleBoudingShape,
                       &GetObstacleBoudingShape_Parms, NULL);
};

// Function Engine.MeshComponent.CreateAndSetMaterialInstanceTimeVarying
// [0x00020002]
// Parameters infos:

void UMeshComponent::CreateAndSetMaterialInstanceTimeVarying() {
    static UFunction* pFnCreateAndSetMaterialInstanceTimeVarying = NULL;

    if (!pFnCreateAndSetMaterialInstanceTimeVarying)
        pFnCreateAndSetMaterialInstanceTimeVarying =
            (UFunction*)UObject::GObjObjects()->Data[9602];

    UMeshComponent_execCreateAndSetMaterialInstanceTimeVarying_Parms
        CreateAndSetMaterialInstanceTimeVarying_Parms;

    this->ProcessEvent(pFnCreateAndSetMaterialInstanceTimeVarying,
                       &CreateAndSetMaterialInstanceTimeVarying_Parms, NULL);
};

// Function Engine.MeshComponent.CreateAndSetMaterialInstanceConstant
// [0x00020002]
// Parameters infos:

void UMeshComponent::CreateAndSetMaterialInstanceConstant() {
    static UFunction* pFnCreateAndSetMaterialInstanceConstant = NULL;

    if (!pFnCreateAndSetMaterialInstanceConstant)
        pFnCreateAndSetMaterialInstanceConstant =
            (UFunction*)UObject::GObjObjects()->Data[9598];

    UMeshComponent_execCreateAndSetMaterialInstanceConstant_Parms
        CreateAndSetMaterialInstanceConstant_Parms;

    this->ProcessEvent(pFnCreateAndSetMaterialInstanceConstant,
                       &CreateAndSetMaterialInstanceConstant_Parms, NULL);
};

// Function Engine.MeshComponent.PrestreamTextures
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMeshComponent::PrestreamTextures() {
    static UFunction* pFnPrestreamTextures = NULL;

    if (!pFnPrestreamTextures)
        pFnPrestreamTextures = (UFunction*)UObject::GObjObjects()->Data[9594];

    UMeshComponent_execPrestreamTextures_Parms PrestreamTextures_Parms;

    pFnPrestreamTextures->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPrestreamTextures, &PrestreamTextures_Parms, NULL);

    pFnPrestreamTextures->FunctionFlags |= 0x400;
};

// Function Engine.MeshComponent.GetNumElements
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMeshComponent::GetNumElements() {
    static UFunction* pFnGetNumElements = NULL;

    if (!pFnGetNumElements)
        pFnGetNumElements = (UFunction*)UObject::GObjObjects()->Data[9592];

    UMeshComponent_execGetNumElements_Parms GetNumElements_Parms;

    pFnGetNumElements->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumElements, &GetNumElements_Parms, NULL);

    pFnGetNumElements->FunctionFlags |= 0x400;
};

// Function Engine.MeshComponent.SetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMeshComponent::SetMaterial() {
    static UFunction* pFnSetMaterial = NULL;

    if (!pFnSetMaterial)
        pFnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[9589];

    UMeshComponent_execSetMaterial_Parms SetMaterial_Parms;

    pFnSetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaterial, &SetMaterial_Parms, NULL);

    pFnSetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.MeshComponent.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMeshComponent::GetMaterial() {
    static UFunction* pFnGetMaterial = NULL;

    if (!pFnGetMaterial)
        pFnGetMaterial = (UFunction*)UObject::GObjObjects()->Data[9586];

    UMeshComponent_execGetMaterial_Parms GetMaterial_Parms;

    pFnGetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaterial, &GetMaterial_Parms, NULL);

    pFnGetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.StaticMeshComponent.CanBecomeDynamic
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UStaticMeshComponent::CanBecomeDynamic() {
    static UFunction* pFnCanBecomeDynamic = NULL;

    if (!pFnCanBecomeDynamic)
        pFnCanBecomeDynamic = (UFunction*)UObject::GObjObjects()->Data[6336];

    UStaticMeshComponent_execCanBecomeDynamic_Parms CanBecomeDynamic_Parms;

    pFnCanBecomeDynamic->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanBecomeDynamic, &CanBecomeDynamic_Parms, NULL);

    pFnCanBecomeDynamic->FunctionFlags |= 0x400;
};

// Function Engine.StaticMeshComponent.SetForceStaticDecals
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UStaticMeshComponent::SetForceStaticDecals() {
    static UFunction* pFnSetForceStaticDecals = NULL;

    if (!pFnSetForceStaticDecals)
        pFnSetForceStaticDecals =
            (UFunction*)UObject::GObjObjects()->Data[15417];

    UStaticMeshComponent_execSetForceStaticDecals_Parms
        SetForceStaticDecals_Parms;

    pFnSetForceStaticDecals->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetForceStaticDecals, &SetForceStaticDecals_Parms,
                       NULL);

    pFnSetForceStaticDecals->FunctionFlags |= 0x400;
};

// Function Engine.StaticMeshComponent.DisableRBCollisionWithSMC
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void UStaticMeshComponent::DisableRBCollisionWithSMC() {
    static UFunction* pFnDisableRBCollisionWithSMC = NULL;

    if (!pFnDisableRBCollisionWithSMC)
        pFnDisableRBCollisionWithSMC =
            (UFunction*)UObject::GObjObjects()->Data[15414];

    UStaticMeshComponent_execDisableRBCollisionWithSMC_Parms
        DisableRBCollisionWithSMC_Parms;

    pFnDisableRBCollisionWithSMC->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDisableRBCollisionWithSMC,
                       &DisableRBCollisionWithSMC_Parms, NULL);

    pFnDisableRBCollisionWithSMC->FunctionFlags |= 0x400;
};

// Function Engine.StaticMeshComponent.SetStaticMesh
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void UStaticMeshComponent::SetStaticMesh() {
    static UFunction* pFnSetStaticMesh = NULL;

    if (!pFnSetStaticMesh)
        pFnSetStaticMesh = (UFunction*)UObject::GObjObjects()->Data[15410];

    UStaticMeshComponent_execSetStaticMesh_Parms SetStaticMesh_Parms;

    pFnSetStaticMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStaticMesh, &SetStaticMesh_Parms, NULL);

    pFnSetStaticMesh->FunctionFlags |= 0x400;
};

// Function Engine.AICommandBase.GetUtility
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void UAICommandBase::eventGetUtility() {
    static UFunction* pFnGetUtility = NULL;

    if (!pFnGetUtility)
        pFnGetUtility = (UFunction*)UObject::GObjObjects()->Data[12722];

    UAICommandBase_eventGetUtility_Parms GetUtility_Parms;

    this->ProcessEvent(pFnGetUtility, &GetUtility_Parms, NULL);
};

// Function Engine.Interface_NavMeshPathSwitch.AIActivateSwitch
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UInterface_NavMeshPathSwitch::eventAIActivateSwitch() {
    static UFunction* pFnAIActivateSwitch = NULL;

    if (!pFnAIActivateSwitch)
        pFnAIActivateSwitch = (UFunction*)UObject::GObjObjects()->Data[23529];

    UInterface_NavMeshPathSwitch_eventAIActivateSwitch_Parms
        AIActivateSwitch_Parms;

    this->ProcessEvent(pFnAIActivateSwitch, &AIActivateSwitch_Parms, NULL);
};

// Function Engine.NavigationHandle.DrawBreadCrumbs
// [0x00824002]
// Parameters infos:

void UNavigationHandle::DrawBreadCrumbs() {
    static UFunction* pFnDrawBreadCrumbs = NULL;

    if (!pFnDrawBreadCrumbs)
        pFnDrawBreadCrumbs = (UFunction*)UObject::GObjObjects()->Data[26451];

    UNavigationHandle_execDrawBreadCrumbs_Parms DrawBreadCrumbs_Parms;

    this->ProcessEvent(pFnDrawBreadCrumbs, &DrawBreadCrumbs_Parms, NULL);
};

// Function Engine.NavigationHandle.StaticGetValidatedAnchorPosition
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UNavigationHandle::StaticGetValidatedAnchorPosition() {
    static UFunction* pFnStaticGetValidatedAnchorPosition = NULL;

    if (!pFnStaticGetValidatedAnchorPosition)
        pFnStaticGetValidatedAnchorPosition =
            (UFunction*)UObject::GObjObjects()->Data[26446];

    UNavigationHandle_execStaticGetValidatedAnchorPosition_Parms
        StaticGetValidatedAnchorPosition_Parms;

    pFnStaticGetValidatedAnchorPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStaticGetValidatedAnchorPosition,
                       &StaticGetValidatedAnchorPosition_Parms, NULL);

    pFnStaticGetValidatedAnchorPosition->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetValidatedAnchorPosition
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetValidatedAnchorPosition() {
    static UFunction* pFnGetValidatedAnchorPosition = NULL;

    if (!pFnGetValidatedAnchorPosition)
        pFnGetValidatedAnchorPosition =
            (UFunction*)UObject::GObjObjects()->Data[26442];

    UNavigationHandle_execGetValidatedAnchorPosition_Parms
        GetValidatedAnchorPosition_Parms;

    pFnGetValidatedAnchorPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetValidatedAnchorPosition,
                       &GetValidatedAnchorPosition_Parms, NULL);

    pFnGetValidatedAnchorPosition->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetAllCoverSlotsInRadius
// [0x00422401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetAllCoverSlotsInRadius() {
    static UFunction* pFnGetAllCoverSlotsInRadius = NULL;

    if (!pFnGetAllCoverSlotsInRadius)
        pFnGetAllCoverSlotsInRadius =
            (UFunction*)UObject::GObjObjects()->Data[26436];

    UNavigationHandle_execGetAllCoverSlotsInRadius_Parms
        GetAllCoverSlotsInRadius_Parms;

    pFnGetAllCoverSlotsInRadius->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAllCoverSlotsInRadius,
                       &GetAllCoverSlotsInRadius_Parms, NULL);

    pFnGetAllCoverSlotsInRadius->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PopulatePathfindingParamCache
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UNavigationHandle::PopulatePathfindingParamCache() {
    static UFunction* pFnPopulatePathfindingParamCache = NULL;

    if (!pFnPopulatePathfindingParamCache)
        pFnPopulatePathfindingParamCache =
            (UFunction*)UObject::GObjObjects()->Data[26434];

    UNavigationHandle_execPopulatePathfindingParamCache_Parms
        PopulatePathfindingParamCache_Parms;

    pFnPopulatePathfindingParamCache->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPopulatePathfindingParamCache,
                       &PopulatePathfindingParamCache_Parms, NULL);

    pFnPopulatePathfindingParamCache->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.MoveToDesiredHeightAboveMesh
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::MoveToDesiredHeightAboveMesh() {
    static UFunction* pFnMoveToDesiredHeightAboveMesh = NULL;

    if (!pFnMoveToDesiredHeightAboveMesh)
        pFnMoveToDesiredHeightAboveMesh =
            (UFunction*)UObject::GObjObjects()->Data[26430];

    UNavigationHandle_execMoveToDesiredHeightAboveMesh_Parms
        MoveToDesiredHeightAboveMesh_Parms;

    pFnMoveToDesiredHeightAboveMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveToDesiredHeightAboveMesh,
                       &MoveToDesiredHeightAboveMesh_Parms, NULL);

    pFnMoveToDesiredHeightAboveMesh->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.CopyMovePointsFromPathCache
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::CopyMovePointsFromPathCache() {
    static UFunction* pFnCopyMovePointsFromPathCache = NULL;

    if (!pFnCopyMovePointsFromPathCache)
        pFnCopyMovePointsFromPathCache =
            (UFunction*)UObject::GObjObjects()->Data[26426];

    UNavigationHandle_execCopyMovePointsFromPathCache_Parms
        CopyMovePointsFromPathCache_Parms;

    pFnCopyMovePointsFromPathCache->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCopyMovePointsFromPathCache,
                       &CopyMovePointsFromPathCache_Parms, NULL);

    pFnCopyMovePointsFromPathCache->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.CalculatePathDistance
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::CalculatePathDistance() {
    static UFunction* pFnCalculatePathDistance = NULL;

    if (!pFnCalculatePathDistance)
        pFnCalculatePathDistance =
            (UFunction*)UObject::GObjObjects()->Data[26423];

    UNavigationHandle_execCalculatePathDistance_Parms
        CalculatePathDistance_Parms;

    pFnCalculatePathDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCalculatePathDistance, &CalculatePathDistance_Parms,
                       NULL);

    pFnCalculatePathDistance->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetFirstMoveLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetFirstMoveLocation() {
    static UFunction* pFnGetFirstMoveLocation = NULL;

    if (!pFnGetFirstMoveLocation)
        pFnGetFirstMoveLocation =
            (UFunction*)UObject::GObjObjects()->Data[26421];

    UNavigationHandle_execGetFirstMoveLocation_Parms GetFirstMoveLocation_Parms;

    pFnGetFirstMoveLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFirstMoveLocation, &GetFirstMoveLocation_Parms,
                       NULL);

    pFnGetFirstMoveLocation->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.IsAnchorInescapable
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::IsAnchorInescapable() {
    static UFunction* pFnIsAnchorInescapable = NULL;

    if (!pFnIsAnchorInescapable)
        pFnIsAnchorInescapable =
            (UFunction*)UObject::GObjObjects()->Data[26419];

    UNavigationHandle_execIsAnchorInescapable_Parms IsAnchorInescapable_Parms;

    pFnIsAnchorInescapable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsAnchorInescapable, &IsAnchorInescapable_Parms,
                       NULL);

    pFnIsAnchorInescapable->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.LimitPathCacheDistance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::LimitPathCacheDistance() {
    static UFunction* pFnLimitPathCacheDistance = NULL;

    if (!pFnLimitPathCacheDistance)
        pFnLimitPathCacheDistance =
            (UFunction*)UObject::GObjObjects()->Data[26417];

    UNavigationHandle_execLimitPathCacheDistance_Parms
        LimitPathCacheDistance_Parms;

    pFnLimitPathCacheDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLimitPathCacheDistance, &LimitPathCacheDistance_Parms,
                       NULL);

    pFnLimitPathCacheDistance->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetValidPositionsForBox
// [0x00426400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetValidPositionsForBox() {
    static UFunction* pFnGetValidPositionsForBox = NULL;

    if (!pFnGetValidPositionsForBox)
        pFnGetValidPositionsForBox =
            (UFunction*)UObject::GObjObjects()->Data[26407];

    UNavigationHandle_execGetValidPositionsForBox_Parms
        GetValidPositionsForBox_Parms;

    pFnGetValidPositionsForBox->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetValidPositionsForBox,
                       &GetValidPositionsForBox_Parms, NULL);

    pFnGetValidPositionsForBox->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetAllPolyCentersWithinBounds
// [0x00422400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetAllPolyCentersWithinBounds() {
    static UFunction* pFnGetAllPolyCentersWithinBounds = NULL;

    if (!pFnGetAllPolyCentersWithinBounds)
        pFnGetAllPolyCentersWithinBounds =
            (UFunction*)UObject::GObjObjects()->Data[26402];

    UNavigationHandle_execGetAllPolyCentersWithinBounds_Parms
        GetAllPolyCentersWithinBounds_Parms;

    pFnGetAllPolyCentersWithinBounds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAllPolyCentersWithinBounds,
                       &GetAllPolyCentersWithinBounds_Parms, NULL);

    pFnGetAllPolyCentersWithinBounds->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetCurrentEdgeType
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetCurrentEdgeType() {
    static UFunction* pFnGetCurrentEdgeType = NULL;

    if (!pFnGetCurrentEdgeType)
        pFnGetCurrentEdgeType = (UFunction*)UObject::GObjObjects()->Data[26400];

    UNavigationHandle_execGetCurrentEdgeType_Parms GetCurrentEdgeType_Parms;

    pFnGetCurrentEdgeType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCurrentEdgeType, &GetCurrentEdgeType_Parms, NULL);

    pFnGetCurrentEdgeType->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.ClearCurrentEdge
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::ClearCurrentEdge() {
    static UFunction* pFnClearCurrentEdge = NULL;

    if (!pFnClearCurrentEdge)
        pFnClearCurrentEdge = (UFunction*)UObject::GObjObjects()->Data[26399];

    UNavigationHandle_execClearCurrentEdge_Parms ClearCurrentEdge_Parms;

    pFnClearCurrentEdge->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearCurrentEdge, &ClearCurrentEdge_Parms, NULL);

    pFnClearCurrentEdge->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetCurrentEdgeDebugText
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetCurrentEdgeDebugText() {
    static UFunction* pFnGetCurrentEdgeDebugText = NULL;

    if (!pFnGetCurrentEdgeDebugText)
        pFnGetCurrentEdgeDebugText =
            (UFunction*)UObject::GObjObjects()->Data[26397];

    UNavigationHandle_execGetCurrentEdgeDebugText_Parms
        GetCurrentEdgeDebugText_Parms;

    pFnGetCurrentEdgeDebugText->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCurrentEdgeDebugText,
                       &GetCurrentEdgeDebugText_Parms, NULL);

    pFnGetCurrentEdgeDebugText->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PrintPathCacheDebugText
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::PrintPathCacheDebugText() {
    static UFunction* pFnPrintPathCacheDebugText = NULL;

    if (!pFnPrintPathCacheDebugText)
        pFnPrintPathCacheDebugText =
            (UFunction*)UObject::GObjObjects()->Data[26396];

    UNavigationHandle_execPrintPathCacheDebugText_Parms
        PrintPathCacheDebugText_Parms;

    pFnPrintPathCacheDebugText->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPrintPathCacheDebugText,
                       &PrintPathCacheDebugText_Parms, NULL);

    pFnPrintPathCacheDebugText->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.DrawPathCache
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::DrawPathCache() {
    static UFunction* pFnDrawPathCache = NULL;

    if (!pFnDrawPathCache)
        pFnDrawPathCache = (UFunction*)UObject::GObjObjects()->Data[26392];

    UNavigationHandle_execDrawPathCache_Parms DrawPathCache_Parms;

    pFnDrawPathCache->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawPathCache, &DrawPathCache_Parms, NULL);

    pFnDrawPathCache->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.ActorReachable
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::ActorReachable() {
    static UFunction* pFnActorReachable = NULL;

    if (!pFnActorReachable)
        pFnActorReachable = (UFunction*)UObject::GObjObjects()->Data[26389];

    UNavigationHandle_execActorReachable_Parms ActorReachable_Parms;

    pFnActorReachable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActorReachable, &ActorReachable_Parms, NULL);

    pFnActorReachable->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PointReachable
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::PointReachable() {
    static UFunction* pFnPointReachable = NULL;

    if (!pFnPointReachable)
        pFnPointReachable = (UFunction*)UObject::GObjObjects()->Data[26384];

    UNavigationHandle_execPointReachable_Parms PointReachable_Parms;

    pFnPointReachable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPointReachable, &PointReachable_Parms, NULL);

    pFnPointReachable->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PointCheck
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::PointCheck() {
    static UFunction* pFnPointCheck = NULL;

    if (!pFnPointCheck)
        pFnPointCheck = (UFunction*)UObject::GObjObjects()->Data[26380];

    UNavigationHandle_execPointCheck_Parms PointCheck_Parms;

    pFnPointCheck->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPointCheck, &PointCheck_Parms, NULL);

    pFnPointCheck->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.LineCheck
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::LineCheck() {
    static UFunction* pFnLineCheck = NULL;

    if (!pFnLineCheck)
        pFnLineCheck = (UFunction*)UObject::GObjObjects()->Data[26373];

    UNavigationHandle_execLineCheck_Parms LineCheck_Parms;

    pFnLineCheck->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLineCheck, &LineCheck_Parms, NULL);

    pFnLineCheck->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.ObstaclePointCheck
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UNavigationHandle::ObstaclePointCheck() {
    static UFunction* pFnObstaclePointCheck = NULL;

    if (!pFnObstaclePointCheck)
        pFnObstaclePointCheck = (UFunction*)UObject::GObjObjects()->Data[26369];

    UNavigationHandle_execObstaclePointCheck_Parms ObstaclePointCheck_Parms;

    pFnObstaclePointCheck->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnObstaclePointCheck, &ObstaclePointCheck_Parms, NULL);

    pFnObstaclePointCheck->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.ObstacleLineCheck
// [0x00426401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UNavigationHandle::ObstacleLineCheck() {
    static UFunction* pFnObstacleLineCheck = NULL;

    if (!pFnObstacleLineCheck)
        pFnObstacleLineCheck = (UFunction*)UObject::GObjObjects()->Data[26362];

    UNavigationHandle_execObstacleLineCheck_Parms ObstacleLineCheck_Parms;

    pFnObstacleLineCheck->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnObstacleLineCheck, &ObstacleLineCheck_Parms, NULL);

    pFnObstacleLineCheck->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.SuggestMovePreparation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::SuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[26358];

    UNavigationHandle_execSuggestMovePreparation_Parms
        SuggestMovePreparation_Parms;

    pFnSuggestMovePreparation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);

    pFnSuggestMovePreparation->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.FindPath
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::FindPath() {
    static UFunction* pFnFindPath = NULL;

    if (!pFnFindPath)
        pFnFindPath = (UFunction*)UObject::GObjObjects()->Data[13118];

    UNavigationHandle_execFindPath_Parms FindPath_Parms;

    pFnFindPath->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPath, &FindPath_Parms, NULL);

    pFnFindPath->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.ComputeValidFinalDestination
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::ComputeValidFinalDestination() {
    static UFunction* pFnComputeValidFinalDestination = NULL;

    if (!pFnComputeValidFinalDestination)
        pFnComputeValidFinalDestination =
            (UFunction*)UObject::GObjObjects()->Data[26353];

    UNavigationHandle_execComputeValidFinalDestination_Parms
        ComputeValidFinalDestination_Parms;

    pFnComputeValidFinalDestination->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnComputeValidFinalDestination,
                       &ComputeValidFinalDestination_Parms, NULL);

    pFnComputeValidFinalDestination->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.SetFinalDestination
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::SetFinalDestination() {
    static UFunction* pFnSetFinalDestination = NULL;

    if (!pFnSetFinalDestination)
        pFnSetFinalDestination =
            (UFunction*)UObject::GObjObjects()->Data[26350];

    UNavigationHandle_execSetFinalDestination_Parms SetFinalDestination_Parms;

    pFnSetFinalDestination->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFinalDestination, &SetFinalDestination_Parms,
                       NULL);

    pFnSetFinalDestination->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetNextMoveLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetNextMoveLocation() {
    static UFunction* pFnGetNextMoveLocation = NULL;

    if (!pFnGetNextMoveLocation)
        pFnGetNextMoveLocation =
            (UFunction*)UObject::GObjObjects()->Data[26346];

    UNavigationHandle_execGetNextMoveLocation_Parms GetNextMoveLocation_Parms;

    pFnGetNextMoveLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNextMoveLocation, &GetNextMoveLocation_Parms,
                       NULL);

    pFnGetNextMoveLocation->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetPylonFromPos
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetPylonFromPos() {
    static UFunction* pFnGetPylonFromPos = NULL;

    if (!pFnGetPylonFromPos)
        pFnGetPylonFromPos = (UFunction*)UObject::GObjObjects()->Data[26343];

    UNavigationHandle_execGetPylonFromPos_Parms GetPylonFromPos_Parms;

    pFnGetPylonFromPos->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPylonFromPos, &GetPylonFromPos_Parms, NULL);

    pFnGetPylonFromPos->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.FindPylon
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::FindPylon() {
    static UFunction* pFnFindPylon = NULL;

    if (!pFnFindPylon)
        pFnFindPylon = (UFunction*)UObject::GObjObjects()->Data[26341];

    UNavigationHandle_execFindPylon_Parms FindPylon_Parms;

    pFnFindPylon->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPylon, &FindPylon_Parms, NULL);

    pFnFindPylon->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetBestUnfinishedPathPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetBestUnfinishedPathPoint() {
    static UFunction* pFnGetBestUnfinishedPathPoint = NULL;

    if (!pFnGetBestUnfinishedPathPoint)
        pFnGetBestUnfinishedPathPoint =
            (UFunction*)UObject::GObjObjects()->Data[26339];

    UNavigationHandle_execGetBestUnfinishedPathPoint_Parms
        GetBestUnfinishedPathPoint_Parms;

    pFnGetBestUnfinishedPathPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBestUnfinishedPathPoint,
                       &GetBestUnfinishedPathPoint_Parms, NULL);

    pFnGetBestUnfinishedPathPoint->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PathCache_RemoveIndex
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::PathCache_RemoveIndex() {
    static UFunction* pFnPathCache_RemoveIndex = NULL;

    if (!pFnPathCache_RemoveIndex)
        pFnPathCache_RemoveIndex =
            (UFunction*)UObject::GObjObjects()->Data[26335];

    UNavigationHandle_execPathCache_RemoveIndex_Parms
        PathCache_RemoveIndex_Parms;

    pFnPathCache_RemoveIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPathCache_RemoveIndex, &PathCache_RemoveIndex_Parms,
                       NULL);

    pFnPathCache_RemoveIndex->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PathCache_GetGoalPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::PathCache_GetGoalPoint() {
    static UFunction* pFnPathCache_GetGoalPoint = NULL;

    if (!pFnPathCache_GetGoalPoint)
        pFnPathCache_GetGoalPoint =
            (UFunction*)UObject::GObjObjects()->Data[26333];

    UNavigationHandle_execPathCache_GetGoalPoint_Parms
        PathCache_GetGoalPoint_Parms;

    pFnPathCache_GetGoalPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPathCache_GetGoalPoint, &PathCache_GetGoalPoint_Parms,
                       NULL);

    pFnPathCache_GetGoalPoint->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.PathCache_Empty
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::PathCache_Empty() {
    static UFunction* pFnPathCache_Empty = NULL;

    if (!pFnPathCache_Empty)
        pFnPathCache_Empty = (UFunction*)UObject::GObjObjects()->Data[26331];

    UNavigationHandle_execPathCache_Empty_Parms PathCache_Empty_Parms;

    pFnPathCache_Empty->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPathCache_Empty, &PathCache_Empty_Parms, NULL);

    pFnPathCache_Empty->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetPathCacheLength
// [0x00020002]
// Parameters infos:

void UNavigationHandle::GetPathCacheLength() {
    static UFunction* pFnGetPathCacheLength = NULL;

    if (!pFnGetPathCacheLength)
        pFnGetPathCacheLength = (UFunction*)UObject::GObjObjects()->Data[26329];

    UNavigationHandle_execGetPathCacheLength_Parms GetPathCacheLength_Parms;

    this->ProcessEvent(pFnGetPathCacheLength, &GetPathCacheLength_Parms, NULL);
};

// Function Engine.NavigationHandle.CreatePathGoalEvaluator
// [0x00020002]
// Parameters infos:

void UNavigationHandle::CreatePathGoalEvaluator() {
    static UFunction* pFnCreatePathGoalEvaluator = NULL;

    if (!pFnCreatePathGoalEvaluator)
        pFnCreatePathGoalEvaluator =
            (UFunction*)UObject::GObjObjects()->Data[26326];

    UNavigationHandle_execCreatePathGoalEvaluator_Parms
        CreatePathGoalEvaluator_Parms;

    this->ProcessEvent(pFnCreatePathGoalEvaluator,
                       &CreatePathGoalEvaluator_Parms, NULL);
};

// Function Engine.NavigationHandle.CreatePathConstraint
// [0x00020002]
// Parameters infos:

void UNavigationHandle::CreatePathConstraint() {
    static UFunction* pFnCreatePathConstraint = NULL;

    if (!pFnCreatePathConstraint)
        pFnCreatePathConstraint =
            (UFunction*)UObject::GObjObjects()->Data[26323];

    UNavigationHandle_execCreatePathConstraint_Parms CreatePathConstraint_Parms;

    this->ProcessEvent(pFnCreatePathConstraint, &CreatePathConstraint_Parms,
                       NULL);
};

// Function Engine.NavigationHandle.DoesPylonAHaveAPathToPylonB
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::DoesPylonAHaveAPathToPylonB() {
    static UFunction* pFnDoesPylonAHaveAPathToPylonB = NULL;

    if (!pFnDoesPylonAHaveAPathToPylonB)
        pFnDoesPylonAHaveAPathToPylonB =
            (UFunction*)UObject::GObjObjects()->Data[26319];

    UNavigationHandle_execDoesPylonAHaveAPathToPylonB_Parms
        DoesPylonAHaveAPathToPylonB_Parms;

    pFnDoesPylonAHaveAPathToPylonB->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoesPylonAHaveAPathToPylonB,
                       &DoesPylonAHaveAPathToPylonB_Parms, NULL);

    pFnDoesPylonAHaveAPathToPylonB->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.BuildFromPylonAToPylonB
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::BuildFromPylonAToPylonB() {
    static UFunction* pFnBuildFromPylonAToPylonB = NULL;

    if (!pFnBuildFromPylonAToPylonB)
        pFnBuildFromPylonAToPylonB =
            (UFunction*)UObject::GObjObjects()->Data[26315];

    UNavigationHandle_execBuildFromPylonAToPylonB_Parms
        BuildFromPylonAToPylonB_Parms;

    pFnBuildFromPylonAToPylonB->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBuildFromPylonAToPylonB,
                       &BuildFromPylonAToPylonB_Parms, NULL);

    pFnBuildFromPylonAToPylonB->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.AddGoalEvaluator
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::AddGoalEvaluator() {
    static UFunction* pFnAddGoalEvaluator = NULL;

    if (!pFnAddGoalEvaluator)
        pFnAddGoalEvaluator = (UFunction*)UObject::GObjObjects()->Data[26313];

    UNavigationHandle_execAddGoalEvaluator_Parms AddGoalEvaluator_Parms;

    pFnAddGoalEvaluator->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddGoalEvaluator, &AddGoalEvaluator_Parms, NULL);

    pFnAddGoalEvaluator->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.AddPathConstraint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::AddPathConstraint() {
    static UFunction* pFnAddPathConstraint = NULL;

    if (!pFnAddPathConstraint)
        pFnAddPathConstraint = (UFunction*)UObject::GObjObjects()->Data[26311];

    UNavigationHandle_execAddPathConstraint_Parms AddPathConstraint_Parms;

    pFnAddPathConstraint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddPathConstraint, &AddPathConstraint_Parms, NULL);

    pFnAddPathConstraint->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.ClearConstraints
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::ClearConstraints() {
    static UFunction* pFnClearConstraints = NULL;

    if (!pFnClearConstraints)
        pFnClearConstraints = (UFunction*)UObject::GObjObjects()->Data[26310];

    UNavigationHandle_execClearConstraints_Parms ClearConstraints_Parms;

    pFnClearConstraints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearConstraints, &ClearConstraints_Parms, NULL);

    pFnClearConstraints->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.GetNextBreadCrumb
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::GetNextBreadCrumb() {
    static UFunction* pFnGetNextBreadCrumb = NULL;

    if (!pFnGetNextBreadCrumb)
        pFnGetNextBreadCrumb = (UFunction*)UObject::GObjObjects()->Data[26307];

    UNavigationHandle_execGetNextBreadCrumb_Parms GetNextBreadCrumb_Parms;

    pFnGetNextBreadCrumb->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNextBreadCrumb, &GetNextBreadCrumb_Parms, NULL);

    pFnGetNextBreadCrumb->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.UpdateBreadCrumbs
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::UpdateBreadCrumbs() {
    static UFunction* pFnUpdateBreadCrumbs = NULL;

    if (!pFnUpdateBreadCrumbs)
        pFnUpdateBreadCrumbs = (UFunction*)UObject::GObjObjects()->Data[26305];

    UNavigationHandle_execUpdateBreadCrumbs_Parms UpdateBreadCrumbs_Parms;

    pFnUpdateBreadCrumbs->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateBreadCrumbs, &UpdateBreadCrumbs_Parms, NULL);

    pFnUpdateBreadCrumbs->FunctionFlags |= 0x400;
};

// Function Engine.NavigationHandle.CopyPathStoreToPathCache
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UNavigationHandle::CopyPathStoreToPathCache() {
    static UFunction* pFnCopyPathStoreToPathCache = NULL;

    if (!pFnCopyPathStoreToPathCache)
        pFnCopyPathStoreToPathCache =
            (UFunction*)UObject::GObjObjects()->Data[26303];

    UNavigationHandle_execCopyPathStoreToPathCache_Parms
        CopyPathStoreToPathCache_Parms;

    pFnCopyPathStoreToPathCache->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCopyPathStoreToPathCache,
                       &CopyPathStoreToPathCache_Parms, NULL);

    pFnCopyPathStoreToPathCache->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshGoal_Filter.GetDumpString
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNavMeshGoal_Filter::eventGetDumpString() {
    static UFunction* pFnGetDumpString = NULL;

    if (!pFnGetDumpString)
        pFnGetDumpString = (UFunction*)UObject::GObjObjects()->Data[26514];

    UNavMeshGoal_Filter_eventGetDumpString_Parms GetDumpString_Parms;

    this->ProcessEvent(pFnGetDumpString, &GetDumpString_Parms, NULL);
};

// Function Engine.NavMeshGoalFilter_MinPathDistance.MustBeLongerPathThan
// [0x00022002]
// Parameters infos:

void UNavMeshGoalFilter_MinPathDistance::MustBeLongerPathThan() {
    static UFunction* pFnMustBeLongerPathThan = NULL;

    if (!pFnMustBeLongerPathThan)
        pFnMustBeLongerPathThan =
            (UFunction*)UObject::GObjObjects()->Data[26580];

    UNavMeshGoalFilter_MinPathDistance_execMustBeLongerPathThan_Parms
        MustBeLongerPathThan_Parms;

    this->ProcessEvent(pFnMustBeLongerPathThan, &MustBeLongerPathThan_Parms,
                       NULL);
};

// Function Engine.NavMeshGoalFilter_NotNearOtherAI.NotNearOtherAI
// [0x00022002]
// Parameters infos:

void UNavMeshGoalFilter_NotNearOtherAI::NotNearOtherAI() {
    static UFunction* pFnNotNearOtherAI = NULL;

    if (!pFnNotNearOtherAI)
        pFnNotNearOtherAI = (UFunction*)UObject::GObjObjects()->Data[26586];

    UNavMeshGoalFilter_NotNearOtherAI_execNotNearOtherAI_Parms
        NotNearOtherAI_Parms;

    this->ProcessEvent(pFnNotNearOtherAI, &NotNearOtherAI_Parms, NULL);
};

// Function Engine.NavMeshGoalFilter_OutOfViewFrom.MustBeHiddenFromThisPoint
// [0x00022002]
// Parameters infos:

void UNavMeshGoalFilter_OutOfViewFrom::MustBeHiddenFromThisPoint() {
    static UFunction* pFnMustBeHiddenFromThisPoint = NULL;

    if (!pFnMustBeHiddenFromThisPoint)
        pFnMustBeHiddenFromThisPoint =
            (UFunction*)UObject::GObjObjects()->Data[26593];

    UNavMeshGoalFilter_OutOfViewFrom_execMustBeHiddenFromThisPoint_Parms
        MustBeHiddenFromThisPoint_Parms;

    this->ProcessEvent(pFnMustBeHiddenFromThisPoint,
                       &MustBeHiddenFromThisPoint_Parms, NULL);
};

// Function
// Engine.NavMeshGoalFilter_OutSideOfDotProductWedge.OutsideOfDotProductWedge
// [0x00022002]
// Parameters infos:

void UNavMeshGoalFilter_OutSideOfDotProductWedge::OutsideOfDotProductWedge() {
    static UFunction* pFnOutsideOfDotProductWedge = NULL;

    if (!pFnOutsideOfDotProductWedge)
        pFnOutsideOfDotProductWedge =
            (UFunction*)UObject::GObjObjects()->Data[26601];

    UNavMeshGoalFilter_OutSideOfDotProductWedge_execOutsideOfDotProductWedge_Parms
        OutsideOfDotProductWedge_Parms;

    this->ProcessEvent(pFnOutsideOfDotProductWedge,
                       &OutsideOfDotProductWedge_Parms, NULL);
};

// Function Engine.NavMeshGoalFilter_PolyEncompassesAI.MakeSureAIFits
// [0x00026002]
// Parameters infos:

void UNavMeshGoalFilter_PolyEncompassesAI::MakeSureAIFits() {
    static UFunction* pFnMakeSureAIFits = NULL;

    if (!pFnMakeSureAIFits)
        pFnMakeSureAIFits = (UFunction*)UObject::GObjObjects()->Data[26609];

    UNavMeshGoalFilter_PolyEncompassesAI_execMakeSureAIFits_Parms
        MakeSureAIFits_Parms;

    this->ProcessEvent(pFnMakeSureAIFits, &MakeSureAIFits_Parms, NULL);
};

// Function Engine.NavMeshPathConstraint.GetDumpString
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNavMeshPathConstraint::eventGetDumpString() {
    static UFunction* pFnGetDumpString = NULL;

    if (!pFnGetDumpString)
        pFnGetDumpString = (UFunction*)UObject::GObjObjects()->Data[26643];

    UNavMeshPathConstraint_eventGetDumpString_Parms GetDumpString_Parms;

    this->ProcessEvent(pFnGetDumpString, &GetDumpString_Parms, NULL);
};

// Function Engine.NavMeshPathConstraint.Recycle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNavMeshPathConstraint::eventRecycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26642];

    UNavMeshPathConstraint_eventRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_AlongLine.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshPath_AlongLine::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26651];

    UNavMeshPath_AlongLine_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_AlongLine.AlongLine
// [0x00022002]
// Parameters infos:

void UNavMeshPath_AlongLine::AlongLine() {
    static UFunction* pFnAlongLine = NULL;

    if (!pFnAlongLine)
        pFnAlongLine = (UFunction*)UObject::GObjObjects()->Data[26646];

    UNavMeshPath_AlongLine_execAlongLine_Parms AlongLine_Parms;

    this->ProcessEvent(pFnAlongLine, &AlongLine_Parms, NULL);
};

// Function Engine.NavMeshPath_EnforceTwoWayEdges.EnforceTwoWayEdges
// [0x00022002]
// Parameters infos:

void UNavMeshPath_EnforceTwoWayEdges::EnforceTwoWayEdges() {
    static UFunction* pFnEnforceTwoWayEdges = NULL;

    if (!pFnEnforceTwoWayEdges)
        pFnEnforceTwoWayEdges = (UFunction*)UObject::GObjObjects()->Data[26652];

    UNavMeshPath_EnforceTwoWayEdges_execEnforceTwoWayEdges_Parms
        EnforceTwoWayEdges_Parms;

    this->ProcessEvent(pFnEnforceTwoWayEdges, &EnforceTwoWayEdges_Parms, NULL);
};

// Function Engine.NavMeshPath_MinDistBetweenSpecsOfType.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshPath_MinDistBetweenSpecsOfType::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26668];

    UNavMeshPath_MinDistBetweenSpecsOfType_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_MinDistBetweenSpecsOfType.EnforceMinDist
// [0x00026002]
// Parameters infos:

void UNavMeshPath_MinDistBetweenSpecsOfType::EnforceMinDist() {
    static UFunction* pFnEnforceMinDist = NULL;

    if (!pFnEnforceMinDist)
        pFnEnforceMinDist = (UFunction*)UObject::GObjObjects()->Data[26660];

    UNavMeshPath_MinDistBetweenSpecsOfType_execEnforceMinDist_Parms
        EnforceMinDist_Parms;

    this->ProcessEvent(pFnEnforceMinDist, &EnforceMinDist_Parms, NULL);
};

// Function Engine.NavMeshPath_SameCoverLink.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshPath_SameCoverLink::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26674];

    UNavMeshPath_SameCoverLink_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_SameCoverLink.SameCoverLink
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void UNavMeshPath_SameCoverLink::SameCoverLink() {
    static UFunction* pFnSameCoverLink = NULL;

    if (!pFnSameCoverLink)
        pFnSameCoverLink = (UFunction*)UObject::GObjObjects()->Data[26670];

    UNavMeshPath_SameCoverLink_execSameCoverLink_Parms SameCoverLink_Parms;

    this->ProcessEvent(pFnSameCoverLink, &SameCoverLink_Parms, NULL);
};

// Function Engine.NavMeshPath_Toward.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshPath_Toward::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26687];

    UNavMeshPath_Toward_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_Toward.TowardPoint
// [0x00022002]
// Parameters infos:

void UNavMeshPath_Toward::TowardPoint() {
    static UFunction* pFnTowardPoint = NULL;

    if (!pFnTowardPoint)
        pFnTowardPoint = (UFunction*)UObject::GObjObjects()->Data[13114];

    UNavMeshPath_Toward_execTowardPoint_Parms TowardPoint_Parms;

    this->ProcessEvent(pFnTowardPoint, &TowardPoint_Parms, NULL);
};

// Function Engine.NavMeshPath_Toward.TowardGoal
// [0x00022002]
// Parameters infos:

void UNavMeshPath_Toward::TowardGoal() {
    static UFunction* pFnTowardGoal = NULL;

    if (!pFnTowardGoal)
        pFnTowardGoal = (UFunction*)UObject::GObjObjects()->Data[26679];

    UNavMeshPath_Toward_execTowardGoal_Parms TowardGoal_Parms;

    this->ProcessEvent(pFnTowardGoal, &TowardGoal_Parms, NULL);
};

// Function Engine.NavMeshPath_WithinDistanceEnvelope.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshPath_WithinDistanceEnvelope::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26704];

    UNavMeshPath_WithinDistanceEnvelope_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_WithinDistanceEnvelope.StayWithinEnvelopeToLoc
// [0x00026002]
// Parameters infos:

void UNavMeshPath_WithinDistanceEnvelope::StayWithinEnvelopeToLoc() {
    static UFunction* pFnStayWithinEnvelopeToLoc = NULL;

    if (!pFnStayWithinEnvelopeToLoc)
        pFnStayWithinEnvelopeToLoc =
            (UFunction*)UObject::GObjObjects()->Data[26694];

    UNavMeshPath_WithinDistanceEnvelope_execStayWithinEnvelopeToLoc_Parms
        StayWithinEnvelopeToLoc_Parms;

    this->ProcessEvent(pFnStayWithinEnvelopeToLoc,
                       &StayWithinEnvelopeToLoc_Parms, NULL);
};

// Function Engine.NavMeshPath_WithinTraversalDist.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshPath_WithinTraversalDist::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26714];

    UNavMeshPath_WithinTraversalDist_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshPath_WithinTraversalDist.DontExceedMaxDist
// [0x00026002]
// Parameters infos:

void UNavMeshPath_WithinTraversalDist::DontExceedMaxDist() {
    static UFunction* pFnDontExceedMaxDist = NULL;

    if (!pFnDontExceedMaxDist)
        pFnDontExceedMaxDist = (UFunction*)UObject::GObjObjects()->Data[26708];

    UNavMeshPath_WithinTraversalDist_execDontExceedMaxDist_Parms
        DontExceedMaxDist_Parms;

    this->ProcessEvent(pFnDontExceedMaxDist, &DontExceedMaxDist_Parms, NULL);
};

// Function Engine.NavMeshPathGoalEvaluator.GetDumpString
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNavMeshPathGoalEvaluator::eventGetDumpString() {
    static UFunction* pFnGetDumpString = NULL;

    if (!pFnGetDumpString)
        pFnGetDumpString = (UFunction*)UObject::GObjObjects()->Data[26471];

    UNavMeshPathGoalEvaluator_eventGetDumpString_Parms GetDumpString_Parms;

    this->ProcessEvent(pFnGetDumpString, &GetDumpString_Parms, NULL);
};

// Function Engine.NavMeshPathGoalEvaluator.Recycle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNavMeshPathGoalEvaluator::eventRecycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26470];

    UNavMeshPathGoalEvaluator_eventRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_At.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_At::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26498];

    UNavMeshGoal_At_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_At.AtLocation
// [0x00026002]
// Parameters infos:

void UNavMeshGoal_At::AtLocation() {
    static UFunction* pFnAtLocation = NULL;

    if (!pFnAtLocation)
        pFnAtLocation = (UFunction*)UObject::GObjObjects()->Data[13116];

    UNavMeshGoal_At_execAtLocation_Parms AtLocation_Parms;

    this->ProcessEvent(pFnAtLocation, &AtLocation_Parms, NULL);
};

// Function Engine.NavMeshGoal_At.AtActor
// [0x00826002]
// Parameters infos:

void UNavMeshGoal_At::AtActor() {
    static UFunction* pFnAtActor = NULL;

    if (!pFnAtActor)
        pFnAtActor = (UFunction*)UObject::GObjObjects()->Data[26482];

    UNavMeshGoal_At_execAtActor_Parms AtActor_Parms;

    this->ProcessEvent(pFnAtActor, &AtActor_Parms, NULL);
};

// Function Engine.NavMeshGoal_At.RecycleNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavMeshGoal_At::RecycleNative() {
    static UFunction* pFnRecycleNative = NULL;

    if (!pFnRecycleNative)
        pFnRecycleNative = (UFunction*)UObject::GObjObjects()->Data[26481];

    UNavMeshGoal_At_execRecycleNative_Parms RecycleNative_Parms;

    pFnRecycleNative->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRecycleNative, &RecycleNative_Parms, NULL);

    pFnRecycleNative->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshGoal_ClosestActorInList.RecycleInternal
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavMeshGoal_ClosestActorInList::RecycleInternal() {
    static UFunction* pFnRecycleInternal = NULL;

    if (!pFnRecycleInternal)
        pFnRecycleInternal = (UFunction*)UObject::GObjObjects()->Data[26510];

    UNavMeshGoal_ClosestActorInList_execRecycleInternal_Parms
        RecycleInternal_Parms;

    pFnRecycleInternal->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRecycleInternal, &RecycleInternal_Parms, NULL);

    pFnRecycleInternal->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshGoal_ClosestActorInList.Recycle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UNavMeshGoal_ClosestActorInList::eventRecycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26509];

    UNavMeshGoal_ClosestActorInList_eventRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_ClosestActorInList.ClosestActorInList
// [0x00422002]
// Parameters infos:

void UNavMeshGoal_ClosestActorInList::ClosestActorInList() {
    static UFunction* pFnClosestActorInList = NULL;

    if (!pFnClosestActorInList)
        pFnClosestActorInList = (UFunction*)UObject::GObjObjects()->Data[26503];

    UNavMeshGoal_ClosestActorInList_execClosestActorInList_Parms
        ClosestActorInList_Parms;

    this->ProcessEvent(pFnClosestActorInList, &ClosestActorInList_Parms, NULL);
};

// Function Engine.NavMeshGoal_GenericFilterContainer.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_GenericFilterContainer::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26539];

    UNavMeshGoal_GenericFilterContainer_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_GenericFilterContainer.GetGoalPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavMeshGoal_GenericFilterContainer::GetGoalPoint() {
    static UFunction* pFnGetGoalPoint = NULL;

    if (!pFnGetGoalPoint)
        pFnGetGoalPoint = (UFunction*)UObject::GObjObjects()->Data[26537];

    UNavMeshGoal_GenericFilterContainer_execGetGoalPoint_Parms
        GetGoalPoint_Parms;

    pFnGetGoalPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGoalPoint, &GetGoalPoint_Parms, NULL);

    pFnGetGoalPoint->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshGoal_GenericFilterContainer.GetFilterOfType
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_GenericFilterContainer::GetFilterOfType() {
    static UFunction* pFnGetFilterOfType = NULL;

    if (!pFnGetFilterOfType)
        pFnGetFilterOfType = (UFunction*)UObject::GObjObjects()->Data[26534];

    UNavMeshGoal_GenericFilterContainer_execGetFilterOfType_Parms
        GetFilterOfType_Parms;

    this->ProcessEvent(pFnGetFilterOfType, &GetFilterOfType_Parms, NULL);
};

// Function
// Engine.NavMeshGoal_GenericFilterContainer.CreateAndAddFilterToNavHandleFromSeedList
// [0x00426002]
// Parameters infos:

void UNavMeshGoal_GenericFilterContainer::
    CreateAndAddFilterToNavHandleFromSeedList() {
    static UFunction* pFnCreateAndAddFilterToNavHandleFromSeedList = NULL;

    if (!pFnCreateAndAddFilterToNavHandleFromSeedList)
        pFnCreateAndAddFilterToNavHandleFromSeedList =
            (UFunction*)UObject::GObjObjects()->Data[26527];

    UNavMeshGoal_GenericFilterContainer_execCreateAndAddFilterToNavHandleFromSeedList_Parms
        CreateAndAddFilterToNavHandleFromSeedList_Parms;

    this->ProcessEvent(pFnCreateAndAddFilterToNavHandleFromSeedList,
                       &CreateAndAddFilterToNavHandleFromSeedList_Parms, NULL);
};

// Function
// Engine.NavMeshGoal_GenericFilterContainer.CreateAndAddFilterToNavHandle
// [0x00026002]
// Parameters infos:

void UNavMeshGoal_GenericFilterContainer::CreateAndAddFilterToNavHandle() {
    static UFunction* pFnCreateAndAddFilterToNavHandle = NULL;

    if (!pFnCreateAndAddFilterToNavHandle)
        pFnCreateAndAddFilterToNavHandle =
            (UFunction*)UObject::GObjObjects()->Data[26522];

    UNavMeshGoal_GenericFilterContainer_execCreateAndAddFilterToNavHandle_Parms
        CreateAndAddFilterToNavHandle_Parms;

    this->ProcessEvent(pFnCreateAndAddFilterToNavHandle,
                       &CreateAndAddFilterToNavHandle_Parms, NULL);
};

// Function Engine.NavMeshGoal_Null.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_Null::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26547];

    UNavMeshGoal_Null_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_Null.RecycleNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavMeshGoal_Null::RecycleNative() {
    static UFunction* pFnRecycleNative = NULL;

    if (!pFnRecycleNative)
        pFnRecycleNative = (UFunction*)UObject::GObjObjects()->Data[26546];

    UNavMeshGoal_Null_execRecycleNative_Parms RecycleNative_Parms;

    pFnRecycleNative->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRecycleNative, &RecycleNative_Parms, NULL);

    pFnRecycleNative->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshGoal_Null.GoUntilBust
// [0x00026002]
// Parameters infos:

void UNavMeshGoal_Null::GoUntilBust() {
    static UFunction* pFnGoUntilBust = NULL;

    if (!pFnGoUntilBust)
        pFnGoUntilBust = (UFunction*)UObject::GObjObjects()->Data[26541];

    UNavMeshGoal_Null_execGoUntilBust_Parms GoUntilBust_Parms;

    this->ProcessEvent(pFnGoUntilBust, &GoUntilBust_Parms, NULL);
};

// Function Engine.NavMeshGoal_PolyEncompassesAI.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_PolyEncompassesAI::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26554];

    UNavMeshGoal_PolyEncompassesAI_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_PolyEncompassesAI.MakeSureAIFits
// [0x00026002]
// Parameters infos:

void UNavMeshGoal_PolyEncompassesAI::MakeSureAIFits() {
    static UFunction* pFnMakeSureAIFits = NULL;

    if (!pFnMakeSureAIFits)
        pFnMakeSureAIFits = (UFunction*)UObject::GObjObjects()->Data[26549];

    UNavMeshGoal_PolyEncompassesAI_execMakeSureAIFits_Parms
        MakeSureAIFits_Parms;

    this->ProcessEvent(pFnMakeSureAIFits, &MakeSureAIFits_Parms, NULL);
};

// Function Engine.NavMeshGoal_Random.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_Random::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26565];

    UNavMeshGoal_Random_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_Random.RecycleNative
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNavMeshGoal_Random::RecycleNative() {
    static UFunction* pFnRecycleNative = NULL;

    if (!pFnRecycleNative)
        pFnRecycleNative = (UFunction*)UObject::GObjObjects()->Data[26564];

    UNavMeshGoal_Random_execRecycleNative_Parms RecycleNative_Parms;

    pFnRecycleNative->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRecycleNative, &RecycleNative_Parms, NULL);

    pFnRecycleNative->FunctionFlags |= 0x400;
};

// Function Engine.NavMeshGoal_Random.FindRandom
// [0x00026002]
// Parameters infos:

void UNavMeshGoal_Random::FindRandom() {
    static UFunction* pFnFindRandom = NULL;

    if (!pFnFindRandom)
        pFnFindRandom = (UFunction*)UObject::GObjObjects()->Data[26558];

    UNavMeshGoal_Random_execFindRandom_Parms FindRandom_Parms;

    this->ProcessEvent(pFnFindRandom, &FindRandom_Parms, NULL);
};

// Function Engine.NavMeshGoal_WithinDistanceEnvelope.Recycle
// [0x00020002]
// Parameters infos:

void UNavMeshGoal_WithinDistanceEnvelope::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[26578];

    UNavMeshGoal_WithinDistanceEnvelope_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.NavMeshGoal_WithinDistanceEnvelope.GoalWithinEnvelopeToLoc
// [0x00026002]
// Parameters infos:

void UNavMeshGoal_WithinDistanceEnvelope::GoalWithinEnvelopeToLoc() {
    static UFunction* pFnGoalWithinEnvelopeToLoc = NULL;

    if (!pFnGoalWithinEnvelopeToLoc)
        pFnGoalWithinEnvelopeToLoc =
            (UFunction*)UObject::GObjObjects()->Data[26570];

    UNavMeshGoal_WithinDistanceEnvelope_execGoalWithinEnvelopeToLoc_Parms
        GoalWithinEnvelopeToLoc_Parms;

    this->ProcessEvent(pFnGoalWithinEnvelopeToLoc,
                       &GoalWithinEnvelopeToLoc_Parms, NULL);
};

// Function Engine.PathConstraint.GetDumpString
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPathConstraint::eventGetDumpString() {
    static UFunction* pFnGetDumpString = NULL;

    if (!pFnGetDumpString)
        pFnGetDumpString = (UFunction*)UObject::GObjObjects()->Data[30743];

    UPathConstraint_eventGetDumpString_Parms GetDumpString_Parms;

    this->ProcessEvent(pFnGetDumpString, &GetDumpString_Parms, NULL);
};

// Function Engine.PathConstraint.Recycle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPathConstraint::eventRecycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30742];

    UPathConstraint_eventRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_AlongLine.Recycle
// [0x00020002]
// Parameters infos:

void UPath_AlongLine::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30751];

    UPath_AlongLine_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_AlongLine.AlongLine
// [0x00022002]
// Parameters infos:

void UPath_AlongLine::AlongLine() {
    static UFunction* pFnAlongLine = NULL;

    if (!pFnAlongLine)
        pFnAlongLine = (UFunction*)UObject::GObjObjects()->Data[30746];

    UPath_AlongLine_execAlongLine_Parms AlongLine_Parms;

    this->ProcessEvent(pFnAlongLine, &AlongLine_Parms, NULL);
};

// Function Engine.Path_AvoidInEscapableNodes.Recycle
// [0x00020002]
// Parameters infos:

void UPath_AvoidInEscapableNodes::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30762];

    UPath_AvoidInEscapableNodes_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_AvoidInEscapableNodes.DontGetStuck
// [0x00022002]
// Parameters infos:

void UPath_AvoidInEscapableNodes::DontGetStuck() {
    static UFunction* pFnDontGetStuck = NULL;

    if (!pFnDontGetStuck)
        pFnDontGetStuck = (UFunction*)UObject::GObjObjects()->Data[30758];

    UPath_AvoidInEscapableNodes_execDontGetStuck_Parms DontGetStuck_Parms;

    this->ProcessEvent(pFnDontGetStuck, &DontGetStuck_Parms, NULL);
};

// Function Engine.Path_AvoidInEscapableNodes.CachePawnReacFlags
// [0x00040401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPath_AvoidInEscapableNodes::CachePawnReacFlags() {
    static UFunction* pFnCachePawnReacFlags = NULL;

    if (!pFnCachePawnReacFlags)
        pFnCachePawnReacFlags = (UFunction*)UObject::GObjObjects()->Data[30756];

    UPath_AvoidInEscapableNodes_execCachePawnReacFlags_Parms
        CachePawnReacFlags_Parms;

    pFnCachePawnReacFlags->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCachePawnReacFlags, &CachePawnReacFlags_Parms, NULL);

    pFnCachePawnReacFlags->FunctionFlags |= 0x400;
};

// Function Engine.Path_MinDistBetweenSpecsOfType.Recycle
// [0x00020002]
// Parameters infos:

void UPath_MinDistBetweenSpecsOfType::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30773];

    UPath_MinDistBetweenSpecsOfType_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_MinDistBetweenSpecsOfType.EnforceMinDist
// [0x00026002]
// Parameters infos:

void UPath_MinDistBetweenSpecsOfType::EnforceMinDist() {
    static UFunction* pFnEnforceMinDist = NULL;

    if (!pFnEnforceMinDist)
        pFnEnforceMinDist = (UFunction*)UObject::GObjObjects()->Data[30766];

    UPath_MinDistBetweenSpecsOfType_execEnforceMinDist_Parms
        EnforceMinDist_Parms;

    this->ProcessEvent(pFnEnforceMinDist, &EnforceMinDist_Parms, NULL);
};

// Function Engine.Path_TowardGoal.Recycle
// [0x00020002]
// Parameters infos:

void UPath_TowardGoal::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30780];

    UPath_TowardGoal_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_TowardGoal.TowardGoal
// [0x00022002]
// Parameters infos:

void UPath_TowardGoal::TowardGoal() {
    static UFunction* pFnTowardGoal = NULL;

    if (!pFnTowardGoal)
        pFnTowardGoal = (UFunction*)UObject::GObjObjects()->Data[30775];

    UPath_TowardGoal_execTowardGoal_Parms TowardGoal_Parms;

    this->ProcessEvent(pFnTowardGoal, &TowardGoal_Parms, NULL);
};

// Function Engine.Path_TowardPoint.Recycle
// [0x00020002]
// Parameters infos:

void UPath_TowardPoint::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30787];

    UPath_TowardPoint_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_TowardPoint.TowardPoint
// [0x00022002]
// Parameters infos:

void UPath_TowardPoint::TowardPoint() {
    static UFunction* pFnTowardPoint = NULL;

    if (!pFnTowardPoint)
        pFnTowardPoint = (UFunction*)UObject::GObjObjects()->Data[30782];

    UPath_TowardPoint_execTowardPoint_Parms TowardPoint_Parms;

    this->ProcessEvent(pFnTowardPoint, &TowardPoint_Parms, NULL);
};

// Function Engine.Path_WithinDistanceEnvelope.Recycle
// [0x00020002]
// Parameters infos:

void UPath_WithinDistanceEnvelope::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30804];

    UPath_WithinDistanceEnvelope_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_WithinDistanceEnvelope.StayWithinEnvelopeToLoc
// [0x00026002]
// Parameters infos:

void UPath_WithinDistanceEnvelope::StayWithinEnvelopeToLoc() {
    static UFunction* pFnStayWithinEnvelopeToLoc = NULL;

    if (!pFnStayWithinEnvelopeToLoc)
        pFnStayWithinEnvelopeToLoc =
            (UFunction*)UObject::GObjObjects()->Data[30794];

    UPath_WithinDistanceEnvelope_execStayWithinEnvelopeToLoc_Parms
        StayWithinEnvelopeToLoc_Parms;

    this->ProcessEvent(pFnStayWithinEnvelopeToLoc,
                       &StayWithinEnvelopeToLoc_Parms, NULL);
};

// Function Engine.Path_WithinTraversalDist.Recycle
// [0x00020002]
// Parameters infos:

void UPath_WithinTraversalDist::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[30814];

    UPath_WithinTraversalDist_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Path_WithinTraversalDist.DontExceedMaxDist
// [0x00026002]
// Parameters infos:

void UPath_WithinTraversalDist::DontExceedMaxDist() {
    static UFunction* pFnDontExceedMaxDist = NULL;

    if (!pFnDontExceedMaxDist)
        pFnDontExceedMaxDist = (UFunction*)UObject::GObjObjects()->Data[30808];

    UPath_WithinTraversalDist_execDontExceedMaxDist_Parms
        DontExceedMaxDist_Parms;

    this->ProcessEvent(pFnDontExceedMaxDist, &DontExceedMaxDist_Parms, NULL);
};

// Function Engine.PathGoalEvaluator.GetDumpString
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPathGoalEvaluator::eventGetDumpString() {
    static UFunction* pFnGetDumpString = NULL;

    if (!pFnGetDumpString)
        pFnGetDumpString = (UFunction*)UObject::GObjObjects()->Data[22927];

    UPathGoalEvaluator_eventGetDumpString_Parms GetDumpString_Parms;

    this->ProcessEvent(pFnGetDumpString, &GetDumpString_Parms, NULL);
};

// Function Engine.PathGoalEvaluator.Recycle
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPathGoalEvaluator::eventRecycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[22926];

    UPathGoalEvaluator_eventRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Goal_AtActor.Recycle
// [0x00020002]
// Parameters infos:

void UGoal_AtActor::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[22942];

    UGoal_AtActor_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Goal_AtActor.AtActor
// [0x00026002]
// Parameters infos:

void UGoal_AtActor::AtActor() {
    static UFunction* pFnAtActor = NULL;

    if (!pFnAtActor)
        pFnAtActor = (UFunction*)UObject::GObjObjects()->Data[22932];

    UGoal_AtActor_execAtActor_Parms AtActor_Parms;

    this->ProcessEvent(pFnAtActor, &AtActor_Parms, NULL);
};

// Function Engine.Goal_Null.Recycle
// [0x00020002]
// Parameters infos:

void UGoal_Null::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[22954];

    UGoal_Null_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.Goal_Null.GoUntilBust
// [0x00026002]
// Parameters infos:

void UGoal_Null::GoUntilBust() {
    static UFunction* pFnGoUntilBust = NULL;

    if (!pFnGoUntilBust)
        pFnGoUntilBust = (UFunction*)UObject::GObjObjects()->Data[22949];

    UGoal_Null_execGoUntilBust_Parms GoUntilBust_Parms;

    this->ProcessEvent(pFnGoUntilBust, &GoUntilBust_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.CreateForceField
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventCreateForceField() {
    static UFunction* pFnCreateForceField = NULL;

    if (!pFnCreateForceField)
        pFnCreateForceField = (UFunction*)UObject::GObjObjects()->Data[34093];

    ASkeletalMeshActor_eventCreateForceField_Parms CreateForceField_Parms;

    this->ProcessEvent(pFnCreateForceField, &CreateForceField_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.SkelMeshActorOnParticleSystemFinished
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActor::SkelMeshActorOnParticleSystemFinished() {
    static UFunction* pFnSkelMeshActorOnParticleSystemFinished = NULL;

    if (!pFnSkelMeshActorOnParticleSystemFinished)
        pFnSkelMeshActorOnParticleSystemFinished =
            (UFunction*)UObject::GObjObjects()->Data[34091];

    ASkeletalMeshActor_execSkelMeshActorOnParticleSystemFinished_Parms
        SkelMeshActorOnParticleSystemFinished_Parms;

    this->ProcessEvent(pFnSkelMeshActorOnParticleSystemFinished,
                       &SkelMeshActorOnParticleSystemFinished_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.PlayParticleEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventPlayParticleEffect() {
    static UFunction* pFnPlayParticleEffect = NULL;

    if (!pFnPlayParticleEffect)
        pFnPlayParticleEffect = (UFunction*)UObject::GObjObjects()->Data[34084];

    ASkeletalMeshActor_eventPlayParticleEffect_Parms PlayParticleEffect_Parms;

    this->ProcessEvent(pFnPlayParticleEffect, &PlayParticleEffect_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ASkeletalMeshActor::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[34082];

    ASkeletalMeshActor_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActor.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ASkeletalMeshActor::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[34080];

    ASkeletalMeshActor_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActor.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void ASkeletalMeshActor::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[34078];

    ASkeletalMeshActor_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[34069];

    ASkeletalMeshActor_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.DoKismetAttachment
// [0x00020002]
// Parameters infos:

void ASkeletalMeshActor::DoKismetAttachment() {
    static UFunction* pFnDoKismetAttachment = NULL;

    if (!pFnDoKismetAttachment)
        pFnDoKismetAttachment = (UFunction*)UObject::GObjObjects()->Data[34062];

    ASkeletalMeshActor_execDoKismetAttachment_Parms DoKismetAttachment_Parms;

    this->ProcessEvent(pFnDoKismetAttachment, &DoKismetAttachment_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.OnSetSkelControlTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventOnSetSkelControlTarget() {
    static UFunction* pFnOnSetSkelControlTarget = NULL;

    if (!pFnOnSetSkelControlTarget)
        pFnOnSetSkelControlTarget =
            (UFunction*)UObject::GObjObjects()->Data[34059];

    ASkeletalMeshActor_eventOnSetSkelControlTarget_Parms
        OnSetSkelControlTarget_Parms;

    this->ProcessEvent(pFnOnSetSkelControlTarget, &OnSetSkelControlTarget_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActor.OnUpdatePhysBonesFromAnim
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventOnUpdatePhysBonesFromAnim() {
    static UFunction* pFnOnUpdatePhysBonesFromAnim = NULL;

    if (!pFnOnUpdatePhysBonesFromAnim)
        pFnOnUpdatePhysBonesFromAnim =
            (UFunction*)UObject::GObjObjects()->Data[34057];

    ASkeletalMeshActor_eventOnUpdatePhysBonesFromAnim_Parms
        OnUpdatePhysBonesFromAnim_Parms;

    this->ProcessEvent(pFnOnUpdatePhysBonesFromAnim,
                       &OnUpdatePhysBonesFromAnim_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.OnSetMesh
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventOnSetMesh() {
    static UFunction* pFnOnSetMesh = NULL;

    if (!pFnOnSetMesh)
        pFnOnSetMesh = (UFunction*)UObject::GObjObjects()->Data[34055];

    ASkeletalMeshActor_eventOnSetMesh_Parms OnSetMesh_Parms;

    this->ProcessEvent(pFnOnSetMesh, &OnSetMesh_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.IsActorPlayingFaceFXAnim
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActor::IsActorPlayingFaceFXAnim() {
    static UFunction* pFnIsActorPlayingFaceFXAnim = NULL;

    if (!pFnIsActorPlayingFaceFXAnim)
        pFnIsActorPlayingFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[34053];

    ASkeletalMeshActor_execIsActorPlayingFaceFXAnim_Parms
        IsActorPlayingFaceFXAnim_Parms;

    this->ProcessEvent(pFnIsActorPlayingFaceFXAnim,
                       &IsActorPlayingFaceFXAnim_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.GetActorFaceFXAsset
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventGetActorFaceFXAsset() {
    static UFunction* pFnGetActorFaceFXAsset = NULL;

    if (!pFnGetActorFaceFXAsset)
        pFnGetActorFaceFXAsset =
            (UFunction*)UObject::GObjObjects()->Data[34051];

    ASkeletalMeshActor_eventGetActorFaceFXAsset_Parms GetActorFaceFXAsset_Parms;

    this->ProcessEvent(pFnGetActorFaceFXAsset, &GetActorFaceFXAsset_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActor.OnPlayFaceFXAnim
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActor::OnPlayFaceFXAnim() {
    static UFunction* pFnOnPlayFaceFXAnim = NULL;

    if (!pFnOnPlayFaceFXAnim)
        pFnOnPlayFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[34048];

    ASkeletalMeshActor_execOnPlayFaceFXAnim_Parms OnPlayFaceFXAnim_Parms;

    this->ProcessEvent(pFnOnPlayFaceFXAnim, &OnPlayFaceFXAnim_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.GetFaceFXAudioComponent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventGetFaceFXAudioComponent() {
    static UFunction* pFnGetFaceFXAudioComponent = NULL;

    if (!pFnGetFaceFXAudioComponent)
        pFnGetFaceFXAudioComponent =
            (UFunction*)UObject::GObjObjects()->Data[34046];

    ASkeletalMeshActor_eventGetFaceFXAudioComponent_Parms
        GetFaceFXAudioComponent_Parms;

    this->ProcessEvent(pFnGetFaceFXAudioComponent,
                       &GetFaceFXAudioComponent_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.StopActorFaceFXAnim
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventStopActorFaceFXAnim() {
    static UFunction* pFnStopActorFaceFXAnim = NULL;

    if (!pFnStopActorFaceFXAnim)
        pFnStopActorFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[34045];

    ASkeletalMeshActor_eventStopActorFaceFXAnim_Parms StopActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnStopActorFaceFXAnim, &StopActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActor.PlayActorFaceFXAnim
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventPlayActorFaceFXAnim() {
    static UFunction* pFnPlayActorFaceFXAnim = NULL;

    if (!pFnPlayActorFaceFXAnim)
        pFnPlayActorFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[34038];

    ASkeletalMeshActor_eventPlayActorFaceFXAnim_Parms PlayActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnPlayActorFaceFXAnim, &PlayActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActor.MAT_FinishAnimControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActor::MAT_FinishAnimControl() {
    static UFunction* pFnMAT_FinishAnimControl = NULL;

    if (!pFnMAT_FinishAnimControl)
        pFnMAT_FinishAnimControl =
            (UFunction*)UObject::GObjObjects()->Data[34036];

    ASkeletalMeshActor_execMAT_FinishAnimControl_Parms
        MAT_FinishAnimControl_Parms;

    pFnMAT_FinishAnimControl->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_FinishAnimControl, &MAT_FinishAnimControl_Parms,
                       NULL);

    pFnMAT_FinishAnimControl->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActor.FinishAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventFinishAnimControl() {
    static UFunction* pFnFinishAnimControl = NULL;

    if (!pFnFinishAnimControl)
        pFnFinishAnimControl = (UFunction*)UObject::GObjObjects()->Data[34034];

    ASkeletalMeshActor_eventFinishAnimControl_Parms FinishAnimControl_Parms;

    this->ProcessEvent(pFnFinishAnimControl, &FinishAnimControl_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.SetAnimPosition
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventSetAnimPosition() {
    static UFunction* pFnSetAnimPosition = NULL;

    if (!pFnSetAnimPosition)
        pFnSetAnimPosition = (UFunction*)UObject::GObjObjects()->Data[34025];

    ASkeletalMeshActor_eventSetAnimPosition_Parms SetAnimPosition_Parms;

    this->ProcessEvent(pFnSetAnimPosition, &SetAnimPosition_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.MAT_BeginAnimControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActor::MAT_BeginAnimControl() {
    static UFunction* pFnMAT_BeginAnimControl = NULL;

    if (!pFnMAT_BeginAnimControl)
        pFnMAT_BeginAnimControl =
            (UFunction*)UObject::GObjObjects()->Data[34023];

    ASkeletalMeshActor_execMAT_BeginAnimControl_Parms
        MAT_BeginAnimControl_Parms;

    pFnMAT_BeginAnimControl->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_BeginAnimControl, &MAT_BeginAnimControl_Parms,
                       NULL);

    pFnMAT_BeginAnimControl->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActor.BeginAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventBeginAnimControl() {
    static UFunction* pFnBeginAnimControl = NULL;

    if (!pFnBeginAnimControl)
        pFnBeginAnimControl = (UFunction*)UObject::GObjObjects()->Data[34021];

    ASkeletalMeshActor_eventBeginAnimControl_Parms BeginAnimControl_Parms;

    this->ProcessEvent(pFnBeginAnimControl, &BeginAnimControl_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.OnSetMaterial
// [0x00020002]
// Parameters infos:

void ASkeletalMeshActor::OnSetMaterial() {
    static UFunction* pFnOnSetMaterial = NULL;

    if (!pFnOnSetMaterial)
        pFnOnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[34019];

    ASkeletalMeshActor_execOnSetMaterial_Parms OnSetMaterial_Parms;

    this->ProcessEvent(pFnOnSetMaterial, &OnSetMaterial_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.OnToggle
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[34016];

    ASkeletalMeshActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[34014];

    ASkeletalMeshActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.UpdateAnimSetList
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActor::UpdateAnimSetList() {
    static UFunction* pFnUpdateAnimSetList = NULL;

    if (!pFnUpdateAnimSetList)
        pFnUpdateAnimSetList = (UFunction*)UObject::GObjObjects()->Data[34013];

    ASkeletalMeshActor_execUpdateAnimSetList_Parms UpdateAnimSetList_Parms;

    pFnUpdateAnimSetList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateAnimSetList, &UpdateAnimSetList_Parms, NULL);

    pFnUpdateAnimSetList->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActor.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[34012];

    ASkeletalMeshActor_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.SkeletalMeshActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[34011];

    ASkeletalMeshActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function
// Engine.SkeletalMeshActorBasedOnExtremeContent.SetMaterialBasedOnExtremeContent
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActorBasedOnExtremeContent::
    SetMaterialBasedOnExtremeContent() {
    static UFunction* pFnSetMaterialBasedOnExtremeContent = NULL;

    if (!pFnSetMaterialBasedOnExtremeContent)
        pFnSetMaterialBasedOnExtremeContent =
            (UFunction*)UObject::GObjObjects()->Data[34109];

    ASkeletalMeshActorBasedOnExtremeContent_execSetMaterialBasedOnExtremeContent_Parms
        SetMaterialBasedOnExtremeContent_Parms;

    this->ProcessEvent(pFnSetMaterialBasedOnExtremeContent,
                       &SetMaterialBasedOnExtremeContent_Parms, NULL);
};

// Function Engine.SkeletalMeshActorBasedOnExtremeContent.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorBasedOnExtremeContent::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[34108];

    ASkeletalMeshActorBasedOnExtremeContent_eventPostBeginPlay_Parms
        PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.SetSkelControlScale
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorMAT::eventSetSkelControlScale() {
    static UFunction* pFnSetSkelControlScale = NULL;

    if (!pFnSetSkelControlScale)
        pFnSetSkelControlScale =
            (UFunction*)UObject::GObjObjects()->Data[34159];

    ASkeletalMeshActorMAT_eventSetSkelControlScale_Parms
        SetSkelControlScale_Parms;

    this->ProcessEvent(pFnSetSkelControlScale, &SetSkelControlScale_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshActorMAT.SetMorphWeight
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorMAT::eventSetMorphWeight() {
    static UFunction* pFnSetMorphWeight = NULL;

    if (!pFnSetMorphWeight)
        pFnSetMorphWeight = (UFunction*)UObject::GObjObjects()->Data[34156];

    ASkeletalMeshActorMAT_eventSetMorphWeight_Parms SetMorphWeight_Parms;

    this->ProcessEvent(pFnSetMorphWeight, &SetMorphWeight_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.FinishAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorMAT::eventFinishAnimControl() {
    static UFunction* pFnFinishAnimControl = NULL;

    if (!pFnFinishAnimControl)
        pFnFinishAnimControl = (UFunction*)UObject::GObjObjects()->Data[34154];

    ASkeletalMeshActorMAT_eventFinishAnimControl_Parms FinishAnimControl_Parms;

    this->ProcessEvent(pFnFinishAnimControl, &FinishAnimControl_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.MAT_SetAnimPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActorMAT::MAT_SetAnimPosition() {
    static UFunction* pFnMAT_SetAnimPosition = NULL;

    if (!pFnMAT_SetAnimPosition)
        pFnMAT_SetAnimPosition =
            (UFunction*)UObject::GObjObjects()->Data[34146];

    ASkeletalMeshActorMAT_execMAT_SetAnimPosition_Parms
        MAT_SetAnimPosition_Parms;

    pFnMAT_SetAnimPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetAnimPosition, &MAT_SetAnimPosition_Parms,
                       NULL);

    pFnMAT_SetAnimPosition->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActorMAT.SetAnimPosition
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorMAT::eventSetAnimPosition() {
    static UFunction* pFnSetAnimPosition = NULL;

    if (!pFnSetAnimPosition)
        pFnSetAnimPosition = (UFunction*)UObject::GObjObjects()->Data[34138];

    ASkeletalMeshActorMAT_eventSetAnimPosition_Parms SetAnimPosition_Parms;

    this->ProcessEvent(pFnSetAnimPosition, &SetAnimPosition_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.ClearAnimNodes
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActorMAT::ClearAnimNodes() {
    static UFunction* pFnClearAnimNodes = NULL;

    if (!pFnClearAnimNodes)
        pFnClearAnimNodes = (UFunction*)UObject::GObjObjects()->Data[34137];

    ASkeletalMeshActorMAT_execClearAnimNodes_Parms ClearAnimNodes_Parms;

    this->ProcessEvent(pFnClearAnimNodes, &ClearAnimNodes_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.CacheAnimNodes
// [0x00020102]
// Parameters infos:

void ASkeletalMeshActorMAT::CacheAnimNodes() {
    static UFunction* pFnCacheAnimNodes = NULL;

    if (!pFnCacheAnimNodes)
        pFnCacheAnimNodes = (UFunction*)UObject::GObjObjects()->Data[34135];

    ASkeletalMeshActorMAT_execCacheAnimNodes_Parms CacheAnimNodes_Parms;

    this->ProcessEvent(pFnCacheAnimNodes, &CacheAnimNodes_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorMAT::eventPostInitAnimTree() {
    static UFunction* pFnPostInitAnimTree = NULL;

    if (!pFnPostInitAnimTree)
        pFnPostInitAnimTree = (UFunction*)UObject::GObjObjects()->Data[34133];

    ASkeletalMeshActorMAT_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;

    this->ProcessEvent(pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASkeletalMeshActorMAT::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[34132];

    ASkeletalMeshActorMAT_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.SkeletalMeshActorMAT.MAT_SetSkelControlStrength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActorMAT::MAT_SetSkelControlStrength() {
    static UFunction* pFnMAT_SetSkelControlStrength = NULL;

    if (!pFnMAT_SetSkelControlStrength)
        pFnMAT_SetSkelControlStrength =
            (UFunction*)UObject::GObjObjects()->Data[34129];

    ASkeletalMeshActorMAT_execMAT_SetSkelControlStrength_Parms
        MAT_SetSkelControlStrength_Parms;

    pFnMAT_SetSkelControlStrength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetSkelControlStrength,
                       &MAT_SetSkelControlStrength_Parms, NULL);

    pFnMAT_SetSkelControlStrength->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActorMAT.MAT_SetSkelControlScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActorMAT::MAT_SetSkelControlScale() {
    static UFunction* pFnMAT_SetSkelControlScale = NULL;

    if (!pFnMAT_SetSkelControlScale)
        pFnMAT_SetSkelControlScale =
            (UFunction*)UObject::GObjObjects()->Data[34126];

    ASkeletalMeshActorMAT_execMAT_SetSkelControlScale_Parms
        MAT_SetSkelControlScale_Parms;

    pFnMAT_SetSkelControlScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetSkelControlScale,
                       &MAT_SetSkelControlScale_Parms, NULL);

    pFnMAT_SetSkelControlScale->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActorMAT.MAT_SetMorphWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActorMAT::MAT_SetMorphWeight() {
    static UFunction* pFnMAT_SetMorphWeight = NULL;

    if (!pFnMAT_SetMorphWeight)
        pFnMAT_SetMorphWeight = (UFunction*)UObject::GObjObjects()->Data[34123];

    ASkeletalMeshActorMAT_execMAT_SetMorphWeight_Parms MAT_SetMorphWeight_Parms;

    pFnMAT_SetMorphWeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetMorphWeight, &MAT_SetMorphWeight_Parms, NULL);

    pFnMAT_SetMorphWeight->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshActorMAT.MAT_SetAnimWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASkeletalMeshActorMAT::MAT_SetAnimWeights() {
    static UFunction* pFnMAT_SetAnimWeights = NULL;

    if (!pFnMAT_SetAnimWeights)
        pFnMAT_SetAnimWeights = (UFunction*)UObject::GObjObjects()->Data[34120];

    ASkeletalMeshActorMAT_execMAT_SetAnimWeights_Parms MAT_SetAnimWeights_Parms;

    pFnMAT_SetAnimWeights->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetAnimWeights, &MAT_SetAnimWeights_Parms, NULL);

    pFnMAT_SetAnimWeights->FunctionFlags |= 0x400;
};

// Function Engine.AnimNotify.FindNextNotifyOfClass
// [0x00420102]
// Parameters infos:

void UAnimNotify::FindNextNotifyOfClass() {
    static UFunction* pFnFindNextNotifyOfClass = NULL;

    if (!pFnFindNextNotifyOfClass)
        pFnFindNextNotifyOfClass =
            (UFunction*)UObject::GObjObjects()->Data[14413];

    UAnimNotify_execFindNextNotifyOfClass_Parms FindNextNotifyOfClass_Parms;

    this->ProcessEvent(pFnFindNextNotifyOfClass, &FindNextNotifyOfClass_Parms,
                       NULL);
};

// Function Engine.AnimNotify_Scripted.NotifyEnd
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UAnimNotify_Scripted::eventNotifyEnd() {
    static UFunction* pFnNotifyEnd = NULL;

    if (!pFnNotifyEnd)
        pFnNotifyEnd = (UFunction*)UObject::GObjObjects()->Data[14438];

    UAnimNotify_Scripted_eventNotifyEnd_Parms NotifyEnd_Parms;

    this->ProcessEvent(pFnNotifyEnd, &NotifyEnd_Parms, NULL);
};

// Function Engine.AnimNotify_Scripted.Notify
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UAnimNotify_Scripted::eventNotify() {
    static UFunction* pFnNotify = NULL;

    if (!pFnNotify) pFnNotify = (UFunction*)UObject::GObjObjects()->Data[14435];

    UAnimNotify_Scripted_eventNotify_Parms Notify_Parms;

    this->ProcessEvent(pFnNotify, &Notify_Parms, NULL);
};

// Function Engine.AnimNotify_PawnMaterialParam.Notify
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UAnimNotify_PawnMaterialParam::eventNotify() {
    static UFunction* pFnNotify = NULL;

    if (!pFnNotify) pFnNotify = (UFunction*)UObject::GObjObjects()->Data[14685];

    UAnimNotify_PawnMaterialParam_eventNotify_Parms Notify_Parms;

    this->ProcessEvent(pFnNotify, &Notify_Parms, NULL);
};

// Function Engine.AnimNotify_ViewShake.Notify
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UAnimNotify_ViewShake::eventNotify() {
    static UFunction* pFnNotify = NULL;

    if (!pFnNotify) pFnNotify = (UFunction*)UObject::GObjObjects()->Data[14767];

    UAnimNotify_ViewShake_eventNotify_Parms Notify_Parms;

    this->ProcessEvent(pFnNotify, &Notify_Parms, NULL);
};

// Function Engine.AnimNotify_Trails.GetNumSteps
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNotify_Trails::GetNumSteps() {
    static UFunction* pFnGetNumSteps = NULL;

    if (!pFnGetNumSteps)
        pFnGetNumSteps = (UFunction*)UObject::GObjObjects()->Data[14752];

    UAnimNotify_Trails_execGetNumSteps_Parms GetNumSteps_Parms;

    pFnGetNumSteps->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumSteps, &GetNumSteps_Parms, NULL);

    pFnGetNumSteps->FunctionFlags |= 0x400;
};

// Function Engine.AnimNode.ReplayAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNode::ReplayAnim() {
    static UFunction* pFnReplayAnim = NULL;

    if (!pFnReplayAnim)
        pFnReplayAnim = (UFunction*)UObject::GObjObjects()->Data[13965];

    UAnimNode_execReplayAnim_Parms ReplayAnim_Parms;

    pFnReplayAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReplayAnim, &ReplayAnim_Parms, NULL);

    pFnReplayAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNode.StopAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNode::StopAnim() {
    static UFunction* pFnStopAnim = NULL;

    if (!pFnStopAnim)
        pFnStopAnim = (UFunction*)UObject::GObjObjects()->Data[13964];

    UAnimNode_execStopAnim_Parms StopAnim_Parms;

    pFnStopAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopAnim, &StopAnim_Parms, NULL);

    pFnStopAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNode.PlayAnim
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UAnimNode::PlayAnim() {
    static UFunction* pFnPlayAnim = NULL;

    if (!pFnPlayAnim)
        pFnPlayAnim = (UFunction*)UObject::GObjObjects()->Data[13960];

    UAnimNode_execPlayAnim_Parms PlayAnim_Parms;

    pFnPlayAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayAnim, &PlayAnim_Parms, NULL);

    pFnPlayAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNode.FindAnimNode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNode::FindAnimNode() {
    static UFunction* pFnFindAnimNode = NULL;

    if (!pFnFindAnimNode)
        pFnFindAnimNode = (UFunction*)UObject::GObjObjects()->Data[13957];

    UAnimNode_execFindAnimNode_Parms FindAnimNode_Parms;

    pFnFindAnimNode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindAnimNode, &FindAnimNode_Parms, NULL);

    pFnFindAnimNode->FunctionFlags |= 0x400;
};

// Function Engine.AnimNode.OnCeaseRelevant
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UAnimNode::eventOnCeaseRelevant() {
    static UFunction* pFnOnCeaseRelevant = NULL;

    if (!pFnOnCeaseRelevant)
        pFnOnCeaseRelevant = (UFunction*)UObject::GObjObjects()->Data[13956];

    UAnimNode_eventOnCeaseRelevant_Parms OnCeaseRelevant_Parms;

    this->ProcessEvent(pFnOnCeaseRelevant, &OnCeaseRelevant_Parms, NULL);
};

// Function Engine.AnimNode.OnBecomeRelevant
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UAnimNode::eventOnBecomeRelevant() {
    static UFunction* pFnOnBecomeRelevant = NULL;

    if (!pFnOnBecomeRelevant)
        pFnOnBecomeRelevant = (UFunction*)UObject::GObjObjects()->Data[13955];

    UAnimNode_eventOnBecomeRelevant_Parms OnBecomeRelevant_Parms;

    this->ProcessEvent(pFnOnBecomeRelevant, &OnBecomeRelevant_Parms, NULL);
};

// Function Engine.AnimNode.OnInit
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UAnimNode::eventOnInit() {
    static UFunction* pFnOnInit = NULL;

    if (!pFnOnInit) pFnOnInit = (UFunction*)UObject::GObjObjects()->Data[13954];

    UAnimNode_eventOnInit_Parms OnInit_Parms;

    this->ProcessEvent(pFnOnInit, &OnInit_Parms, NULL);
};

// Function Engine.AnimNodeBlendBase.ReplayAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeBlendBase::ReplayAnim() {
    static UFunction* pFnReplayAnim = NULL;

    if (!pFnReplayAnim)
        pFnReplayAnim = (UFunction*)UObject::GObjObjects()->Data[13980];

    UAnimNodeBlendBase_execReplayAnim_Parms ReplayAnim_Parms;

    pFnReplayAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReplayAnim, &ReplayAnim_Parms, NULL);

    pFnReplayAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeBlendBase.StopAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeBlendBase::StopAnim() {
    static UFunction* pFnStopAnim = NULL;

    if (!pFnStopAnim)
        pFnStopAnim = (UFunction*)UObject::GObjObjects()->Data[13979];

    UAnimNodeBlendBase_execStopAnim_Parms StopAnim_Parms;

    pFnStopAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopAnim, &StopAnim_Parms, NULL);

    pFnStopAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeBlendBase.PlayAnim
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeBlendBase::PlayAnim() {
    static UFunction* pFnPlayAnim = NULL;

    if (!pFnPlayAnim)
        pFnPlayAnim = (UFunction*)UObject::GObjObjects()->Data[13975];

    UAnimNodeBlendBase_execPlayAnim_Parms PlayAnim_Parms;

    pFnPlayAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayAnim, &PlayAnim_Parms, NULL);

    pFnPlayAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNode_MultiBlendPerBone.SetMaskWeight
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNode_MultiBlendPerBone::SetMaskWeight() {
    static UFunction* pFnSetMaskWeight = NULL;

    if (!pFnSetMaskWeight)
        pFnSetMaskWeight = (UFunction*)UObject::GObjObjects()->Data[14010];

    UAnimNode_MultiBlendPerBone_execSetMaskWeight_Parms SetMaskWeight_Parms;

    pFnSetMaskWeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaskWeight, &SetMaskWeight_Parms, NULL);

    pFnSetMaskWeight->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeAimOffset.SetActiveProfileByIndex
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeAimOffset::SetActiveProfileByIndex() {
    static UFunction* pFnSetActiveProfileByIndex = NULL;

    if (!pFnSetActiveProfileByIndex)
        pFnSetActiveProfileByIndex =
            (UFunction*)UObject::GObjObjects()->Data[14078];

    UAnimNodeAimOffset_execSetActiveProfileByIndex_Parms
        SetActiveProfileByIndex_Parms;

    pFnSetActiveProfileByIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActiveProfileByIndex,
                       &SetActiveProfileByIndex_Parms, NULL);

    pFnSetActiveProfileByIndex->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeAimOffset.SetActiveProfileByName
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeAimOffset::SetActiveProfileByName() {
    static UFunction* pFnSetActiveProfileByName = NULL;

    if (!pFnSetActiveProfileByName)
        pFnSetActiveProfileByName =
            (UFunction*)UObject::GObjObjects()->Data[14076];

    UAnimNodeAimOffset_execSetActiveProfileByName_Parms
        SetActiveProfileByName_Parms;

    pFnSetActiveProfileByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActiveProfileByName, &SetActiveProfileByName_Parms,
                       NULL);

    pFnSetActiveProfileByName->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeBlend.SetBlendTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeBlend::SetBlendTarget() {
    static UFunction* pFnSetBlendTarget = NULL;

    if (!pFnSetBlendTarget)
        pFnSetBlendTarget = (UFunction*)UObject::GObjObjects()->Data[14022];

    UAnimNodeBlend_execSetBlendTarget_Parms SetBlendTarget_Parms;

    pFnSetBlendTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlendTarget, &SetBlendTarget_Parms, NULL);

    pFnSetBlendTarget->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeAdditiveBlending.SetBlendTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeAdditiveBlending::SetBlendTarget() {
    static UFunction* pFnSetBlendTarget = NULL;

    if (!pFnSetBlendTarget)
        pFnSetBlendTarget = (UFunction*)UObject::GObjObjects()->Data[14026];

    UAnimNodeAdditiveBlending_execSetBlendTarget_Parms SetBlendTarget_Parms;

    pFnSetBlendTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlendTarget, &SetBlendTarget_Parms, NULL);

    pFnSetBlendTarget->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeBlendPerBone.SetBlendTarget
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeBlendPerBone::SetBlendTarget() {
    static UFunction* pFnSetBlendTarget = NULL;

    if (!pFnSetBlendTarget)
        pFnSetBlendTarget = (UFunction*)UObject::GObjObjects()->Data[14153];

    UAnimNodeBlendPerBone_execSetBlendTarget_Parms SetBlendTarget_Parms;

    pFnSetBlendTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlendTarget, &SetBlendTarget_Parms, NULL);

    pFnSetBlendTarget->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeCrossfader.GetActiveChild
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeCrossfader::GetActiveChild() {
    static UFunction* pFnGetActiveChild = NULL;

    if (!pFnGetActiveChild)
        pFnGetActiveChild = (UFunction*)UObject::GObjObjects()->Data[14171];

    UAnimNodeCrossfader_execGetActiveChild_Parms GetActiveChild_Parms;

    pFnGetActiveChild->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetActiveChild, &GetActiveChild_Parms, NULL);

    pFnGetActiveChild->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeCrossfader.GetAnimName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeCrossfader::GetAnimName() {
    static UFunction* pFnGetAnimName = NULL;

    if (!pFnGetAnimName)
        pFnGetAnimName = (UFunction*)UObject::GObjObjects()->Data[14169];

    UAnimNodeCrossfader_execGetAnimName_Parms GetAnimName_Parms;

    pFnGetAnimName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAnimName, &GetAnimName_Parms, NULL);

    pFnGetAnimName->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeCrossfader.BlendToLoopingAnim
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeCrossfader::BlendToLoopingAnim() {
    static UFunction* pFnBlendToLoopingAnim = NULL;

    if (!pFnBlendToLoopingAnim)
        pFnBlendToLoopingAnim = (UFunction*)UObject::GObjObjects()->Data[14165];

    UAnimNodeCrossfader_execBlendToLoopingAnim_Parms BlendToLoopingAnim_Parms;

    pFnBlendToLoopingAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBlendToLoopingAnim, &BlendToLoopingAnim_Parms, NULL);

    pFnBlendToLoopingAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeCrossfader.PlayOneShotAnim
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeCrossfader::PlayOneShotAnim() {
    static UFunction* pFnPlayOneShotAnim = NULL;

    if (!pFnPlayOneShotAnim)
        pFnPlayOneShotAnim = (UFunction*)UObject::GObjObjects()->Data[14159];

    UAnimNodeCrossfader_execPlayOneShotAnim_Parms PlayOneShotAnim_Parms;

    pFnPlayOneShotAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayOneShotAnim, &PlayOneShotAnim_Parms, NULL);

    pFnPlayOneShotAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodePlayCustomAnim.SetRootBoneAxisOption
// [0x00024003] ( FUNC_Final )
// Parameters infos:

void UAnimNodePlayCustomAnim::SetRootBoneAxisOption() {
    static UFunction* pFnSetRootBoneAxisOption = NULL;

    if (!pFnSetRootBoneAxisOption)
        pFnSetRootBoneAxisOption =
            (UFunction*)UObject::GObjObjects()->Data[14284];

    UAnimNodePlayCustomAnim_execSetRootBoneAxisOption_Parms
        SetRootBoneAxisOption_Parms;

    this->ProcessEvent(pFnSetRootBoneAxisOption, &SetRootBoneAxisOption_Parms,
                       NULL);
};

// Function Engine.AnimNodePlayCustomAnim.GetCustomAnimNodeSeq
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UAnimNodePlayCustomAnim::GetCustomAnimNodeSeq() {
    static UFunction* pFnGetCustomAnimNodeSeq = NULL;

    if (!pFnGetCustomAnimNodeSeq)
        pFnGetCustomAnimNodeSeq =
            (UFunction*)UObject::GObjObjects()->Data[14282];

    UAnimNodePlayCustomAnim_execGetCustomAnimNodeSeq_Parms
        GetCustomAnimNodeSeq_Parms;

    this->ProcessEvent(pFnGetCustomAnimNodeSeq, &GetCustomAnimNodeSeq_Parms,
                       NULL);
};

// Function Engine.AnimNodePlayCustomAnim.SetActorAnimEndNotification
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UAnimNodePlayCustomAnim::SetActorAnimEndNotification() {
    static UFunction* pFnSetActorAnimEndNotification = NULL;

    if (!pFnSetActorAnimEndNotification)
        pFnSetActorAnimEndNotification =
            (UFunction*)UObject::GObjObjects()->Data[14279];

    UAnimNodePlayCustomAnim_execSetActorAnimEndNotification_Parms
        SetActorAnimEndNotification_Parms;

    this->ProcessEvent(pFnSetActorAnimEndNotification,
                       &SetActorAnimEndNotification_Parms, NULL);
};

// Function Engine.AnimNodePlayCustomAnim.SetCustomAnim
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UAnimNodePlayCustomAnim::SetCustomAnim() {
    static UFunction* pFnSetCustomAnim = NULL;

    if (!pFnSetCustomAnim)
        pFnSetCustomAnim = (UFunction*)UObject::GObjObjects()->Data[14276];

    UAnimNodePlayCustomAnim_execSetCustomAnim_Parms SetCustomAnim_Parms;

    this->ProcessEvent(pFnSetCustomAnim, &SetCustomAnim_Parms, NULL);
};

// Function Engine.AnimNodePlayCustomAnim.StopCustomAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodePlayCustomAnim::StopCustomAnim() {
    static UFunction* pFnStopCustomAnim = NULL;

    if (!pFnStopCustomAnim)
        pFnStopCustomAnim = (UFunction*)UObject::GObjObjects()->Data[14274];

    UAnimNodePlayCustomAnim_execStopCustomAnim_Parms StopCustomAnim_Parms;

    pFnStopCustomAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopCustomAnim, &StopCustomAnim_Parms, NULL);

    pFnStopCustomAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodePlayCustomAnim.PlayCustomAnimByDuration
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodePlayCustomAnim::PlayCustomAnimByDuration() {
    static UFunction* pFnPlayCustomAnimByDuration = NULL;

    if (!pFnPlayCustomAnimByDuration)
        pFnPlayCustomAnimByDuration =
            (UFunction*)UObject::GObjObjects()->Data[14267];

    UAnimNodePlayCustomAnim_execPlayCustomAnimByDuration_Parms
        PlayCustomAnimByDuration_Parms;

    pFnPlayCustomAnimByDuration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayCustomAnimByDuration,
                       &PlayCustomAnimByDuration_Parms, NULL);

    pFnPlayCustomAnimByDuration->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodePlayCustomAnim.PlayCustomAnim
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodePlayCustomAnim::PlayCustomAnim() {
    static UFunction* pFnPlayCustomAnim = NULL;

    if (!pFnPlayCustomAnim)
        pFnPlayCustomAnim = (UFunction*)UObject::GObjObjects()->Data[14259];

    UAnimNodePlayCustomAnim_execPlayCustomAnim_Parms PlayCustomAnim_Parms;

    pFnPlayCustomAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayCustomAnim, &PlayCustomAnim_Parms, NULL);

    pFnPlayCustomAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeBlendList.SetActiveChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeBlendList::SetActiveChild() {
    static UFunction* pFnSetActiveChild = NULL;

    if (!pFnSetActiveChild)
        pFnSetActiveChild = (UFunction*)UObject::GObjObjects()->Data[14089];

    UAnimNodeBlendList_execSetActiveChild_Parms SetActiveChild_Parms;

    pFnSetActiveChild->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActiveChild, &SetActiveChild_Parms, NULL);

    pFnSetActiveChild->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeBlendMultiBone.SetTargetStartBone
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeBlendMultiBone::SetTargetStartBone() {
    static UFunction* pFnSetTargetStartBone = NULL;

    if (!pFnSetTargetStartBone)
        pFnSetTargetStartBone = (UFunction*)UObject::GObjObjects()->Data[14142];

    UAnimNodeBlendMultiBone_execSetTargetStartBone_Parms
        SetTargetStartBone_Parms;

    pFnSetTargetStartBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTargetStartBone, &SetTargetStartBone_Parms, NULL);

    pFnSetTargetStartBone->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.TickChildWeights
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::TickChildWeights() {
    static UFunction* pFnTickChildWeights = NULL;

    if (!pFnTickChildWeights)
        pFnTickChildWeights = (UFunction*)UObject::GObjObjects()->Data[14383];

    UAnimNodeSlot_execTickChildWeights_Parms TickChildWeights_Parms;

    pFnTickChildWeights->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTickChildWeights, &TickChildWeights_Parms, NULL);

    pFnTickChildWeights->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.SetRootBoneRotationOption
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::SetRootBoneRotationOption() {
    static UFunction* pFnSetRootBoneRotationOption = NULL;

    if (!pFnSetRootBoneRotationOption)
        pFnSetRootBoneRotationOption =
            (UFunction*)UObject::GObjObjects()->Data[14379];

    UAnimNodeSlot_execSetRootBoneRotationOption_Parms
        SetRootBoneRotationOption_Parms;

    pFnSetRootBoneRotationOption->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRootBoneRotationOption,
                       &SetRootBoneRotationOption_Parms, NULL);

    pFnSetRootBoneRotationOption->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.SetRootBoneAxisOption
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::SetRootBoneAxisOption() {
    static UFunction* pFnSetRootBoneAxisOption = NULL;

    if (!pFnSetRootBoneAxisOption)
        pFnSetRootBoneAxisOption =
            (UFunction*)UObject::GObjObjects()->Data[14375];

    UAnimNodeSlot_execSetRootBoneAxisOption_Parms SetRootBoneAxisOption_Parms;

    pFnSetRootBoneAxisOption->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRootBoneAxisOption, &SetRootBoneAxisOption_Parms,
                       NULL);

    pFnSetRootBoneAxisOption->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.GetCustomAnimNodeSeq
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::GetCustomAnimNodeSeq() {
    static UFunction* pFnGetCustomAnimNodeSeq = NULL;

    if (!pFnGetCustomAnimNodeSeq)
        pFnGetCustomAnimNodeSeq =
            (UFunction*)UObject::GObjObjects()->Data[14373];

    UAnimNodeSlot_execGetCustomAnimNodeSeq_Parms GetCustomAnimNodeSeq_Parms;

    pFnGetCustomAnimNodeSeq->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCustomAnimNodeSeq, &GetCustomAnimNodeSeq_Parms,
                       NULL);

    pFnGetCustomAnimNodeSeq->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.SetNotifyWeightThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::SetNotifyWeightThreshold() {
    static UFunction* pFnSetNotifyWeightThreshold = NULL;

    if (!pFnSetNotifyWeightThreshold)
        pFnSetNotifyWeightThreshold =
            (UFunction*)UObject::GObjObjects()->Data[14371];

    UAnimNodeSlot_execSetNotifyWeightThreshold_Parms
        SetNotifyWeightThreshold_Parms;

    pFnSetNotifyWeightThreshold->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNotifyWeightThreshold,
                       &SetNotifyWeightThreshold_Parms, NULL);

    pFnSetNotifyWeightThreshold->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.SetActorAnimEndNotification
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::SetActorAnimEndNotification() {
    static UFunction* pFnSetActorAnimEndNotification = NULL;

    if (!pFnSetActorAnimEndNotification)
        pFnSetActorAnimEndNotification =
            (UFunction*)UObject::GObjObjects()->Data[14369];

    UAnimNodeSlot_execSetActorAnimEndNotification_Parms
        SetActorAnimEndNotification_Parms;

    pFnSetActorAnimEndNotification->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActorAnimEndNotification,
                       &SetActorAnimEndNotification_Parms, NULL);

    pFnSetActorAnimEndNotification->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.SetCustomAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::SetCustomAnim() {
    static UFunction* pFnSetCustomAnim = NULL;

    if (!pFnSetCustomAnim)
        pFnSetCustomAnim = (UFunction*)UObject::GObjObjects()->Data[14367];

    UAnimNodeSlot_execSetCustomAnim_Parms SetCustomAnim_Parms;

    pFnSetCustomAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCustomAnim, &SetCustomAnim_Parms, NULL);

    pFnSetCustomAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.SetAllowPauseAnims
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::SetAllowPauseAnims() {
    static UFunction* pFnSetAllowPauseAnims = NULL;

    if (!pFnSetAllowPauseAnims)
        pFnSetAllowPauseAnims = (UFunction*)UObject::GObjObjects()->Data[14365];

    UAnimNodeSlot_execSetAllowPauseAnims_Parms SetAllowPauseAnims_Parms;

    pFnSetAllowPauseAnims->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAllowPauseAnims, &SetAllowPauseAnims_Parms, NULL);

    pFnSetAllowPauseAnims->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.StopCustomAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::StopCustomAnim() {
    static UFunction* pFnStopCustomAnim = NULL;

    if (!pFnStopCustomAnim)
        pFnStopCustomAnim = (UFunction*)UObject::GObjObjects()->Data[14363];

    UAnimNodeSlot_execStopCustomAnim_Parms StopCustomAnim_Parms;

    pFnStopCustomAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopCustomAnim, &StopCustomAnim_Parms, NULL);

    pFnStopCustomAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.GetPlayedAnimation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::GetPlayedAnimation() {
    static UFunction* pFnGetPlayedAnimation = NULL;

    if (!pFnGetPlayedAnimation)
        pFnGetPlayedAnimation = (UFunction*)UObject::GObjObjects()->Data[14361];

    UAnimNodeSlot_execGetPlayedAnimation_Parms GetPlayedAnimation_Parms;

    pFnGetPlayedAnimation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayedAnimation, &GetPlayedAnimation_Parms, NULL);

    pFnGetPlayedAnimation->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.PlayCustomAnimByDuration
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::PlayCustomAnimByDuration() {
    static UFunction* pFnPlayCustomAnimByDuration = NULL;

    if (!pFnPlayCustomAnimByDuration)
        pFnPlayCustomAnimByDuration =
            (UFunction*)UObject::GObjObjects()->Data[14353];

    UAnimNodeSlot_execPlayCustomAnimByDuration_Parms
        PlayCustomAnimByDuration_Parms;

    pFnPlayCustomAnimByDuration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayCustomAnimByDuration,
                       &PlayCustomAnimByDuration_Parms, NULL);

    pFnPlayCustomAnimByDuration->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSlot.PlayCustomAnim
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSlot::PlayCustomAnim() {
    static UFunction* pFnPlayCustomAnim = NULL;

    if (!pFnPlayCustomAnim)
        pFnPlayCustomAnim = (UFunction*)UObject::GObjObjects()->Data[14343];

    UAnimNodeSlot_execPlayCustomAnim_Parms PlayCustomAnim_Parms;

    pFnPlayCustomAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayCustomAnim, &PlayCustomAnim_Parms, NULL);

    pFnPlayCustomAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSynch.SetGroupRateScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSynch::SetGroupRateScale() {
    static UFunction* pFnSetGroupRateScale = NULL;

    if (!pFnSetGroupRateScale)
        pFnSetGroupRateScale = (UFunction*)UObject::GObjObjects()->Data[14409];

    UAnimNodeSynch_execSetGroupRateScale_Parms SetGroupRateScale_Parms;

    pFnSetGroupRateScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetGroupRateScale, &SetGroupRateScale_Parms, NULL);

    pFnSetGroupRateScale->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSynch.GetRelativePosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSynch::GetRelativePosition() {
    static UFunction* pFnGetRelativePosition = NULL;

    if (!pFnGetRelativePosition)
        pFnGetRelativePosition =
            (UFunction*)UObject::GObjObjects()->Data[14406];

    UAnimNodeSynch_execGetRelativePosition_Parms GetRelativePosition_Parms;

    pFnGetRelativePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRelativePosition, &GetRelativePosition_Parms,
                       NULL);

    pFnGetRelativePosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSynch.ForceRelativePosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSynch::ForceRelativePosition() {
    static UFunction* pFnForceRelativePosition = NULL;

    if (!pFnForceRelativePosition)
        pFnForceRelativePosition =
            (UFunction*)UObject::GObjObjects()->Data[14403];

    UAnimNodeSynch_execForceRelativePosition_Parms ForceRelativePosition_Parms;

    pFnForceRelativePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceRelativePosition, &ForceRelativePosition_Parms,
                       NULL);

    pFnForceRelativePosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSynch.GetMasterNodeOfGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSynch::GetMasterNodeOfGroup() {
    static UFunction* pFnGetMasterNodeOfGroup = NULL;

    if (!pFnGetMasterNodeOfGroup)
        pFnGetMasterNodeOfGroup =
            (UFunction*)UObject::GObjObjects()->Data[14400];

    UAnimNodeSynch_execGetMasterNodeOfGroup_Parms GetMasterNodeOfGroup_Parms;

    pFnGetMasterNodeOfGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMasterNodeOfGroup, &GetMasterNodeOfGroup_Parms,
                       NULL);

    pFnGetMasterNodeOfGroup->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSynch.RemoveNodeFromGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSynch::RemoveNodeFromGroup() {
    static UFunction* pFnRemoveNodeFromGroup = NULL;

    if (!pFnRemoveNodeFromGroup)
        pFnRemoveNodeFromGroup =
            (UFunction*)UObject::GObjObjects()->Data[14397];

    UAnimNodeSynch_execRemoveNodeFromGroup_Parms RemoveNodeFromGroup_Parms;

    pFnRemoveNodeFromGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveNodeFromGroup, &RemoveNodeFromGroup_Parms,
                       NULL);

    pFnRemoveNodeFromGroup->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSynch.AddNodeToGroup
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSynch::AddNodeToGroup() {
    static UFunction* pFnAddNodeToGroup = NULL;

    if (!pFnAddNodeToGroup)
        pFnAddNodeToGroup = (UFunction*)UObject::GObjObjects()->Data[14394];

    UAnimNodeSynch_execAddNodeToGroup_Parms AddNodeToGroup_Parms;

    pFnAddNodeToGroup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddNodeToGroup, &AddNodeToGroup_Parms, NULL);

    pFnAddNodeToGroup->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.GetGroupIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::GetGroupIndex() {
    static UFunction* pFnGetGroupIndex = NULL;

    if (!pFnGetGroupIndex)
        pFnGetGroupIndex = (UFunction*)UObject::GObjObjects()->Data[14900];

    UAnimTree_execGetGroupIndex_Parms GetGroupIndex_Parms;

    pFnGetGroupIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupIndex, &GetGroupIndex_Parms, NULL);

    pFnGetGroupIndex->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.GetGroupRateScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::GetGroupRateScale() {
    static UFunction* pFnGetGroupRateScale = NULL;

    if (!pFnGetGroupRateScale)
        pFnGetGroupRateScale = (UFunction*)UObject::GObjObjects()->Data[14897];

    UAnimTree_execGetGroupRateScale_Parms GetGroupRateScale_Parms;

    pFnGetGroupRateScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupRateScale, &GetGroupRateScale_Parms, NULL);

    pFnGetGroupRateScale->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.SetGroupRateScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::SetGroupRateScale() {
    static UFunction* pFnSetGroupRateScale = NULL;

    if (!pFnSetGroupRateScale)
        pFnSetGroupRateScale = (UFunction*)UObject::GObjObjects()->Data[14894];

    UAnimTree_execSetGroupRateScale_Parms SetGroupRateScale_Parms;

    pFnSetGroupRateScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetGroupRateScale, &SetGroupRateScale_Parms, NULL);

    pFnSetGroupRateScale->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.GetGroupRelativePosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::GetGroupRelativePosition() {
    static UFunction* pFnGetGroupRelativePosition = NULL;

    if (!pFnGetGroupRelativePosition)
        pFnGetGroupRelativePosition =
            (UFunction*)UObject::GObjObjects()->Data[14891];

    UAnimTree_execGetGroupRelativePosition_Parms GetGroupRelativePosition_Parms;

    pFnGetGroupRelativePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupRelativePosition,
                       &GetGroupRelativePosition_Parms, NULL);

    pFnGetGroupRelativePosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.ForceGroupRelativePosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::ForceGroupRelativePosition() {
    static UFunction* pFnForceGroupRelativePosition = NULL;

    if (!pFnForceGroupRelativePosition)
        pFnForceGroupRelativePosition =
            (UFunction*)UObject::GObjObjects()->Data[14888];

    UAnimTree_execForceGroupRelativePosition_Parms
        ForceGroupRelativePosition_Parms;

    pFnForceGroupRelativePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceGroupRelativePosition,
                       &ForceGroupRelativePosition_Parms, NULL);

    pFnForceGroupRelativePosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.GetGroupNotifyMaster
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::GetGroupNotifyMaster() {
    static UFunction* pFnGetGroupNotifyMaster = NULL;

    if (!pFnGetGroupNotifyMaster)
        pFnGetGroupNotifyMaster =
            (UFunction*)UObject::GObjObjects()->Data[14885];

    UAnimTree_execGetGroupNotifyMaster_Parms GetGroupNotifyMaster_Parms;

    pFnGetGroupNotifyMaster->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupNotifyMaster, &GetGroupNotifyMaster_Parms,
                       NULL);

    pFnGetGroupNotifyMaster->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.GetGroupSynchMaster
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::GetGroupSynchMaster() {
    static UFunction* pFnGetGroupSynchMaster = NULL;

    if (!pFnGetGroupSynchMaster)
        pFnGetGroupSynchMaster =
            (UFunction*)UObject::GObjObjects()->Data[14882];

    UAnimTree_execGetGroupSynchMaster_Parms GetGroupSynchMaster_Parms;

    pFnGetGroupSynchMaster->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupSynchMaster, &GetGroupSynchMaster_Parms,
                       NULL);

    pFnGetGroupSynchMaster->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.SetAnimGroupForNode
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::SetAnimGroupForNode() {
    static UFunction* pFnSetAnimGroupForNode = NULL;

    if (!pFnSetAnimGroupForNode)
        pFnSetAnimGroupForNode =
            (UFunction*)UObject::GObjObjects()->Data[14877];

    UAnimTree_execSetAnimGroupForNode_Parms SetAnimGroupForNode_Parms;

    pFnSetAnimGroupForNode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAnimGroupForNode, &SetAnimGroupForNode_Parms,
                       NULL);

    pFnSetAnimGroupForNode->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.SetUseSavedPose
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::SetUseSavedPose() {
    static UFunction* pFnSetUseSavedPose = NULL;

    if (!pFnSetUseSavedPose)
        pFnSetUseSavedPose = (UFunction*)UObject::GObjObjects()->Data[14875];

    UAnimTree_execSetUseSavedPose_Parms SetUseSavedPose_Parms;

    pFnSetUseSavedPose->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetUseSavedPose, &SetUseSavedPose_Parms, NULL);

    pFnSetUseSavedPose->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.FindMorphNode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::FindMorphNode() {
    static UFunction* pFnFindMorphNode = NULL;

    if (!pFnFindMorphNode)
        pFnFindMorphNode = (UFunction*)UObject::GObjObjects()->Data[14872];

    UAnimTree_execFindMorphNode_Parms FindMorphNode_Parms;

    pFnFindMorphNode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindMorphNode, &FindMorphNode_Parms, NULL);

    pFnFindMorphNode->FunctionFlags |= 0x400;
};

// Function Engine.AnimTree.FindSkelControl
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimTree::FindSkelControl() {
    static UFunction* pFnFindSkelControl = NULL;

    if (!pFnFindSkelControl)
        pFnFindSkelControl = (UFunction*)UObject::GObjObjects()->Data[14869];

    UAnimTree_execFindSkelControl_Parms FindSkelControl_Parms;

    pFnFindSkelControl->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSkelControl, &FindSkelControl_Parms, NULL);

    pFnFindSkelControl->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.SetRootBoneRotationOption
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::SetRootBoneRotationOption() {
    static UFunction* pFnSetRootBoneRotationOption = NULL;

    if (!pFnSetRootBoneRotationOption)
        pFnSetRootBoneRotationOption =
            (UFunction*)UObject::GObjObjects()->Data[14217];

    UAnimNodeSequence_execSetRootBoneRotationOption_Parms
        SetRootBoneRotationOption_Parms;

    pFnSetRootBoneRotationOption->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRootBoneRotationOption,
                       &SetRootBoneRotationOption_Parms, NULL);

    pFnSetRootBoneRotationOption->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.SetRootBoneAxisOption
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::SetRootBoneAxisOption() {
    static UFunction* pFnSetRootBoneAxisOption = NULL;

    if (!pFnSetRootBoneAxisOption)
        pFnSetRootBoneAxisOption =
            (UFunction*)UObject::GObjObjects()->Data[14213];

    UAnimNodeSequence_execSetRootBoneAxisOption_Parms
        SetRootBoneAxisOption_Parms;

    pFnSetRootBoneAxisOption->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRootBoneAxisOption, &SetRootBoneAxisOption_Parms,
                       NULL);

    pFnSetRootBoneAxisOption->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.GetTimeLeft
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::GetTimeLeft() {
    static UFunction* pFnGetTimeLeft = NULL;

    if (!pFnGetTimeLeft)
        pFnGetTimeLeft = (UFunction*)UObject::GObjObjects()->Data[14211];

    UAnimNodeSequence_execGetTimeLeft_Parms GetTimeLeft_Parms;

    pFnGetTimeLeft->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTimeLeft, &GetTimeLeft_Parms, NULL);

    pFnGetTimeLeft->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.GetAnimPlaybackLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::GetAnimPlaybackLength() {
    static UFunction* pFnGetAnimPlaybackLength = NULL;

    if (!pFnGetAnimPlaybackLength)
        pFnGetAnimPlaybackLength =
            (UFunction*)UObject::GObjObjects()->Data[14209];

    UAnimNodeSequence_execGetAnimPlaybackLength_Parms
        GetAnimPlaybackLength_Parms;

    pFnGetAnimPlaybackLength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAnimPlaybackLength, &GetAnimPlaybackLength_Parms,
                       NULL);

    pFnGetAnimPlaybackLength->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.GetGlobalPlayRate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::GetGlobalPlayRate() {
    static UFunction* pFnGetGlobalPlayRate = NULL;

    if (!pFnGetGlobalPlayRate)
        pFnGetGlobalPlayRate = (UFunction*)UObject::GObjObjects()->Data[14207];

    UAnimNodeSequence_execGetGlobalPlayRate_Parms GetGlobalPlayRate_Parms;

    pFnGetGlobalPlayRate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGlobalPlayRate, &GetGlobalPlayRate_Parms, NULL);

    pFnGetGlobalPlayRate->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.GetGroupRelativePosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::GetGroupRelativePosition() {
    static UFunction* pFnGetGroupRelativePosition = NULL;

    if (!pFnGetGroupRelativePosition)
        pFnGetGroupRelativePosition =
            (UFunction*)UObject::GObjObjects()->Data[14205];

    UAnimNodeSequence_execGetGroupRelativePosition_Parms
        GetGroupRelativePosition_Parms;

    pFnGetGroupRelativePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetGroupRelativePosition,
                       &GetGroupRelativePosition_Parms, NULL);

    pFnGetGroupRelativePosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.FindGroupPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::FindGroupPosition() {
    static UFunction* pFnFindGroupPosition = NULL;

    if (!pFnFindGroupPosition)
        pFnFindGroupPosition = (UFunction*)UObject::GObjObjects()->Data[14202];

    UAnimNodeSequence_execFindGroupPosition_Parms FindGroupPosition_Parms;

    pFnFindGroupPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindGroupPosition, &FindGroupPosition_Parms, NULL);

    pFnFindGroupPosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.FindGroupRelativePosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::FindGroupRelativePosition() {
    static UFunction* pFnFindGroupRelativePosition = NULL;

    if (!pFnFindGroupRelativePosition)
        pFnFindGroupRelativePosition =
            (UFunction*)UObject::GObjObjects()->Data[14199];

    UAnimNodeSequence_execFindGroupRelativePosition_Parms
        FindGroupRelativePosition_Parms;

    pFnFindGroupRelativePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindGroupRelativePosition,
                       &FindGroupRelativePosition_Parms, NULL);

    pFnFindGroupRelativePosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.GetNormalizedPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::GetNormalizedPosition() {
    static UFunction* pFnGetNormalizedPosition = NULL;

    if (!pFnGetNormalizedPosition)
        pFnGetNormalizedPosition =
            (UFunction*)UObject::GObjObjects()->Data[14197];

    UAnimNodeSequence_execGetNormalizedPosition_Parms
        GetNormalizedPosition_Parms;

    pFnGetNormalizedPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNormalizedPosition, &GetNormalizedPosition_Parms,
                       NULL);

    pFnGetNormalizedPosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.SetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::SetPosition() {
    static UFunction* pFnSetPosition = NULL;

    if (!pFnSetPosition)
        pFnSetPosition = (UFunction*)UObject::GObjObjects()->Data[14194];

    UAnimNodeSequence_execSetPosition_Parms SetPosition_Parms;

    pFnSetPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPosition, &SetPosition_Parms, NULL);

    pFnSetPosition->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.ReplayAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::ReplayAnim() {
    static UFunction* pFnReplayAnim = NULL;

    if (!pFnReplayAnim)
        pFnReplayAnim = (UFunction*)UObject::GObjObjects()->Data[14193];

    UAnimNodeSequence_execReplayAnim_Parms ReplayAnim_Parms;

    pFnReplayAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReplayAnim, &ReplayAnim_Parms, NULL);

    pFnReplayAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.StopAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::StopAnim() {
    static UFunction* pFnStopAnim = NULL;

    if (!pFnStopAnim)
        pFnStopAnim = (UFunction*)UObject::GObjObjects()->Data[14192];

    UAnimNodeSequence_execStopAnim_Parms StopAnim_Parms;

    pFnStopAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopAnim, &StopAnim_Parms, NULL);

    pFnStopAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.PlayAnim
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::PlayAnim() {
    static UFunction* pFnPlayAnim = NULL;

    if (!pFnPlayAnim)
        pFnPlayAnim = (UFunction*)UObject::GObjObjects()->Data[14188];

    UAnimNodeSequence_execPlayAnim_Parms PlayAnim_Parms;

    pFnPlayAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayAnim, &PlayAnim_Parms, NULL);

    pFnPlayAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequence.SetAnim
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAnimNodeSequence::SetAnim() {
    static UFunction* pFnSetAnim = NULL;

    if (!pFnSetAnim)
        pFnSetAnim = (UFunction*)UObject::GObjObjects()->Data[14186];

    UAnimNodeSequence_execSetAnim_Parms SetAnim_Parms;

    pFnSetAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAnim, &SetAnim_Parms, NULL);

    pFnSetAnim->FunctionFlags |= 0x400;
};

// Function Engine.AnimNodeSequenceBlendByAim.CheckAnimsUpToDate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAnimNodeSequenceBlendByAim::CheckAnimsUpToDate() {
    static UFunction* pFnCheckAnimsUpToDate = NULL;

    if (!pFnCheckAnimsUpToDate)
        pFnCheckAnimsUpToDate = (UFunction*)UObject::GObjObjects()->Data[14329];

    UAnimNodeSequenceBlendByAim_execCheckAnimsUpToDate_Parms
        CheckAnimsUpToDate_Parms;

    pFnCheckAnimsUpToDate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckAnimsUpToDate, &CheckAnimsUpToDate_Parms, NULL);

    pFnCheckAnimsUpToDate->FunctionFlags |= 0x400;
};

// Function Engine.MorphNodeMultiPose.UpdateMorphTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMorphNodeMultiPose::UpdateMorphTarget() {
    static UFunction* pFnUpdateMorphTarget = NULL;

    if (!pFnUpdateMorphTarget)
        pFnUpdateMorphTarget = (UFunction*)UObject::GObjObjects()->Data[26046];

    UMorphNodeMultiPose_execUpdateMorphTarget_Parms UpdateMorphTarget_Parms;

    pFnUpdateMorphTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMorphTarget, &UpdateMorphTarget_Parms, NULL);

    pFnUpdateMorphTarget->FunctionFlags |= 0x400;
};

// Function Engine.MorphNodeMultiPose.RemoveMorphTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMorphNodeMultiPose::RemoveMorphTarget() {
    static UFunction* pFnRemoveMorphTarget = NULL;

    if (!pFnRemoveMorphTarget)
        pFnRemoveMorphTarget = (UFunction*)UObject::GObjObjects()->Data[26044];

    UMorphNodeMultiPose_execRemoveMorphTarget_Parms RemoveMorphTarget_Parms;

    pFnRemoveMorphTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveMorphTarget, &RemoveMorphTarget_Parms, NULL);

    pFnRemoveMorphTarget->FunctionFlags |= 0x400;
};

// Function Engine.MorphNodeMultiPose.AddMorphTarget
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMorphNodeMultiPose::AddMorphTarget() {
    static UFunction* pFnAddMorphTarget = NULL;

    if (!pFnAddMorphTarget)
        pFnAddMorphTarget = (UFunction*)UObject::GObjObjects()->Data[26040];

    UMorphNodeMultiPose_execAddMorphTarget_Parms AddMorphTarget_Parms;

    pFnAddMorphTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddMorphTarget, &AddMorphTarget_Parms, NULL);

    pFnAddMorphTarget->FunctionFlags |= 0x400;
};

// Function Engine.MorphNodePose.SetMorphTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMorphNodePose::SetMorphTarget() {
    static UFunction* pFnSetMorphTarget = NULL;

    if (!pFnSetMorphTarget)
        pFnSetMorphTarget = (UFunction*)UObject::GObjObjects()->Data[26053];

    UMorphNodePose_execSetMorphTarget_Parms SetMorphTarget_Parms;

    pFnSetMorphTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMorphTarget, &SetMorphTarget_Parms, NULL);

    pFnSetMorphTarget->FunctionFlags |= 0x400;
};

// Function Engine.MorphNodeWeight.SetNodeWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMorphNodeWeight::SetNodeWeight() {
    static UFunction* pFnSetNodeWeight = NULL;

    if (!pFnSetNodeWeight)
        pFnSetNodeWeight = (UFunction*)UObject::GObjObjects()->Data[26063];

    UMorphNodeWeight_execSetNodeWeight_Parms SetNodeWeight_Parms;

    pFnSetNodeWeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNodeWeight, &SetNodeWeight_Parms, NULL);

    pFnSetNodeWeight->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlBase.GetControlMetadataWeight
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlBase::GetControlMetadataWeight() {
    static UFunction* pFnGetControlMetadataWeight = NULL;

    if (!pFnGetControlMetadataWeight)
        pFnGetControlMetadataWeight =
            (UFunction*)UObject::GObjObjects()->Data[33613];

    USkelControlBase_execGetControlMetadataWeight_Parms
        GetControlMetadataWeight_Parms;

    pFnGetControlMetadataWeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetControlMetadataWeight,
                       &GetControlMetadataWeight_Parms, NULL);

    pFnGetControlMetadataWeight->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlBase.TickSkelControl
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USkelControlBase::eventTickSkelControl() {
    static UFunction* pFnTickSkelControl = NULL;

    if (!pFnTickSkelControl)
        pFnTickSkelControl = (UFunction*)UObject::GObjObjects()->Data[33610];

    USkelControlBase_eventTickSkelControl_Parms TickSkelControl_Parms;

    this->ProcessEvent(pFnTickSkelControl, &TickSkelControl_Parms, NULL);
};

// Function Engine.SkelControlBase.SetSkelControlStrength
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlBase::SetSkelControlStrength() {
    static UFunction* pFnSetSkelControlStrength = NULL;

    if (!pFnSetSkelControlStrength)
        pFnSetSkelControlStrength =
            (UFunction*)UObject::GObjObjects()->Data[33607];

    USkelControlBase_execSetSkelControlStrength_Parms
        SetSkelControlStrength_Parms;

    pFnSetSkelControlStrength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSkelControlStrength, &SetSkelControlStrength_Parms,
                       NULL);

    pFnSetSkelControlStrength->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlBase.SetSkelControlActive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlBase::SetSkelControlActive() {
    static UFunction* pFnSetSkelControlActive = NULL;

    if (!pFnSetSkelControlActive)
        pFnSetSkelControlActive =
            (UFunction*)UObject::GObjObjects()->Data[33605];

    USkelControlBase_execSetSkelControlActive_Parms SetSkelControlActive_Parms;

    pFnSetSkelControlActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSkelControlActive, &SetSkelControlActive_Parms,
                       NULL);

    pFnSetSkelControlActive->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlLookAt.CanLookAtPoint
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlLookAt::CanLookAtPoint() {
    static UFunction* pFnCanLookAtPoint = NULL;

    if (!pFnCanLookAtPoint)
        pFnCanLookAtPoint = (UFunction*)UObject::GObjObjects()->Data[33717];

    USkelControlLookAt_execCanLookAtPoint_Parms CanLookAtPoint_Parms;

    pFnCanLookAtPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanLookAtPoint, &CanLookAtPoint_Parms, NULL);

    pFnCanLookAtPoint->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlLookAt.SetLookAtAlpha
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlLookAt::SetLookAtAlpha() {
    static UFunction* pFnSetLookAtAlpha = NULL;

    if (!pFnSetLookAtAlpha)
        pFnSetLookAtAlpha = (UFunction*)UObject::GObjObjects()->Data[33714];

    USkelControlLookAt_execSetLookAtAlpha_Parms SetLookAtAlpha_Parms;

    pFnSetLookAtAlpha->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLookAtAlpha, &SetLookAtAlpha_Parms, NULL);

    pFnSetLookAtAlpha->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlLookAt.InterpolateTargetLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlLookAt::InterpolateTargetLocation() {
    static UFunction* pFnInterpolateTargetLocation = NULL;

    if (!pFnInterpolateTargetLocation)
        pFnInterpolateTargetLocation =
            (UFunction*)UObject::GObjObjects()->Data[33712];

    USkelControlLookAt_execInterpolateTargetLocation_Parms
        InterpolateTargetLocation_Parms;

    pFnInterpolateTargetLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInterpolateTargetLocation,
                       &InterpolateTargetLocation_Parms, NULL);

    pFnInterpolateTargetLocation->FunctionFlags |= 0x400;
};

// Function Engine.SkelControlLookAt.SetTargetLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkelControlLookAt::SetTargetLocation() {
    static UFunction* pFnSetTargetLocation = NULL;

    if (!pFnSetTargetLocation)
        pFnSetTargetLocation = (UFunction*)UObject::GObjObjects()->Data[33710];

    USkelControlLookAt_execSetTargetLocation_Parms SetTargetLocation_Parms;

    pFnSetTargetLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTargetLocation, &SetTargetLocation_Parms, NULL);

    pFnSetTargetLocation->FunctionFlags |= 0x400;
};

// Function Engine.AnimSequence.GetNotifyTimeByClass
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void UAnimSequence::GetNotifyTimeByClass() {
    static UFunction* pFnGetNotifyTimeByClass = NULL;

    if (!pFnGetNotifyTimeByClass)
        pFnGetNotifyTimeByClass =
            (UFunction*)UObject::GObjObjects()->Data[13779];

    UAnimSequence_execGetNotifyTimeByClass_Parms GetNotifyTimeByClass_Parms;

    pFnGetNotifyTimeByClass->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNotifyTimeByClass, &GetNotifyTimeByClass_Parms,
                       NULL);

    pFnGetNotifyTimeByClass->FunctionFlags |= 0x400;
};

// Function Engine.MorphTargetSet.FindMorphTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UMorphTargetSet::FindMorphTarget() {
    static UFunction* pFnFindMorphTarget = NULL;

    if (!pFnFindMorphTarget)
        pFnFindMorphTarget = (UFunction*)UObject::GObjObjects()->Data[26101];

    UMorphTargetSet_execFindMorphTarget_Parms FindMorphTarget_Parms;

    pFnFindMorphTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindMorphTarget, &FindMorphTarget_Parms, NULL);

    pFnFindMorphTarget->FunctionFlags |= 0x400;
};

// Function Engine.DecalManager.Reset
// [0x00020002]
// Parameters infos:

void ADecalManager::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[17713];

    ADecalManager_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.DecalManager.SpawnDecal
// [0x00824002]
// Parameters infos:

void ADecalManager::SpawnDecal() {
    static UFunction* pFnSpawnDecal = NULL;

    if (!pFnSpawnDecal)
        pFnSpawnDecal = (UFunction*)UObject::GObjObjects()->Data[17690];

    ADecalManager_execSpawnDecal_Parms SpawnDecal_Parms;

    this->ProcessEvent(pFnSpawnDecal, &SpawnDecal_Parms, NULL);
};

// Function Engine.DecalManager.GetPooledComponent
// [0x00080002]
// Parameters infos:

void ADecalManager::GetPooledComponent() {
    static UFunction* pFnGetPooledComponent = NULL;

    if (!pFnGetPooledComponent)
        pFnGetPooledComponent = (UFunction*)UObject::GObjObjects()->Data[17686];

    ADecalManager_execGetPooledComponent_Parms GetPooledComponent_Parms;

    this->ProcessEvent(pFnGetPooledComponent, &GetPooledComponent_Parms, NULL);
};

// Function Engine.DecalManager.SetDecalParameters
// [0x00022003] ( FUNC_Final )
// Parameters infos:

void ADecalManager::SetDecalParameters() {
    static UFunction* pFnSetDecalParameters = NULL;

    if (!pFnSetDecalParameters)
        pFnSetDecalParameters = (UFunction*)UObject::GObjObjects()->Data[17666];

    ADecalManager_execSetDecalParameters_Parms SetDecalParameters_Parms;

    this->ProcessEvent(pFnSetDecalParameters, &SetDecalParameters_Parms, NULL);
};

// Function Engine.DecalManager.CanSpawnDecals
// [0x00020002]
// Parameters infos:

void ADecalManager::CanSpawnDecals() {
    static UFunction* pFnCanSpawnDecals = NULL;

    if (!pFnCanSpawnDecals)
        pFnCanSpawnDecals = (UFunction*)UObject::GObjObjects()->Data[17664];

    ADecalManager_execCanSpawnDecals_Parms CanSpawnDecals_Parms;

    this->ProcessEvent(pFnCanSpawnDecals, &CanSpawnDecals_Parms, NULL);
};

// Function Engine.DecalManager.DecalFinished
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ADecalManager::eventDecalFinished() {
    static UFunction* pFnDecalFinished = NULL;

    if (!pFnDecalFinished)
        pFnDecalFinished = (UFunction*)UObject::GObjObjects()->Data[17662];

    ADecalManager_eventDecalFinished_Parms DecalFinished_Parms;

    this->ProcessEvent(pFnDecalFinished, &DecalFinished_Parms, NULL);
};

// Function Engine.DecalManager.AreDynamicDecalsEnabled
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ADecalManager::AreDynamicDecalsEnabled() {
    static UFunction* pFnAreDynamicDecalsEnabled = NULL;

    if (!pFnAreDynamicDecalsEnabled)
        pFnAreDynamicDecalsEnabled =
            (UFunction*)UObject::GObjObjects()->Data[17660];

    ADecalManager_execAreDynamicDecalsEnabled_Parms
        AreDynamicDecalsEnabled_Parms;

    pFnAreDynamicDecalsEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAreDynamicDecalsEnabled,
                       &AreDynamicDecalsEnabled_Parms, NULL);

    pFnAreDynamicDecalsEnabled->FunctionFlags |= 0x400;
};

// Function Engine.DecalComponent.IsWaitingForResetToDefaultsToComplete
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDecalComponent::IsWaitingForResetToDefaultsToComplete() {
    static UFunction* pFnIsWaitingForResetToDefaultsToComplete = NULL;

    if (!pFnIsWaitingForResetToDefaultsToComplete)
        pFnIsWaitingForResetToDefaultsToComplete =
            (UFunction*)UObject::GObjObjects()->Data[17640];

    UDecalComponent_execIsWaitingForResetToDefaultsToComplete_Parms
        IsWaitingForResetToDefaultsToComplete_Parms;

    pFnIsWaitingForResetToDefaultsToComplete->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsWaitingForResetToDefaultsToComplete,
                       &IsWaitingForResetToDefaultsToComplete_Parms, NULL);

    pFnIsWaitingForResetToDefaultsToComplete->FunctionFlags |= 0x400;
};

// Function Engine.DecalComponent.GetDecalMaterial
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDecalComponent::GetDecalMaterial() {
    static UFunction* pFnGetDecalMaterial = NULL;

    if (!pFnGetDecalMaterial)
        pFnGetDecalMaterial = (UFunction*)UObject::GObjObjects()->Data[17638];

    UDecalComponent_execGetDecalMaterial_Parms GetDecalMaterial_Parms;

    pFnGetDecalMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDecalMaterial, &GetDecalMaterial_Parms, NULL);

    pFnGetDecalMaterial->FunctionFlags |= 0x400;
};

// Function Engine.DecalComponent.SetDecalMaterial
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDecalComponent::SetDecalMaterial() {
    static UFunction* pFnSetDecalMaterial = NULL;

    if (!pFnSetDecalMaterial)
        pFnSetDecalMaterial = (UFunction*)UObject::GObjObjects()->Data[17636];

    UDecalComponent_execSetDecalMaterial_Parms SetDecalMaterial_Parms;

    pFnSetDecalMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDecalMaterial, &SetDecalMaterial_Parms, NULL);

    pFnSetDecalMaterial->FunctionFlags |= 0x400;
};

// Function Engine.DecalComponent.ResetToDefaults
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDecalComponent::ResetToDefaults() {
    static UFunction* pFnResetToDefaults = NULL;

    if (!pFnResetToDefaults)
        pFnResetToDefaults = (UFunction*)UObject::GObjObjects()->Data[17635];

    UDecalComponent_execResetToDefaults_Parms ResetToDefaults_Parms;

    pFnResetToDefaults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetToDefaults, &ResetToDefaults_Parms, NULL);

    pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function Engine.FogVolumeDensityInfo.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void AFogVolumeDensityInfo::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[20001];

    AFogVolumeDensityInfo_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.FogVolumeDensityInfo.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void AFogVolumeDensityInfo::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[19999];

    AFogVolumeDensityInfo_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.FogVolumeDensityInfo.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void AFogVolumeDensityInfo::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[19997];

    AFogVolumeDensityInfo_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.FogVolumeDensityInfo.OnToggle
// [0x00020102]
// Parameters infos:

void AFogVolumeDensityInfo::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[19995];

    AFogVolumeDensityInfo_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.FogVolumeDensityInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFogVolumeDensityInfo::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[19993];

    AFogVolumeDensityInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.FogVolumeDensityInfo.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AFogVolumeDensityInfo::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[19992];

    AFogVolumeDensityInfo_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.ExponentialHeightFogComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UExponentialHeightFogComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[19483];

    UExponentialHeightFogComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.FogVolumeDensityComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFogVolumeDensityComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[19976];

    UFogVolumeDensityComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.ApexDestructibleActor.OnSetMaterial
// [0x00020002]
// Parameters infos:

void AApexDestructibleActor::OnSetMaterial() {
    static UFunction* pFnOnSetMaterial = NULL;

    if (!pFnOnSetMaterial)
        pFnOnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[15043];

    AApexDestructibleActor_execOnSetMaterial_Parms OnSetMaterial_Parms;

    this->ProcessEvent(pFnOnSetMaterial, &OnSetMaterial_Parms, NULL);
};

// Function Engine.ApexDestructibleActor.TakeRadiusDamage
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void AApexDestructibleActor::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[15033];

    AApexDestructibleActor_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    pFnTakeRadiusDamage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);

    pFnTakeRadiusDamage->FunctionFlags |= 0x400;
};

// Function Engine.ApexDestructibleActor.TakeDamage
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void AApexDestructibleActor::TakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[15025];

    AApexDestructibleActor_execTakeDamage_Parms TakeDamage_Parms;

    pFnTakeDamage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);

    pFnTakeDamage->FunctionFlags |= 0x400;
};

// Function Engine.ApexDestructibleActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AApexDestructibleActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[15024];

    AApexDestructibleActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.ApexDestructibleActor.CacheFractureEffects
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AApexDestructibleActor::CacheFractureEffects() {
    static UFunction* pFnCacheFractureEffects = NULL;

    if (!pFnCacheFractureEffects)
        pFnCacheFractureEffects =
            (UFunction*)UObject::GObjObjects()->Data[15023];

    AApexDestructibleActor_execCacheFractureEffects_Parms
        CacheFractureEffects_Parms;

    pFnCacheFractureEffects->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCacheFractureEffects, &CacheFractureEffects_Parms,
                       NULL);

    pFnCacheFractureEffects->FunctionFlags |= 0x400;
};

// Function Engine.ApexDestructibleActor.SpawnFractureEmitter
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AApexDestructibleActor::eventSpawnFractureEmitter() {
    static UFunction* pFnSpawnFractureEmitter = NULL;

    if (!pFnSpawnFractureEmitter)
        pFnSpawnFractureEmitter =
            (UFunction*)UObject::GObjObjects()->Data[15017];

    AApexDestructibleActor_eventSpawnFractureEmitter_Parms
        SpawnFractureEmitter_Parms;

    this->ProcessEvent(pFnSpawnFractureEmitter, &SpawnFractureEmitter_Parms,
                       NULL);
};

// Function Engine.FracturedStaticMeshActor.Reset
// [0x00020102]
// Parameters infos:

void AFracturedStaticMeshActor::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[20922];

    AFracturedStaticMeshActor_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.NotifyHitByExplosion
// [0x00020102]
// Parameters infos:

void AFracturedStaticMeshActor::NotifyHitByExplosion() {
    static UFunction* pFnNotifyHitByExplosion = NULL;

    if (!pFnNotifyHitByExplosion)
        pFnNotifyHitByExplosion =
            (UFunction*)UObject::GObjObjects()->Data[20916];

    AFracturedStaticMeshActor_execNotifyHitByExplosion_Parms
        NotifyHitByExplosion_Parms;

    this->ProcessEvent(pFnNotifyHitByExplosion, &NotifyHitByExplosion_Parms,
                       NULL);
};

// Function Engine.FracturedStaticMeshActor.SetLoseChunkReplacementMaterial
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshActor::eventSetLoseChunkReplacementMaterial() {
    static UFunction* pFnSetLoseChunkReplacementMaterial = NULL;

    if (!pFnSetLoseChunkReplacementMaterial)
        pFnSetLoseChunkReplacementMaterial =
            (UFunction*)UObject::GObjObjects()->Data[20913];

    AFracturedStaticMeshActor_eventSetLoseChunkReplacementMaterial_Parms
        SetLoseChunkReplacementMaterial_Parms;

    this->ProcessEvent(pFnSetLoseChunkReplacementMaterial,
                       &SetLoseChunkReplacementMaterial_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.HideFragmentsToMaximizeMemoryUsage
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshActor::eventHideFragmentsToMaximizeMemoryUsage() {
    static UFunction* pFnHideFragmentsToMaximizeMemoryUsage = NULL;

    if (!pFnHideFragmentsToMaximizeMemoryUsage)
        pFnHideFragmentsToMaximizeMemoryUsage =
            (UFunction*)UObject::GObjObjects()->Data[20908];

    AFracturedStaticMeshActor_eventHideFragmentsToMaximizeMemoryUsage_Parms
        HideFragmentsToMaximizeMemoryUsage_Parms;

    this->ProcessEvent(pFnHideFragmentsToMaximizeMemoryUsage,
                       &HideFragmentsToMaximizeMemoryUsage_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.HideOneFragment
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshActor::eventHideOneFragment() {
    static UFunction* pFnHideOneFragment = NULL;

    if (!pFnHideOneFragment)
        pFnHideOneFragment = (UFunction*)UObject::GObjObjects()->Data[20904];

    AFracturedStaticMeshActor_eventHideOneFragment_Parms HideOneFragment_Parms;

    this->ProcessEvent(pFnHideOneFragment, &HideOneFragment_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.ResetVisibility
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::eventResetVisibility() {
    static UFunction* pFnResetVisibility = NULL;

    if (!pFnResetVisibility)
        pFnResetVisibility = (UFunction*)UObject::GObjObjects()->Data[20903];

    AFracturedStaticMeshActor_eventResetVisibility_Parms ResetVisibility_Parms;

    pFnResetVisibility->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetVisibility, &ResetVisibility_Parms, NULL);

    pFnResetVisibility->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.BreakOffPartsInRadius
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::eventBreakOffPartsInRadius() {
    static UFunction* pFnBreakOffPartsInRadius = NULL;

    if (!pFnBreakOffPartsInRadius)
        pFnBreakOffPartsInRadius =
            (UFunction*)UObject::GObjObjects()->Data[20898];

    AFracturedStaticMeshActor_eventBreakOffPartsInRadius_Parms
        BreakOffPartsInRadius_Parms;

    pFnBreakOffPartsInRadius->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBreakOffPartsInRadius, &BreakOffPartsInRadius_Parms,
                       NULL);

    pFnBreakOffPartsInRadius->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.Explode
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshActor::eventExplode() {
    static UFunction* pFnExplode = NULL;

    if (!pFnExplode)
        pFnExplode = (UFunction*)UObject::GObjObjects()->Data[20890];

    AFracturedStaticMeshActor_eventExplode_Parms Explode_Parms;

    this->ProcessEvent(pFnExplode, &Explode_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshActor::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[20862];

    AFracturedStaticMeshActor_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.RemoveDecals
// [0x00080501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::RemoveDecals() {
    static UFunction* pFnRemoveDecals = NULL;

    if (!pFnRemoveDecals)
        pFnRemoveDecals = (UFunction*)UObject::GObjObjects()->Data[20860];

    AFracturedStaticMeshActor_execRemoveDecals_Parms RemoveDecals_Parms;

    pFnRemoveDecals->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveDecals, &RemoveDecals_Parms, NULL);

    pFnRemoveDecals->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.FractureEffectIsRelevant
// [0x00C20102]
// Parameters infos:

void AFracturedStaticMeshActor::FractureEffectIsRelevant() {
    static UFunction* pFnFractureEffectIsRelevant = NULL;

    if (!pFnFractureEffectIsRelevant)
        pFnFractureEffectIsRelevant =
            (UFunction*)UObject::GObjObjects()->Data[17287];

    AFracturedStaticMeshActor_execFractureEffectIsRelevant_Parms
        FractureEffectIsRelevant_Parms;

    this->ProcessEvent(pFnFractureEffectIsRelevant,
                       &FractureEffectIsRelevant_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.IsFracturedByDamageType
// [0x00020102]
// Parameters infos:

void AFracturedStaticMeshActor::IsFracturedByDamageType() {
    static UFunction* pFnIsFracturedByDamageType = NULL;

    if (!pFnIsFracturedByDamageType)
        pFnIsFracturedByDamageType =
            (UFunction*)UObject::GObjObjects()->Data[17285];

    AFracturedStaticMeshActor_execIsFracturedByDamageType_Parms
        IsFracturedByDamageType_Parms;

    this->ProcessEvent(pFnIsFracturedByDamageType,
                       &IsFracturedByDamageType_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.SpawnDeferredParts
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::eventSpawnDeferredParts() {
    static UFunction* pFnSpawnDeferredParts = NULL;

    if (!pFnSpawnDeferredParts)
        pFnSpawnDeferredParts = (UFunction*)UObject::GObjObjects()->Data[20846];

    AFracturedStaticMeshActor_eventSpawnDeferredParts_Parms
        SpawnDeferredParts_Parms;

    pFnSpawnDeferredParts->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnDeferredParts, &SpawnDeferredParts_Parms, NULL);

    pFnSpawnDeferredParts->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.BreakOffIsolatedIslands
// [0x00420D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::eventBreakOffIsolatedIslands() {
    static UFunction* pFnBreakOffIsolatedIslands = NULL;

    if (!pFnBreakOffIsolatedIslands)
        pFnBreakOffIsolatedIslands =
            (UFunction*)UObject::GObjObjects()->Data[20837];

    AFracturedStaticMeshActor_eventBreakOffIsolatedIslands_Parms
        BreakOffIsolatedIslands_Parms;

    pFnBreakOffIsolatedIslands->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBreakOffIsolatedIslands,
                       &BreakOffIsolatedIslands_Parms, NULL);

    pFnBreakOffIsolatedIslands->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void AFracturedStaticMeshActor::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[20835];

    AFracturedStaticMeshActor_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.FracturedStaticMeshActor.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void AFracturedStaticMeshActor::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[20833];

    AFracturedStaticMeshActor_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.FracturedStaticMeshActor.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void AFracturedStaticMeshActor::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[20831];

    AFracturedStaticMeshActor_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.ResetHealth
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::ResetHealth() {
    static UFunction* pFnResetHealth = NULL;

    if (!pFnResetHealth)
        pFnResetHealth = (UFunction*)UObject::GObjObjects()->Data[20830];

    AFracturedStaticMeshActor_execResetHealth_Parms ResetHealth_Parms;

    pFnResetHealth->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetHealth, &ResetHealth_Parms, NULL);

    pFnResetHealth->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[20828];

    AFracturedStaticMeshActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.FracturedStaticMeshActor.SpawnPartMulti
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::SpawnPartMulti() {
    static UFunction* pFnSpawnPartMulti = NULL;

    if (!pFnSpawnPartMulti)
        pFnSpawnPartMulti = (UFunction*)UObject::GObjObjects()->Data[20820];

    AFracturedStaticMeshActor_execSpawnPartMulti_Parms SpawnPartMulti_Parms;

    pFnSpawnPartMulti->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnPartMulti, &SpawnPartMulti_Parms, NULL);

    pFnSpawnPartMulti->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshActor.SpawnPart
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshActor::SpawnPart() {
    static UFunction* pFnSpawnPart = NULL;

    if (!pFnSpawnPart)
        pFnSpawnPart = (UFunction*)UObject::GObjObjects()->Data[20813];

    AFracturedStaticMeshActor_execSpawnPart_Parms SpawnPart_Parms;

    pFnSpawnPart->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSpawnPart, &SpawnPart_Parms, NULL);

    pFnSpawnPart->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshPart.Reset
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshPart::eventReset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[20974];

    AFracturedStaticMeshPart_eventReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.FracturedStaticMeshPart.BreakOffPartsInRadius
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshPart::eventBreakOffPartsInRadius() {
    static UFunction* pFnBreakOffPartsInRadius = NULL;

    if (!pFnBreakOffPartsInRadius)
        pFnBreakOffPartsInRadius =
            (UFunction*)UObject::GObjObjects()->Data[20969];

    AFracturedStaticMeshPart_eventBreakOffPartsInRadius_Parms
        BreakOffPartsInRadius_Parms;

    this->ProcessEvent(pFnBreakOffPartsInRadius, &BreakOffPartsInRadius_Parms,
                       NULL);
};

// Function Engine.FracturedStaticMeshPart.Explode
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshPart::eventExplode() {
    static UFunction* pFnExplode = NULL;

    if (!pFnExplode)
        pFnExplode = (UFunction*)UObject::GObjObjects()->Data[20968];

    AFracturedStaticMeshPart_eventExplode_Parms Explode_Parms;

    this->ProcessEvent(pFnExplode, &Explode_Parms, NULL);
};

// Function Engine.FracturedStaticMeshPart.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshPart::eventFellOutOfWorld() {
    static UFunction* pFnFellOutOfWorld = NULL;

    if (!pFnFellOutOfWorld)
        pFnFellOutOfWorld = (UFunction*)UObject::GObjObjects()->Data[20966];

    AFracturedStaticMeshPart_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;

    this->ProcessEvent(pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL);
};

// Function Engine.FracturedStaticMeshPart.TryToCleanUp
// [0x00020102]
// Parameters infos:

void AFracturedStaticMeshPart::TryToCleanUp() {
    static UFunction* pFnTryToCleanUp = NULL;

    if (!pFnTryToCleanUp)
        pFnTryToCleanUp = (UFunction*)UObject::GObjObjects()->Data[20965];

    AFracturedStaticMeshPart_execTryToCleanUp_Parms TryToCleanUp_Parms;

    this->ProcessEvent(pFnTryToCleanUp, &TryToCleanUp_Parms, NULL);
};

// Function Engine.FracturedStaticMeshPart.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:

void AFracturedStaticMeshPart::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[20957];

    AFracturedStaticMeshPart_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.FracturedStaticMeshPart.RecyclePart
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshPart::RecyclePart() {
    static UFunction* pFnRecyclePart = NULL;

    if (!pFnRecyclePart)
        pFnRecyclePart = (UFunction*)UObject::GObjObjects()->Data[20955];

    AFracturedStaticMeshPart_execRecyclePart_Parms RecyclePart_Parms;

    pFnRecyclePart->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRecyclePart, &RecyclePart_Parms, NULL);

    pFnRecyclePart->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshPart.Initialize
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AFracturedStaticMeshPart::Initialize() {
    static UFunction* pFnInitialize = NULL;

    if (!pFnInitialize)
        pFnInitialize = (UFunction*)UObject::GObjObjects()->Data[20954];

    AFracturedStaticMeshPart_execInitialize_Parms Initialize_Parms;

    pFnInitialize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitialize, &Initialize_Parms, NULL);

    pFnInitialize->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.Tick
// [0x00020102]
// Parameters infos:

void AFractureManager::Tick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[21021];

    AFractureManager_execTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.FractureManager.ReturnPartActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFractureManager::eventReturnPartActor() {
    static UFunction* pFnReturnPartActor = NULL;

    if (!pFnReturnPartActor)
        pFnReturnPartActor = (UFunction*)UObject::GObjObjects()->Data[21019];

    AFractureManager_eventReturnPartActor_Parms ReturnPartActor_Parms;

    this->ProcessEvent(pFnReturnPartActor, &ReturnPartActor_Parms, NULL);
};

// Function Engine.FractureManager.SpawnPartActor
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFractureManager::eventSpawnPartActor() {
    static UFunction* pFnSpawnPartActor = NULL;

    if (!pFnSpawnPartActor)
        pFnSpawnPartActor = (UFunction*)UObject::GObjObjects()->Data[21013];

    AFractureManager_eventSpawnPartActor_Parms SpawnPartActor_Parms;

    this->ProcessEvent(pFnSpawnPartActor, &SpawnPartActor_Parms, NULL);
};

// Function Engine.FractureManager.GetFSMPart
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AFractureManager::GetFSMPart() {
    static UFunction* pFnGetFSMPart = NULL;

    if (!pFnGetFSMPart)
        pFnGetFSMPart = (UFunction*)UObject::GObjObjects()->Data[21008];

    AFractureManager_execGetFSMPart_Parms GetFSMPart_Parms;

    pFnGetFSMPart->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFSMPart, &GetFSMPart_Parms, NULL);

    pFnGetFSMPart->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.ResetPoolVisibility
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AFractureManager::ResetPoolVisibility() {
    static UFunction* pFnResetPoolVisibility = NULL;

    if (!pFnResetPoolVisibility)
        pFnResetPoolVisibility =
            (UFunction*)UObject::GObjObjects()->Data[21007];

    AFractureManager_execResetPoolVisibility_Parms ResetPoolVisibility_Parms;

    pFnResetPoolVisibility->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetPoolVisibility, &ResetPoolVisibility_Parms,
                       NULL);

    pFnResetPoolVisibility->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.CreateFSMParts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AFractureManager::CreateFSMParts() {
    static UFunction* pFnCreateFSMParts = NULL;

    if (!pFnCreateFSMParts)
        pFnCreateFSMParts = (UFunction*)UObject::GObjObjects()->Data[21006];

    AFractureManager_execCreateFSMParts_Parms CreateFSMParts_Parms;

    pFnCreateFSMParts->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreateFSMParts, &CreateFSMParts_Parms, NULL);

    pFnCreateFSMParts->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.CleanUpFSMParts
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void AFractureManager::CleanUpFSMParts() {
    static UFunction* pFnCleanUpFSMParts = NULL;

    if (!pFnCleanUpFSMParts)
        pFnCleanUpFSMParts = (UFunction*)UObject::GObjObjects()->Data[21004];

    AFractureManager_execCleanUpFSMParts_Parms CleanUpFSMParts_Parms;

    this->ProcessEvent(pFnCleanUpFSMParts, &CleanUpFSMParts_Parms, NULL);
};

// Function Engine.FractureManager.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFractureManager::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[21003];

    AFractureManager_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.FractureManager.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFractureManager::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[21002];

    AFractureManager_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.FractureManager.GetFSMFractureCullDistanceScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AFractureManager::GetFSMFractureCullDistanceScale() {
    static UFunction* pFnGetFSMFractureCullDistanceScale = NULL;

    if (!pFnGetFSMFractureCullDistanceScale)
        pFnGetFSMFractureCullDistanceScale =
            (UFunction*)UObject::GObjObjects()->Data[20925];

    AFractureManager_execGetFSMFractureCullDistanceScale_Parms
        GetFSMFractureCullDistanceScale_Parms;

    pFnGetFSMFractureCullDistanceScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFSMFractureCullDistanceScale,
                       &GetFSMFractureCullDistanceScale_Parms, NULL);

    pFnGetFSMFractureCullDistanceScale->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.GetFSMRadialSpawnChanceScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AFractureManager::GetFSMRadialSpawnChanceScale() {
    static UFunction* pFnGetFSMRadialSpawnChanceScale = NULL;

    if (!pFnGetFSMRadialSpawnChanceScale)
        pFnGetFSMRadialSpawnChanceScale =
            (UFunction*)UObject::GObjObjects()->Data[21000];

    AFractureManager_execGetFSMRadialSpawnChanceScale_Parms
        GetFSMRadialSpawnChanceScale_Parms;

    pFnGetFSMRadialSpawnChanceScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFSMRadialSpawnChanceScale,
                       &GetFSMRadialSpawnChanceScale_Parms, NULL);

    pFnGetFSMRadialSpawnChanceScale->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.GetFSMDirectSpawnChanceScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AFractureManager::GetFSMDirectSpawnChanceScale() {
    static UFunction* pFnGetFSMDirectSpawnChanceScale = NULL;

    if (!pFnGetFSMDirectSpawnChanceScale)
        pFnGetFSMDirectSpawnChanceScale =
            (UFunction*)UObject::GObjObjects()->Data[20923];

    AFractureManager_execGetFSMDirectSpawnChanceScale_Parms
        GetFSMDirectSpawnChanceScale_Parms;

    pFnGetFSMDirectSpawnChanceScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFSMDirectSpawnChanceScale,
                       &GetFSMDirectSpawnChanceScale_Parms, NULL);

    pFnGetFSMDirectSpawnChanceScale->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.GetNumFSMPartsScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AFractureManager::GetNumFSMPartsScale() {
    static UFunction* pFnGetNumFSMPartsScale = NULL;

    if (!pFnGetNumFSMPartsScale)
        pFnGetNumFSMPartsScale =
            (UFunction*)UObject::GObjObjects()->Data[20998];

    AFractureManager_execGetNumFSMPartsScale_Parms GetNumFSMPartsScale_Parms;

    pFnGetNumFSMPartsScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumFSMPartsScale, &GetNumFSMPartsScale_Parms,
                       NULL);

    pFnGetNumFSMPartsScale->FunctionFlags |= 0x400;
};

// Function Engine.FractureManager.SpawnChunkDestroyEffect
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void AFractureManager::eventSpawnChunkDestroyEffect() {
    static UFunction* pFnSpawnChunkDestroyEffect = NULL;

    if (!pFnSpawnChunkDestroyEffect)
        pFnSpawnChunkDestroyEffect =
            (UFunction*)UObject::GObjObjects()->Data[20990];

    AFractureManager_eventSpawnChunkDestroyEffect_Parms
        SpawnChunkDestroyEffect_Parms;

    this->ProcessEvent(pFnSpawnChunkDestroyEffect,
                       &SpawnChunkDestroyEffect_Parms, NULL);
};

// Function Engine.ImageReflection.OnToggle
// [0x00020102]
// Parameters infos:

void AImageReflection::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[23199];

    AImageReflection_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.ImageReflection.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AImageReflection::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[23197];

    AImageReflection_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.ImageReflection.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AImageReflection::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[23196];

    AImageReflection_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.ImageReflectionShadowPlane.OnToggle
// [0x00020102]
// Parameters infos:

void AImageReflectionShadowPlane::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[23215];

    AImageReflectionShadowPlane_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.ImageReflectionShadowPlane.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AImageReflectionShadowPlane::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[23213];

    AImageReflectionShadowPlane_eventReplicatedEvent_Parms
        ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.ImageReflectionShadowPlane.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AImageReflectionShadowPlane::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[23212];

    AImageReflectionShadowPlane_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.ImageReflectionShadowPlaneComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UImageReflectionShadowPlaneComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[23208];

    UImageReflectionShadowPlaneComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.FracturedBaseComponent.GetNumVisibleFragments
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UFracturedBaseComponent::GetNumVisibleFragments() {
    static UFunction* pFnGetNumVisibleFragments = NULL;

    if (!pFnGetNumVisibleFragments)
        pFnGetNumVisibleFragments =
            (UFunction*)UObject::GObjObjects()->Data[20220];

    UFracturedBaseComponent_execGetNumVisibleFragments_Parms
        GetNumVisibleFragments_Parms;

    pFnGetNumVisibleFragments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumVisibleFragments, &GetNumVisibleFragments_Parms,
                       NULL);

    pFnGetNumVisibleFragments->FunctionFlags |= 0x400;
};

// Function Engine.FracturedBaseComponent.GetNumFragments
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UFracturedBaseComponent::GetNumFragments() {
    static UFunction* pFnGetNumFragments = NULL;

    if (!pFnGetNumFragments)
        pFnGetNumFragments = (UFunction*)UObject::GObjObjects()->Data[20218];

    UFracturedBaseComponent_execGetNumFragments_Parms GetNumFragments_Parms;

    pFnGetNumFragments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumFragments, &GetNumFragments_Parms, NULL);

    pFnGetNumFragments->FunctionFlags |= 0x400;
};

// Function Engine.FracturedBaseComponent.IsFragmentVisible
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void UFracturedBaseComponent::IsFragmentVisible() {
    static UFunction* pFnIsFragmentVisible = NULL;

    if (!pFnIsFragmentVisible)
        pFnIsFragmentVisible = (UFunction*)UObject::GObjObjects()->Data[20215];

    UFracturedBaseComponent_execIsFragmentVisible_Parms IsFragmentVisible_Parms;

    pFnIsFragmentVisible->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsFragmentVisible, &IsFragmentVisible_Parms, NULL);

    pFnIsFragmentVisible->FunctionFlags |= 0x400;
};

// Function Engine.FracturedBaseComponent.GetVisibleFragments
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void UFracturedBaseComponent::GetVisibleFragments() {
    static UFunction* pFnGetVisibleFragments = NULL;

    if (!pFnGetVisibleFragments)
        pFnGetVisibleFragments =
            (UFunction*)UObject::GObjObjects()->Data[20212];

    UFracturedBaseComponent_execGetVisibleFragments_Parms
        GetVisibleFragments_Parms;

    pFnGetVisibleFragments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVisibleFragments, &GetVisibleFragments_Parms,
                       NULL);

    pFnGetVisibleFragments->FunctionFlags |= 0x400;
};

// Function Engine.FracturedBaseComponent.SetStaticMesh
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void UFracturedBaseComponent::SetStaticMesh() {
    static UFunction* pFnSetStaticMesh = NULL;

    if (!pFnSetStaticMesh)
        pFnSetStaticMesh = (UFunction*)UObject::GObjObjects()->Data[20208];

    UFracturedBaseComponent_execSetStaticMesh_Parms SetStaticMesh_Parms;

    pFnSetStaticMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStaticMesh, &SetStaticMesh_Parms, NULL);

    pFnSetStaticMesh->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.GetFracturedMeshPhysMaterial
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::GetFracturedMeshPhysMaterial() {
    static UFunction* pFnGetFracturedMeshPhysMaterial = NULL;

    if (!pFnGetFracturedMeshPhysMaterial)
        pFnGetFracturedMeshPhysMaterial =
            (UFunction*)UObject::GObjObjects()->Data[20277];

    UFracturedStaticMeshComponent_execGetFracturedMeshPhysMaterial_Parms
        GetFracturedMeshPhysMaterial_Parms;

    pFnGetFracturedMeshPhysMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFracturedMeshPhysMaterial,
                       &GetFracturedMeshPhysMaterial_Parms, NULL);

    pFnGetFracturedMeshPhysMaterial->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.RecreatePhysState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::RecreatePhysState() {
    static UFunction* pFnRecreatePhysState = NULL;

    if (!pFnRecreatePhysState)
        pFnRecreatePhysState = (UFunction*)UObject::GObjObjects()->Data[20276];

    UFracturedStaticMeshComponent_execRecreatePhysState_Parms
        RecreatePhysState_Parms;

    pFnRecreatePhysState->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRecreatePhysState, &RecreatePhysState_Parms, NULL);

    pFnRecreatePhysState->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.GetBoundaryHiddenFragments
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::GetBoundaryHiddenFragments() {
    static UFunction* pFnGetBoundaryHiddenFragments = NULL;

    if (!pFnGetBoundaryHiddenFragments)
        pFnGetBoundaryHiddenFragments =
            (UFunction*)UObject::GObjObjects()->Data[20271];

    UFracturedStaticMeshComponent_execGetBoundaryHiddenFragments_Parms
        GetBoundaryHiddenFragments_Parms;

    pFnGetBoundaryHiddenFragments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoundaryHiddenFragments,
                       &GetBoundaryHiddenFragments_Parms, NULL);

    pFnGetBoundaryHiddenFragments->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.GetFragmentGroups
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::GetFragmentGroups() {
    static UFunction* pFnGetFragmentGroups = NULL;

    if (!pFnGetFragmentGroups)
        pFnGetFragmentGroups = (UFunction*)UObject::GObjObjects()->Data[20265];

    UFracturedStaticMeshComponent_execGetFragmentGroups_Parms
        GetFragmentGroups_Parms;

    pFnGetFragmentGroups->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFragmentGroups, &GetFragmentGroups_Parms, NULL);

    pFnGetFragmentGroups->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.GetCoreFragmentIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::GetCoreFragmentIndex() {
    static UFunction* pFnGetCoreFragmentIndex = NULL;

    if (!pFnGetCoreFragmentIndex)
        pFnGetCoreFragmentIndex =
            (UFunction*)UObject::GObjObjects()->Data[20263];

    UFracturedStaticMeshComponent_execGetCoreFragmentIndex_Parms
        GetCoreFragmentIndex_Parms;

    pFnGetCoreFragmentIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCoreFragmentIndex, &GetCoreFragmentIndex_Parms,
                       NULL);

    pFnGetCoreFragmentIndex->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.GetFragmentAverageExteriorNormal
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::GetFragmentAverageExteriorNormal() {
    static UFunction* pFnGetFragmentAverageExteriorNormal = NULL;

    if (!pFnGetFragmentAverageExteriorNormal)
        pFnGetFragmentAverageExteriorNormal =
            (UFunction*)UObject::GObjObjects()->Data[20260];

    UFracturedStaticMeshComponent_execGetFragmentAverageExteriorNormal_Parms
        GetFragmentAverageExteriorNormal_Parms;

    pFnGetFragmentAverageExteriorNormal->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFragmentAverageExteriorNormal,
                       &GetFragmentAverageExteriorNormal_Parms, NULL);

    pFnGetFragmentAverageExteriorNormal->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.GetFragmentBox
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::GetFragmentBox() {
    static UFunction* pFnGetFragmentBox = NULL;

    if (!pFnGetFragmentBox)
        pFnGetFragmentBox = (UFunction*)UObject::GObjObjects()->Data[20257];

    UFracturedStaticMeshComponent_execGetFragmentBox_Parms GetFragmentBox_Parms;

    pFnGetFragmentBox->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFragmentBox, &GetFragmentBox_Parms, NULL);

    pFnGetFragmentBox->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.IsNoPhysFragment
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::IsNoPhysFragment() {
    static UFunction* pFnIsNoPhysFragment = NULL;

    if (!pFnIsNoPhysFragment)
        pFnIsNoPhysFragment = (UFunction*)UObject::GObjObjects()->Data[20254];

    UFracturedStaticMeshComponent_execIsNoPhysFragment_Parms
        IsNoPhysFragment_Parms;

    pFnIsNoPhysFragment->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsNoPhysFragment, &IsNoPhysFragment_Parms, NULL);

    pFnIsNoPhysFragment->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.IsRootFragment
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::IsRootFragment() {
    static UFunction* pFnIsRootFragment = NULL;

    if (!pFnIsRootFragment)
        pFnIsRootFragment = (UFunction*)UObject::GObjObjects()->Data[20251];

    UFracturedStaticMeshComponent_execIsRootFragment_Parms IsRootFragment_Parms;

    pFnIsRootFragment->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsRootFragment, &IsRootFragment_Parms, NULL);

    pFnIsRootFragment->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.IsFragmentDestroyable
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::IsFragmentDestroyable() {
    static UFunction* pFnIsFragmentDestroyable = NULL;

    if (!pFnIsFragmentDestroyable)
        pFnIsFragmentDestroyable =
            (UFunction*)UObject::GObjObjects()->Data[20248];

    UFracturedStaticMeshComponent_execIsFragmentDestroyable_Parms
        IsFragmentDestroyable_Parms;

    pFnIsFragmentDestroyable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsFragmentDestroyable, &IsFragmentDestroyable_Parms,
                       NULL);

    pFnIsFragmentDestroyable->FunctionFlags |= 0x400;
};

// Function Engine.FracturedStaticMeshComponent.SetVisibleFragments
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFracturedStaticMeshComponent::SetVisibleFragments() {
    static UFunction* pFnSetVisibleFragments = NULL;

    if (!pFnSetVisibleFragments)
        pFnSetVisibleFragments =
            (UFunction*)UObject::GObjObjects()->Data[20245];

    UFracturedStaticMeshComponent_execSetVisibleFragments_Parms
        SetVisibleFragments_Parms;

    pFnSetVisibleFragments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVisibleFragments, &SetVisibleFragments_Parms,
                       NULL);

    pFnSetVisibleFragments->FunctionFlags |= 0x400;
};

// Function Engine.ImageBasedReflectionComponent.OnUpdatePropertyReflectionColor
// [0x00020002]
// Parameters infos:

void UImageBasedReflectionComponent::OnUpdatePropertyReflectionColor() {
    static UFunction* pFnOnUpdatePropertyReflectionColor = NULL;

    if (!pFnOnUpdatePropertyReflectionColor)
        pFnOnUpdatePropertyReflectionColor =
            (UFunction*)UObject::GObjObjects()->Data[23181];

    UImageBasedReflectionComponent_execOnUpdatePropertyReflectionColor_Parms
        OnUpdatePropertyReflectionColor_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyReflectionColor,
                       &OnUpdatePropertyReflectionColor_Parms, NULL);
};

// Function Engine.ImageBasedReflectionComponent.UpdateImageReflectionParameters
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UImageBasedReflectionComponent::UpdateImageReflectionParameters() {
    static UFunction* pFnUpdateImageReflectionParameters = NULL;

    if (!pFnUpdateImageReflectionParameters)
        pFnUpdateImageReflectionParameters =
            (UFunction*)UObject::GObjObjects()->Data[23180];

    UImageBasedReflectionComponent_execUpdateImageReflectionParameters_Parms
        UpdateImageReflectionParameters_Parms;

    pFnUpdateImageReflectionParameters->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateImageReflectionParameters,
                       &UpdateImageReflectionParameters_Parms, NULL);

    pFnUpdateImageReflectionParameters->FunctionFlags |= 0x400;
};

// Function Engine.ImageBasedReflectionComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UImageBasedReflectionComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[23178];

    UImageBasedReflectionComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.IsInMapOrTransientPackage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::IsInMapOrTransientPackage() {
    static UFunction* pFnIsInMapOrTransientPackage = NULL;

    if (!pFnIsInMapOrTransientPackage)
        pFnIsInMapOrTransientPackage =
            (UFunction*)UObject::GObjObjects()->Data[24439];

    UMaterialInstance_execIsInMapOrTransientPackage_Parms
        IsInMapOrTransientPackage_Parms;

    pFnIsInMapOrTransientPackage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsInMapOrTransientPackage,
                       &IsInMapOrTransientPackage_Parms, NULL);

    pFnIsInMapOrTransientPackage->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.ClearParameterValues
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::ClearParameterValues() {
    static UFunction* pFnClearParameterValues = NULL;

    if (!pFnClearParameterValues)
        pFnClearParameterValues =
            (UFunction*)UObject::GObjObjects()->Data[24438];

    UMaterialInstance_execClearParameterValues_Parms ClearParameterValues_Parms;

    pFnClearParameterValues->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearParameterValues, &ClearParameterValues_Parms,
                       NULL);

    pFnClearParameterValues->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.SetFontParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::SetFontParameterValue() {
    static UFunction* pFnSetFontParameterValue = NULL;

    if (!pFnSetFontParameterValue)
        pFnSetFontParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24434];

    UMaterialInstance_execSetFontParameterValue_Parms
        SetFontParameterValue_Parms;

    pFnSetFontParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFontParameterValue, &SetFontParameterValue_Parms,
                       NULL);

    pFnSetFontParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.GetTextureParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::GetTextureParameterValue() {
    static UFunction* pFnGetTextureParameterValue = NULL;

    if (!pFnGetTextureParameterValue)
        pFnGetTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24430];

    UMaterialInstance_execGetTextureParameterValue_Parms
        GetTextureParameterValue_Parms;

    pFnGetTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTextureParameterValue,
                       &GetTextureParameterValue_Parms, NULL);

    pFnGetTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.SetTextureParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::SetTextureParameterValue() {
    static UFunction* pFnSetTextureParameterValue = NULL;

    if (!pFnSetTextureParameterValue)
        pFnSetTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24427];

    UMaterialInstance_execSetTextureParameterValue_Parms
        SetTextureParameterValue_Parms;

    pFnSetTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTextureParameterValue,
                       &SetTextureParameterValue_Parms, NULL);

    pFnSetTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.SetScalarCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::SetScalarCurveParameterValue() {
    static UFunction* pFnSetScalarCurveParameterValue = NULL;

    if (!pFnSetScalarCurveParameterValue)
        pFnSetScalarCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24424];

    UMaterialInstance_execSetScalarCurveParameterValue_Parms
        SetScalarCurveParameterValue_Parms;

    pFnSetScalarCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarCurveParameterValue,
                       &SetScalarCurveParameterValue_Parms, NULL);

    pFnSetScalarCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.SetScalarParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::SetScalarParameterValue() {
    static UFunction* pFnSetScalarParameterValue = NULL;

    if (!pFnSetScalarParameterValue)
        pFnSetScalarParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24421];

    UMaterialInstance_execSetScalarParameterValue_Parms
        SetScalarParameterValue_Parms;

    pFnSetScalarParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarParameterValue,
                       &SetScalarParameterValue_Parms, NULL);

    pFnSetScalarParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.SetVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::SetVectorParameterValue() {
    static UFunction* pFnSetVectorParameterValue = NULL;

    if (!pFnSetVectorParameterValue)
        pFnSetVectorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24418];

    UMaterialInstance_execSetVectorParameterValue_Parms
        SetVectorParameterValue_Parms;

    pFnSetVectorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorParameterValue,
                       &SetVectorParameterValue_Parms, NULL);

    pFnSetVectorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstance.SetParent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstance::SetParent() {
    static UFunction* pFnSetParent = NULL;

    if (!pFnSetParent)
        pFnSetParent = (UFunction*)UObject::GObjObjects()->Data[24416];

    UMaterialInstance_execSetParent_Parms SetParent_Parms;

    pFnSetParent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetParent, &SetParent_Parms, NULL);

    pFnSetParent->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.ClearParameterValues
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::ClearParameterValues() {
    static UFunction* pFnClearParameterValues = NULL;

    if (!pFnClearParameterValues)
        pFnClearParameterValues =
            (UFunction*)UObject::GObjObjects()->Data[24493];

    UMaterialInstanceConstant_execClearParameterValues_Parms
        ClearParameterValues_Parms;

    pFnClearParameterValues->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearParameterValues, &ClearParameterValues_Parms,
                       NULL);

    pFnClearParameterValues->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.GetMobileVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::GetMobileVectorParameterValue() {
    static UFunction* pFnGetMobileVectorParameterValue = NULL;

    if (!pFnGetMobileVectorParameterValue)
        pFnGetMobileVectorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24489];

    UMaterialInstanceConstant_execGetMobileVectorParameterValue_Parms
        GetMobileVectorParameterValue_Parms;

    pFnGetMobileVectorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMobileVectorParameterValue,
                       &GetMobileVectorParameterValue_Parms, NULL);

    pFnGetMobileVectorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.GetMobileTextureParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::GetMobileTextureParameterValue() {
    static UFunction* pFnGetMobileTextureParameterValue = NULL;

    if (!pFnGetMobileTextureParameterValue)
        pFnGetMobileTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24485];

    UMaterialInstanceConstant_execGetMobileTextureParameterValue_Parms
        GetMobileTextureParameterValue_Parms;

    pFnGetMobileTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMobileTextureParameterValue,
                       &GetMobileTextureParameterValue_Parms, NULL);

    pFnGetMobileTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.GetMobileScalarParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::GetMobileScalarParameterValue() {
    static UFunction* pFnGetMobileScalarParameterValue = NULL;

    if (!pFnGetMobileScalarParameterValue)
        pFnGetMobileScalarParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24481];

    UMaterialInstanceConstant_execGetMobileScalarParameterValue_Parms
        GetMobileScalarParameterValue_Parms;

    pFnGetMobileScalarParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMobileScalarParameterValue,
                       &GetMobileScalarParameterValue_Parms, NULL);

    pFnGetMobileScalarParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.SetFontParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::SetFontParameterValue() {
    static UFunction* pFnSetFontParameterValue = NULL;

    if (!pFnSetFontParameterValue)
        pFnSetFontParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24477];

    UMaterialInstanceConstant_execSetFontParameterValue_Parms
        SetFontParameterValue_Parms;

    pFnSetFontParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFontParameterValue, &SetFontParameterValue_Parms,
                       NULL);

    pFnSetFontParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.SetVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::SetVectorParameterValue() {
    static UFunction* pFnSetVectorParameterValue = NULL;

    if (!pFnSetVectorParameterValue)
        pFnSetVectorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24474];

    UMaterialInstanceConstant_execSetVectorParameterValue_Parms
        SetVectorParameterValue_Parms;

    pFnSetVectorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorParameterValue,
                       &SetVectorParameterValue_Parms, NULL);

    pFnSetVectorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.SetTextureParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::SetTextureParameterValue() {
    static UFunction* pFnSetTextureParameterValue = NULL;

    if (!pFnSetTextureParameterValue)
        pFnSetTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24471];

    UMaterialInstanceConstant_execSetTextureParameterValue_Parms
        SetTextureParameterValue_Parms;

    pFnSetTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTextureParameterValue,
                       &SetTextureParameterValue_Parms, NULL);

    pFnSetTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.SetScalarParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::SetScalarParameterValue() {
    static UFunction* pFnSetScalarParameterValue = NULL;

    if (!pFnSetScalarParameterValue)
        pFnSetScalarParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[24468];

    UMaterialInstanceConstant_execSetScalarParameterValue_Parms
        SetScalarParameterValue_Parms;

    pFnSetScalarParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarParameterValue,
                       &SetScalarParameterValue_Parms, NULL);

    pFnSetScalarParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceConstant.SetParent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceConstant::SetParent() {
    static UFunction* pFnSetParent = NULL;

    if (!pFnSetParent)
        pFnSetParent = (UFunction*)UObject::GObjObjects()->Data[24466];

    UMaterialInstanceConstant_execSetParent_Parms SetParent_Parms;

    pFnSetParent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetParent, &SetParent_Parms, NULL);

    pFnSetParent->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.CheckForVectorParameterConflicts
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::CheckForVectorParameterConflicts() {
    static UFunction* pFnCheckForVectorParameterConflicts = NULL;

    if (!pFnCheckForVectorParameterConflicts)
        pFnCheckForVectorParameterConflicts =
            (UFunction*)UObject::GObjObjects()->Data[25301];

    UMaterialInstanceTimeVarying_execCheckForVectorParameterConflicts_Parms
        CheckForVectorParameterConflicts_Parms;

    pFnCheckForVectorParameterConflicts->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckForVectorParameterConflicts,
                       &CheckForVectorParameterConflicts_Parms, NULL);

    pFnCheckForVectorParameterConflicts->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.GetMaxDurationFromAllParameters
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::GetMaxDurationFromAllParameters() {
    static UFunction* pFnGetMaxDurationFromAllParameters = NULL;

    if (!pFnGetMaxDurationFromAllParameters)
        pFnGetMaxDurationFromAllParameters =
            (UFunction*)UObject::GObjObjects()->Data[25299];

    UMaterialInstanceTimeVarying_execGetMaxDurationFromAllParameters_Parms
        GetMaxDurationFromAllParameters_Parms;

    pFnGetMaxDurationFromAllParameters->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxDurationFromAllParameters,
                       &GetMaxDurationFromAllParameters_Parms, NULL);

    pFnGetMaxDurationFromAllParameters->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.ClearParameterValues
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::ClearParameterValues() {
    static UFunction* pFnClearParameterValues = NULL;

    if (!pFnClearParameterValues)
        pFnClearParameterValues =
            (UFunction*)UObject::GObjObjects()->Data[25298];

    UMaterialInstanceTimeVarying_execClearParameterValues_Parms
        ClearParameterValues_Parms;

    pFnClearParameterValues->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearParameterValues, &ClearParameterValues_Parms,
                       NULL);

    pFnClearParameterValues->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetFontParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetFontParameterValue() {
    static UFunction* pFnSetFontParameterValue = NULL;

    if (!pFnSetFontParameterValue)
        pFnSetFontParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25294];

    UMaterialInstanceTimeVarying_execSetFontParameterValue_Parms
        SetFontParameterValue_Parms;

    pFnSetFontParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFontParameterValue, &SetFontParameterValue_Parms,
                       NULL);

    pFnSetFontParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetVectorStartTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetVectorStartTime() {
    static UFunction* pFnSetVectorStartTime = NULL;

    if (!pFnSetVectorStartTime)
        pFnSetVectorStartTime = (UFunction*)UObject::GObjObjects()->Data[25291];

    UMaterialInstanceTimeVarying_execSetVectorStartTime_Parms
        SetVectorStartTime_Parms;

    pFnSetVectorStartTime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorStartTime, &SetVectorStartTime_Parms, NULL);

    pFnSetVectorStartTime->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetLinearColorCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetLinearColorCurveParameterValue() {
    static UFunction* pFnSetLinearColorCurveParameterValue = NULL;

    if (!pFnSetLinearColorCurveParameterValue)
        pFnSetLinearColorCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25288];

    UMaterialInstanceTimeVarying_execSetLinearColorCurveParameterValue_Parms
        SetLinearColorCurveParameterValue_Parms;

    pFnSetLinearColorCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearColorCurveParameterValue,
                       &SetLinearColorCurveParameterValue_Parms, NULL);

    pFnSetLinearColorCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetLinearColorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetLinearColorParameterValue() {
    static UFunction* pFnSetLinearColorParameterValue = NULL;

    if (!pFnSetLinearColorParameterValue)
        pFnSetLinearColorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25285];

    UMaterialInstanceTimeVarying_execSetLinearColorParameterValue_Parms
        SetLinearColorParameterValue_Parms;

    pFnSetLinearColorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearColorParameterValue,
                       &SetLinearColorParameterValue_Parms, NULL);

    pFnSetLinearColorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetVectorCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetVectorCurveParameterValue() {
    static UFunction* pFnSetVectorCurveParameterValue = NULL;

    if (!pFnSetVectorCurveParameterValue)
        pFnSetVectorCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25282];

    UMaterialInstanceTimeVarying_execSetVectorCurveParameterValue_Parms
        SetVectorCurveParameterValue_Parms;

    pFnSetVectorCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorCurveParameterValue,
                       &SetVectorCurveParameterValue_Parms, NULL);

    pFnSetVectorCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetVectorParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetVectorParameterValue() {
    static UFunction* pFnSetVectorParameterValue = NULL;

    if (!pFnSetVectorParameterValue)
        pFnSetVectorParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25279];

    UMaterialInstanceTimeVarying_execSetVectorParameterValue_Parms
        SetVectorParameterValue_Parms;

    pFnSetVectorParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorParameterValue,
                       &SetVectorParameterValue_Parms, NULL);

    pFnSetVectorParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetTextureParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetTextureParameterValue() {
    static UFunction* pFnSetTextureParameterValue = NULL;

    if (!pFnSetTextureParameterValue)
        pFnSetTextureParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25276];

    UMaterialInstanceTimeVarying_execSetTextureParameterValue_Parms
        SetTextureParameterValue_Parms;

    pFnSetTextureParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTextureParameterValue,
                       &SetTextureParameterValue_Parms, NULL);

    pFnSetTextureParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetDuration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetDuration() {
    static UFunction* pFnSetDuration = NULL;

    if (!pFnSetDuration)
        pFnSetDuration = (UFunction*)UObject::GObjObjects()->Data[25274];

    UMaterialInstanceTimeVarying_execSetDuration_Parms SetDuration_Parms;

    pFnSetDuration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDuration, &SetDuration_Parms, NULL);

    pFnSetDuration->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetScalarStartTime
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetScalarStartTime() {
    static UFunction* pFnSetScalarStartTime = NULL;

    if (!pFnSetScalarStartTime)
        pFnSetScalarStartTime = (UFunction*)UObject::GObjObjects()->Data[25271];

    UMaterialInstanceTimeVarying_execSetScalarStartTime_Parms
        SetScalarStartTime_Parms;

    pFnSetScalarStartTime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarStartTime, &SetScalarStartTime_Parms, NULL);

    pFnSetScalarStartTime->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetScalarCurveParameterValue
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetScalarCurveParameterValue() {
    static UFunction* pFnSetScalarCurveParameterValue = NULL;

    if (!pFnSetScalarCurveParameterValue)
        pFnSetScalarCurveParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25268];

    UMaterialInstanceTimeVarying_execSetScalarCurveParameterValue_Parms
        SetScalarCurveParameterValue_Parms;

    pFnSetScalarCurveParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarCurveParameterValue,
                       &SetScalarCurveParameterValue_Parms, NULL);

    pFnSetScalarCurveParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetScalarParameterValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetScalarParameterValue() {
    static UFunction* pFnSetScalarParameterValue = NULL;

    if (!pFnSetScalarParameterValue)
        pFnSetScalarParameterValue =
            (UFunction*)UObject::GObjObjects()->Data[25265];

    UMaterialInstanceTimeVarying_execSetScalarParameterValue_Parms
        SetScalarParameterValue_Parms;

    pFnSetScalarParameterValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarParameterValue,
                       &SetScalarParameterValue_Parms, NULL);

    pFnSetScalarParameterValue->FunctionFlags |= 0x400;
};

// Function Engine.MaterialInstanceTimeVarying.SetParent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UMaterialInstanceTimeVarying::SetParent() {
    static UFunction* pFnSetParent = NULL;

    if (!pFnSetParent)
        pFnSetParent = (UFunction*)UObject::GObjObjects()->Data[25263];

    UMaterialInstanceTimeVarying_execSetParent_Parms SetParent_Parms;

    pFnSetParent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetParent, &SetParent_Parms, NULL);

    pFnSetParent->FunctionFlags |= 0x400;
};

// Function Engine.EmitterCameraLensEffectBase.UpdateLocation
// [0x00420500] ( FUNC_Native )
// Parameters infos:

void AEmitterCameraLensEffectBase::UpdateLocation() {
    static UFunction* pFnUpdateLocation = NULL;

    if (!pFnUpdateLocation)
        pFnUpdateLocation = (UFunction*)UObject::GObjObjects()->Data[18997];

    AEmitterCameraLensEffectBase_execUpdateLocation_Parms UpdateLocation_Parms;

    pFnUpdateLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateLocation, &UpdateLocation_Parms, NULL);

    pFnUpdateLocation->FunctionFlags |= 0x400;
};

// Function Engine.EmitterCameraLensEffectBase.ActivateLensEffect
// [0x00020102]
// Parameters infos:

void AEmitterCameraLensEffectBase::ActivateLensEffect() {
    static UFunction* pFnActivateLensEffect = NULL;

    if (!pFnActivateLensEffect)
        pFnActivateLensEffect = (UFunction*)UObject::GObjObjects()->Data[18995];

    AEmitterCameraLensEffectBase_execActivateLensEffect_Parms
        ActivateLensEffect_Parms;

    this->ProcessEvent(pFnActivateLensEffect, &ActivateLensEffect_Parms, NULL);
};

// Function Engine.EmitterCameraLensEffectBase.PostBeginPlay
// [0x00020102]
// Parameters infos:

void AEmitterCameraLensEffectBase::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18994];

    AEmitterCameraLensEffectBase_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.EmitterCameraLensEffectBase.NotifyRetriggered
// [0x00020000]
// Parameters infos:

void AEmitterCameraLensEffectBase::NotifyRetriggered() {
    static UFunction* pFnNotifyRetriggered = NULL;

    if (!pFnNotifyRetriggered)
        pFnNotifyRetriggered = (UFunction*)UObject::GObjObjects()->Data[18993];

    AEmitterCameraLensEffectBase_execNotifyRetriggered_Parms
        NotifyRetriggered_Parms;

    this->ProcessEvent(pFnNotifyRetriggered, &NotifyRetriggered_Parms, NULL);
};

// Function Engine.EmitterCameraLensEffectBase.RegisterCamera
// [0x00020002]
// Parameters infos:

void AEmitterCameraLensEffectBase::RegisterCamera() {
    static UFunction* pFnRegisterCamera = NULL;

    if (!pFnRegisterCamera)
        pFnRegisterCamera = (UFunction*)UObject::GObjObjects()->Data[18991];

    AEmitterCameraLensEffectBase_execRegisterCamera_Parms RegisterCamera_Parms;

    this->ProcessEvent(pFnRegisterCamera, &RegisterCamera_Parms, NULL);
};

// Function Engine.EmitterCameraLensEffectBase.Destroyed
// [0x00020002]
// Parameters infos:

void AEmitterCameraLensEffectBase::Destroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[18990];

    AEmitterCameraLensEffectBase_execDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.ParticleEventManager.HandleParticleModuleEventSendToGame
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void AParticleEventManager::eventHandleParticleModuleEventSendToGame() {
    static UFunction* pFnHandleParticleModuleEventSendToGame = NULL;

    if (!pFnHandleParticleModuleEventSendToGame)
        pFnHandleParticleModuleEventSendToGame =
            (UFunction*)UObject::GObjObjects()->Data[29680];

    AParticleEventManager_eventHandleParticleModuleEventSendToGame_Parms
        HandleParticleModuleEventSendToGame_Parms;

    this->ProcessEvent(pFnHandleParticleModuleEventSendToGame,
                       &HandleParticleModuleEventSendToGame_Parms, NULL);
};

// Function Engine.ParticleSystemComponent.SetStopSpawning
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetStopSpawning() {
    static UFunction* pFnSetStopSpawning = NULL;

    if (!pFnSetStopSpawning)
        pFnSetStopSpawning = (UFunction*)UObject::GObjObjects()->Data[18841];

    UParticleSystemComponent_execSetStopSpawning_Parms SetStopSpawning_Parms;

    pFnSetStopSpawning->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetStopSpawning, &SetStopSpawning_Parms, NULL);

    pFnSetStopSpawning->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.ResetToDefaults
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::ResetToDefaults() {
    static UFunction* pFnResetToDefaults = NULL;

    if (!pFnResetToDefaults)
        pFnResetToDefaults = (UFunction*)UObject::GObjObjects()->Data[18840];

    UParticleSystemComponent_execResetToDefaults_Parms ResetToDefaults_Parms;

    pFnResetToDefaults->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetToDefaults, &ResetToDefaults_Parms, NULL);

    pFnResetToDefaults->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetActive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetActive() {
    static UFunction* pFnSetActive = NULL;

    if (!pFnSetActive)
        pFnSetActive = (UFunction*)UObject::GObjObjects()->Data[18590];

    UParticleSystemComponent_execSetActive_Parms SetActive_Parms;

    pFnSetActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActive, &SetActive_Parms, NULL);

    pFnSetActive->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.ClearParameter
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::ClearParameter() {
    static UFunction* pFnClearParameter = NULL;

    if (!pFnClearParameter)
        pFnClearParameter = (UFunction*)UObject::GObjObjects()->Data[18835];

    UParticleSystemComponent_execClearParameter_Parms ClearParameter_Parms;

    pFnClearParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearParameter, &ClearParameter_Parms, NULL);

    pFnClearParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetMaterialParameter
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetMaterialParameter() {
    static UFunction* pFnGetMaterialParameter = NULL;

    if (!pFnGetMaterialParameter)
        pFnGetMaterialParameter =
            (UFunction*)UObject::GObjObjects()->Data[18831];

    UParticleSystemComponent_execGetMaterialParameter_Parms
        GetMaterialParameter_Parms;

    pFnGetMaterialParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaterialParameter, &GetMaterialParameter_Parms,
                       NULL);

    pFnGetMaterialParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetActorParameter
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetActorParameter() {
    static UFunction* pFnGetActorParameter = NULL;

    if (!pFnGetActorParameter)
        pFnGetActorParameter = (UFunction*)UObject::GObjObjects()->Data[18827];

    UParticleSystemComponent_execGetActorParameter_Parms
        GetActorParameter_Parms;

    pFnGetActorParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetActorParameter, &GetActorParameter_Parms, NULL);

    pFnGetActorParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetColorParameter
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetColorParameter() {
    static UFunction* pFnGetColorParameter = NULL;

    if (!pFnGetColorParameter)
        pFnGetColorParameter = (UFunction*)UObject::GObjObjects()->Data[18823];

    UParticleSystemComponent_execGetColorParameter_Parms
        GetColorParameter_Parms;

    pFnGetColorParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetColorParameter, &GetColorParameter_Parms, NULL);

    pFnGetColorParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetVectorParameter
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetVectorParameter() {
    static UFunction* pFnGetVectorParameter = NULL;

    if (!pFnGetVectorParameter)
        pFnGetVectorParameter = (UFunction*)UObject::GObjObjects()->Data[18819];

    UParticleSystemComponent_execGetVectorParameter_Parms
        GetVectorParameter_Parms;

    pFnGetVectorParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVectorParameter, &GetVectorParameter_Parms, NULL);

    pFnGetVectorParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetFloatParameter
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetFloatParameter() {
    static UFunction* pFnGetFloatParameter = NULL;

    if (!pFnGetFloatParameter)
        pFnGetFloatParameter = (UFunction*)UObject::GObjObjects()->Data[18815];

    UParticleSystemComponent_execGetFloatParameter_Parms
        GetFloatParameter_Parms;

    pFnGetFloatParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFloatParameter, &GetFloatParameter_Parms, NULL);

    pFnGetFloatParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetMaterialParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetMaterialParameter() {
    static UFunction* pFnSetMaterialParameter = NULL;

    if (!pFnSetMaterialParameter)
        pFnSetMaterialParameter =
            (UFunction*)UObject::GObjObjects()->Data[18812];

    UParticleSystemComponent_execSetMaterialParameter_Parms
        SetMaterialParameter_Parms;

    pFnSetMaterialParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaterialParameter, &SetMaterialParameter_Parms,
                       NULL);

    pFnSetMaterialParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetActorParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetActorParameter() {
    static UFunction* pFnSetActorParameter = NULL;

    if (!pFnSetActorParameter)
        pFnSetActorParameter = (UFunction*)UObject::GObjObjects()->Data[10011];

    UParticleSystemComponent_execSetActorParameter_Parms
        SetActorParameter_Parms;

    pFnSetActorParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetActorParameter, &SetActorParameter_Parms, NULL);

    pFnSetActorParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetColorParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetColorParameter() {
    static UFunction* pFnSetColorParameter = NULL;

    if (!pFnSetColorParameter)
        pFnSetColorParameter = (UFunction*)UObject::GObjObjects()->Data[18807];

    UParticleSystemComponent_execSetColorParameter_Parms
        SetColorParameter_Parms;

    pFnSetColorParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetColorParameter, &SetColorParameter_Parms, NULL);

    pFnSetColorParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetVectorRandParameter
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetVectorRandParameter() {
    static UFunction* pFnSetVectorRandParameter = NULL;

    if (!pFnSetVectorRandParameter)
        pFnSetVectorRandParameter =
            (UFunction*)UObject::GObjObjects()->Data[18803];

    UParticleSystemComponent_execSetVectorRandParameter_Parms
        SetVectorRandParameter_Parms;

    pFnSetVectorRandParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorRandParameter, &SetVectorRandParameter_Parms,
                       NULL);

    pFnSetVectorRandParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetVectorParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetVectorParameter() {
    static UFunction* pFnSetVectorParameter = NULL;

    if (!pFnSetVectorParameter)
        pFnSetVectorParameter = (UFunction*)UObject::GObjObjects()->Data[18800];

    UParticleSystemComponent_execSetVectorParameter_Parms
        SetVectorParameter_Parms;

    pFnSetVectorParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetVectorParameter, &SetVectorParameter_Parms, NULL);

    pFnSetVectorParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetFloatRandParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetFloatRandParameter() {
    static UFunction* pFnSetFloatRandParameter = NULL;

    if (!pFnSetFloatRandParameter)
        pFnSetFloatRandParameter =
            (UFunction*)UObject::GObjObjects()->Data[18796];

    UParticleSystemComponent_execSetFloatRandParameter_Parms
        SetFloatRandParameter_Parms;

    pFnSetFloatRandParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFloatRandParameter, &SetFloatRandParameter_Parms,
                       NULL);

    pFnSetFloatRandParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetFloatParameter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetFloatParameter() {
    static UFunction* pFnSetFloatParameter = NULL;

    if (!pFnSetFloatParameter)
        pFnSetFloatParameter = (UFunction*)UObject::GObjObjects()->Data[18793];

    UParticleSystemComponent_execSetFloatParameter_Parms
        SetFloatParameter_Parms;

    pFnSetFloatParameter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFloatParameter, &SetFloatParameter_Parms, NULL);

    pFnSetFloatParameter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetEditorLODLevel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetEditorLODLevel() {
    static UFunction* pFnGetEditorLODLevel = NULL;

    if (!pFnGetEditorLODLevel)
        pFnGetEditorLODLevel = (UFunction*)UObject::GObjObjects()->Data[18791];

    UParticleSystemComponent_execGetEditorLODLevel_Parms
        GetEditorLODLevel_Parms;

    pFnGetEditorLODLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetEditorLODLevel, &GetEditorLODLevel_Parms, NULL);

    pFnGetEditorLODLevel->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetLODLevel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetLODLevel() {
    static UFunction* pFnGetLODLevel = NULL;

    if (!pFnGetLODLevel)
        pFnGetLODLevel = (UFunction*)UObject::GObjObjects()->Data[18789];

    UParticleSystemComponent_execGetLODLevel_Parms GetLODLevel_Parms;

    pFnGetLODLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLODLevel, &GetLODLevel_Parms, NULL);

    pFnGetLODLevel->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetEditorLODLevel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetEditorLODLevel() {
    static UFunction* pFnSetEditorLODLevel = NULL;

    if (!pFnSetEditorLODLevel)
        pFnSetEditorLODLevel = (UFunction*)UObject::GObjObjects()->Data[18787];

    UParticleSystemComponent_execSetEditorLODLevel_Parms
        SetEditorLODLevel_Parms;

    pFnSetEditorLODLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEditorLODLevel, &SetEditorLODLevel_Parms, NULL);

    pFnSetEditorLODLevel->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetLODLevel
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetLODLevel() {
    static UFunction* pFnSetLODLevel = NULL;

    if (!pFnSetLODLevel)
        pFnSetLODLevel = (UFunction*)UObject::GObjObjects()->Data[18785];

    UParticleSystemComponent_execSetLODLevel_Parms SetLODLevel_Parms;

    pFnSetLODLevel->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLODLevel, &SetLODLevel_Parms, NULL);

    pFnSetLODLevel->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SystemHasCompleted
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SystemHasCompleted() {
    static UFunction* pFnSystemHasCompleted = NULL;

    if (!pFnSystemHasCompleted)
        pFnSystemHasCompleted = (UFunction*)UObject::GObjObjects()->Data[18783];

    UParticleSystemComponent_execSystemHasCompleted_Parms
        SystemHasCompleted_Parms;

    pFnSystemHasCompleted->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSystemHasCompleted, &SystemHasCompleted_Parms, NULL);

    pFnSystemHasCompleted->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetMaxLifespan
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetMaxLifespan() {
    static UFunction* pFnGetMaxLifespan = NULL;

    if (!pFnGetMaxLifespan)
        pFnGetMaxLifespan = (UFunction*)UObject::GObjObjects()->Data[18781];

    UParticleSystemComponent_execGetMaxLifespan_Parms GetMaxLifespan_Parms;

    pFnGetMaxLifespan->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxLifespan, &GetMaxLifespan_Parms, NULL);

    pFnGetMaxLifespan->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.DetermineLODLevelForLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::DetermineLODLevelForLocation() {
    static UFunction* pFnDetermineLODLevelForLocation = NULL;

    if (!pFnDetermineLODLevelForLocation)
        pFnDetermineLODLevelForLocation =
            (UFunction*)UObject::GObjObjects()->Data[18778];

    UParticleSystemComponent_execDetermineLODLevelForLocation_Parms
        DetermineLODLevelForLocation_Parms;

    pFnDetermineLODLevelForLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDetermineLODLevelForLocation,
                       &DetermineLODLevelForLocation_Parms, NULL);

    pFnDetermineLODLevelForLocation->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamTargetStrength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamTargetStrength() {
    static UFunction* pFnSetBeamTargetStrength = NULL;

    if (!pFnSetBeamTargetStrength)
        pFnSetBeamTargetStrength =
            (UFunction*)UObject::GObjObjects()->Data[18774];

    UParticleSystemComponent_execSetBeamTargetStrength_Parms
        SetBeamTargetStrength_Parms;

    pFnSetBeamTargetStrength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamTargetStrength, &SetBeamTargetStrength_Parms,
                       NULL);

    pFnSetBeamTargetStrength->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamTargetTangent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamTargetTangent() {
    static UFunction* pFnSetBeamTargetTangent = NULL;

    if (!pFnSetBeamTargetTangent)
        pFnSetBeamTargetTangent =
            (UFunction*)UObject::GObjObjects()->Data[18770];

    UParticleSystemComponent_execSetBeamTargetTangent_Parms
        SetBeamTargetTangent_Parms;

    pFnSetBeamTargetTangent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamTargetTangent, &SetBeamTargetTangent_Parms,
                       NULL);

    pFnSetBeamTargetTangent->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamTargetPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamTargetPoint() {
    static UFunction* pFnSetBeamTargetPoint = NULL;

    if (!pFnSetBeamTargetPoint)
        pFnSetBeamTargetPoint = (UFunction*)UObject::GObjObjects()->Data[18766];

    UParticleSystemComponent_execSetBeamTargetPoint_Parms
        SetBeamTargetPoint_Parms;

    pFnSetBeamTargetPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamTargetPoint, &SetBeamTargetPoint_Parms, NULL);

    pFnSetBeamTargetPoint->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamSourceStrength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamSourceStrength() {
    static UFunction* pFnSetBeamSourceStrength = NULL;

    if (!pFnSetBeamSourceStrength)
        pFnSetBeamSourceStrength =
            (UFunction*)UObject::GObjObjects()->Data[18762];

    UParticleSystemComponent_execSetBeamSourceStrength_Parms
        SetBeamSourceStrength_Parms;

    pFnSetBeamSourceStrength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamSourceStrength, &SetBeamSourceStrength_Parms,
                       NULL);

    pFnSetBeamSourceStrength->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamSourceTangent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamSourceTangent() {
    static UFunction* pFnSetBeamSourceTangent = NULL;

    if (!pFnSetBeamSourceTangent)
        pFnSetBeamSourceTangent =
            (UFunction*)UObject::GObjObjects()->Data[18758];

    UParticleSystemComponent_execSetBeamSourceTangent_Parms
        SetBeamSourceTangent_Parms;

    pFnSetBeamSourceTangent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamSourceTangent, &SetBeamSourceTangent_Parms,
                       NULL);

    pFnSetBeamSourceTangent->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamSourcePoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamSourcePoint() {
    static UFunction* pFnSetBeamSourcePoint = NULL;

    if (!pFnSetBeamSourcePoint)
        pFnSetBeamSourcePoint = (UFunction*)UObject::GObjObjects()->Data[18754];

    UParticleSystemComponent_execSetBeamSourcePoint_Parms
        SetBeamSourcePoint_Parms;

    pFnSetBeamSourcePoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamSourcePoint, &SetBeamSourcePoint_Parms, NULL);

    pFnSetBeamSourcePoint->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamDistance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamDistance() {
    static UFunction* pFnSetBeamDistance = NULL;

    if (!pFnSetBeamDistance)
        pFnSetBeamDistance = (UFunction*)UObject::GObjObjects()->Data[18751];

    UParticleSystemComponent_execSetBeamDistance_Parms SetBeamDistance_Parms;

    pFnSetBeamDistance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamDistance, &SetBeamDistance_Parms, NULL);

    pFnSetBeamDistance->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamEndPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamEndPoint() {
    static UFunction* pFnSetBeamEndPoint = NULL;

    if (!pFnSetBeamEndPoint)
        pFnSetBeamEndPoint = (UFunction*)UObject::GObjObjects()->Data[18748];

    UParticleSystemComponent_execSetBeamEndPoint_Parms SetBeamEndPoint_Parms;

    pFnSetBeamEndPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamEndPoint, &SetBeamEndPoint_Parms, NULL);

    pFnSetBeamEndPoint->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamTessellationFactor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamTessellationFactor() {
    static UFunction* pFnSetBeamTessellationFactor = NULL;

    if (!pFnSetBeamTessellationFactor)
        pFnSetBeamTessellationFactor =
            (UFunction*)UObject::GObjObjects()->Data[18745];

    UParticleSystemComponent_execSetBeamTessellationFactor_Parms
        SetBeamTessellationFactor_Parms;

    pFnSetBeamTessellationFactor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamTessellationFactor,
                       &SetBeamTessellationFactor_Parms, NULL);

    pFnSetBeamTessellationFactor->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetBeamType
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetBeamType() {
    static UFunction* pFnSetBeamType = NULL;

    if (!pFnSetBeamType)
        pFnSetBeamType = (UFunction*)UObject::GObjObjects()->Data[18742];

    UParticleSystemComponent_execSetBeamType_Parms SetBeamType_Parms;

    pFnSetBeamType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBeamType, &SetBeamType_Parms, NULL);

    pFnSetBeamType->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.RewindEmitterInstances
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::RewindEmitterInstances() {
    static UFunction* pFnRewindEmitterInstances = NULL;

    if (!pFnRewindEmitterInstances)
        pFnRewindEmitterInstances =
            (UFunction*)UObject::GObjObjects()->Data[18741];

    UParticleSystemComponent_execRewindEmitterInstances_Parms
        RewindEmitterInstances_Parms;

    pFnRewindEmitterInstances->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRewindEmitterInstances, &RewindEmitterInstances_Parms,
                       NULL);

    pFnRewindEmitterInstances->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.RewindEmitterInstance
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::RewindEmitterInstance() {
    static UFunction* pFnRewindEmitterInstance = NULL;

    if (!pFnRewindEmitterInstance)
        pFnRewindEmitterInstance =
            (UFunction*)UObject::GObjObjects()->Data[18739];

    UParticleSystemComponent_execRewindEmitterInstance_Parms
        RewindEmitterInstance_Parms;

    pFnRewindEmitterInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRewindEmitterInstance, &RewindEmitterInstance_Parms,
                       NULL);

    pFnRewindEmitterInstance->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetKillOnCompleted
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetKillOnCompleted() {
    static UFunction* pFnSetKillOnCompleted = NULL;

    if (!pFnSetKillOnCompleted)
        pFnSetKillOnCompleted = (UFunction*)UObject::GObjObjects()->Data[18736];

    UParticleSystemComponent_execSetKillOnCompleted_Parms
        SetKillOnCompleted_Parms;

    pFnSetKillOnCompleted->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetKillOnCompleted, &SetKillOnCompleted_Parms, NULL);

    pFnSetKillOnCompleted->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetKillOnDeactivate
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetKillOnDeactivate() {
    static UFunction* pFnSetKillOnDeactivate = NULL;

    if (!pFnSetKillOnDeactivate)
        pFnSetKillOnDeactivate =
            (UFunction*)UObject::GObjObjects()->Data[18733];

    UParticleSystemComponent_execSetKillOnDeactivate_Parms
        SetKillOnDeactivate_Parms;

    pFnSetKillOnDeactivate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetKillOnDeactivate, &SetKillOnDeactivate_Parms,
                       NULL);

    pFnSetKillOnDeactivate->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetSkipBoundsUpdate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetSkipBoundsUpdate() {
    static UFunction* pFnGetSkipBoundsUpdate = NULL;

    if (!pFnGetSkipBoundsUpdate)
        pFnGetSkipBoundsUpdate =
            (UFunction*)UObject::GObjObjects()->Data[18731];

    UParticleSystemComponent_execGetSkipBoundsUpdate_Parms
        GetSkipBoundsUpdate_Parms;

    pFnGetSkipBoundsUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSkipBoundsUpdate, &GetSkipBoundsUpdate_Parms,
                       NULL);

    pFnGetSkipBoundsUpdate->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetSkipBoundsUpdate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetSkipBoundsUpdate() {
    static UFunction* pFnSetSkipBoundsUpdate = NULL;

    if (!pFnSetSkipBoundsUpdate)
        pFnSetSkipBoundsUpdate =
            (UFunction*)UObject::GObjObjects()->Data[18729];

    UParticleSystemComponent_execSetSkipBoundsUpdate_Parms
        SetSkipBoundsUpdate_Parms;

    pFnSetSkipBoundsUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSkipBoundsUpdate, &SetSkipBoundsUpdate_Parms,
                       NULL);

    pFnSetSkipBoundsUpdate->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.GetSkipUpdateDynamicDataDuringTick
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::GetSkipUpdateDynamicDataDuringTick() {
    static UFunction* pFnGetSkipUpdateDynamicDataDuringTick = NULL;

    if (!pFnGetSkipUpdateDynamicDataDuringTick)
        pFnGetSkipUpdateDynamicDataDuringTick =
            (UFunction*)UObject::GObjObjects()->Data[18727];

    UParticleSystemComponent_execGetSkipUpdateDynamicDataDuringTick_Parms
        GetSkipUpdateDynamicDataDuringTick_Parms;

    pFnGetSkipUpdateDynamicDataDuringTick->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSkipUpdateDynamicDataDuringTick,
                       &GetSkipUpdateDynamicDataDuringTick_Parms, NULL);

    pFnGetSkipUpdateDynamicDataDuringTick->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetSkipUpdateDynamicDataDuringTick
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetSkipUpdateDynamicDataDuringTick() {
    static UFunction* pFnSetSkipUpdateDynamicDataDuringTick = NULL;

    if (!pFnSetSkipUpdateDynamicDataDuringTick)
        pFnSetSkipUpdateDynamicDataDuringTick =
            (UFunction*)UObject::GObjObjects()->Data[18725];

    UParticleSystemComponent_execSetSkipUpdateDynamicDataDuringTick_Parms
        SetSkipUpdateDynamicDataDuringTick_Parms;

    pFnSetSkipUpdateDynamicDataDuringTick->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSkipUpdateDynamicDataDuringTick,
                       &SetSkipUpdateDynamicDataDuringTick_Parms, NULL);

    pFnSetSkipUpdateDynamicDataDuringTick->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.KillParticlesInEmitter
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::KillParticlesInEmitter() {
    static UFunction* pFnKillParticlesInEmitter = NULL;

    if (!pFnKillParticlesInEmitter)
        pFnKillParticlesInEmitter =
            (UFunction*)UObject::GObjObjects()->Data[18723];

    UParticleSystemComponent_execKillParticlesInEmitter_Parms
        KillParticlesInEmitter_Parms;

    pFnKillParticlesInEmitter->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnKillParticlesInEmitter, &KillParticlesInEmitter_Parms,
                       NULL);

    pFnKillParticlesInEmitter->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.KillParticlesForced
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::KillParticlesForced() {
    static UFunction* pFnKillParticlesForced = NULL;

    if (!pFnKillParticlesForced)
        pFnKillParticlesForced =
            (UFunction*)UObject::GObjObjects()->Data[18722];

    UParticleSystemComponent_execKillParticlesForced_Parms
        KillParticlesForced_Parms;

    pFnKillParticlesForced->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnKillParticlesForced, &KillParticlesForced_Parms,
                       NULL);

    pFnKillParticlesForced->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.DeactivateSystem
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::DeactivateSystem() {
    static UFunction* pFnDeactivateSystem = NULL;

    if (!pFnDeactivateSystem)
        pFnDeactivateSystem = (UFunction*)UObject::GObjObjects()->Data[18721];

    UParticleSystemComponent_execDeactivateSystem_Parms DeactivateSystem_Parms;

    pFnDeactivateSystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeactivateSystem, &DeactivateSystem_Parms, NULL);

    pFnDeactivateSystem->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.ActivateSystem
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::ActivateSystem() {
    static UFunction* pFnActivateSystem = NULL;

    if (!pFnActivateSystem)
        pFnActivateSystem = (UFunction*)UObject::GObjObjects()->Data[10003];

    UParticleSystemComponent_execActivateSystem_Parms ActivateSystem_Parms;

    pFnActivateSystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActivateSystem, &ActivateSystem_Parms, NULL);

    pFnActivateSystem->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.SetTemplate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UParticleSystemComponent::SetTemplate() {
    static UFunction* pFnSetTemplate = NULL;

    if (!pFnSetTemplate)
        pFnSetTemplate = (UFunction*)UObject::GObjObjects()->Data[10000];

    UParticleSystemComponent_execSetTemplate_Parms SetTemplate_Parms;

    pFnSetTemplate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTemplate, &SetTemplate_Parms, NULL);

    pFnSetTemplate->FunctionFlags |= 0x400;
};

// Function Engine.ParticleSystemComponent.OnSystemFinished
// [0x00120000]
// Parameters infos:

void UParticleSystemComponent::OnSystemFinished() {
    static UFunction* pFnOnSystemFinished = NULL;

    if (!pFnOnSystemFinished)
        pFnOnSystemFinished = (UFunction*)UObject::GObjObjects()->Data[18717];

    UParticleSystemComponent_execOnSystemFinished_Parms OnSystemFinished_Parms;

    this->ProcessEvent(pFnOnSystemFinished, &OnSystemFinished_Parms, NULL);
};

// Function Engine.ParticleEmitter.GetMaxLifespan
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UParticleEmitter::GetMaxLifespan() {
    static UFunction* pFnGetMaxLifespan = NULL;

    if (!pFnGetMaxLifespan)
        pFnGetMaxLifespan = (UFunction*)UObject::GObjObjects()->Data[29677];

    UParticleEmitter_execGetMaxLifespan_Parms GetMaxLifespan_Parms;

    pFnGetMaxLifespan->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxLifespan, &GetMaxLifespan_Parms, NULL);

    pFnGetMaxLifespan->FunctionFlags |= 0x400;
};

// Function Engine.ParticleModuleForceFieldBase.GetForceFieldInstance
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UParticleModuleForceFieldBase::eventGetForceFieldInstance() {
    static UFunction* pFnGetForceFieldInstance = NULL;

    if (!pFnGetForceFieldInstance)
        pFnGetForceFieldInstance =
            (UFunction*)UObject::GObjObjects()->Data[29994];

    UParticleModuleForceFieldBase_eventGetForceFieldInstance_Parms
        GetForceFieldInstance_Parms;

    this->ProcessEvent(pFnGetForceFieldInstance, &GetForceFieldInstance_Parms,
                       NULL);
};

// Function Engine.ParticleModuleFlexForceField.GetFlexForceFieldInstance
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UParticleModuleFlexForceField::eventGetFlexForceFieldInstance() {
    static UFunction* pFnGetFlexForceFieldInstance = NULL;

    if (!pFnGetFlexForceFieldInstance)
        pFnGetFlexForceFieldInstance =
            (UFunction*)UObject::GObjObjects()->Data[29999];

    UParticleModuleFlexForceField_eventGetFlexForceFieldInstance_Parms
        GetFlexForceFieldInstance_Parms;

    this->ProcessEvent(pFnGetFlexForceFieldInstance,
                       &GetFlexForceFieldInstance_Parms, NULL);
};

// Function Engine.ParticleModuleEventSendToGame.DoEvent
// [0x00420000]
// Parameters infos:

void UParticleModuleEventSendToGame::DoEvent() {
    static UFunction* pFnDoEvent = NULL;

    if (!pFnDoEvent)
        pFnDoEvent = (UFunction*)UObject::GObjObjects()->Data[29988];

    UParticleModuleEventSendToGame_execDoEvent_Parms DoEvent_Parms;

    this->ProcessEvent(pFnDoEvent, &DoEvent_Parms, NULL);
};

// Function Engine.KActor.Reset
// [0x00020102]
// Parameters infos:

void AKActor::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[24171];

    AKActor_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.KActor.OnTeleport
// [0x00020102]
// Parameters infos:

void AKActor::OnTeleport() {
    static UFunction* pFnOnTeleport = NULL;

    if (!pFnOnTeleport)
        pFnOnTeleport = (UFunction*)UObject::GObjObjects()->Data[24165];

    AKActor_execOnTeleport_Parms OnTeleport_Parms;

    this->ProcessEvent(pFnOnTeleport, &OnTeleport_Parms, NULL);
};

// Function Engine.KActor.OnToggle
// [0x00020102]
// Parameters infos:

void AKActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[24163];

    AKActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.KActor.TakeRadiusDamage
// [0x00024102]
// Parameters infos:

void AKActor::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[24151];

    AKActor_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);
};

// Function Engine.KActor.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AKActor::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[24143];

    AKActor_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.KActor.ApplyImpulse
// [0x00824802] ( FUNC_Event )
// Parameters infos:

void AKActor::eventApplyImpulse() {
    static UFunction* pFnApplyImpulse = NULL;

    if (!pFnApplyImpulse)
        pFnApplyImpulse = (UFunction*)UObject::GObjObjects()->Data[24136];

    AKActor_eventApplyImpulse_Parms ApplyImpulse_Parms;

    this->ProcessEvent(pFnApplyImpulse, &ApplyImpulse_Parms, NULL);
};

// Function Engine.KActor.ReplicatedEvent
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void AKActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[24133];

    AKActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.KActor.SpawnedByKismet
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKActor::eventSpawnedByKismet() {
    static UFunction* pFnSpawnedByKismet = NULL;

    if (!pFnSpawnedByKismet)
        pFnSpawnedByKismet = (UFunction*)UObject::GObjObjects()->Data[24132];

    AKActor_eventSpawnedByKismet_Parms SpawnedByKismet_Parms;

    this->ProcessEvent(pFnSpawnedByKismet, &SpawnedByKismet_Parms, NULL);
};

// Function Engine.KActor.SetPhysicalCollisionProperties
// [0x00020102]
// Parameters infos:

void AKActor::SetPhysicalCollisionProperties() {
    static UFunction* pFnSetPhysicalCollisionProperties = NULL;

    if (!pFnSetPhysicalCollisionProperties)
        pFnSetPhysicalCollisionProperties =
            (UFunction*)UObject::GObjObjects()->Data[24130];

    AKActor_execSetPhysicalCollisionProperties_Parms
        SetPhysicalCollisionProperties_Parms;

    this->ProcessEvent(pFnSetPhysicalCollisionProperties,
                       &SetPhysicalCollisionProperties_Parms, NULL);
};

// Function Engine.KActor.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKActor::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[24129];

    AKActor_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.KActor.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKActor::eventFellOutOfWorld() {
    static UFunction* pFnFellOutOfWorld = NULL;

    if (!pFnFellOutOfWorld)
        pFnFellOutOfWorld = (UFunction*)UObject::GObjObjects()->Data[24127];

    AKActor_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;

    this->ProcessEvent(pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL);
};

// Function Engine.KActor.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKActor::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[24126];

    AKActor_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.KActor.ResolveRBState
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AKActor::ResolveRBState() {
    static UFunction* pFnResolveRBState = NULL;

    if (!pFnResolveRBState)
        pFnResolveRBState = (UFunction*)UObject::GObjObjects()->Data[24125];

    AKActor_execResolveRBState_Parms ResolveRBState_Parms;

    pFnResolveRBState->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResolveRBState, &ResolveRBState_Parms, NULL);

    pFnResolveRBState->FunctionFlags |= 0x400;
};

// Function Engine.KActor.GetKActorPhysMaterial
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AKActor::GetKActorPhysMaterial() {
    static UFunction* pFnGetKActorPhysMaterial = NULL;

    if (!pFnGetKActorPhysMaterial)
        pFnGetKActorPhysMaterial =
            (UFunction*)UObject::GObjObjects()->Data[24123];

    AKActor_execGetKActorPhysMaterial_Parms GetKActorPhysMaterial_Parms;

    pFnGetKActorPhysMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetKActorPhysMaterial, &GetKActorPhysMaterial_Parms,
                       NULL);

    pFnGetKActorPhysMaterial->FunctionFlags |= 0x400;
};

// Function Engine.KActorFromStatic.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKActorFromStatic::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[24220];

    AKActorFromStatic_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.KActorFromStatic.Reset
// [0x00020100]
// Parameters infos:

void AKActorFromStatic::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[24219];

    AKActorFromStatic_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.KActorFromStatic.TakeRadiusDamage
// [0x00024102]
// Parameters infos:

void AKActorFromStatic::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[24207];

    AKActorFromStatic_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);
};

// Function Engine.KActorFromStatic.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AKActorFromStatic::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[24202];

    AKActorFromStatic_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.KActorFromStatic.Bump
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AKActorFromStatic::eventBump() {
    static UFunction* pFnBump = NULL;

    if (!pFnBump) pFnBump = (UFunction*)UObject::GObjObjects()->Data[24198];

    AKActorFromStatic_eventBump_Parms Bump_Parms;

    this->ProcessEvent(pFnBump, &Bump_Parms, NULL);
};

// Function Engine.KActorFromStatic.ReceiveImpulse
// [0x00820002]
// Parameters infos:

void AKActorFromStatic::ReceiveImpulse() {
    static UFunction* pFnReceiveImpulse = NULL;

    if (!pFnReceiveImpulse)
        pFnReceiveImpulse = (UFunction*)UObject::GObjObjects()->Data[24192];

    AKActorFromStatic_execReceiveImpulse_Parms ReceiveImpulse_Parms;

    this->ProcessEvent(pFnReceiveImpulse, &ReceiveImpulse_Parms, NULL);
};

// Function Engine.KActorFromStatic.ApplyImpulse
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AKActorFromStatic::eventApplyImpulse() {
    static UFunction* pFnApplyImpulse = NULL;

    if (!pFnApplyImpulse)
        pFnApplyImpulse = (UFunction*)UObject::GObjObjects()->Data[24185];

    AKActorFromStatic_eventApplyImpulse_Parms ApplyImpulse_Parms;

    this->ProcessEvent(pFnApplyImpulse, &ApplyImpulse_Parms, NULL);
};

// Function Engine.KActorFromStatic.MakeDynamic
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void AKActorFromStatic::MakeDynamic() {
    static UFunction* pFnMakeDynamic = NULL;

    if (!pFnMakeDynamic)
        pFnMakeDynamic = (UFunction*)UObject::GObjObjects()->Data[6338];

    AKActorFromStatic_execMakeDynamic_Parms MakeDynamic_Parms;

    pFnMakeDynamic->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMakeDynamic, &MakeDynamic_Parms, NULL);

    pFnMakeDynamic->FunctionFlags |= 0x400;
};

// Function Engine.KActorFromStatic.MakeStatic
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void AKActorFromStatic::MakeStatic() {
    static UFunction* pFnMakeStatic = NULL;

    if (!pFnMakeStatic)
        pFnMakeStatic = (UFunction*)UObject::GObjObjects()->Data[24183];

    AKActorFromStatic_execMakeStatic_Parms MakeStatic_Parms;

    pFnMakeStatic->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMakeStatic, &MakeStatic_Parms, NULL);

    pFnMakeStatic->FunctionFlags |= 0x400;
};

// Function Engine.KActorFromStatic.BecomeStatic
// [0x00020002]
// Parameters infos:

void AKActorFromStatic::BecomeStatic() {
    static UFunction* pFnBecomeStatic = NULL;

    if (!pFnBecomeStatic)
        pFnBecomeStatic = (UFunction*)UObject::GObjObjects()->Data[24182];

    AKActorFromStatic_execBecomeStatic_Parms BecomeStatic_Parms;

    this->ProcessEvent(pFnBecomeStatic, &BecomeStatic_Parms, NULL);
};

// Function Engine.KActorFromStatic.OnWakeRBPhysics
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AKActorFromStatic::eventOnWakeRBPhysics() {
    static UFunction* pFnOnWakeRBPhysics = NULL;

    if (!pFnOnWakeRBPhysics)
        pFnOnWakeRBPhysics = (UFunction*)UObject::GObjObjects()->Data[24181];

    AKActorFromStatic_eventOnWakeRBPhysics_Parms OnWakeRBPhysics_Parms;

    this->ProcessEvent(pFnOnWakeRBPhysics, &OnWakeRBPhysics_Parms, NULL);
};

// Function Engine.KActorFromStatic.OnSleepRBPhysics
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AKActorFromStatic::eventOnSleepRBPhysics() {
    static UFunction* pFnOnSleepRBPhysics = NULL;

    if (!pFnOnSleepRBPhysics)
        pFnOnSleepRBPhysics = (UFunction*)UObject::GObjObjects()->Data[24180];

    AKActorFromStatic_eventOnSleepRBPhysics_Parms OnSleepRBPhysics_Parms;

    this->ProcessEvent(pFnOnSleepRBPhysics, &OnSleepRBPhysics_Parms, NULL);
};

// Function Engine.KActorFromStatic.DisablePrecomputedLighting
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AKActorFromStatic::DisablePrecomputedLighting() {
    static UFunction* pFnDisablePrecomputedLighting = NULL;

    if (!pFnDisablePrecomputedLighting)
        pFnDisablePrecomputedLighting =
            (UFunction*)UObject::GObjObjects()->Data[24176];

    AKActorFromStatic_execDisablePrecomputedLighting_Parms
        DisablePrecomputedLighting_Parms;

    pFnDisablePrecomputedLighting->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDisablePrecomputedLighting,
                       &DisablePrecomputedLighting_Parms, NULL);

    pFnDisablePrecomputedLighting->FunctionFlags |= 0x400;
};

// Function Engine.KActorSpawnable.ResetComponents
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void AKActorSpawnable::ResetComponents() {
    static UFunction* pFnResetComponents = NULL;

    if (!pFnResetComponents)
        pFnResetComponents = (UFunction*)UObject::GObjObjects()->Data[24228];

    AKActorSpawnable_execResetComponents_Parms ResetComponents_Parms;

    pFnResetComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetComponents, &ResetComponents_Parms, NULL);

    pFnResetComponents->FunctionFlags |= 0x400;
};

// Function Engine.KActorSpawnable.RecycleInternal
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKActorSpawnable::eventRecycleInternal() {
    static UFunction* pFnRecycleInternal = NULL;

    if (!pFnRecycleInternal)
        pFnRecycleInternal = (UFunction*)UObject::GObjObjects()->Data[24227];

    AKActorSpawnable_eventRecycleInternal_Parms RecycleInternal_Parms;

    this->ProcessEvent(pFnRecycleInternal, &RecycleInternal_Parms, NULL);
};

// Function Engine.KActorSpawnable.Recycle
// [0x00020102]
// Parameters infos:

void AKActorSpawnable::Recycle() {
    static UFunction* pFnRecycle = NULL;

    if (!pFnRecycle)
        pFnRecycle = (UFunction*)UObject::GObjObjects()->Data[24226];

    AKActorSpawnable_execRecycle_Parms Recycle_Parms;

    this->ProcessEvent(pFnRecycle, &Recycle_Parms, NULL);
};

// Function Engine.KActorSpawnable.Initialize
// [0x00020102]
// Parameters infos:

void AKActorSpawnable::Initialize() {
    static UFunction* pFnInitialize = NULL;

    if (!pFnInitialize)
        pFnInitialize = (UFunction*)UObject::GObjObjects()->Data[24225];

    AKActorSpawnable_execInitialize_Parms Initialize_Parms;

    this->ProcessEvent(pFnInitialize, &Initialize_Parms, NULL);
};

// Function Engine.FlexForceFieldActor.OnToggle
// [0x00020102]
// Parameters infos:

void AFlexForceFieldActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[19847];

    AFlexForceFieldActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.KAsset.DoKismetAttachment
// [0x00020002]
// Parameters infos:

void AKAsset::DoKismetAttachment() {
    static UFunction* pFnDoKismetAttachment = NULL;

    if (!pFnDoKismetAttachment)
        pFnDoKismetAttachment = (UFunction*)UObject::GObjObjects()->Data[24267];

    AKAsset_execDoKismetAttachment_Parms DoKismetAttachment_Parms;

    this->ProcessEvent(pFnDoKismetAttachment, &DoKismetAttachment_Parms, NULL);
};

// Function Engine.KAsset.OnTeleport
// [0x00020102]
// Parameters infos:

void AKAsset::OnTeleport() {
    static UFunction* pFnOnTeleport = NULL;

    if (!pFnOnTeleport)
        pFnOnTeleport = (UFunction*)UObject::GObjObjects()->Data[24264];

    AKAsset_execOnTeleport_Parms OnTeleport_Parms;

    this->ProcessEvent(pFnOnTeleport, &OnTeleport_Parms, NULL);
};

// Function Engine.KAsset.OnToggle
// [0x00020102]
// Parameters infos:

void AKAsset::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[24262];

    AKAsset_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.KAsset.TakeRadiusDamage
// [0x00024102]
// Parameters infos:

void AKAsset::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[24252];

    AKAsset_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);
};

// Function Engine.KAsset.TakeDamage
// [0x00824902] ( FUNC_Event )
// Parameters infos:

void AKAsset::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[24243];

    AKAsset_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.KAsset.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKAsset::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[24241];

    AKAsset_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.KAsset.SetMeshAndPhysAsset
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void AKAsset::SetMeshAndPhysAsset() {
    static UFunction* pFnSetMeshAndPhysAsset = NULL;

    if (!pFnSetMeshAndPhysAsset)
        pFnSetMeshAndPhysAsset =
            (UFunction*)UObject::GObjObjects()->Data[24238];

    AKAsset_execSetMeshAndPhysAsset_Parms SetMeshAndPhysAsset_Parms;

    this->ProcessEvent(pFnSetMeshAndPhysAsset, &SetMeshAndPhysAsset_Parms,
                       NULL);
};

// Function Engine.KAsset.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AKAsset::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[24237];

    AKAsset_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Pawn.SetMeshLightingChannels
// [0x00020100]
// Parameters infos:

void APawn::SetMeshLightingChannels() {
    static UFunction* pFnSetMeshLightingChannels = NULL;

    if (!pFnSetMeshLightingChannels)
        pFnSetMeshLightingChannels =
            (UFunction*)UObject::GObjObjects()->Data[25966];

    APawn_execSetMeshLightingChannels_Parms SetMeshLightingChannels_Parms;

    this->ProcessEvent(pFnSetMeshLightingChannels,
                       &SetMeshLightingChannels_Parms, NULL);
};

// Function Engine.Pawn.OnSetVelocity
// [0x00020102]
// Parameters infos:

void APawn::OnSetVelocity() {
    static UFunction* pFnOnSetVelocity = NULL;

    if (!pFnOnSetVelocity)
        pFnOnSetVelocity = (UFunction*)UObject::GObjObjects()->Data[25964];

    APawn_execOnSetVelocity_Parms OnSetVelocity_Parms;

    this->ProcessEvent(pFnOnSetVelocity, &OnSetVelocity_Parms, NULL);
};

// Function Engine.Pawn.Speak
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventSpeak() {
    static UFunction* pFnSpeak = NULL;

    if (!pFnSpeak) pFnSpeak = (UFunction*)UObject::GObjObjects()->Data[25962];

    APawn_eventSpeak_Parms Speak_Parms;

    this->ProcessEvent(pFnSpeak, &Speak_Parms, NULL);
};

// Function Engine.Pawn.SetScalarParameterInterp
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::SetScalarParameterInterp() {
    static UFunction* pFnSetScalarParameterInterp = NULL;

    if (!pFnSetScalarParameterInterp)
        pFnSetScalarParameterInterp =
            (UFunction*)UObject::GObjObjects()->Data[14691];

    APawn_execSetScalarParameterInterp_Parms SetScalarParameterInterp_Parms;

    pFnSetScalarParameterInterp->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetScalarParameterInterp,
                       &SetScalarParameterInterp_Parms, NULL);

    pFnSetScalarParameterInterp->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetRootMotionInterpCurrentTime
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void APawn::SetRootMotionInterpCurrentTime() {
    static UFunction* pFnSetRootMotionInterpCurrentTime = NULL;

    if (!pFnSetRootMotionInterpCurrentTime)
        pFnSetRootMotionInterpCurrentTime =
            (UFunction*)UObject::GObjObjects()->Data[25957];

    APawn_execSetRootMotionInterpCurrentTime_Parms
        SetRootMotionInterpCurrentTime_Parms;

    pFnSetRootMotionInterpCurrentTime->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRootMotionInterpCurrentTime,
                       &SetRootMotionInterpCurrentTime_Parms, NULL);

    pFnSetRootMotionInterpCurrentTime->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetCinematicMode
// [0x00020100]
// Parameters infos:

void APawn::SetCinematicMode() {
    static UFunction* pFnSetCinematicMode = NULL;

    if (!pFnSetCinematicMode)
        pFnSetCinematicMode = (UFunction*)UObject::GObjObjects()->Data[25955];

    APawn_execSetCinematicMode_Parms SetCinematicMode_Parms;

    this->ProcessEvent(pFnSetCinematicMode, &SetCinematicMode_Parms, NULL);
};

// Function Engine.Pawn.ZeroMovementVariables
// [0x00020102]
// Parameters infos:

void APawn::ZeroMovementVariables() {
    static UFunction* pFnZeroMovementVariables = NULL;

    if (!pFnZeroMovementVariables)
        pFnZeroMovementVariables =
            (UFunction*)UObject::GObjObjects()->Data[25954];

    APawn_execZeroMovementVariables_Parms ZeroMovementVariables_Parms;

    this->ProcessEvent(pFnZeroMovementVariables, &ZeroMovementVariables_Parms,
                       NULL);
};

// Function Engine.Pawn.ClearPathStep
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::ClearPathStep() {
    static UFunction* pFnClearPathStep = NULL;

    if (!pFnClearPathStep)
        pFnClearPathStep = (UFunction*)UObject::GObjObjects()->Data[25953];

    APawn_execClearPathStep_Parms ClearPathStep_Parms;

    pFnClearPathStep->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearPathStep, &ClearPathStep_Parms, NULL);

    pFnClearPathStep->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.DrawPathStep
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::DrawPathStep() {
    static UFunction* pFnDrawPathStep = NULL;

    if (!pFnDrawPathStep)
        pFnDrawPathStep = (UFunction*)UObject::GObjObjects()->Data[25951];

    APawn_execDrawPathStep_Parms DrawPathStep_Parms;

    pFnDrawPathStep->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawPathStep, &DrawPathStep_Parms, NULL);

    pFnDrawPathStep->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IncrementPathChild
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::IncrementPathChild() {
    static UFunction* pFnIncrementPathChild = NULL;

    if (!pFnIncrementPathChild)
        pFnIncrementPathChild = (UFunction*)UObject::GObjObjects()->Data[25948];

    APawn_execIncrementPathChild_Parms IncrementPathChild_Parms;

    pFnIncrementPathChild->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIncrementPathChild, &IncrementPathChild_Parms, NULL);

    pFnIncrementPathChild->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IncrementPathStep
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::IncrementPathStep() {
    static UFunction* pFnIncrementPathStep = NULL;

    if (!pFnIncrementPathStep)
        pFnIncrementPathStep = (UFunction*)UObject::GObjObjects()->Data[25945];

    APawn_execIncrementPathStep_Parms IncrementPathStep_Parms;

    pFnIncrementPathStep->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIncrementPathStep, &IncrementPathStep_Parms, NULL);

    pFnIncrementPathStep->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.CreatePathGoalEvaluator
// [0x00020002]
// Parameters infos:

void APawn::CreatePathGoalEvaluator() {
    static UFunction* pFnCreatePathGoalEvaluator = NULL;

    if (!pFnCreatePathGoalEvaluator)
        pFnCreatePathGoalEvaluator =
            (UFunction*)UObject::GObjObjects()->Data[22947];

    APawn_execCreatePathGoalEvaluator_Parms CreatePathGoalEvaluator_Parms;

    this->ProcessEvent(pFnCreatePathGoalEvaluator,
                       &CreatePathGoalEvaluator_Parms, NULL);
};

// Function Engine.Pawn.CreatePathConstraint
// [0x00020002]
// Parameters infos:

void APawn::CreatePathConstraint() {
    static UFunction* pFnCreatePathConstraint = NULL;

    if (!pFnCreatePathConstraint)
        pFnCreatePathConstraint =
            (UFunction*)UObject::GObjObjects()->Data[25941];

    APawn_execCreatePathConstraint_Parms CreatePathConstraint_Parms;

    this->ProcessEvent(pFnCreatePathConstraint, &CreatePathConstraint_Parms,
                       NULL);
};

// Function Engine.Pawn.AddGoalEvaluator
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::AddGoalEvaluator() {
    static UFunction* pFnAddGoalEvaluator = NULL;

    if (!pFnAddGoalEvaluator)
        pFnAddGoalEvaluator = (UFunction*)UObject::GObjObjects()->Data[25939];

    APawn_execAddGoalEvaluator_Parms AddGoalEvaluator_Parms;

    pFnAddGoalEvaluator->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddGoalEvaluator, &AddGoalEvaluator_Parms, NULL);

    pFnAddGoalEvaluator->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.AddPathConstraint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::AddPathConstraint() {
    static UFunction* pFnAddPathConstraint = NULL;

    if (!pFnAddPathConstraint)
        pFnAddPathConstraint = (UFunction*)UObject::GObjObjects()->Data[25937];

    APawn_execAddPathConstraint_Parms AddPathConstraint_Parms;

    pFnAddPathConstraint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddPathConstraint, &AddPathConstraint_Parms, NULL);

    pFnAddPathConstraint->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ClearConstraints
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::ClearConstraints() {
    static UFunction* pFnClearConstraints = NULL;

    if (!pFnClearConstraints)
        pFnClearConstraints = (UFunction*)UObject::GObjObjects()->Data[25936];

    APawn_execClearConstraints_Parms ClearConstraints_Parms;

    pFnClearConstraints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearConstraints, &ClearConstraints_Parms, NULL);

    pFnClearConstraints->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SoakPause
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventSoakPause() {
    static UFunction* pFnSoakPause = NULL;

    if (!pFnSoakPause)
        pFnSoakPause = (UFunction*)UObject::GObjObjects()->Data[25934];

    APawn_eventSoakPause_Parms SoakPause_Parms;

    this->ProcessEvent(pFnSoakPause, &SoakPause_Parms, NULL);
};

// Function Engine.Pawn.BecomeViewTarget
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventBecomeViewTarget() {
    static UFunction* pFnBecomeViewTarget = NULL;

    if (!pFnBecomeViewTarget)
        pFnBecomeViewTarget = (UFunction*)UObject::GObjObjects()->Data[25932];

    APawn_eventBecomeViewTarget_Parms BecomeViewTarget_Parms;

    this->ProcessEvent(pFnBecomeViewTarget, &BecomeViewTarget_Parms, NULL);
};

// Function Engine.Pawn.MessagePlayer
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APawn::eventMessagePlayer() {
    static UFunction* pFnMessagePlayer = NULL;

    if (!pFnMessagePlayer)
        pFnMessagePlayer = (UFunction*)UObject::GObjObjects()->Data[16264];

    APawn_eventMessagePlayer_Parms MessagePlayer_Parms;

    this->ProcessEvent(pFnMessagePlayer, &MessagePlayer_Parms, NULL);
};

// Function Engine.Pawn.HandleTeleport
// [0x00824102]
// Parameters infos:

void APawn::HandleTeleport() {
    static UFunction* pFnHandleTeleport = NULL;

    if (!pFnHandleTeleport)
        pFnHandleTeleport = (UFunction*)UObject::GObjObjects()->Data[25911];

    APawn_execHandleTeleport_Parms HandleTeleport_Parms;

    this->ProcessEvent(pFnHandleTeleport, &HandleTeleport_Parms, NULL);
};

// Function Engine.Pawn.OnTeleport
// [0x00020102]
// Parameters infos:

void APawn::OnTeleport() {
    static UFunction* pFnOnTeleport = NULL;

    if (!pFnOnTeleport)
        pFnOnTeleport = (UFunction*)UObject::GObjObjects()->Data[25907];

    APawn_execOnTeleport_Parms OnTeleport_Parms;

    this->ProcessEvent(pFnOnTeleport, &OnTeleport_Parms, NULL);
};

// Function Engine.Pawn.OnSetMaterial
// [0x00020002]
// Parameters infos:

void APawn::OnSetMaterial() {
    static UFunction* pFnOnSetMaterial = NULL;

    if (!pFnOnSetMaterial)
        pFnOnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[25905];

    APawn_execOnSetMaterial_Parms OnSetMaterial_Parms;

    this->ProcessEvent(pFnOnSetMaterial, &OnSetMaterial_Parms, NULL);
};

// Function Engine.Pawn.GetDamageScaling
// [0x00020002]
// Parameters infos:

void APawn::GetDamageScaling() {
    static UFunction* pFnGetDamageScaling = NULL;

    if (!pFnGetDamageScaling)
        pFnGetDamageScaling = (UFunction*)UObject::GObjObjects()->Data[25903];

    APawn_execGetDamageScaling_Parms GetDamageScaling_Parms;

    this->ProcessEvent(pFnGetDamageScaling, &GetDamageScaling_Parms, NULL);
};

// Function Engine.Pawn.DoKismetAttachment
// [0x00020002]
// Parameters infos:

void APawn::DoKismetAttachment() {
    static UFunction* pFnDoKismetAttachment = NULL;

    if (!pFnDoKismetAttachment)
        pFnDoKismetAttachment = (UFunction*)UObject::GObjObjects()->Data[25896];

    APawn_execDoKismetAttachment_Parms DoKismetAttachment_Parms;

    this->ProcessEvent(pFnDoKismetAttachment, &DoKismetAttachment_Parms, NULL);
};

// Function Engine.Pawn.SpawnedByKismet
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventSpawnedByKismet() {
    static UFunction* pFnSpawnedByKismet = NULL;

    if (!pFnSpawnedByKismet)
        pFnSpawnedByKismet = (UFunction*)UObject::GObjObjects()->Data[25895];

    APawn_eventSpawnedByKismet_Parms SpawnedByKismet_Parms;

    this->ProcessEvent(pFnSpawnedByKismet, &SpawnedByKismet_Parms, NULL);
};

// Function Engine.Pawn.IsStationary
// [0x00020002]
// Parameters infos:

void APawn::IsStationary() {
    static UFunction* pFnIsStationary = NULL;

    if (!pFnIsStationary)
        pFnIsStationary = (UFunction*)UObject::GObjObjects()->Data[25893];

    APawn_execIsStationary_Parms IsStationary_Parms;

    this->ProcessEvent(pFnIsStationary, &IsStationary_Parms, NULL);
};

// Function Engine.Pawn.GetCollisionExtent
// [0x00820103] ( FUNC_Final )
// Parameters infos:

void APawn::GetCollisionExtent() {
    static UFunction* pFnGetCollisionExtent = NULL;

    if (!pFnGetCollisionExtent)
        pFnGetCollisionExtent = (UFunction*)UObject::GObjObjects()->Data[16267];

    APawn_execGetCollisionExtent_Parms GetCollisionExtent_Parms;

    this->ProcessEvent(pFnGetCollisionExtent, &GetCollisionExtent_Parms, NULL);
};

// Function Engine.Pawn.GetCollisionHeight
// [0x00020102]
// Parameters infos:

void APawn::GetCollisionHeight() {
    static UFunction* pFnGetCollisionHeight = NULL;

    if (!pFnGetCollisionHeight)
        pFnGetCollisionHeight = (UFunction*)UObject::GObjObjects()->Data[19724];

    APawn_execGetCollisionHeight_Parms GetCollisionHeight_Parms;

    this->ProcessEvent(pFnGetCollisionHeight, &GetCollisionHeight_Parms, NULL);
};

// Function Engine.Pawn.GetCollisionRadius
// [0x00020102]
// Parameters infos:

void APawn::GetCollisionRadius() {
    static UFunction* pFnGetCollisionRadius = NULL;

    if (!pFnGetCollisionRadius)
        pFnGetCollisionRadius = (UFunction*)UObject::GObjObjects()->Data[25890];

    APawn_execGetCollisionRadius_Parms GetCollisionRadius_Parms;

    this->ProcessEvent(pFnGetCollisionRadius, &GetCollisionRadius_Parms, NULL);
};

// Function Engine.Pawn.CheatFly
// [0x00020002]
// Parameters infos:

void APawn::CheatFly() {
    static UFunction* pFnCheatFly = NULL;

    if (!pFnCheatFly)
        pFnCheatFly = (UFunction*)UObject::GObjObjects()->Data[16300];

    APawn_execCheatFly_Parms CheatFly_Parms;

    this->ProcessEvent(pFnCheatFly, &CheatFly_Parms, NULL);
};

// Function Engine.Pawn.CheatGhost
// [0x00020002]
// Parameters infos:

void APawn::CheatGhost() {
    static UFunction* pFnCheatGhost = NULL;

    if (!pFnCheatGhost)
        pFnCheatGhost = (UFunction*)UObject::GObjObjects()->Data[16296];

    APawn_execCheatGhost_Parms CheatGhost_Parms;

    this->ProcessEvent(pFnCheatGhost, &CheatGhost_Parms, NULL);
};

// Function Engine.Pawn.CheatWalk
// [0x00020002]
// Parameters infos:

void APawn::CheatWalk() {
    static UFunction* pFnCheatWalk = NULL;

    if (!pFnCheatWalk)
        pFnCheatWalk = (UFunction*)UObject::GObjObjects()->Data[16298];

    APawn_execCheatWalk_Parms CheatWalk_Parms;

    this->ProcessEvent(pFnCheatWalk, &CheatWalk_Parms, NULL);
};

// Function Engine.Pawn.PlayWeaponSwitch
// [0x00020100]
// Parameters infos:

void APawn::PlayWeaponSwitch() {
    static UFunction* pFnPlayWeaponSwitch = NULL;

    if (!pFnPlayWeaponSwitch)
        pFnPlayWeaponSwitch = (UFunction*)UObject::GObjObjects()->Data[25887];

    APawn_execPlayWeaponSwitch_Parms PlayWeaponSwitch_Parms;

    this->ProcessEvent(pFnPlayWeaponSwitch, &PlayWeaponSwitch_Parms, NULL);
};

// Function Engine.Pawn.SetActiveWeapon
// [0x00020102]
// Parameters infos:

void APawn::SetActiveWeapon() {
    static UFunction* pFnSetActiveWeapon = NULL;

    if (!pFnSetActiveWeapon)
        pFnSetActiveWeapon = (UFunction*)UObject::GObjObjects()->Data[25885];

    APawn_execSetActiveWeapon_Parms SetActiveWeapon_Parms;

    this->ProcessEvent(pFnSetActiveWeapon, &SetActiveWeapon_Parms, NULL);
};

// Function Engine.Pawn.TossInventory
// [0x00824002]
// Parameters infos:

void APawn::TossInventory() {
    static UFunction* pFnTossInventory = NULL;

    if (!pFnTossInventory)
        pFnTossInventory = (UFunction*)UObject::GObjObjects()->Data[25876];

    APawn_execTossInventory_Parms TossInventory_Parms;

    this->ProcessEvent(pFnTossInventory, &TossInventory_Parms, NULL);
};

// Function Engine.Pawn.ThrowActiveWeapon
// [0x00024002]
// Parameters infos:

void APawn::ThrowActiveWeapon() {
    static UFunction* pFnThrowActiveWeapon = NULL;

    if (!pFnThrowActiveWeapon)
        pFnThrowActiveWeapon = (UFunction*)UObject::GObjObjects()->Data[25874];

    APawn_execThrowActiveWeapon_Parms ThrowActiveWeapon_Parms;

    this->ProcessEvent(pFnThrowActiveWeapon, &ThrowActiveWeapon_Parms, NULL);
};

// Function Engine.Pawn.DrawHUD
// [0x00020102]
// Parameters infos:

void APawn::DrawHUD() {
    static UFunction* pFnDrawHUD = NULL;

    if (!pFnDrawHUD)
        pFnDrawHUD = (UFunction*)UObject::GObjObjects()->Data[25872];

    APawn_execDrawHUD_Parms DrawHUD_Parms;

    this->ProcessEvent(pFnDrawHUD, &DrawHUD_Parms, NULL);
};

// Function Engine.Pawn.FindInventoryType
// [0x00024103] ( FUNC_Final )
// Parameters infos:

void APawn::FindInventoryType() {
    static UFunction* pFnFindInventoryType = NULL;

    if (!pFnFindInventoryType)
        pFnFindInventoryType = (UFunction*)UObject::GObjObjects()->Data[16289];

    APawn_execFindInventoryType_Parms FindInventoryType_Parms;

    this->ProcessEvent(pFnFindInventoryType, &FindInventoryType_Parms, NULL);
};

// Function Engine.Pawn.CreateInventory
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APawn::eventCreateInventory() {
    static UFunction* pFnCreateInventory = NULL;

    if (!pFnCreateInventory)
        pFnCreateInventory = (UFunction*)UObject::GObjObjects()->Data[16291];

    APawn_eventCreateInventory_Parms CreateInventory_Parms;

    this->ProcessEvent(pFnCreateInventory, &CreateInventory_Parms, NULL);
};

// Function Engine.Pawn.AddDefaultInventory
// [0x00020000]
// Parameters infos:

void APawn::AddDefaultInventory() {
    static UFunction* pFnAddDefaultInventory = NULL;

    if (!pFnAddDefaultInventory)
        pFnAddDefaultInventory =
            (UFunction*)UObject::GObjObjects()->Data[25867];

    APawn_execAddDefaultInventory_Parms AddDefaultInventory_Parms;

    this->ProcessEvent(pFnAddDefaultInventory, &AddDefaultInventory_Parms,
                       NULL);
};

// Function Engine.Pawn.StopDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventStopDriving() {
    static UFunction* pFnStopDriving = NULL;

    if (!pFnStopDriving)
        pFnStopDriving = (UFunction*)UObject::GObjObjects()->Data[25865];

    APawn_eventStopDriving_Parms StopDriving_Parms;

    this->ProcessEvent(pFnStopDriving, &StopDriving_Parms, NULL);
};

// Function Engine.Pawn.StartDriving
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventStartDriving() {
    static UFunction* pFnStartDriving = NULL;

    if (!pFnStartDriving)
        pFnStartDriving = (UFunction*)UObject::GObjObjects()->Data[25863];

    APawn_eventStartDriving_Parms StartDriving_Parms;

    this->ProcessEvent(pFnStartDriving, &StartDriving_Parms, NULL);
};

// Function Engine.Pawn.CanThrowWeapon
// [0x00020102]
// Parameters infos:

void APawn::CanThrowWeapon() {
    static UFunction* pFnCanThrowWeapon = NULL;

    if (!pFnCanThrowWeapon)
        pFnCanThrowWeapon = (UFunction*)UObject::GObjObjects()->Data[12463];

    APawn_execCanThrowWeapon_Parms CanThrowWeapon_Parms;

    this->ProcessEvent(pFnCanThrowWeapon, &CanThrowWeapon_Parms, NULL);
};

// Function Engine.Pawn.Suicide
// [0x00020002]
// Parameters infos:

void APawn::Suicide() {
    static UFunction* pFnSuicide = NULL;

    if (!pFnSuicide)
        pFnSuicide = (UFunction*)UObject::GObjObjects()->Data[25862];

    APawn_execSuicide_Parms Suicide_Parms;

    this->ProcessEvent(pFnSuicide, &Suicide_Parms, NULL);
};

// Function Engine.Pawn.GetVehicleBase
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::GetVehicleBase() {
    static UFunction* pFnGetVehicleBase = NULL;

    if (!pFnGetVehicleBase)
        pFnGetVehicleBase = (UFunction*)UObject::GObjObjects()->Data[25860];

    APawn_execGetVehicleBase_Parms GetVehicleBase_Parms;

    pFnGetVehicleBase->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetVehicleBase, &GetVehicleBase_Parms, NULL);

    pFnGetVehicleBase->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.PlayLanded
// [0x00020000]
// Parameters infos:

void APawn::PlayLanded() {
    static UFunction* pFnPlayLanded = NULL;

    if (!pFnPlayLanded)
        pFnPlayLanded = (UFunction*)UObject::GObjObjects()->Data[25858];

    APawn_execPlayLanded_Parms PlayLanded_Parms;

    this->ProcessEvent(pFnPlayLanded, &PlayLanded_Parms, NULL);
};

// Function Engine.Pawn.CannotJumpNow
// [0x00020002]
// Parameters infos:

void APawn::CannotJumpNow() {
    static UFunction* pFnCannotJumpNow = NULL;

    if (!pFnCannotJumpNow)
        pFnCannotJumpNow = (UFunction*)UObject::GObjObjects()->Data[12442];

    APawn_execCannotJumpNow_Parms CannotJumpNow_Parms;

    this->ProcessEvent(pFnCannotJumpNow, &CannotJumpNow_Parms, NULL);
};

// Function Engine.Pawn.PlayFootStepSound
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APawn::eventPlayFootStepSound() {
    static UFunction* pFnPlayFootStepSound = NULL;

    if (!pFnPlayFootStepSound)
        pFnPlayFootStepSound = (UFunction*)UObject::GObjObjects()->Data[25856];

    APawn_eventPlayFootStepSound_Parms PlayFootStepSound_Parms;

    this->ProcessEvent(pFnPlayFootStepSound, &PlayFootStepSound_Parms, NULL);
};

// Function Engine.Pawn.TornOff
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventTornOff() {
    static UFunction* pFnTornOff = NULL;

    if (!pFnTornOff)
        pFnTornOff = (UFunction*)UObject::GObjObjects()->Data[25855];

    APawn_eventTornOff_Parms TornOff_Parms;

    this->ProcessEvent(pFnTornOff, &TornOff_Parms, NULL);
};

// Function Engine.Pawn.PlayDying
// [0x00020102]
// Parameters infos:

void APawn::PlayDying() {
    static UFunction* pFnPlayDying = NULL;

    if (!pFnPlayDying)
        pFnPlayDying = (UFunction*)UObject::GObjObjects()->Data[25852];

    APawn_execPlayDying_Parms PlayDying_Parms;

    this->ProcessEvent(pFnPlayDying, &PlayDying_Parms, NULL);
};

// Function Engine.Pawn.SetDyingPhysics
// [0x00020002]
// Parameters infos:

void APawn::SetDyingPhysics() {
    static UFunction* pFnSetDyingPhysics = NULL;

    if (!pFnSetDyingPhysics)
        pFnSetDyingPhysics = (UFunction*)UObject::GObjObjects()->Data[25805];

    APawn_execSetDyingPhysics_Parms SetDyingPhysics_Parms;

    this->ProcessEvent(pFnSetDyingPhysics, &SetDyingPhysics_Parms, NULL);
};

// Function Engine.Pawn.TurnOff
// [0x00020102]
// Parameters infos:

void APawn::TurnOff() {
    static UFunction* pFnTurnOff = NULL;

    if (!pFnTurnOff)
        pFnTurnOff = (UFunction*)UObject::GObjObjects()->Data[25804];

    APawn_execTurnOff_Parms TurnOff_Parms;

    this->ProcessEvent(pFnTurnOff, &TurnOff_Parms, NULL);
};

// Function Engine.Pawn.PlayHit
// [0x00020002]
// Parameters infos:

void APawn::PlayHit() {
    static UFunction* pFnPlayHit = NULL;

    if (!pFnPlayHit)
        pFnPlayHit = (UFunction*)UObject::GObjObjects()->Data[25797];

    APawn_execPlayHit_Parms PlayHit_Parms;

    this->ProcessEvent(pFnPlayHit, &PlayHit_Parms, NULL);
};

// Function Engine.Pawn.PlayDyingSound
// [0x00020000]
// Parameters infos:

void APawn::PlayDyingSound() {
    static UFunction* pFnPlayDyingSound = NULL;

    if (!pFnPlayDyingSound)
        pFnPlayDyingSound = (UFunction*)UObject::GObjObjects()->Data[25796];

    APawn_execPlayDyingSound_Parms PlayDyingSound_Parms;

    this->ProcessEvent(pFnPlayDyingSound, &PlayDyingSound_Parms, NULL);
};

// Function Engine.Pawn.DoJump
// [0x00020002]
// Parameters infos:

void APawn::DoJump() {
    static UFunction* pFnDoJump = NULL;

    if (!pFnDoJump) pFnDoJump = (UFunction*)UObject::GObjObjects()->Data[12433];

    APawn_execDoJump_Parms DoJump_Parms;

    this->ProcessEvent(pFnDoJump, &DoJump_Parms, NULL);
};

// Function Engine.Pawn.CheckWaterJump
// [0x00C20002]
// Parameters infos:

void APawn::CheckWaterJump() {
    static UFunction* pFnCheckWaterJump = NULL;

    if (!pFnCheckWaterJump)
        pFnCheckWaterJump = (UFunction*)UObject::GObjObjects()->Data[12421];

    APawn_execCheckWaterJump_Parms CheckWaterJump_Parms;

    this->ProcessEvent(pFnCheckWaterJump, &CheckWaterJump_Parms, NULL);
};

// Function Engine.Pawn.TakeDrowningDamage
// [0x00020000]
// Parameters infos:

void APawn::TakeDrowningDamage() {
    static UFunction* pFnTakeDrowningDamage = NULL;

    if (!pFnTakeDrowningDamage)
        pFnTakeDrowningDamage = (UFunction*)UObject::GObjObjects()->Data[25786];

    APawn_execTakeDrowningDamage_Parms TakeDrowningDamage_Parms;

    this->ProcessEvent(pFnTakeDrowningDamage, &TakeDrowningDamage_Parms, NULL);
};

// Function Engine.Pawn.BreathTimer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventBreathTimer() {
    static UFunction* pFnBreathTimer = NULL;

    if (!pFnBreathTimer)
        pFnBreathTimer = (UFunction*)UObject::GObjObjects()->Data[25785];

    APawn_eventBreathTimer_Parms BreathTimer_Parms;

    this->ProcessEvent(pFnBreathTimer, &BreathTimer_Parms, NULL);
};

// Function Engine.Pawn.TouchingWaterVolume
// [0x00020002]
// Parameters infos:

void APawn::TouchingWaterVolume() {
    static UFunction* pFnTouchingWaterVolume = NULL;

    if (!pFnTouchingWaterVolume)
        pFnTouchingWaterVolume =
            (UFunction*)UObject::GObjObjects()->Data[12424];

    APawn_execTouchingWaterVolume_Parms TouchingWaterVolume_Parms;

    this->ProcessEvent(pFnTouchingWaterVolume, &TouchingWaterVolume_Parms,
                       NULL);
};

// Function Engine.Pawn.HeadVolumeChange
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventHeadVolumeChange() {
    static UFunction* pFnHeadVolumeChange = NULL;

    if (!pFnHeadVolumeChange)
        pFnHeadVolumeChange = (UFunction*)UObject::GObjObjects()->Data[25782];

    APawn_eventHeadVolumeChange_Parms HeadVolumeChange_Parms;

    this->ProcessEvent(pFnHeadVolumeChange, &HeadVolumeChange_Parms, NULL);
};

// Function Engine.Pawn.TickSpecial
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APawn::eventTickSpecial() {
    static UFunction* pFnTickSpecial = NULL;

    if (!pFnTickSpecial)
        pFnTickSpecial = (UFunction*)UObject::GObjObjects()->Data[25780];

    APawn_eventTickSpecial_Parms TickSpecial_Parms;

    this->ProcessEvent(pFnTickSpecial, &TickSpecial_Parms, NULL);
};

// Function Engine.Pawn.Landed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventLanded() {
    static UFunction* pFnLanded = NULL;

    if (!pFnLanded) pFnLanded = (UFunction*)UObject::GObjObjects()->Data[25777];

    APawn_eventLanded_Parms Landed_Parms;

    this->ProcessEvent(pFnLanded, &Landed_Parms, NULL);
};

// Function Engine.Pawn.Falling
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APawn::eventFalling() {
    static UFunction* pFnFalling = NULL;

    if (!pFnFalling)
        pFnFalling = (UFunction*)UObject::GObjObjects()->Data[25776];

    APawn_eventFalling_Parms Falling_Parms;

    this->ProcessEvent(pFnFalling, &Falling_Parms, NULL);
};

// Function Engine.Pawn.DelayTriggerDeath
// [0x00020002]
// Parameters infos:

void APawn::DelayTriggerDeath() {
    static UFunction* pFnDelayTriggerDeath = NULL;

    if (!pFnDelayTriggerDeath)
        pFnDelayTriggerDeath = (UFunction*)UObject::GObjObjects()->Data[25775];

    APawn_execDelayTriggerDeath_Parms DelayTriggerDeath_Parms;

    this->ProcessEvent(pFnDelayTriggerDeath, &DelayTriggerDeath_Parms, NULL);
};

// Function Engine.Pawn.Died
// [0x00020002]
// Parameters infos:

void APawn::Died() {
    static UFunction* pFnDied = NULL;

    if (!pFnDied) pFnDied = (UFunction*)UObject::GObjObjects()->Data[12508];

    APawn_execDied_Parms Died_Parms;

    this->ProcessEvent(pFnDied, &Died_Parms, NULL);
};

// Function Engine.Pawn.ThrowWeaponOnDeath
// [0x00020002]
// Parameters infos:

void APawn::ThrowWeaponOnDeath() {
    static UFunction* pFnThrowWeaponOnDeath = NULL;

    if (!pFnThrowWeaponOnDeath)
        pFnThrowWeaponOnDeath = (UFunction*)UObject::GObjObjects()->Data[25770];

    APawn_execThrowWeaponOnDeath_Parms ThrowWeaponOnDeath_Parms;

    this->ProcessEvent(pFnThrowWeaponOnDeath, &ThrowWeaponOnDeath_Parms, NULL);
};

// Function Engine.Pawn.IsSameTeam
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventIsSameTeam() {
    static UFunction* pFnIsSameTeam = NULL;

    if (!pFnIsSameTeam)
        pFnIsSameTeam = (UFunction*)UObject::GObjObjects()->Data[25767];

    APawn_eventIsSameTeam_Parms IsSameTeam_Parms;

    this->ProcessEvent(pFnIsSameTeam, &IsSameTeam_Parms, NULL);
};

// Function Engine.Pawn.GetTeam
// [0x00020102]
// Parameters infos:

void APawn::GetTeam() {
    static UFunction* pFnGetTeam = NULL;

    if (!pFnGetTeam)
        pFnGetTeam = (UFunction*)UObject::GObjObjects()->Data[25765];

    APawn_execGetTeam_Parms GetTeam_Parms;

    this->ProcessEvent(pFnGetTeam, &GetTeam_Parms, NULL);
};

// Function Engine.Pawn.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APawn::GetTeamNum() {
    static UFunction* pFnGetTeamNum = NULL;

    if (!pFnGetTeamNum)
        pFnGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[25763];

    APawn_execGetTeamNum_Parms GetTeamNum_Parms;

    pFnGetTeamNum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTeamNum, &GetTeamNum_Parms, NULL);

    pFnGetTeamNum->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void APawn::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[25752];

    APawn_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.Pawn.SetKillInstigator
// [0x00020002]
// Parameters infos:

void APawn::SetKillInstigator() {
    static UFunction* pFnSetKillInstigator = NULL;

    if (!pFnSetKillInstigator)
        pFnSetKillInstigator = (UFunction*)UObject::GObjObjects()->Data[25748];

    APawn_execSetKillInstigator_Parms SetKillInstigator_Parms;

    this->ProcessEvent(pFnSetKillInstigator, &SetKillInstigator_Parms, NULL);
};

// Function Engine.Pawn.NotifyTakeHit
// [0x00020002]
// Parameters infos:

void APawn::NotifyTakeHit() {
    static UFunction* pFnNotifyTakeHit = NULL;

    if (!pFnNotifyTakeHit)
        pFnNotifyTakeHit = (UFunction*)UObject::GObjObjects()->Data[25741];

    APawn_execNotifyTakeHit_Parms NotifyTakeHit_Parms;

    this->ProcessEvent(pFnNotifyTakeHit, &NotifyTakeHit_Parms, NULL);
};

// Function Engine.Pawn.TakeRadiusDamageOnBones
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void APawn::eventTakeRadiusDamageOnBones() {
    static UFunction* pFnTakeRadiusDamageOnBones = NULL;

    if (!pFnTakeRadiusDamageOnBones)
        pFnTakeRadiusDamageOnBones =
            (UFunction*)UObject::GObjObjects()->Data[25722];

    APawn_eventTakeRadiusDamageOnBones_Parms TakeRadiusDamageOnBones_Parms;

    this->ProcessEvent(pFnTakeRadiusDamageOnBones,
                       &TakeRadiusDamageOnBones_Parms, NULL);
};

// Function Engine.Pawn.PruneDamagedBoneList
// [0x00420000]
// Parameters infos:

void APawn::PruneDamagedBoneList() {
    static UFunction* pFnPruneDamagedBoneList = NULL;

    if (!pFnPruneDamagedBoneList)
        pFnPruneDamagedBoneList =
            (UFunction*)UObject::GObjObjects()->Data[25719];

    APawn_execPruneDamagedBoneList_Parms PruneDamagedBoneList_Parms;

    this->ProcessEvent(pFnPruneDamagedBoneList, &PruneDamagedBoneList_Parms,
                       NULL);
};

// Function Engine.Pawn.HealDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void APawn::eventHealDamage() {
    static UFunction* pFnHealDamage = NULL;

    if (!pFnHealDamage)
        pFnHealDamage = (UFunction*)UObject::GObjObjects()->Data[25712];

    APawn_eventHealDamage_Parms HealDamage_Parms;

    this->ProcessEvent(pFnHealDamage, &HealDamage_Parms, NULL);
};

// Function Engine.Pawn.AdjustDamage
// [0x00420000]
// Parameters infos:

void APawn::AdjustDamage() {
    static UFunction* pFnAdjustDamage = NULL;

    if (!pFnAdjustDamage)
        pFnAdjustDamage = (UFunction*)UObject::GObjObjects()->Data[25704];

    APawn_execAdjustDamage_Parms AdjustDamage_Parms;

    this->ProcessEvent(pFnAdjustDamage, &AdjustDamage_Parms, NULL);
};

// Function Engine.Pawn.SetMovementPhysics
// [0x00020002]
// Parameters infos:

void APawn::SetMovementPhysics() {
    static UFunction* pFnSetMovementPhysics = NULL;

    if (!pFnSetMovementPhysics)
        pFnSetMovementPhysics = (UFunction*)UObject::GObjObjects()->Data[25703];

    APawn_execSetMovementPhysics_Parms SetMovementPhysics_Parms;

    this->ProcessEvent(pFnSetMovementPhysics, &SetMovementPhysics_Parms, NULL);
};

// Function Engine.Pawn.Gasp
// [0x00020000]
// Parameters infos:

void APawn::Gasp() {
    static UFunction* pFnGasp = NULL;

    if (!pFnGasp) pFnGasp = (UFunction*)UObject::GObjObjects()->Data[25702];

    APawn_execGasp_Parms Gasp_Parms;

    this->ProcessEvent(pFnGasp, &Gasp_Parms, NULL);
};

// Function Engine.Pawn.OnGiveInventory
// [0x00020102]
// Parameters infos:

void APawn::OnGiveInventory() {
    static UFunction* pFnOnGiveInventory = NULL;

    if (!pFnOnGiveInventory)
        pFnOnGiveInventory = (UFunction*)UObject::GObjObjects()->Data[25698];

    APawn_execOnGiveInventory_Parms OnGiveInventory_Parms;

    this->ProcessEvent(pFnOnGiveInventory, &OnGiveInventory_Parms, NULL);
};

// Function Engine.Pawn.OnAssignController
// [0x00020002]
// Parameters infos:

void APawn::OnAssignController() {
    static UFunction* pFnOnAssignController = NULL;

    if (!pFnOnAssignController)
        pFnOnAssignController = (UFunction*)UObject::GObjObjects()->Data[25696];

    APawn_execOnAssignController_Parms OnAssignController_Parms;

    this->ProcessEvent(pFnOnAssignController, &OnAssignController_Parms, NULL);
};

// Function Engine.Pawn.ReceivedNewEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventReceivedNewEvent() {
    static UFunction* pFnReceivedNewEvent = NULL;

    if (!pFnReceivedNewEvent)
        pFnReceivedNewEvent = (UFunction*)UObject::GObjObjects()->Data[25694];

    APawn_eventReceivedNewEvent_Parms ReceivedNewEvent_Parms;

    this->ProcessEvent(pFnReceivedNewEvent, &ReceivedNewEvent_Parms, NULL);
};

// Function Engine.Pawn.SpawnDefaultController
// [0x00020002]
// Parameters infos:

void APawn::SpawnDefaultController() {
    static UFunction* pFnSpawnDefaultController = NULL;

    if (!pFnSpawnDefaultController)
        pFnSpawnDefaultController =
            (UFunction*)UObject::GObjObjects()->Data[25693];

    APawn_execSpawnDefaultController_Parms SpawnDefaultController_Parms;

    this->ProcessEvent(pFnSpawnDefaultController, &SpawnDefaultController_Parms,
                       NULL);
};

// Function Engine.Pawn.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[25692];

    APawn_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Pawn.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[25691];

    APawn_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.Pawn.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[25690];

    APawn_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Pawn.DetachFromController
// [0x00024002]
// Parameters infos:

void APawn::DetachFromController() {
    static UFunction* pFnDetachFromController = NULL;

    if (!pFnDetachFromController)
        pFnDetachFromController =
            (UFunction*)UObject::GObjObjects()->Data[25687];

    APawn_execDetachFromController_Parms DetachFromController_Parms;

    this->ProcessEvent(pFnDetachFromController, &DetachFromController_Parms,
                       NULL);
};

// Function Engine.Pawn.CrushedBy
// [0x00020002]
// Parameters infos:

void APawn::CrushedBy() {
    static UFunction* pFnCrushedBy = NULL;

    if (!pFnCrushedBy)
        pFnCrushedBy = (UFunction*)UObject::GObjObjects()->Data[25685];

    APawn_execCrushedBy_Parms CrushedBy_Parms;

    this->ProcessEvent(pFnCrushedBy, &CrushedBy_Parms, NULL);
};

// Function Engine.Pawn.CanBeBaseForPawn
// [0x00020102]
// Parameters infos:

void APawn::CanBeBaseForPawn() {
    static UFunction* pFnCanBeBaseForPawn = NULL;

    if (!pFnCanBeBaseForPawn)
        pFnCanBeBaseForPawn = (UFunction*)UObject::GObjObjects()->Data[25682];

    APawn_execCanBeBaseForPawn_Parms CanBeBaseForPawn_Parms;

    this->ProcessEvent(pFnCanBeBaseForPawn, &CanBeBaseForPawn_Parms, NULL);
};

// Function Engine.Pawn.BaseChange
// [0x00020822] ( FUNC_Event )
// Parameters infos:

void APawn::eventBaseChange() {
    static UFunction* pFnBaseChange = NULL;

    if (!pFnBaseChange)
        pFnBaseChange = (UFunction*)UObject::GObjObjects()->Data[25680];

    APawn_eventBaseChange_Parms BaseChange_Parms;

    this->ProcessEvent(pFnBaseChange, &BaseChange_Parms, NULL);
};

// Function Engine.Pawn.StuckOnPawn
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void APawn::eventStuckOnPawn() {
    static UFunction* pFnStuckOnPawn = NULL;

    if (!pFnStuckOnPawn)
        pFnStuckOnPawn = (UFunction*)UObject::GObjObjects()->Data[25678];

    APawn_eventStuckOnPawn_Parms StuckOnPawn_Parms;

    this->ProcessEvent(pFnStuckOnPawn, &StuckOnPawn_Parms, NULL);
};

// Function Engine.Pawn.JumpOffPawn
// [0x00020002]
// Parameters infos:

void APawn::JumpOffPawn() {
    static UFunction* pFnJumpOffPawn = NULL;

    if (!pFnJumpOffPawn)
        pFnJumpOffPawn = (UFunction*)UObject::GObjObjects()->Data[25677];

    APawn_execJumpOffPawn_Parms JumpOffPawn_Parms;

    this->ProcessEvent(pFnJumpOffPawn, &JumpOffPawn_Parms, NULL);
};

// Function Engine.Pawn.gibbedBy
// [0x00020002]
// Parameters infos:

void APawn::gibbedBy() {
    static UFunction* pFngibbedBy = NULL;

    if (!pFngibbedBy)
        pFngibbedBy = (UFunction*)UObject::GObjObjects()->Data[25675];

    APawn_execgibbedBy_Parms gibbedBy_Parms;

    this->ProcessEvent(pFngibbedBy, &gibbedBy_Parms, NULL);
};

// Function Engine.Pawn.EncroachedBy
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventEncroachedBy() {
    static UFunction* pFnEncroachedBy = NULL;

    if (!pFnEncroachedBy)
        pFnEncroachedBy = (UFunction*)UObject::GObjObjects()->Data[25673];

    APawn_eventEncroachedBy_Parms EncroachedBy_Parms;

    this->ProcessEvent(pFnEncroachedBy, &EncroachedBy_Parms, NULL);
};

// Function Engine.Pawn.EncroachingOn
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventEncroachingOn() {
    static UFunction* pFnEncroachingOn = NULL;

    if (!pFnEncroachingOn)
        pFnEncroachingOn = (UFunction*)UObject::GObjObjects()->Data[25670];

    APawn_eventEncroachingOn_Parms EncroachingOn_Parms;

    this->ProcessEvent(pFnEncroachingOn, &EncroachingOn_Parms, NULL);
};

// Function Engine.Pawn.FaceRotation
// [0x00020102]
// Parameters infos:

void APawn::FaceRotation() {
    static UFunction* pFnFaceRotation = NULL;

    if (!pFnFaceRotation)
        pFnFaceRotation = (UFunction*)UObject::GObjObjects()->Data[25667];

    APawn_execFaceRotation_Parms FaceRotation_Parms;

    this->ProcessEvent(pFnFaceRotation, &FaceRotation_Parms, NULL);
};

// Function Engine.Pawn.UpdatePawnRotation
// [0x00020903] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void APawn::eventUpdatePawnRotation() {
    static UFunction* pFnUpdatePawnRotation = NULL;

    if (!pFnUpdatePawnRotation)
        pFnUpdatePawnRotation = (UFunction*)UObject::GObjObjects()->Data[25665];

    APawn_eventUpdatePawnRotation_Parms UpdatePawnRotation_Parms;

    this->ProcessEvent(pFnUpdatePawnRotation, &UpdatePawnRotation_Parms, NULL);
};

// Function Engine.Pawn.ClientSetRotation
// [0x00020002]
// Parameters infos:

void APawn::ClientSetRotation() {
    static UFunction* pFnClientSetRotation = NULL;

    if (!pFnClientSetRotation)
        pFnClientSetRotation = (UFunction*)UObject::GObjObjects()->Data[25663];

    APawn_execClientSetRotation_Parms ClientSetRotation_Parms;

    this->ProcessEvent(pFnClientSetRotation, &ClientSetRotation_Parms, NULL);
};

// Function Engine.Pawn.ClientRestart
// [0x00020102]
// Parameters infos:

void APawn::ClientRestart() {
    static UFunction* pFnClientRestart = NULL;

    if (!pFnClientRestart)
        pFnClientRestart = (UFunction*)UObject::GObjObjects()->Data[25662];

    APawn_execClientRestart_Parms ClientRestart_Parms;

    this->ProcessEvent(pFnClientRestart, &ClientRestart_Parms, NULL);
};

// Function Engine.Pawn.Restart
// [0x00020000]
// Parameters infos:

void APawn::Restart() {
    static UFunction* pFnRestart = NULL;

    if (!pFnRestart)
        pFnRestart = (UFunction*)UObject::GObjObjects()->Data[25661];

    APawn_execRestart_Parms Restart_Parms;

    this->ProcessEvent(pFnRestart, &Restart_Parms, NULL);
};

// Function Engine.Pawn.TakeFallingDamage
// [0x00020002]
// Parameters infos:

void APawn::TakeFallingDamage() {
    static UFunction* pFnTakeFallingDamage = NULL;

    if (!pFnTakeFallingDamage)
        pFnTakeFallingDamage = (UFunction*)UObject::GObjObjects()->Data[25659];

    APawn_execTakeFallingDamage_Parms TakeFallingDamage_Parms;

    this->ProcessEvent(pFnTakeFallingDamage, &TakeFallingDamage_Parms, NULL);
};

// Function Engine.Pawn.KilledBy
// [0x00020002]
// Parameters infos:

void APawn::KilledBy() {
    static UFunction* pFnKilledBy = NULL;

    if (!pFnKilledBy)
        pFnKilledBy = (UFunction*)UObject::GObjObjects()->Data[25656];

    APawn_execKilledBy_Parms KilledBy_Parms;

    this->ProcessEvent(pFnKilledBy, &KilledBy_Parms, NULL);
};

// Function Engine.Pawn.AddVelocity
// [0x00024002]
// Parameters infos:

void APawn::AddVelocity() {
    static UFunction* pFnAddVelocity = NULL;

    if (!pFnAddVelocity)
        pFnAddVelocity = (UFunction*)UObject::GObjObjects()->Data[25651];

    APawn_execAddVelocity_Parms AddVelocity_Parms;

    this->ProcessEvent(pFnAddVelocity, &AddVelocity_Parms, NULL);
};

// Function Engine.Pawn.HandleMomentum
// [0x00024002]
// Parameters infos:

void APawn::HandleMomentum() {
    static UFunction* pFnHandleMomentum = NULL;

    if (!pFnHandleMomentum)
        pFnHandleMomentum = (UFunction*)UObject::GObjObjects()->Data[25646];

    APawn_execHandleMomentum_Parms HandleMomentum_Parms;

    this->ProcessEvent(pFnHandleMomentum, &HandleMomentum_Parms, NULL);
};

// Function Engine.Pawn.StartCrouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventStartCrouch() {
    static UFunction* pFnStartCrouch = NULL;

    if (!pFnStartCrouch)
        pFnStartCrouch = (UFunction*)UObject::GObjObjects()->Data[25644];

    APawn_eventStartCrouch_Parms StartCrouch_Parms;

    this->ProcessEvent(pFnStartCrouch, &StartCrouch_Parms, NULL);
};

// Function Engine.Pawn.EndCrouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventEndCrouch() {
    static UFunction* pFnEndCrouch = NULL;

    if (!pFnEndCrouch)
        pFnEndCrouch = (UFunction*)UObject::GObjObjects()->Data[25642];

    APawn_eventEndCrouch_Parms EndCrouch_Parms;

    this->ProcessEvent(pFnEndCrouch, &EndCrouch_Parms, NULL);
};

// Function Engine.Pawn.ShouldCrouch
// [0x00020002]
// Parameters infos:

void APawn::ShouldCrouch() {
    static UFunction* pFnShouldCrouch = NULL;

    if (!pFnShouldCrouch)
        pFnShouldCrouch = (UFunction*)UObject::GObjObjects()->Data[25640];

    APawn_execShouldCrouch_Parms ShouldCrouch_Parms;

    this->ProcessEvent(pFnShouldCrouch, &ShouldCrouch_Parms, NULL);
};

// Function Engine.Pawn.UnCrouch
// [0x00020102]
// Parameters infos:

void APawn::UnCrouch() {
    static UFunction* pFnUnCrouch = NULL;

    if (!pFnUnCrouch)
        pFnUnCrouch = (UFunction*)UObject::GObjObjects()->Data[25639];

    APawn_execUnCrouch_Parms UnCrouch_Parms;

    this->ProcessEvent(pFnUnCrouch, &UnCrouch_Parms, NULL);
};

// Function Engine.Pawn.OutsideWorldBounds
// [0x00020922] ( FUNC_Event )
// Parameters infos:

void APawn::eventOutsideWorldBounds() {
    static UFunction* pFnOutsideWorldBounds = NULL;

    if (!pFnOutsideWorldBounds)
        pFnOutsideWorldBounds = (UFunction*)UObject::GObjObjects()->Data[25638];

    APawn_eventOutsideWorldBounds_Parms OutsideWorldBounds_Parms;

    this->ProcessEvent(pFnOutsideWorldBounds, &OutsideWorldBounds_Parms, NULL);
};

// Function Engine.Pawn.FellOutOfWorld
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventFellOutOfWorld() {
    static UFunction* pFnFellOutOfWorld = NULL;

    if (!pFnFellOutOfWorld)
        pFnFellOutOfWorld = (UFunction*)UObject::GObjObjects()->Data[25636];

    APawn_eventFellOutOfWorld_Parms FellOutOfWorld_Parms;

    this->ProcessEvent(pFnFellOutOfWorld, &FellOutOfWorld_Parms, NULL);
};

// Function Engine.Pawn.ClientMessage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void APawn::eventClientMessage() {
    static UFunction* pFnClientMessage = NULL;

    if (!pFnClientMessage)
        pFnClientMessage = (UFunction*)UObject::GObjObjects()->Data[25633];

    APawn_eventClientMessage_Parms ClientMessage_Parms;

    this->ProcessEvent(pFnClientMessage, &ClientMessage_Parms, NULL);
};

// Function Engine.Pawn.HandlePickup
// [0x00020002]
// Parameters infos:

void APawn::HandlePickup() {
    static UFunction* pFnHandlePickup = NULL;

    if (!pFnHandlePickup)
        pFnHandlePickup = (UFunction*)UObject::GObjObjects()->Data[25631];

    APawn_execHandlePickup_Parms HandlePickup_Parms;

    this->ProcessEvent(pFnHandlePickup, &HandlePickup_Parms, NULL);
};

// Function Engine.Pawn.LineOfSightTo
// [0x00020002]
// Parameters infos:

void APawn::LineOfSightTo() {
    static UFunction* pFnLineOfSightTo = NULL;

    if (!pFnLineOfSightTo)
        pFnLineOfSightTo = (UFunction*)UObject::GObjObjects()->Data[24725];

    APawn_execLineOfSightTo_Parms LineOfSightTo_Parms;

    this->ProcessEvent(pFnLineOfSightTo, &LineOfSightTo_Parms, NULL);
};

// Function Engine.Pawn.SetMoveTarget
// [0x00020002]
// Parameters infos:

void APawn::SetMoveTarget() {
    static UFunction* pFnSetMoveTarget = NULL;

    if (!pFnSetMoveTarget)
        pFnSetMoveTarget = (UFunction*)UObject::GObjObjects()->Data[25628];

    APawn_execSetMoveTarget_Parms SetMoveTarget_Parms;

    this->ProcessEvent(pFnSetMoveTarget, &SetMoveTarget_Parms, NULL);
};

// Function Engine.Pawn.InGodMode
// [0x00020002]
// Parameters infos:

void APawn::InGodMode() {
    static UFunction* pFnInGodMode = NULL;

    if (!pFnInGodMode)
        pFnInGodMode = (UFunction*)UObject::GObjObjects()->Data[21837];

    APawn_execInGodMode_Parms InGodMode_Parms;

    this->ProcessEvent(pFnInGodMode, &InGodMode_Parms, NULL);
};

// Function Engine.Pawn.SetViewRotation
// [0x00020102]
// Parameters infos:

void APawn::SetViewRotation() {
    static UFunction* pFnSetViewRotation = NULL;

    if (!pFnSetViewRotation)
        pFnSetViewRotation = (UFunction*)UObject::GObjObjects()->Data[25626];

    APawn_execSetViewRotation_Parms SetViewRotation_Parms;

    this->ProcessEvent(pFnSetViewRotation, &SetViewRotation_Parms, NULL);
};

// Function Engine.Pawn.GetAdjustedAimFor
// [0x00020102]
// Parameters infos:

void APawn::GetAdjustedAimFor() {
    static UFunction* pFnGetAdjustedAimFor = NULL;

    if (!pFnGetAdjustedAimFor)
        pFnGetAdjustedAimFor = (UFunction*)UObject::GObjObjects()->Data[25622];

    APawn_execGetAdjustedAimFor_Parms GetAdjustedAimFor_Parms;

    this->ProcessEvent(pFnGetAdjustedAimFor, &GetAdjustedAimFor_Parms, NULL);
};

// Function Engine.Pawn.InFreeCam
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventInFreeCam() {
    static UFunction* pFnInFreeCam = NULL;

    if (!pFnInFreeCam)
        pFnInFreeCam = (UFunction*)UObject::GObjObjects()->Data[25619];

    APawn_eventInFreeCam_Parms InFreeCam_Parms;

    this->ProcessEvent(pFnInFreeCam, &InFreeCam_Parms, NULL);
};

// Function Engine.Pawn.GetBaseAimRotation
// [0x00820922] ( FUNC_Event )
// Parameters infos:

void APawn::eventGetBaseAimRotation() {
    static UFunction* pFnGetBaseAimRotation = NULL;

    if (!pFnGetBaseAimRotation)
        pFnGetBaseAimRotation = (UFunction*)UObject::GObjObjects()->Data[8620];

    APawn_eventGetBaseAimRotation_Parms GetBaseAimRotation_Parms;

    this->ProcessEvent(pFnGetBaseAimRotation, &GetBaseAimRotation_Parms, NULL);
};

// Function Engine.Pawn.GetWeaponStartTraceLocation
// [0x00824902] ( FUNC_Event )
// Parameters infos:

void APawn::eventGetWeaponStartTraceLocation() {
    static UFunction* pFnGetWeaponStartTraceLocation = NULL;

    if (!pFnGetWeaponStartTraceLocation)
        pFnGetWeaponStartTraceLocation =
            (UFunction*)UObject::GObjObjects()->Data[25612];

    APawn_eventGetWeaponStartTraceLocation_Parms
        GetWeaponStartTraceLocation_Parms;

    this->ProcessEvent(pFnGetWeaponStartTraceLocation,
                       &GetWeaponStartTraceLocation_Parms, NULL);
};

// Function Engine.Pawn.GetPawnViewLocation
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APawn::eventGetPawnViewLocation() {
    static UFunction* pFnGetPawnViewLocation = NULL;

    if (!pFnGetPawnViewLocation)
        pFnGetPawnViewLocation =
            (UFunction*)UObject::GObjObjects()->Data[25610];

    APawn_eventGetPawnViewLocation_Parms GetPawnViewLocation_Parms;

    pFnGetPawnViewLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPawnViewLocation, &GetPawnViewLocation_Parms,
                       NULL);

    pFnGetPawnViewLocation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.GetViewRotation
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APawn::eventGetViewRotation() {
    static UFunction* pFnGetViewRotation = NULL;

    if (!pFnGetViewRotation)
        pFnGetViewRotation = (UFunction*)UObject::GObjObjects()->Data[24053];

    APawn_eventGetViewRotation_Parms GetViewRotation_Parms;

    pFnGetViewRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetViewRotation, &GetViewRotation_Parms, NULL);

    pFnGetViewRotation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.GetActorEyesViewPoint
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void APawn::eventGetActorEyesViewPoint() {
    static UFunction* pFnGetActorEyesViewPoint = NULL;

    if (!pFnGetActorEyesViewPoint)
        pFnGetActorEyesViewPoint =
            (UFunction*)UObject::GObjObjects()->Data[25607];

    APawn_eventGetActorEyesViewPoint_Parms GetActorEyesViewPoint_Parms;

    this->ProcessEvent(pFnGetActorEyesViewPoint, &GetActorEyesViewPoint_Parms,
                       NULL);
};

// Function Engine.Pawn.ProcessViewRotation
// [0x00420102]
// Parameters infos:

void APawn::ProcessViewRotation() {
    static UFunction* pFnProcessViewRotation = NULL;

    if (!pFnProcessViewRotation)
        pFnProcessViewRotation =
            (UFunction*)UObject::GObjObjects()->Data[25603];

    APawn_execProcessViewRotation_Parms ProcessViewRotation_Parms;

    this->ProcessEvent(pFnProcessViewRotation, &ProcessViewRotation_Parms,
                       NULL);
};

// Function Engine.Pawn.IsFirstPerson
// [0x00020102]
// Parameters infos:

void APawn::IsFirstPerson() {
    static UFunction* pFnIsFirstPerson = NULL;

    if (!pFnIsFirstPerson)
        pFnIsFirstPerson = (UFunction*)UObject::GObjObjects()->Data[25600];

    APawn_execIsFirstPerson_Parms IsFirstPerson_Parms;

    this->ProcessEvent(pFnIsFirstPerson, &IsFirstPerson_Parms, NULL);
};

// Function Engine.Pawn.IsPlayerPawn
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APawn::IsPlayerPawn() {
    static UFunction* pFnIsPlayerPawn = NULL;

    if (!pFnIsPlayerPawn)
        pFnIsPlayerPawn = (UFunction*)UObject::GObjObjects()->Data[16293];

    APawn_execIsPlayerPawn_Parms IsPlayerPawn_Parms;

    pFnIsPlayerPawn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayerPawn, &IsPlayerPawn_Parms, NULL);

    pFnIsPlayerPawn->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsLocallyControlled
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::IsLocallyControlled() {
    static UFunction* pFnIsLocallyControlled = NULL;

    if (!pFnIsLocallyControlled)
        pFnIsLocallyControlled = (UFunction*)UObject::GObjObjects()->Data[6293];

    APawn_execIsLocallyControlled_Parms IsLocallyControlled_Parms;

    pFnIsLocallyControlled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsLocallyControlled, &IsLocallyControlled_Parms,
                       NULL);

    pFnIsLocallyControlled->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsHumanControlled
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::IsHumanControlled() {
    static UFunction* pFnIsHumanControlled = NULL;

    if (!pFnIsHumanControlled)
        pFnIsHumanControlled = (UFunction*)UObject::GObjObjects()->Data[6291];

    APawn_execIsHumanControlled_Parms IsHumanControlled_Parms;

    pFnIsHumanControlled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsHumanControlled, &IsHumanControlled_Parms, NULL);

    pFnIsHumanControlled->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.DisplayDebug
// [0x00420102]
// Parameters infos:

void APawn::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[25591];

    APawn_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Pawn.ClimbLadder
// [0x00020002]
// Parameters infos:

void APawn::ClimbLadder() {
    static UFunction* pFnClimbLadder = NULL;

    if (!pFnClimbLadder)
        pFnClimbLadder = (UFunction*)UObject::GObjObjects()->Data[25589];

    APawn_execClimbLadder_Parms ClimbLadder_Parms;

    this->ProcessEvent(pFnClimbLadder, &ClimbLadder_Parms, NULL);
};

// Function Engine.Pawn.EndClimbLadder
// [0x00020002]
// Parameters infos:

void APawn::EndClimbLadder() {
    static UFunction* pFnEndClimbLadder = NULL;

    if (!pFnEndClimbLadder)
        pFnEndClimbLadder = (UFunction*)UObject::GObjObjects()->Data[25587];

    APawn_execEndClimbLadder_Parms EndClimbLadder_Parms;

    this->ProcessEvent(pFnEndClimbLadder, &EndClimbLadder_Parms, NULL);
};

// Function Engine.Pawn.CanSplash
// [0x00020102]
// Parameters infos:

void APawn::CanSplash() {
    static UFunction* pFnCanSplash = NULL;

    if (!pFnCanSplash)
        pFnCanSplash = (UFunction*)UObject::GObjObjects()->Data[25585];

    APawn_execCanSplash_Parms CanSplash_Parms;

    this->ProcessEvent(pFnCanSplash, &CanSplash_Parms, NULL);
};

// Function Engine.Pawn.SetWalking
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventSetWalking() {
    static UFunction* pFnSetWalking = NULL;

    if (!pFnSetWalking)
        pFnSetWalking = (UFunction*)UObject::GObjObjects()->Data[25583];

    APawn_eventSetWalking_Parms SetWalking_Parms;

    this->ProcessEvent(pFnSetWalking, &SetWalking_Parms, NULL);
};

// Function Engine.Pawn.RangedAttackTime
// [0x00020002]
// Parameters infos:

void APawn::RangedAttackTime() {
    static UFunction* pFnRangedAttackTime = NULL;

    if (!pFnRangedAttackTime)
        pFnRangedAttackTime = (UFunction*)UObject::GObjObjects()->Data[25581];

    APawn_execRangedAttackTime_Parms RangedAttackTime_Parms;

    this->ProcessEvent(pFnRangedAttackTime, &RangedAttackTime_Parms, NULL);
};

// Function Engine.Pawn.RecommendLongRangedAttack
// [0x00020002]
// Parameters infos:

void APawn::RecommendLongRangedAttack() {
    static UFunction* pFnRecommendLongRangedAttack = NULL;

    if (!pFnRecommendLongRangedAttack)
        pFnRecommendLongRangedAttack =
            (UFunction*)UObject::GObjObjects()->Data[25579];

    APawn_execRecommendLongRangedAttack_Parms RecommendLongRangedAttack_Parms;

    this->ProcessEvent(pFnRecommendLongRangedAttack,
                       &RecommendLongRangedAttack_Parms, NULL);
};

// Function Engine.Pawn.CanGrabLadder
// [0x00020002]
// Parameters infos:

void APawn::CanGrabLadder() {
    static UFunction* pFnCanGrabLadder = NULL;

    if (!pFnCanGrabLadder)
        pFnCanGrabLadder = (UFunction*)UObject::GObjObjects()->Data[24299];

    APawn_execCanGrabLadder_Parms CanGrabLadder_Parms;

    this->ProcessEvent(pFnCanGrabLadder, &CanGrabLadder_Parms, NULL);
};

// Function Engine.Pawn.DropToGround
// [0x00020002]
// Parameters infos:

void APawn::DropToGround() {
    static UFunction* pFnDropToGround = NULL;

    if (!pFnDropToGround)
        pFnDropToGround = (UFunction*)UObject::GObjObjects()->Data[25578];

    APawn_execDropToGround_Parms DropToGround_Parms;

    this->ProcessEvent(pFnDropToGround, &DropToGround_Parms, NULL);
};

// Function Engine.Pawn.GetDefaultCameraMode
// [0x00020102]
// Parameters infos:

void APawn::GetDefaultCameraMode() {
    static UFunction* pFnGetDefaultCameraMode = NULL;

    if (!pFnGetDefaultCameraMode)
        pFnGetDefaultCameraMode =
            (UFunction*)UObject::GObjObjects()->Data[12498];

    APawn_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;

    this->ProcessEvent(pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms,
                       NULL);
};

// Function Engine.Pawn.UnPossessed
// [0x00020002]
// Parameters infos:

void APawn::UnPossessed() {
    static UFunction* pFnUnPossessed = NULL;

    if (!pFnUnPossessed)
        pFnUnPossessed = (UFunction*)UObject::GObjObjects()->Data[25576];

    APawn_execUnPossessed_Parms UnPossessed_Parms;

    this->ProcessEvent(pFnUnPossessed, &UnPossessed_Parms, NULL);
};

// Function Engine.Pawn.UpdateControllerOnPossess
// [0x00020002]
// Parameters infos:

void APawn::UpdateControllerOnPossess() {
    static UFunction* pFnUpdateControllerOnPossess = NULL;

    if (!pFnUpdateControllerOnPossess)
        pFnUpdateControllerOnPossess =
            (UFunction*)UObject::GObjObjects()->Data[25574];

    APawn_execUpdateControllerOnPossess_Parms UpdateControllerOnPossess_Parms;

    this->ProcessEvent(pFnUpdateControllerOnPossess,
                       &UpdateControllerOnPossess_Parms, NULL);
};

// Function Engine.Pawn.PossessedBy
// [0x00020002]
// Parameters infos:

void APawn::PossessedBy() {
    static UFunction* pFnPossessedBy = NULL;

    if (!pFnPossessedBy)
        pFnPossessedBy = (UFunction*)UObject::GObjObjects()->Data[25571];

    APawn_execPossessedBy_Parms PossessedBy_Parms;

    this->ProcessEvent(pFnPossessedBy, &PossessedBy_Parms, NULL);
};

// Function Engine.Pawn.NotifyTeamChanged
// [0x00020100]
// Parameters infos:

void APawn::NotifyTeamChanged() {
    static UFunction* pFnNotifyTeamChanged = NULL;

    if (!pFnNotifyTeamChanged)
        pFnNotifyTeamChanged = (UFunction*)UObject::GObjObjects()->Data[25570];

    APawn_execNotifyTeamChanged_Parms NotifyTeamChanged_Parms;

    this->ProcessEvent(pFnNotifyTeamChanged, &NotifyTeamChanged_Parms, NULL);
};

// Function Engine.Pawn.PlayTeleportEffect
// [0x00020002]
// Parameters infos:

void APawn::PlayTeleportEffect() {
    static UFunction* pFnPlayTeleportEffect = NULL;

    if (!pFnPlayTeleportEffect)
        pFnPlayTeleportEffect = (UFunction*)UObject::GObjObjects()->Data[25567];

    APawn_execPlayTeleportEffect_Parms PlayTeleportEffect_Parms;

    this->ProcessEvent(pFnPlayTeleportEffect, &PlayTeleportEffect_Parms, NULL);
};

// Function Engine.Pawn.GetHumanReadableName
// [0x00020102]
// Parameters infos:

void APawn::GetHumanReadableName() {
    static UFunction* pFnGetHumanReadableName = NULL;

    if (!pFnGetHumanReadableName)
        pFnGetHumanReadableName =
            (UFunction*)UObject::GObjObjects()->Data[8612];

    APawn_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

    this->ProcessEvent(pFnGetHumanReadableName, &GetHumanReadableName_Parms,
                       NULL);
};

// Function Engine.Pawn.NeedToTurn
// [0x00820002]
// Parameters infos:

void APawn::NeedToTurn() {
    static UFunction* pFnNeedToTurn = NULL;

    if (!pFnNeedToTurn)
        pFnNeedToTurn = (UFunction*)UObject::GObjObjects()->Data[25562];

    APawn_execNeedToTurn_Parms NeedToTurn_Parms;

    this->ProcessEvent(pFnNeedToTurn, &NeedToTurn_Parms, NULL);
};

// Function Engine.Pawn.IsFiring
// [0x00020002]
// Parameters infos:

void APawn::IsFiring() {
    static UFunction* pFnIsFiring = NULL;

    if (!pFnIsFiring)
        pFnIsFiring = (UFunction*)UObject::GObjObjects()->Data[25560];

    APawn_execIsFiring_Parms IsFiring_Parms;

    this->ProcessEvent(pFnIsFiring, &IsFiring_Parms, NULL);
};

// Function Engine.Pawn.HasRangedAttack
// [0x00020002]
// Parameters infos:

void APawn::HasRangedAttack() {
    static UFunction* pFnHasRangedAttack = NULL;

    if (!pFnHasRangedAttack)
        pFnHasRangedAttack = (UFunction*)UObject::GObjObjects()->Data[25558];

    APawn_execHasRangedAttack_Parms HasRangedAttack_Parms;

    this->ProcessEvent(pFnHasRangedAttack, &HasRangedAttack_Parms, NULL);
};

// Function Engine.Pawn.FireOnRelease
// [0x00020002]
// Parameters infos:

void APawn::FireOnRelease() {
    static UFunction* pFnFireOnRelease = NULL;

    if (!pFnFireOnRelease)
        pFnFireOnRelease = (UFunction*)UObject::GObjObjects()->Data[25556];

    APawn_execFireOnRelease_Parms FireOnRelease_Parms;

    this->ProcessEvent(pFnFireOnRelease, &FireOnRelease_Parms, NULL);
};

// Function Engine.Pawn.TooCloseToAttack
// [0x00020002]
// Parameters infos:

void APawn::TooCloseToAttack() {
    static UFunction* pFnTooCloseToAttack = NULL;

    if (!pFnTooCloseToAttack)
        pFnTooCloseToAttack = (UFunction*)UObject::GObjObjects()->Data[25553];

    APawn_execTooCloseToAttack_Parms TooCloseToAttack_Parms;

    this->ProcessEvent(pFnTooCloseToAttack, &TooCloseToAttack_Parms, NULL);
};

// Function Engine.Pawn.CanAttack
// [0x00020002]
// Parameters infos:

void APawn::CanAttack() {
    static UFunction* pFnCanAttack = NULL;

    if (!pFnCanAttack)
        pFnCanAttack = (UFunction*)UObject::GObjObjects()->Data[25550];

    APawn_execCanAttack_Parms CanAttack_Parms;

    this->ProcessEvent(pFnCanAttack, &CanAttack_Parms, NULL);
};

// Function Engine.Pawn.BotFire
// [0x00020002]
// Parameters infos:

void APawn::BotFire() {
    static UFunction* pFnBotFire = NULL;

    if (!pFnBotFire)
        pFnBotFire = (UFunction*)UObject::GObjObjects()->Data[25547];

    APawn_execBotFire_Parms BotFire_Parms;

    this->ProcessEvent(pFnBotFire, &BotFire_Parms, NULL);
};

// Function Engine.Pawn.WeaponStoppedFiring
// [0x00020102]
// Parameters infos:

void APawn::WeaponStoppedFiring() {
    static UFunction* pFnWeaponStoppedFiring = NULL;

    if (!pFnWeaponStoppedFiring)
        pFnWeaponStoppedFiring =
            (UFunction*)UObject::GObjObjects()->Data[25544];

    APawn_execWeaponStoppedFiring_Parms WeaponStoppedFiring_Parms;

    this->ProcessEvent(pFnWeaponStoppedFiring, &WeaponStoppedFiring_Parms,
                       NULL);
};

// Function Engine.Pawn.WeaponFired
// [0x00024102]
// Parameters infos:

void APawn::WeaponFired() {
    static UFunction* pFnWeaponFired = NULL;

    if (!pFnWeaponFired)
        pFnWeaponFired = (UFunction*)UObject::GObjObjects()->Data[25540];

    APawn_execWeaponFired_Parms WeaponFired_Parms;

    this->ProcessEvent(pFnWeaponFired, &WeaponFired_Parms, NULL);
};

// Function Engine.Pawn.FlashLocationUpdated
// [0x00020102]
// Parameters infos:

void APawn::FlashLocationUpdated() {
    static UFunction* pFnFlashLocationUpdated = NULL;

    if (!pFnFlashLocationUpdated)
        pFnFlashLocationUpdated =
            (UFunction*)UObject::GObjObjects()->Data[25536];

    APawn_execFlashLocationUpdated_Parms FlashLocationUpdated_Parms;

    this->ProcessEvent(pFnFlashLocationUpdated, &FlashLocationUpdated_Parms,
                       NULL);
};

// Function Engine.Pawn.ClearFlashLocation
// [0x00020002]
// Parameters infos:

void APawn::ClearFlashLocation() {
    static UFunction* pFnClearFlashLocation = NULL;

    if (!pFnClearFlashLocation)
        pFnClearFlashLocation = (UFunction*)UObject::GObjObjects()->Data[25534];

    APawn_execClearFlashLocation_Parms ClearFlashLocation_Parms;

    this->ProcessEvent(pFnClearFlashLocation, &ClearFlashLocation_Parms, NULL);
};

// Function Engine.Pawn.SetFlashLocation
// [0x00020102]
// Parameters infos:

void APawn::SetFlashLocation() {
    static UFunction* pFnSetFlashLocation = NULL;

    if (!pFnSetFlashLocation)
        pFnSetFlashLocation = (UFunction*)UObject::GObjObjects()->Data[25530];

    APawn_execSetFlashLocation_Parms SetFlashLocation_Parms;

    this->ProcessEvent(pFnSetFlashLocation, &SetFlashLocation_Parms, NULL);
};

// Function Engine.Pawn.ClearFlashCount
// [0x00020102]
// Parameters infos:

void APawn::ClearFlashCount() {
    static UFunction* pFnClearFlashCount = NULL;

    if (!pFnClearFlashCount)
        pFnClearFlashCount = (UFunction*)UObject::GObjObjects()->Data[25528];

    APawn_execClearFlashCount_Parms ClearFlashCount_Parms;

    this->ProcessEvent(pFnClearFlashCount, &ClearFlashCount_Parms, NULL);
};

// Function Engine.Pawn.FlashCountUpdated
// [0x00020102]
// Parameters infos:

void APawn::FlashCountUpdated() {
    static UFunction* pFnFlashCountUpdated = NULL;

    if (!pFnFlashCountUpdated)
        pFnFlashCountUpdated = (UFunction*)UObject::GObjObjects()->Data[25524];

    APawn_execFlashCountUpdated_Parms FlashCountUpdated_Parms;

    this->ProcessEvent(pFnFlashCountUpdated, &FlashCountUpdated_Parms, NULL);
};

// Function Engine.Pawn.IncrementFlashCount
// [0x00020102]
// Parameters infos:

void APawn::IncrementFlashCount() {
    static UFunction* pFnIncrementFlashCount = NULL;

    if (!pFnIncrementFlashCount)
        pFnIncrementFlashCount =
            (UFunction*)UObject::GObjObjects()->Data[25521];

    APawn_execIncrementFlashCount_Parms IncrementFlashCount_Parms;

    this->ProcessEvent(pFnIncrementFlashCount, &IncrementFlashCount_Parms,
                       NULL);
};

// Function Engine.Pawn.FiringModeUpdated
// [0x00020102]
// Parameters infos:

void APawn::FiringModeUpdated() {
    static UFunction* pFnFiringModeUpdated = NULL;

    if (!pFnFiringModeUpdated)
        pFnFiringModeUpdated = (UFunction*)UObject::GObjObjects()->Data[25517];

    APawn_execFiringModeUpdated_Parms FiringModeUpdated_Parms;

    this->ProcessEvent(pFnFiringModeUpdated, &FiringModeUpdated_Parms, NULL);
};

// Function Engine.Pawn.SetFiringMode
// [0x00020102]
// Parameters infos:

void APawn::SetFiringMode() {
    static UFunction* pFnSetFiringMode = NULL;

    if (!pFnSetFiringMode)
        pFnSetFiringMode = (UFunction*)UObject::GObjObjects()->Data[25514];

    APawn_execSetFiringMode_Parms SetFiringMode_Parms;

    this->ProcessEvent(pFnSetFiringMode, &SetFiringMode_Parms, NULL);
};

// Function Engine.Pawn.GetWeaponFiringMode
// [0x00020102]
// Parameters infos:

void APawn::GetWeaponFiringMode() {
    static UFunction* pFnGetWeaponFiringMode = NULL;

    if (!pFnGetWeaponFiringMode)
        pFnGetWeaponFiringMode =
            (UFunction*)UObject::GObjObjects()->Data[25511];

    APawn_execGetWeaponFiringMode_Parms GetWeaponFiringMode_Parms;

    this->ProcessEvent(pFnGetWeaponFiringMode, &GetWeaponFiringMode_Parms,
                       NULL);
};

// Function Engine.Pawn.StopFire
// [0x00020102]
// Parameters infos:

void APawn::StopFire() {
    static UFunction* pFnStopFire = NULL;

    if (!pFnStopFire)
        pFnStopFire = (UFunction*)UObject::GObjObjects()->Data[25509];

    APawn_execStopFire_Parms StopFire_Parms;

    this->ProcessEvent(pFnStopFire, &StopFire_Parms, NULL);
};

// Function Engine.Pawn.StartFire
// [0x00020102]
// Parameters infos:

void APawn::StartFire() {
    static UFunction* pFnStartFire = NULL;

    if (!pFnStartFire)
        pFnStartFire = (UFunction*)UObject::GObjObjects()->Data[25507];

    APawn_execStartFire_Parms StartFire_Parms;

    this->ProcessEvent(pFnStartFire, &StartFire_Parms, NULL);
};

// Function Engine.Pawn.StopFiring
// [0x00020002]
// Parameters infos:

void APawn::StopFiring() {
    static UFunction* pFnStopFiring = NULL;

    if (!pFnStopFiring)
        pFnStopFiring = (UFunction*)UObject::GObjObjects()->Data[8622];

    APawn_execStopFiring_Parms StopFiring_Parms;

    this->ProcessEvent(pFnStopFiring, &StopFiring_Parms, NULL);
};

// Function Engine.Pawn.Reset
// [0x00020002]
// Parameters infos:

void APawn::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[25506];

    APawn_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.Pawn.PlayerChangedTeam
// [0x00020002]
// Parameters infos:

void APawn::PlayerChangedTeam() {
    static UFunction* pFnPlayerChangedTeam = NULL;

    if (!pFnPlayerChangedTeam)
        pFnPlayerChangedTeam = (UFunction*)UObject::GObjObjects()->Data[25505];

    APawn_execPlayerChangedTeam_Parms PlayerChangedTeam_Parms;

    this->ProcessEvent(pFnPlayerChangedTeam, &PlayerChangedTeam_Parms, NULL);
};

// Function Engine.Pawn.SetBaseEyeheight
// [0x00020102]
// Parameters infos:

void APawn::SetBaseEyeheight() {
    static UFunction* pFnSetBaseEyeheight = NULL;

    if (!pFnSetBaseEyeheight)
        pFnSetBaseEyeheight = (UFunction*)UObject::GObjObjects()->Data[25504];

    APawn_execSetBaseEyeheight_Parms SetBaseEyeheight_Parms;

    this->ProcessEvent(pFnSetBaseEyeheight, &SetBaseEyeheight_Parms, NULL);
};

// Function Engine.Pawn.SpecialMoveThruEdge
// [0x00024800] ( FUNC_Event )
// Parameters infos:

void APawn::eventSpecialMoveThruEdge() {
    static UFunction* pFnSpecialMoveThruEdge = NULL;

    if (!pFnSpecialMoveThruEdge)
        pFnSpecialMoveThruEdge =
            (UFunction*)UObject::GObjObjects()->Data[25495];

    APawn_eventSpecialMoveThruEdge_Parms SpecialMoveThruEdge_Parms;

    this->ProcessEvent(pFnSpecialMoveThruEdge, &SpecialMoveThruEdge_Parms,
                       NULL);
};

// Function Engine.Pawn.SpecialMoveTo
// [0x00020000]
// Parameters infos:

void APawn::SpecialMoveTo() {
    static UFunction* pFnSpecialMoveTo = NULL;

    if (!pFnSpecialMoveTo)
        pFnSpecialMoveTo = (UFunction*)UObject::GObjObjects()->Data[12960];

    APawn_execSpecialMoveTo_Parms SpecialMoveTo_Parms;

    this->ProcessEvent(pFnSpecialMoveTo, &SpecialMoveTo_Parms, NULL);
};

// Function Engine.Pawn.TermRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::TermRagdoll() {
    static UFunction* pFnTermRagdoll = NULL;

    if (!pFnTermRagdoll)
        pFnTermRagdoll = (UFunction*)UObject::GObjObjects()->Data[25490];

    APawn_execTermRagdoll_Parms TermRagdoll_Parms;

    pFnTermRagdoll->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTermRagdoll, &TermRagdoll_Parms, NULL);

    pFnTermRagdoll->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.InitRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::InitRagdoll() {
    static UFunction* pFnInitRagdoll = NULL;

    if (!pFnInitRagdoll)
        pFnInitRagdoll = (UFunction*)UObject::GObjObjects()->Data[25488];

    APawn_execInitRagdoll_Parms InitRagdoll_Parms;

    pFnInitRagdoll->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitRagdoll, &InitRagdoll_Parms, NULL);

    pFnInitRagdoll->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.GetBoundingCylinder
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void APawn::GetBoundingCylinder() {
    static UFunction* pFnGetBoundingCylinder = NULL;

    if (!pFnGetBoundingCylinder)
        pFnGetBoundingCylinder =
            (UFunction*)UObject::GObjObjects()->Data[25485];

    APawn_execGetBoundingCylinder_Parms GetBoundingCylinder_Parms;

    pFnGetBoundingCylinder->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoundingCylinder, &GetBoundingCylinder_Parms,
                       NULL);

    pFnGetBoundingCylinder->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ReachedDesiredRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::ReachedDesiredRotation() {
    static UFunction* pFnReachedDesiredRotation = NULL;

    if (!pFnReachedDesiredRotation)
        pFnReachedDesiredRotation =
            (UFunction*)UObject::GObjObjects()->Data[25483];

    APawn_execReachedDesiredRotation_Parms ReachedDesiredRotation_Parms;

    pFnReachedDesiredRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReachedDesiredRotation, &ReachedDesiredRotation_Parms,
                       NULL);

    pFnReachedDesiredRotation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetPushesRigidBodies
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::SetPushesRigidBodies() {
    static UFunction* pFnSetPushesRigidBodies = NULL;

    if (!pFnSetPushesRigidBodies)
        pFnSetPushesRigidBodies =
            (UFunction*)UObject::GObjObjects()->Data[25481];

    APawn_execSetPushesRigidBodies_Parms SetPushesRigidBodies_Parms;

    pFnSetPushesRigidBodies->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPushesRigidBodies, &SetPushesRigidBodies_Parms,
                       NULL);

    pFnSetPushesRigidBodies->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ForceCrouch
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::ForceCrouch() {
    static UFunction* pFnForceCrouch = NULL;

    if (!pFnForceCrouch)
        pFnForceCrouch = (UFunction*)UObject::GObjObjects()->Data[25480];

    APawn_execForceCrouch_Parms ForceCrouch_Parms;

    pFnForceCrouch->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceCrouch, &ForceCrouch_Parms, NULL);

    pFnForceCrouch->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ReachedPoint
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::ReachedPoint() {
    static UFunction* pFnReachedPoint = NULL;

    if (!pFnReachedPoint)
        pFnReachedPoint = (UFunction*)UObject::GObjObjects()->Data[25476];

    APawn_execReachedPoint_Parms ReachedPoint_Parms;

    pFnReachedPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReachedPoint, &ReachedPoint_Parms, NULL);

    pFnReachedPoint->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ReachedDestination
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::ReachedDestination() {
    static UFunction* pFnReachedDestination = NULL;

    if (!pFnReachedDestination)
        pFnReachedDestination = (UFunction*)UObject::GObjObjects()->Data[12771];

    APawn_execReachedDestination_Parms ReachedDestination_Parms;

    pFnReachedDestination->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReachedDestination, &ReachedDestination_Parms, NULL);

    pFnReachedDestination->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.GetBestAnchor
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void APawn::GetBestAnchor() {
    static UFunction* pFnGetBestAnchor = NULL;

    if (!pFnGetBestAnchor)
        pFnGetBestAnchor = (UFunction*)UObject::GObjObjects()->Data[22945];

    APawn_execGetBestAnchor_Parms GetBestAnchor_Parms;

    pFnGetBestAnchor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBestAnchor, &GetBestAnchor_Parms, NULL);

    pFnGetBestAnchor->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetAnchor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::SetAnchor() {
    static UFunction* pFnSetAnchor = NULL;

    if (!pFnSetAnchor)
        pFnSetAnchor = (UFunction*)UObject::GObjObjects()->Data[25468];

    APawn_execSetAnchor_Parms SetAnchor_Parms;

    pFnSetAnchor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAnchor, &SetAnchor_Parms, NULL);

    pFnSetAnchor->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetRemoteViewPitch
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::SetRemoteViewPitch() {
    static UFunction* pFnSetRemoteViewPitch = NULL;

    if (!pFnSetRemoteViewPitch)
        pFnSetRemoteViewPitch = (UFunction*)UObject::GObjObjects()->Data[12429];

    APawn_execSetRemoteViewPitch_Parms SetRemoteViewPitch_Parms;

    pFnSetRemoteViewPitch->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRemoteViewPitch, &SetRemoteViewPitch_Parms, NULL);

    pFnSetRemoteViewPitch->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsInvisible
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::IsInvisible() {
    static UFunction* pFnIsInvisible = NULL;

    if (!pFnIsInvisible)
        pFnIsInvisible = (UFunction*)UObject::GObjObjects()->Data[25465];

    APawn_execIsInvisible_Parms IsInvisible_Parms;

    pFnIsInvisible->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsInvisible, &IsInvisible_Parms, NULL);

    pFnIsInvisible->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.CanAITargetThisPawn
// [0x00020002]
// Parameters infos:

void APawn::CanAITargetThisPawn() {
    static UFunction* pFnCanAITargetThisPawn = NULL;

    if (!pFnCanAITargetThisPawn)
        pFnCanAITargetThisPawn =
            (UFunction*)UObject::GObjObjects()->Data[25462];

    APawn_execCanAITargetThisPawn_Parms CanAITargetThisPawn_Parms;

    this->ProcessEvent(pFnCanAITargetThisPawn, &CanAITargetThisPawn_Parms,
                       NULL);
};

// Function Engine.Pawn.IsValidTeamTargetFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::IsValidTeamTargetFor() {
    static UFunction* pFnIsValidTeamTargetFor = NULL;

    if (!pFnIsValidTeamTargetFor)
        pFnIsValidTeamTargetFor =
            (UFunction*)UObject::GObjObjects()->Data[25459];

    APawn_execIsValidTeamTargetFor_Parms IsValidTeamTargetFor_Parms;

    pFnIsValidTeamTargetFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsValidTeamTargetFor, &IsValidTeamTargetFor_Parms,
                       NULL);

    pFnIsValidTeamTargetFor->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsValidEnemyTargetFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::IsValidEnemyTargetFor() {
    static UFunction* pFnIsValidEnemyTargetFor = NULL;

    if (!pFnIsValidEnemyTargetFor)
        pFnIsValidEnemyTargetFor =
            (UFunction*)UObject::GObjObjects()->Data[25455];

    APawn_execIsValidEnemyTargetFor_Parms IsValidEnemyTargetFor_Parms;

    pFnIsValidEnemyTargetFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsValidEnemyTargetFor, &IsValidEnemyTargetFor_Parms,
                       NULL);

    pFnIsValidEnemyTargetFor->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.GetFallDuration
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::GetFallDuration() {
    static UFunction* pFnGetFallDuration = NULL;

    if (!pFnGetFallDuration)
        pFnGetFallDuration = (UFunction*)UObject::GObjObjects()->Data[25453];

    APawn_execGetFallDuration_Parms GetFallDuration_Parms;

    pFnGetFallDuration->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFallDuration, &GetFallDuration_Parms, NULL);

    pFnGetFallDuration->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SuggestJumpVelocity
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void APawn::SuggestJumpVelocity() {
    static UFunction* pFnSuggestJumpVelocity = NULL;

    if (!pFnSuggestJumpVelocity)
        pFnSuggestJumpVelocity =
            (UFunction*)UObject::GObjObjects()->Data[25447];

    APawn_execSuggestJumpVelocity_Parms SuggestJumpVelocity_Parms;

    pFnSuggestJumpVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSuggestJumpVelocity, &SuggestJumpVelocity_Parms,
                       NULL);

    pFnSuggestJumpVelocity->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ValidAnchor
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::ValidAnchor() {
    static UFunction* pFnValidAnchor = NULL;

    if (!pFnValidAnchor)
        pFnValidAnchor = (UFunction*)UObject::GObjObjects()->Data[22943];

    APawn_execValidAnchor_Parms ValidAnchor_Parms;

    pFnValidAnchor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnValidAnchor, &ValidAnchor_Parms, NULL);

    pFnValidAnchor->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.AdjustDestination
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::AdjustDestination() {
    static UFunction* pFnAdjustDestination = NULL;

    if (!pFnAdjustDestination)
        pFnAdjustDestination = (UFunction*)UObject::GObjObjects()->Data[25443];

    APawn_execAdjustDestination_Parms AdjustDestination_Parms;

    pFnAdjustDestination->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAdjustDestination, &AdjustDestination_Parms, NULL);

    pFnAdjustDestination->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsAliveAndWell
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::IsAliveAndWell() {
    static UFunction* pFnIsAliveAndWell = NULL;

    if (!pFnIsAliveAndWell)
        pFnIsAliveAndWell = (UFunction*)UObject::GObjObjects()->Data[25441];

    APawn_execIsAliveAndWell_Parms IsAliveAndWell_Parms;

    pFnIsAliveAndWell->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsAliveAndWell, &IsAliveAndWell_Parms, NULL);

    pFnIsAliveAndWell->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[25439];

    APawn_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Pawn.SetSkelControlScale
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventSetSkelControlScale() {
    static UFunction* pFnSetSkelControlScale = NULL;

    if (!pFnSetSkelControlScale)
        pFnSetSkelControlScale =
            (UFunction*)UObject::GObjObjects()->Data[25436];

    APawn_eventSetSkelControlScale_Parms SetSkelControlScale_Parms;

    this->ProcessEvent(pFnSetSkelControlScale, &SetSkelControlScale_Parms,
                       NULL);
};

// Function Engine.Pawn.SetMorphWeight
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventSetMorphWeight() {
    static UFunction* pFnSetMorphWeight = NULL;

    if (!pFnSetMorphWeight)
        pFnSetMorphWeight = (UFunction*)UObject::GObjObjects()->Data[25433];

    APawn_eventSetMorphWeight_Parms SetMorphWeight_Parms;

    this->ProcessEvent(pFnSetMorphWeight, &SetMorphWeight_Parms, NULL);
};

// Function Engine.Pawn.GetActorFaceFXAsset
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventGetActorFaceFXAsset() {
    static UFunction* pFnGetActorFaceFXAsset = NULL;

    if (!pFnGetActorFaceFXAsset)
        pFnGetActorFaceFXAsset =
            (UFunction*)UObject::GObjObjects()->Data[25431];

    APawn_eventGetActorFaceFXAsset_Parms GetActorFaceFXAsset_Parms;

    this->ProcessEvent(pFnGetActorFaceFXAsset, &GetActorFaceFXAsset_Parms,
                       NULL);
};

// Function Engine.Pawn.FaceFXAudioFinished
// [0x00020100]
// Parameters infos:

void APawn::FaceFXAudioFinished() {
    static UFunction* pFnFaceFXAudioFinished = NULL;

    if (!pFnFaceFXAudioFinished)
        pFnFaceFXAudioFinished =
            (UFunction*)UObject::GObjObjects()->Data[25429];

    APawn_execFaceFXAudioFinished_Parms FaceFXAudioFinished_Parms;

    this->ProcessEvent(pFnFaceFXAudioFinished, &FaceFXAudioFinished_Parms,
                       NULL);
};

// Function Engine.Pawn.OnPlayFaceFXAnim
// [0x00020102]
// Parameters infos:

void APawn::OnPlayFaceFXAnim() {
    static UFunction* pFnOnPlayFaceFXAnim = NULL;

    if (!pFnOnPlayFaceFXAnim)
        pFnOnPlayFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[25427];

    APawn_execOnPlayFaceFXAnim_Parms OnPlayFaceFXAnim_Parms;

    this->ProcessEvent(pFnOnPlayFaceFXAnim, &OnPlayFaceFXAnim_Parms, NULL);
};

// Function Engine.Pawn.CanActorPlayFaceFXAnim
// [0x00020102]
// Parameters infos:

void APawn::CanActorPlayFaceFXAnim() {
    static UFunction* pFnCanActorPlayFaceFXAnim = NULL;

    if (!pFnCanActorPlayFaceFXAnim)
        pFnCanActorPlayFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[25425];

    APawn_execCanActorPlayFaceFXAnim_Parms CanActorPlayFaceFXAnim_Parms;

    this->ProcessEvent(pFnCanActorPlayFaceFXAnim, &CanActorPlayFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Pawn.IsActorPlayingFaceFXAnim
// [0x00020102]
// Parameters infos:

void APawn::IsActorPlayingFaceFXAnim() {
    static UFunction* pFnIsActorPlayingFaceFXAnim = NULL;

    if (!pFnIsActorPlayingFaceFXAnim)
        pFnIsActorPlayingFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[25423];

    APawn_execIsActorPlayingFaceFXAnim_Parms IsActorPlayingFaceFXAnim_Parms;

    this->ProcessEvent(pFnIsActorPlayingFaceFXAnim,
                       &IsActorPlayingFaceFXAnim_Parms, NULL);
};

// Function Engine.Pawn.GetFaceFXAudioComponent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventGetFaceFXAudioComponent() {
    static UFunction* pFnGetFaceFXAudioComponent = NULL;

    if (!pFnGetFaceFXAudioComponent)
        pFnGetFaceFXAudioComponent =
            (UFunction*)UObject::GObjObjects()->Data[25421];

    APawn_eventGetFaceFXAudioComponent_Parms GetFaceFXAudioComponent_Parms;

    this->ProcessEvent(pFnGetFaceFXAudioComponent,
                       &GetFaceFXAudioComponent_Parms, NULL);
};

// Function Engine.Pawn.StopActorFaceFXAnim
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventStopActorFaceFXAnim() {
    static UFunction* pFnStopActorFaceFXAnim = NULL;

    if (!pFnStopActorFaceFXAnim)
        pFnStopActorFaceFXAnim =
            (UFunction*)UObject::GObjObjects()->Data[25420];

    APawn_eventStopActorFaceFXAnim_Parms StopActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnStopActorFaceFXAnim, &StopActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Pawn.PlayActorFaceFXAnim
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventPlayActorFaceFXAnim() {
    static UFunction* pFnPlayActorFaceFXAnim = NULL;

    if (!pFnPlayActorFaceFXAnim)
        pFnPlayActorFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[8636];

    APawn_eventPlayActorFaceFXAnim_Parms PlayActorFaceFXAnim_Parms;

    this->ProcessEvent(pFnPlayActorFaceFXAnim, &PlayActorFaceFXAnim_Parms,
                       NULL);
};

// Function Engine.Pawn.MAT_FinishAIGroup
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventMAT_FinishAIGroup() {
    static UFunction* pFnMAT_FinishAIGroup = NULL;

    if (!pFnMAT_FinishAIGroup)
        pFnMAT_FinishAIGroup = (UFunction*)UObject::GObjObjects()->Data[25414];

    APawn_eventMAT_FinishAIGroup_Parms MAT_FinishAIGroup_Parms;

    this->ProcessEvent(pFnMAT_FinishAIGroup, &MAT_FinishAIGroup_Parms, NULL);
};

// Function Engine.Pawn.MAT_BeginAIGroup
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APawn::eventMAT_BeginAIGroup() {
    static UFunction* pFnMAT_BeginAIGroup = NULL;

    if (!pFnMAT_BeginAIGroup)
        pFnMAT_BeginAIGroup = (UFunction*)UObject::GObjObjects()->Data[25411];

    APawn_eventMAT_BeginAIGroup_Parms MAT_BeginAIGroup_Parms;

    this->ProcessEvent(pFnMAT_BeginAIGroup, &MAT_BeginAIGroup_Parms, NULL);
};

// Function Engine.Pawn.FinishAIGroup
// [0x00020100]
// Parameters infos:

void APawn::FinishAIGroup() {
    static UFunction* pFnFinishAIGroup = NULL;

    if (!pFnFinishAIGroup)
        pFnFinishAIGroup = (UFunction*)UObject::GObjObjects()->Data[25410];

    APawn_execFinishAIGroup_Parms FinishAIGroup_Parms;

    this->ProcessEvent(pFnFinishAIGroup, &FinishAIGroup_Parms, NULL);
};

// Function Engine.Pawn.BeginAIGroup
// [0x00020100]
// Parameters infos:

void APawn::BeginAIGroup() {
    static UFunction* pFnBeginAIGroup = NULL;

    if (!pFnBeginAIGroup)
        pFnBeginAIGroup = (UFunction*)UObject::GObjObjects()->Data[25409];

    APawn_execBeginAIGroup_Parms BeginAIGroup_Parms;

    this->ProcessEvent(pFnBeginAIGroup, &BeginAIGroup_Parms, NULL);
};

// Function Engine.Pawn.InterpolationFinished
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventInterpolationFinished() {
    static UFunction* pFnInterpolationFinished = NULL;

    if (!pFnInterpolationFinished)
        pFnInterpolationFinished =
            (UFunction*)UObject::GObjObjects()->Data[25407];

    APawn_eventInterpolationFinished_Parms InterpolationFinished_Parms;

    this->ProcessEvent(pFnInterpolationFinished, &InterpolationFinished_Parms,
                       NULL);
};

// Function Engine.Pawn.InterpolationStarted
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventInterpolationStarted() {
    static UFunction* pFnInterpolationStarted = NULL;

    if (!pFnInterpolationStarted)
        pFnInterpolationStarted =
            (UFunction*)UObject::GObjObjects()->Data[25404];

    APawn_eventInterpolationStarted_Parms InterpolationStarted_Parms;

    this->ProcessEvent(pFnInterpolationStarted, &InterpolationStarted_Parms,
                       NULL);
};

// Function Engine.Pawn.MAT_SetSkelControlStrength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_SetSkelControlStrength() {
    static UFunction* pFnMAT_SetSkelControlStrength = NULL;

    if (!pFnMAT_SetSkelControlStrength)
        pFnMAT_SetSkelControlStrength =
            (UFunction*)UObject::GObjObjects()->Data[25401];

    APawn_execMAT_SetSkelControlStrength_Parms MAT_SetSkelControlStrength_Parms;

    pFnMAT_SetSkelControlStrength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetSkelControlStrength,
                       &MAT_SetSkelControlStrength_Parms, NULL);

    pFnMAT_SetSkelControlStrength->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.MAT_SetSkelControlScale
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_SetSkelControlScale() {
    static UFunction* pFnMAT_SetSkelControlScale = NULL;

    if (!pFnMAT_SetSkelControlScale)
        pFnMAT_SetSkelControlScale =
            (UFunction*)UObject::GObjObjects()->Data[25398];

    APawn_execMAT_SetSkelControlScale_Parms MAT_SetSkelControlScale_Parms;

    pFnMAT_SetSkelControlScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetSkelControlScale,
                       &MAT_SetSkelControlScale_Parms, NULL);

    pFnMAT_SetSkelControlScale->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.MAT_SetMorphWeight
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_SetMorphWeight() {
    static UFunction* pFnMAT_SetMorphWeight = NULL;

    if (!pFnMAT_SetMorphWeight)
        pFnMAT_SetMorphWeight = (UFunction*)UObject::GObjObjects()->Data[25395];

    APawn_execMAT_SetMorphWeight_Parms MAT_SetMorphWeight_Parms;

    pFnMAT_SetMorphWeight->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetMorphWeight, &MAT_SetMorphWeight_Parms, NULL);

    pFnMAT_SetMorphWeight->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.MAT_SetAnimWeights
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_SetAnimWeights() {
    static UFunction* pFnMAT_SetAnimWeights = NULL;

    if (!pFnMAT_SetAnimWeights)
        pFnMAT_SetAnimWeights = (UFunction*)UObject::GObjObjects()->Data[25392];

    APawn_execMAT_SetAnimWeights_Parms MAT_SetAnimWeights_Parms;

    pFnMAT_SetAnimWeights->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetAnimWeights, &MAT_SetAnimWeights_Parms, NULL);

    pFnMAT_SetAnimWeights->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.MAT_SetAnimPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_SetAnimPosition() {
    static UFunction* pFnMAT_SetAnimPosition = NULL;

    if (!pFnMAT_SetAnimPosition)
        pFnMAT_SetAnimPosition =
            (UFunction*)UObject::GObjObjects()->Data[25384];

    APawn_execMAT_SetAnimPosition_Parms MAT_SetAnimPosition_Parms;

    pFnMAT_SetAnimPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_SetAnimPosition, &MAT_SetAnimPosition_Parms,
                       NULL);

    pFnMAT_SetAnimPosition->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetAnimPosition
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventSetAnimPosition() {
    static UFunction* pFnSetAnimPosition = NULL;

    if (!pFnSetAnimPosition)
        pFnSetAnimPosition = (UFunction*)UObject::GObjObjects()->Data[25376];

    APawn_eventSetAnimPosition_Parms SetAnimPosition_Parms;

    this->ProcessEvent(pFnSetAnimPosition, &SetAnimPosition_Parms, NULL);
};

// Function Engine.Pawn.MAT_FinishAnimControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_FinishAnimControl() {
    static UFunction* pFnMAT_FinishAnimControl = NULL;

    if (!pFnMAT_FinishAnimControl)
        pFnMAT_FinishAnimControl =
            (UFunction*)UObject::GObjObjects()->Data[25374];

    APawn_execMAT_FinishAnimControl_Parms MAT_FinishAnimControl_Parms;

    pFnMAT_FinishAnimControl->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_FinishAnimControl, &MAT_FinishAnimControl_Parms,
                       NULL);

    pFnMAT_FinishAnimControl->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.FinishAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventFinishAnimControl() {
    static UFunction* pFnFinishAnimControl = NULL;

    if (!pFnFinishAnimControl)
        pFnFinishAnimControl = (UFunction*)UObject::GObjObjects()->Data[25372];

    APawn_eventFinishAnimControl_Parms FinishAnimControl_Parms;

    this->ProcessEvent(pFnFinishAnimControl, &FinishAnimControl_Parms, NULL);
};

// Function Engine.Pawn.MAT_BeginAnimControl
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void APawn::MAT_BeginAnimControl() {
    static UFunction* pFnMAT_BeginAnimControl = NULL;

    if (!pFnMAT_BeginAnimControl)
        pFnMAT_BeginAnimControl =
            (UFunction*)UObject::GObjObjects()->Data[25370];

    APawn_execMAT_BeginAnimControl_Parms MAT_BeginAnimControl_Parms;

    pFnMAT_BeginAnimControl->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMAT_BeginAnimControl, &MAT_BeginAnimControl_Parms,
                       NULL);

    pFnMAT_BeginAnimControl->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.BeginAnimControl
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventBeginAnimControl() {
    static UFunction* pFnBeginAnimControl = NULL;

    if (!pFnBeginAnimControl)
        pFnBeginAnimControl = (UFunction*)UObject::GObjObjects()->Data[25368];

    APawn_eventBeginAnimControl_Parms BeginAnimControl_Parms;

    this->ProcessEvent(pFnBeginAnimControl, &BeginAnimControl_Parms, NULL);
};

// Function Engine.Pawn.RestoreAnimSetsToDefault
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventRestoreAnimSetsToDefault() {
    static UFunction* pFnRestoreAnimSetsToDefault = NULL;

    if (!pFnRestoreAnimSetsToDefault)
        pFnRestoreAnimSetsToDefault =
            (UFunction*)UObject::GObjObjects()->Data[25366];

    APawn_eventRestoreAnimSetsToDefault_Parms RestoreAnimSetsToDefault_Parms;

    this->ProcessEvent(pFnRestoreAnimSetsToDefault,
                       &RestoreAnimSetsToDefault_Parms, NULL);
};

// Function Engine.Pawn.AnimSetListUpdated
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void APawn::eventAnimSetListUpdated() {
    static UFunction* pFnAnimSetListUpdated = NULL;

    if (!pFnAnimSetListUpdated)
        pFnAnimSetListUpdated = (UFunction*)UObject::GObjObjects()->Data[25365];

    APawn_eventAnimSetListUpdated_Parms AnimSetListUpdated_Parms;

    this->ProcessEvent(pFnAnimSetListUpdated, &AnimSetListUpdated_Parms, NULL);
};

// Function Engine.Pawn.AddAnimSets
// [0x00420501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::AddAnimSets() {
    static UFunction* pFnAddAnimSets = NULL;

    if (!pFnAddAnimSets)
        pFnAddAnimSets = (UFunction*)UObject::GObjObjects()->Data[25362];

    APawn_execAddAnimSets_Parms AddAnimSets_Parms;

    pFnAddAnimSets->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddAnimSets, &AddAnimSets_Parms, NULL);

    pFnAddAnimSets->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.BuildScriptAnimSetList
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void APawn::eventBuildScriptAnimSetList() {
    static UFunction* pFnBuildScriptAnimSetList = NULL;

    if (!pFnBuildScriptAnimSetList)
        pFnBuildScriptAnimSetList =
            (UFunction*)UObject::GObjObjects()->Data[25361];

    APawn_eventBuildScriptAnimSetList_Parms BuildScriptAnimSetList_Parms;

    this->ProcessEvent(pFnBuildScriptAnimSetList, &BuildScriptAnimSetList_Parms,
                       NULL);
};

// Function Engine.Pawn.UpdateAnimSetList
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::UpdateAnimSetList() {
    static UFunction* pFnUpdateAnimSetList = NULL;

    if (!pFnUpdateAnimSetList)
        pFnUpdateAnimSetList = (UFunction*)UObject::GObjObjects()->Data[25360];

    APawn_execUpdateAnimSetList_Parms UpdateAnimSetList_Parms;

    pFnUpdateAnimSetList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateAnimSetList, &UpdateAnimSetList_Parms, NULL);

    pFnUpdateAnimSetList->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ClearAnimNodes
// [0x00020102]
// Parameters infos:

void APawn::ClearAnimNodes() {
    static UFunction* pFnClearAnimNodes = NULL;

    if (!pFnClearAnimNodes)
        pFnClearAnimNodes = (UFunction*)UObject::GObjObjects()->Data[25359];

    APawn_execClearAnimNodes_Parms ClearAnimNodes_Parms;

    this->ProcessEvent(pFnClearAnimNodes, &ClearAnimNodes_Parms, NULL);
};

// Function Engine.Pawn.CacheAnimNodes
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void APawn::eventCacheAnimNodes() {
    static UFunction* pFnCacheAnimNodes = NULL;

    if (!pFnCacheAnimNodes)
        pFnCacheAnimNodes = (UFunction*)UObject::GObjObjects()->Data[25358];

    APawn_eventCacheAnimNodes_Parms CacheAnimNodes_Parms;

    pFnCacheAnimNodes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCacheAnimNodes, &CacheAnimNodes_Parms, NULL);

    pFnCacheAnimNodes->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APawn::eventPostInitAnimTree() {
    static UFunction* pFnPostInitAnimTree = NULL;

    if (!pFnPostInitAnimTree)
        pFnPostInitAnimTree = (UFunction*)UObject::GObjObjects()->Data[25356];

    APawn_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;

    this->ProcessEvent(pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL);
};

// Function Engine.Pawn.ReachedMyDestination
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void APawn::ReachedMyDestination() {
    static UFunction* pFnReachedMyDestination = NULL;

    if (!pFnReachedMyDestination)
        pFnReachedMyDestination =
            (UFunction*)UObject::GObjObjects()->Data[25351];

    APawn_execReachedMyDestination_Parms ReachedMyDestination_Parms;

    pFnReachedMyDestination->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReachedMyDestination, &ReachedMyDestination_Parms,
                       NULL);

    pFnReachedMyDestination->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsDesiredRotationLocked
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::IsDesiredRotationLocked() {
    static UFunction* pFnIsDesiredRotationLocked = NULL;

    if (!pFnIsDesiredRotationLocked)
        pFnIsDesiredRotationLocked =
            (UFunction*)UObject::GObjObjects()->Data[25349];

    APawn_execIsDesiredRotationLocked_Parms IsDesiredRotationLocked_Parms;

    pFnIsDesiredRotationLocked->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsDesiredRotationLocked,
                       &IsDesiredRotationLocked_Parms, NULL);

    pFnIsDesiredRotationLocked->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.IsDesiredRotationInUse
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::IsDesiredRotationInUse() {
    static UFunction* pFnIsDesiredRotationInUse = NULL;

    if (!pFnIsDesiredRotationInUse)
        pFnIsDesiredRotationInUse =
            (UFunction*)UObject::GObjObjects()->Data[25347];

    APawn_execIsDesiredRotationInUse_Parms IsDesiredRotationInUse_Parms;

    pFnIsDesiredRotationInUse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsDesiredRotationInUse, &IsDesiredRotationInUse_Parms,
                       NULL);

    pFnIsDesiredRotationInUse->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.CheckDesiredRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::CheckDesiredRotation() {
    static UFunction* pFnCheckDesiredRotation = NULL;

    if (!pFnCheckDesiredRotation)
        pFnCheckDesiredRotation =
            (UFunction*)UObject::GObjObjects()->Data[25346];

    APawn_execCheckDesiredRotation_Parms CheckDesiredRotation_Parms;

    pFnCheckDesiredRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckDesiredRotation, &CheckDesiredRotation_Parms,
                       NULL);

    pFnCheckDesiredRotation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.ResetDesiredRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::ResetDesiredRotation() {
    static UFunction* pFnResetDesiredRotation = NULL;

    if (!pFnResetDesiredRotation)
        pFnResetDesiredRotation =
            (UFunction*)UObject::GObjObjects()->Data[25345];

    APawn_execResetDesiredRotation_Parms ResetDesiredRotation_Parms;

    pFnResetDesiredRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetDesiredRotation, &ResetDesiredRotation_Parms,
                       NULL);

    pFnResetDesiredRotation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.LockDesiredRotation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::LockDesiredRotation() {
    static UFunction* pFnLockDesiredRotation = NULL;

    if (!pFnLockDesiredRotation)
        pFnLockDesiredRotation =
            (UFunction*)UObject::GObjObjects()->Data[25342];

    APawn_execLockDesiredRotation_Parms LockDesiredRotation_Parms;

    pFnLockDesiredRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLockDesiredRotation, &LockDesiredRotation_Parms,
                       NULL);

    pFnLockDesiredRotation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.SetDesiredRotation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::SetDesiredRotation() {
    static UFunction* pFnSetDesiredRotation = NULL;

    if (!pFnSetDesiredRotation)
        pFnSetDesiredRotation = (UFunction*)UObject::GObjObjects()->Data[12444];

    APawn_execSetDesiredRotation_Parms SetDesiredRotation_Parms;

    pFnSetDesiredRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDesiredRotation, &SetDesiredRotation_Parms, NULL);

    pFnSetDesiredRotation->FunctionFlags |= 0x400;
};

// Function Engine.Pawn.PickWallAdjust
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APawn::PickWallAdjust() {
    static UFunction* pFnPickWallAdjust = NULL;

    if (!pFnPickWallAdjust)
        pFnPickWallAdjust = (UFunction*)UObject::GObjObjects()->Data[25333];

    APawn_execPickWallAdjust_Parms PickWallAdjust_Parms;

    pFnPickWallAdjust->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPickWallAdjust, &PickWallAdjust_Parms, NULL);

    pFnPickWallAdjust->FunctionFlags |= 0x400;
};

// Function Engine.Vehicle.ZeroMovementVariables
// [0x00020102]
// Parameters infos:

void AVehicle::ZeroMovementVariables() {
    static UFunction* pFnZeroMovementVariables = NULL;

    if (!pFnZeroMovementVariables)
        pFnZeroMovementVariables =
            (UFunction*)UObject::GObjObjects()->Data[34829];

    AVehicle_execZeroMovementVariables_Parms ZeroMovementVariables_Parms;

    this->ProcessEvent(pFnZeroMovementVariables, &ZeroMovementVariables_Parms,
                       NULL);
};

// Function Engine.Vehicle.NotifyDriverTakeHit
// [0x00020000]
// Parameters infos:

void AVehicle::NotifyDriverTakeHit() {
    static UFunction* pFnNotifyDriverTakeHit = NULL;

    if (!pFnNotifyDriverTakeHit)
        pFnNotifyDriverTakeHit =
            (UFunction*)UObject::GObjObjects()->Data[34823];

    AVehicle_execNotifyDriverTakeHit_Parms NotifyDriverTakeHit_Parms;

    this->ProcessEvent(pFnNotifyDriverTakeHit, &NotifyDriverTakeHit_Parms,
                       NULL);
};

// Function Engine.Vehicle.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[34821];

    AVehicle_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Vehicle.DrivingStatusChanged
// [0x00020102]
// Parameters infos:

void AVehicle::DrivingStatusChanged() {
    static UFunction* pFnDrivingStatusChanged = NULL;

    if (!pFnDrivingStatusChanged)
        pFnDrivingStatusChanged =
            (UFunction*)UObject::GObjObjects()->Data[34820];

    AVehicle_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

    this->ProcessEvent(pFnDrivingStatusChanged, &DrivingStatusChanged_Parms,
                       NULL);
};

// Function Engine.Vehicle.SetDriving
// [0x00020102]
// Parameters infos:

void AVehicle::SetDriving() {
    static UFunction* pFnSetDriving = NULL;

    if (!pFnSetDriving)
        pFnSetDriving = (UFunction*)UObject::GObjObjects()->Data[34818];

    AVehicle_execSetDriving_Parms SetDriving_Parms;

    this->ProcessEvent(pFnSetDriving, &SetDriving_Parms, NULL);
};

// Function Engine.Vehicle.GetEntryLocation
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventGetEntryLocation() {
    static UFunction* pFnGetEntryLocation = NULL;

    if (!pFnGetEntryLocation)
        pFnGetEntryLocation = (UFunction*)UObject::GObjObjects()->Data[34816];

    AVehicle_eventGetEntryLocation_Parms GetEntryLocation_Parms;

    this->ProcessEvent(pFnGetEntryLocation, &GetEntryLocation_Parms, NULL);
};

// Function Engine.Vehicle.CrushedBy
// [0x00020000]
// Parameters infos:

void AVehicle::CrushedBy() {
    static UFunction* pFnCrushedBy = NULL;

    if (!pFnCrushedBy)
        pFnCrushedBy = (UFunction*)UObject::GObjObjects()->Data[34814];

    AVehicle_execCrushedBy_Parms CrushedBy_Parms;

    this->ProcessEvent(pFnCrushedBy, &CrushedBy_Parms, NULL);
};

// Function Engine.Vehicle.PancakeOther
// [0x00020002]
// Parameters infos:

void AVehicle::PancakeOther() {
    static UFunction* pFnPancakeOther = NULL;

    if (!pFnPancakeOther)
        pFnPancakeOther = (UFunction*)UObject::GObjObjects()->Data[34812];

    AVehicle_execPancakeOther_Parms PancakeOther_Parms;

    this->ProcessEvent(pFnPancakeOther, &PancakeOther_Parms, NULL);
};

// Function Engine.Vehicle.EncroachingOn
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventEncroachingOn() {
    static UFunction* pFnEncroachingOn = NULL;

    if (!pFnEncroachingOn)
        pFnEncroachingOn = (UFunction*)UObject::GObjObjects()->Data[34804];

    AVehicle_eventEncroachingOn_Parms EncroachingOn_Parms;

    this->ProcessEvent(pFnEncroachingOn, &EncroachingOn_Parms, NULL);
};

// Function Engine.Vehicle.GetCollisionDamageInstigator
// [0x00020002]
// Parameters infos:

void AVehicle::GetCollisionDamageInstigator() {
    static UFunction* pFnGetCollisionDamageInstigator = NULL;

    if (!pFnGetCollisionDamageInstigator)
        pFnGetCollisionDamageInstigator =
            (UFunction*)UObject::GObjObjects()->Data[34802];

    AVehicle_execGetCollisionDamageInstigator_Parms
        GetCollisionDamageInstigator_Parms;

    this->ProcessEvent(pFnGetCollisionDamageInstigator,
                       &GetCollisionDamageInstigator_Parms, NULL);
};

// Function Engine.Vehicle.EncroachedBy
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventEncroachedBy() {
    static UFunction* pFnEncroachedBy = NULL;

    if (!pFnEncroachedBy)
        pFnEncroachedBy = (UFunction*)UObject::GObjObjects()->Data[34800];

    AVehicle_eventEncroachedBy_Parms EncroachedBy_Parms;

    this->ProcessEvent(pFnEncroachedBy, &EncroachedBy_Parms, NULL);
};

// Function Engine.Vehicle.FaceRotation
// [0x00020100]
// Parameters infos:

void AVehicle::FaceRotation() {
    static UFunction* pFnFaceRotation = NULL;

    if (!pFnFaceRotation)
        pFnFaceRotation = (UFunction*)UObject::GObjObjects()->Data[34797];

    AVehicle_execFaceRotation_Parms FaceRotation_Parms;

    this->ProcessEvent(pFnFaceRotation, &FaceRotation_Parms, NULL);
};

// Function Engine.Vehicle.GetDefaultCameraMode
// [0x00020102]
// Parameters infos:

void AVehicle::GetDefaultCameraMode() {
    static UFunction* pFnGetDefaultCameraMode = NULL;

    if (!pFnGetDefaultCameraMode)
        pFnGetDefaultCameraMode =
            (UFunction*)UObject::GObjObjects()->Data[34794];

    AVehicle_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;

    this->ProcessEvent(pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms,
                       NULL);
};

// Function Engine.Vehicle.PlayDying
// [0x00020100]
// Parameters infos:

void AVehicle::PlayDying() {
    static UFunction* pFnPlayDying = NULL;

    if (!pFnPlayDying)
        pFnPlayDying = (UFunction*)UObject::GObjObjects()->Data[34791];

    AVehicle_execPlayDying_Parms PlayDying_Parms;

    this->ProcessEvent(pFnPlayDying, &PlayDying_Parms, NULL);
};

// Function Engine.Vehicle.DriverDied
// [0x00020002]
// Parameters infos:

void AVehicle::DriverDied() {
    static UFunction* pFnDriverDied = NULL;

    if (!pFnDriverDied)
        pFnDriverDied = (UFunction*)UObject::GObjObjects()->Data[34787];

    AVehicle_execDriverDied_Parms DriverDied_Parms;

    this->ProcessEvent(pFnDriverDied, &DriverDied_Parms, NULL);
};

// Function Engine.Vehicle.Died
// [0x00020002]
// Parameters infos:

void AVehicle::Died() {
    static UFunction* pFnDied = NULL;

    if (!pFnDied) pFnDied = (UFunction*)UObject::GObjObjects()->Data[34782];

    AVehicle_execDied_Parms Died_Parms;

    this->ProcessEvent(pFnDied, &Died_Parms, NULL);
};

// Function Engine.Vehicle.ThrowActiveWeapon
// [0x00024000]
// Parameters infos:

void AVehicle::ThrowActiveWeapon() {
    static UFunction* pFnThrowActiveWeapon = NULL;

    if (!pFnThrowActiveWeapon)
        pFnThrowActiveWeapon = (UFunction*)UObject::GObjObjects()->Data[34780];

    AVehicle_execThrowActiveWeapon_Parms ThrowActiveWeapon_Parms;

    this->ProcessEvent(pFnThrowActiveWeapon, &ThrowActiveWeapon_Parms, NULL);
};

// Function Engine.Vehicle.AdjustDriverDamage
// [0x00420002]
// Parameters infos:

void AVehicle::AdjustDriverDamage() {
    static UFunction* pFnAdjustDriverDamage = NULL;

    if (!pFnAdjustDriverDamage)
        pFnAdjustDriverDamage = (UFunction*)UObject::GObjObjects()->Data[34774];

    AVehicle_execAdjustDriverDamage_Parms AdjustDriverDamage_Parms;

    this->ProcessEvent(pFnAdjustDriverDamage, &AdjustDriverDamage_Parms, NULL);
};

// Function Engine.Vehicle.TakeDamage
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[34766];

    AVehicle_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.Vehicle.SetKillInstigator
// [0x00020002]
// Parameters infos:

void AVehicle::SetKillInstigator() {
    static UFunction* pFnSetKillInstigator = NULL;

    if (!pFnSetKillInstigator)
        pFnSetKillInstigator = (UFunction*)UObject::GObjObjects()->Data[34762];

    AVehicle_execSetKillInstigator_Parms SetKillInstigator_Parms;

    this->ProcessEvent(pFnSetKillInstigator, &SetKillInstigator_Parms, NULL);
};

// Function Engine.Vehicle.UnPossessed
// [0x00020002]
// Parameters infos:

void AVehicle::UnPossessed() {
    static UFunction* pFnUnPossessed = NULL;

    if (!pFnUnPossessed)
        pFnUnPossessed = (UFunction*)UObject::GObjObjects()->Data[34761];

    AVehicle_execUnPossessed_Parms UnPossessed_Parms;

    this->ProcessEvent(pFnUnPossessed, &UnPossessed_Parms, NULL);
};

// Function Engine.Vehicle.TryExitPos
// [0x00820002]
// Parameters infos:

void AVehicle::TryExitPos() {
    static UFunction* pFnTryExitPos = NULL;

    if (!pFnTryExitPos)
        pFnTryExitPos = (UFunction*)UObject::GObjObjects()->Data[34750];

    AVehicle_execTryExitPos_Parms TryExitPos_Parms;

    this->ProcessEvent(pFnTryExitPos, &TryExitPos_Parms, NULL);
};

// Function Engine.Vehicle.FindAutoExit
// [0x00820002]
// Parameters infos:

void AVehicle::FindAutoExit() {
    static UFunction* pFnFindAutoExit = NULL;

    if (!pFnFindAutoExit)
        pFnFindAutoExit = (UFunction*)UObject::GObjObjects()->Data[34744];

    AVehicle_execFindAutoExit_Parms FindAutoExit_Parms;

    this->ProcessEvent(pFnFindAutoExit, &FindAutoExit_Parms, NULL);
};

// Function Engine.Vehicle.PlaceExitingDriver
// [0x00824002]
// Parameters infos:

void AVehicle::PlaceExitingDriver() {
    static UFunction* pFnPlaceExitingDriver = NULL;

    if (!pFnPlaceExitingDriver)
        pFnPlaceExitingDriver = (UFunction*)UObject::GObjObjects()->Data[34735];

    AVehicle_execPlaceExitingDriver_Parms PlaceExitingDriver_Parms;

    this->ProcessEvent(pFnPlaceExitingDriver, &PlaceExitingDriver_Parms, NULL);
};

// Function Engine.Vehicle.DriverLeft
// [0x00020002]
// Parameters infos:

void AVehicle::DriverLeft() {
    static UFunction* pFnDriverLeft = NULL;

    if (!pFnDriverLeft)
        pFnDriverLeft = (UFunction*)UObject::GObjObjects()->Data[34734];

    AVehicle_execDriverLeft_Parms DriverLeft_Parms;

    this->ProcessEvent(pFnDriverLeft, &DriverLeft_Parms, NULL);
};

// Function Engine.Vehicle.SetInputs
// [0x00020102]
// Parameters infos:

void AVehicle::SetInputs() {
    static UFunction* pFnSetInputs = NULL;

    if (!pFnSetInputs)
        pFnSetInputs = (UFunction*)UObject::GObjObjects()->Data[34730];

    AVehicle_execSetInputs_Parms SetInputs_Parms;

    this->ProcessEvent(pFnSetInputs, &SetInputs_Parms, NULL);
};

// Function Engine.Vehicle.DriverLeave
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventDriverLeave() {
    static UFunction* pFnDriverLeave = NULL;

    if (!pFnDriverLeave)
        pFnDriverLeave = (UFunction*)UObject::GObjObjects()->Data[8629];

    AVehicle_eventDriverLeave_Parms DriverLeave_Parms;

    this->ProcessEvent(pFnDriverLeave, &DriverLeave_Parms, NULL);
};

// Function Engine.Vehicle.GetExitRotation
// [0x00820002]
// Parameters infos:

void AVehicle::GetExitRotation() {
    static UFunction* pFnGetExitRotation = NULL;

    if (!pFnGetExitRotation)
        pFnGetExitRotation = (UFunction*)UObject::GObjObjects()->Data[34722];

    AVehicle_execGetExitRotation_Parms GetExitRotation_Parms;

    this->ProcessEvent(pFnGetExitRotation, &GetExitRotation_Parms, NULL);
};

// Function Engine.Vehicle.ContinueOnFoot
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventContinueOnFoot() {
    static UFunction* pFnContinueOnFoot = NULL;

    if (!pFnContinueOnFoot)
        pFnContinueOnFoot = (UFunction*)UObject::GObjObjects()->Data[34720];

    AVehicle_eventContinueOnFoot_Parms ContinueOnFoot_Parms;

    this->ProcessEvent(pFnContinueOnFoot, &ContinueOnFoot_Parms, NULL);
};

// Function Engine.Vehicle.DetachDriver
// [0x00020100]
// Parameters infos:

void AVehicle::DetachDriver() {
    static UFunction* pFnDetachDriver = NULL;

    if (!pFnDetachDriver)
        pFnDetachDriver = (UFunction*)UObject::GObjObjects()->Data[34718];

    AVehicle_execDetachDriver_Parms DetachDriver_Parms;

    this->ProcessEvent(pFnDetachDriver, &DetachDriver_Parms, NULL);
};

// Function Engine.Vehicle.AttachDriver
// [0x00020102]
// Parameters infos:

void AVehicle::AttachDriver() {
    static UFunction* pFnAttachDriver = NULL;

    if (!pFnAttachDriver)
        pFnAttachDriver = (UFunction*)UObject::GObjObjects()->Data[34716];

    AVehicle_execAttachDriver_Parms AttachDriver_Parms;

    this->ProcessEvent(pFnAttachDriver, &AttachDriver_Parms, NULL);
};

// Function Engine.Vehicle.EntryAnnouncement
// [0x00020000]
// Parameters infos:

void AVehicle::EntryAnnouncement() {
    static UFunction* pFnEntryAnnouncement = NULL;

    if (!pFnEntryAnnouncement)
        pFnEntryAnnouncement = (UFunction*)UObject::GObjObjects()->Data[34714];

    AVehicle_execEntryAnnouncement_Parms EntryAnnouncement_Parms;

    this->ProcessEvent(pFnEntryAnnouncement, &EntryAnnouncement_Parms, NULL);
};

// Function Engine.Vehicle.PossessedBy
// [0x00020002]
// Parameters infos:

void AVehicle::PossessedBy() {
    static UFunction* pFnPossessedBy = NULL;

    if (!pFnPossessedBy)
        pFnPossessedBy = (UFunction*)UObject::GObjObjects()->Data[34711];

    AVehicle_execPossessedBy_Parms PossessedBy_Parms;

    this->ProcessEvent(pFnPossessedBy, &PossessedBy_Parms, NULL);
};

// Function Engine.Vehicle.DriverEnter
// [0x00020002]
// Parameters infos:

void AVehicle::DriverEnter() {
    static UFunction* pFnDriverEnter = NULL;

    if (!pFnDriverEnter)
        pFnDriverEnter = (UFunction*)UObject::GObjObjects()->Data[34707];

    AVehicle_execDriverEnter_Parms DriverEnter_Parms;

    this->ProcessEvent(pFnDriverEnter, &DriverEnter_Parms, NULL);
};

// Function Engine.Vehicle.TryToDrive
// [0x00020002]
// Parameters infos:

void AVehicle::TryToDrive() {
    static UFunction* pFnTryToDrive = NULL;

    if (!pFnTryToDrive)
        pFnTryToDrive = (UFunction*)UObject::GObjObjects()->Data[8632];

    AVehicle_execTryToDrive_Parms TryToDrive_Parms;

    this->ProcessEvent(pFnTryToDrive, &TryToDrive_Parms, NULL);
};

// Function Engine.Vehicle.AnySeatAvailable
// [0x00020002]
// Parameters infos:

void AVehicle::AnySeatAvailable() {
    static UFunction* pFnAnySeatAvailable = NULL;

    if (!pFnAnySeatAvailable)
        pFnAnySeatAvailable = (UFunction*)UObject::GObjObjects()->Data[34704];

    AVehicle_execAnySeatAvailable_Parms AnySeatAvailable_Parms;

    this->ProcessEvent(pFnAnySeatAvailable, &AnySeatAvailable_Parms, NULL);
};

// Function Engine.Vehicle.CanEnterVehicle
// [0x00020002]
// Parameters infos:

void AVehicle::CanEnterVehicle() {
    static UFunction* pFnCanEnterVehicle = NULL;

    if (!pFnCanEnterVehicle)
        pFnCanEnterVehicle = (UFunction*)UObject::GObjObjects()->Data[34701];

    AVehicle_execCanEnterVehicle_Parms CanEnterVehicle_Parms;

    this->ProcessEvent(pFnCanEnterVehicle, &CanEnterVehicle_Parms, NULL);
};

// Function Engine.Vehicle.Destroyed_HandleDriver
// [0x00020102]
// Parameters infos:

void AVehicle::Destroyed_HandleDriver() {
    static UFunction* pFnDestroyed_HandleDriver = NULL;

    if (!pFnDestroyed_HandleDriver)
        pFnDestroyed_HandleDriver =
            (UFunction*)UObject::GObjObjects()->Data[34699];

    AVehicle_execDestroyed_HandleDriver_Parms Destroyed_HandleDriver_Parms;

    this->ProcessEvent(pFnDestroyed_HandleDriver, &Destroyed_HandleDriver_Parms,
                       NULL);
};

// Function Engine.Vehicle.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[34698];

    AVehicle_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Vehicle.CheatFly
// [0x00020002]
// Parameters infos:

void AVehicle::CheatFly() {
    static UFunction* pFnCheatFly = NULL;

    if (!pFnCheatFly)
        pFnCheatFly = (UFunction*)UObject::GObjObjects()->Data[34696];

    AVehicle_execCheatFly_Parms CheatFly_Parms;

    this->ProcessEvent(pFnCheatFly, &CheatFly_Parms, NULL);
};

// Function Engine.Vehicle.CheatGhost
// [0x00020002]
// Parameters infos:

void AVehicle::CheatGhost() {
    static UFunction* pFnCheatGhost = NULL;

    if (!pFnCheatGhost)
        pFnCheatGhost = (UFunction*)UObject::GObjObjects()->Data[34694];

    AVehicle_execCheatGhost_Parms CheatGhost_Parms;

    this->ProcessEvent(pFnCheatGhost, &CheatGhost_Parms, NULL);
};

// Function Engine.Vehicle.CheatWalk
// [0x00020002]
// Parameters infos:

void AVehicle::CheatWalk() {
    static UFunction* pFnCheatWalk = NULL;

    if (!pFnCheatWalk)
        pFnCheatWalk = (UFunction*)UObject::GObjObjects()->Data[34692];

    AVehicle_execCheatWalk_Parms CheatWalk_Parms;

    this->ProcessEvent(pFnCheatWalk, &CheatWalk_Parms, NULL);
};

// Function Engine.Vehicle.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AVehicle::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[34691];

    AVehicle_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Vehicle.SetBaseEyeheight
// [0x00020102]
// Parameters infos:

void AVehicle::SetBaseEyeheight() {
    static UFunction* pFnSetBaseEyeheight = NULL;

    if (!pFnSetBaseEyeheight)
        pFnSetBaseEyeheight = (UFunction*)UObject::GObjObjects()->Data[34690];

    AVehicle_execSetBaseEyeheight_Parms SetBaseEyeheight_Parms;

    this->ProcessEvent(pFnSetBaseEyeheight, &SetBaseEyeheight_Parms, NULL);
};

// Function Engine.Vehicle.PlayerChangedTeam
// [0x00020002]
// Parameters infos:

void AVehicle::PlayerChangedTeam() {
    static UFunction* pFnPlayerChangedTeam = NULL;

    if (!pFnPlayerChangedTeam)
        pFnPlayerChangedTeam = (UFunction*)UObject::GObjObjects()->Data[34689];

    AVehicle_execPlayerChangedTeam_Parms PlayerChangedTeam_Parms;

    this->ProcessEvent(pFnPlayerChangedTeam, &PlayerChangedTeam_Parms, NULL);
};

// Function Engine.Vehicle.DriverRadiusDamage
// [0x00024002]
// Parameters infos:

void AVehicle::DriverRadiusDamage() {
    static UFunction* pFnDriverRadiusDamage = NULL;

    if (!pFnDriverRadiusDamage)
        pFnDriverRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[34680];

    AVehicle_execDriverRadiusDamage_Parms DriverRadiusDamage_Parms;

    this->ProcessEvent(pFnDriverRadiusDamage, &DriverRadiusDamage_Parms, NULL);
};

// Function Engine.Vehicle.TakeRadiusDamage
// [0x00024102]
// Parameters infos:

void AVehicle::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[34670];

    AVehicle_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);
};

// Function Engine.Vehicle.GetTargetLocation
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void AVehicle::GetTargetLocation() {
    static UFunction* pFnGetTargetLocation = NULL;

    if (!pFnGetTargetLocation)
        pFnGetTargetLocation = (UFunction*)UObject::GObjObjects()->Data[34666];

    AVehicle_execGetTargetLocation_Parms GetTargetLocation_Parms;

    pFnGetTargetLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTargetLocation, &GetTargetLocation_Parms, NULL);

    pFnGetTargetLocation->FunctionFlags |= 0x400;
};

// Function Engine.Vehicle.GetMaxRiseForce
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AVehicle::GetMaxRiseForce() {
    static UFunction* pFnGetMaxRiseForce = NULL;

    if (!pFnGetMaxRiseForce)
        pFnGetMaxRiseForce = (UFunction*)UObject::GObjObjects()->Data[34664];

    AVehicle_execGetMaxRiseForce_Parms GetMaxRiseForce_Parms;

    pFnGetMaxRiseForce->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxRiseForce, &GetMaxRiseForce_Parms, NULL);

    pFnGetMaxRiseForce->FunctionFlags |= 0x400;
};

// Function Engine.Vehicle.Suicide
// [0x00020002]
// Parameters infos:

void AVehicle::Suicide() {
    static UFunction* pFnSuicide = NULL;

    if (!pFnSuicide)
        pFnSuicide = (UFunction*)UObject::GObjObjects()->Data[34663];

    AVehicle_execSuicide_Parms Suicide_Parms;

    this->ProcessEvent(pFnSuicide, &Suicide_Parms, NULL);
};

// Function Engine.Vehicle.DisplayDebug
// [0x00420102]
// Parameters infos:

void AVehicle::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[34658];

    AVehicle_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Vehicle.NotifyTeamChanged
// [0x00020102]
// Parameters infos:

void AVehicle::NotifyTeamChanged() {
    static UFunction* pFnNotifyTeamChanged = NULL;

    if (!pFnNotifyTeamChanged)
        pFnNotifyTeamChanged = (UFunction*)UObject::GObjObjects()->Data[34657];

    AVehicle_execNotifyTeamChanged_Parms NotifyTeamChanged_Parms;

    this->ProcessEvent(pFnNotifyTeamChanged, &NotifyTeamChanged_Parms, NULL);
};

// Function Engine.SVehicle.GetSVehicleDebug
// [0x00420102]
// Parameters infos:

void ASVehicle::GetSVehicleDebug() {
    static UFunction* pFnGetSVehicleDebug = NULL;

    if (!pFnGetSVehicleDebug)
        pFnGetSVehicleDebug = (UFunction*)UObject::GObjObjects()->Data[35027];

    ASVehicle_execGetSVehicleDebug_Parms GetSVehicleDebug_Parms;

    this->ProcessEvent(pFnGetSVehicleDebug, &GetSVehicleDebug_Parms, NULL);
};

// Function Engine.SVehicle.HermiteEval
// [0x00020102]
// Parameters infos:

void ASVehicle::HermiteEval() {
    static UFunction* pFnHermiteEval = NULL;

    if (!pFnHermiteEval)
        pFnHermiteEval = (UFunction*)UObject::GObjObjects()->Data[35015];

    ASVehicle_execHermiteEval_Parms HermiteEval_Parms;

    this->ProcessEvent(pFnHermiteEval, &HermiteEval_Parms, NULL);
};

// Function Engine.SVehicle.DisplayWheelsDebug
// [0x00820102]
// Parameters infos:

void ASVehicle::DisplayWheelsDebug() {
    static UFunction* pFnDisplayWheelsDebug = NULL;

    if (!pFnDisplayWheelsDebug)
        pFnDisplayWheelsDebug = (UFunction*)UObject::GObjObjects()->Data[34998];

    ASVehicle_execDisplayWheelsDebug_Parms DisplayWheelsDebug_Parms;

    this->ProcessEvent(pFnDisplayWheelsDebug, &DisplayWheelsDebug_Parms, NULL);
};

// Function Engine.SVehicle.DisplayDebug
// [0x00420102]
// Parameters infos:

void ASVehicle::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[34991];

    ASVehicle_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.SVehicle.PostTeleport
// [0x00020002]
// Parameters infos:

void ASVehicle::PostTeleport() {
    static UFunction* pFnPostTeleport = NULL;

    if (!pFnPostTeleport)
        pFnPostTeleport = (UFunction*)UObject::GObjObjects()->Data[34989];

    ASVehicle_execPostTeleport_Parms PostTeleport_Parms;

    this->ProcessEvent(pFnPostTeleport, &PostTeleport_Parms, NULL);
};

// Function Engine.SVehicle.SuspensionHeavyShift
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void ASVehicle::eventSuspensionHeavyShift() {
    static UFunction* pFnSuspensionHeavyShift = NULL;

    if (!pFnSuspensionHeavyShift)
        pFnSuspensionHeavyShift =
            (UFunction*)UObject::GObjObjects()->Data[34987];

    ASVehicle_eventSuspensionHeavyShift_Parms SuspensionHeavyShift_Parms;

    this->ProcessEvent(pFnSuspensionHeavyShift, &SuspensionHeavyShift_Parms,
                       NULL);
};

// Function Engine.SVehicle.RigidBodyCollision
// [0x00420902] ( FUNC_Event )
// Parameters infos:

void ASVehicle::eventRigidBodyCollision() {
    static UFunction* pFnRigidBodyCollision = NULL;

    if (!pFnRigidBodyCollision)
        pFnRigidBodyCollision = (UFunction*)UObject::GObjObjects()->Data[34982];

    ASVehicle_eventRigidBodyCollision_Parms RigidBodyCollision_Parms;

    this->ProcessEvent(pFnRigidBodyCollision, &RigidBodyCollision_Parms, NULL);
};

// Function Engine.SVehicle.DrivingStatusChanged
// [0x00020102]
// Parameters infos:

void ASVehicle::DrivingStatusChanged() {
    static UFunction* pFnDrivingStatusChanged = NULL;

    if (!pFnDrivingStatusChanged)
        pFnDrivingStatusChanged =
            (UFunction*)UObject::GObjObjects()->Data[34981];

    ASVehicle_execDrivingStatusChanged_Parms DrivingStatusChanged_Parms;

    this->ProcessEvent(pFnDrivingStatusChanged, &DrivingStatusChanged_Parms,
                       NULL);
};

// Function Engine.SVehicle.VehiclePlayExitSound
// [0x00020102]
// Parameters infos:

void ASVehicle::VehiclePlayExitSound() {
    static UFunction* pFnVehiclePlayExitSound = NULL;

    if (!pFnVehiclePlayExitSound)
        pFnVehiclePlayExitSound =
            (UFunction*)UObject::GObjObjects()->Data[34980];

    ASVehicle_execVehiclePlayExitSound_Parms VehiclePlayExitSound_Parms;

    this->ProcessEvent(pFnVehiclePlayExitSound, &VehiclePlayExitSound_Parms,
                       NULL);
};

// Function Engine.SVehicle.VehiclePlayEnterSound
// [0x00020102]
// Parameters infos:

void ASVehicle::VehiclePlayEnterSound() {
    static UFunction* pFnVehiclePlayEnterSound = NULL;

    if (!pFnVehiclePlayEnterSound)
        pFnVehiclePlayEnterSound =
            (UFunction*)UObject::GObjObjects()->Data[34979];

    ASVehicle_execVehiclePlayEnterSound_Parms VehiclePlayEnterSound_Parms;

    this->ProcessEvent(pFnVehiclePlayEnterSound, &VehiclePlayEnterSound_Parms,
                       NULL);
};

// Function Engine.SVehicle.StopEngineSoundTimed
// [0x00020102]
// Parameters infos:

void ASVehicle::StopEngineSoundTimed() {
    static UFunction* pFnStopEngineSoundTimed = NULL;

    if (!pFnStopEngineSoundTimed)
        pFnStopEngineSoundTimed =
            (UFunction*)UObject::GObjObjects()->Data[34978];

    ASVehicle_execStopEngineSoundTimed_Parms StopEngineSoundTimed_Parms;

    this->ProcessEvent(pFnStopEngineSoundTimed, &StopEngineSoundTimed_Parms,
                       NULL);
};

// Function Engine.SVehicle.StopEngineSound
// [0x00020102]
// Parameters infos:

void ASVehicle::StopEngineSound() {
    static UFunction* pFnStopEngineSound = NULL;

    if (!pFnStopEngineSound)
        pFnStopEngineSound = (UFunction*)UObject::GObjObjects()->Data[34977];

    ASVehicle_execStopEngineSound_Parms StopEngineSound_Parms;

    this->ProcessEvent(pFnStopEngineSound, &StopEngineSound_Parms, NULL);
};

// Function Engine.SVehicle.StartEngineSoundTimed
// [0x00020102]
// Parameters infos:

void ASVehicle::StartEngineSoundTimed() {
    static UFunction* pFnStartEngineSoundTimed = NULL;

    if (!pFnStartEngineSoundTimed)
        pFnStartEngineSoundTimed =
            (UFunction*)UObject::GObjObjects()->Data[34976];

    ASVehicle_execStartEngineSoundTimed_Parms StartEngineSoundTimed_Parms;

    this->ProcessEvent(pFnStartEngineSoundTimed, &StartEngineSoundTimed_Parms,
                       NULL);
};

// Function Engine.SVehicle.StartEngineSound
// [0x00020102]
// Parameters infos:

void ASVehicle::StartEngineSound() {
    static UFunction* pFnStartEngineSound = NULL;

    if (!pFnStartEngineSound)
        pFnStartEngineSound = (UFunction*)UObject::GObjObjects()->Data[34975];

    ASVehicle_execStartEngineSound_Parms StartEngineSound_Parms;

    this->ProcessEvent(pFnStartEngineSound, &StartEngineSound_Parms, NULL);
};

// Function Engine.SVehicle.HasWheelsOnGround
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void ASVehicle::HasWheelsOnGround() {
    static UFunction* pFnHasWheelsOnGround = NULL;

    if (!pFnHasWheelsOnGround)
        pFnHasWheelsOnGround = (UFunction*)UObject::GObjObjects()->Data[34973];

    ASVehicle_execHasWheelsOnGround_Parms HasWheelsOnGround_Parms;

    pFnHasWheelsOnGround->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasWheelsOnGround, &HasWheelsOnGround_Parms, NULL);

    pFnHasWheelsOnGround->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.TryToDrive
// [0x00020002]
// Parameters infos:

void ASVehicle::TryToDrive() {
    static UFunction* pFnTryToDrive = NULL;

    if (!pFnTryToDrive)
        pFnTryToDrive = (UFunction*)UObject::GObjObjects()->Data[34970];

    ASVehicle_execTryToDrive_Parms TryToDrive_Parms;

    this->ProcessEvent(pFnTryToDrive, &TryToDrive_Parms, NULL);
};

// Function Engine.SVehicle.GetDefaultCameraMode
// [0x00020102]
// Parameters infos:

void ASVehicle::GetDefaultCameraMode() {
    static UFunction* pFnGetDefaultCameraMode = NULL;

    if (!pFnGetDefaultCameraMode)
        pFnGetDefaultCameraMode =
            (UFunction*)UObject::GObjObjects()->Data[34967];

    ASVehicle_execGetDefaultCameraMode_Parms GetDefaultCameraMode_Parms;

    this->ProcessEvent(pFnGetDefaultCameraMode, &GetDefaultCameraMode_Parms,
                       NULL);
};

// Function Engine.SVehicle.CalcCamera
// [0x00C20102]
// Parameters infos:

void ASVehicle::CalcCamera() {
    static UFunction* pFnCalcCamera = NULL;

    if (!pFnCalcCamera)
        pFnCalcCamera = (UFunction*)UObject::GObjObjects()->Data[34958];

    ASVehicle_execCalcCamera_Parms CalcCamera_Parms;

    this->ProcessEvent(pFnCalcCamera, &CalcCamera_Parms, NULL);
};

// Function Engine.SVehicle.Died
// [0x00020002]
// Parameters infos:

void ASVehicle::Died() {
    static UFunction* pFnDied = NULL;

    if (!pFnDied) pFnDied = (UFunction*)UObject::GObjObjects()->Data[34953];

    ASVehicle_execDied_Parms Died_Parms;

    this->ProcessEvent(pFnDied, &Died_Parms, NULL);
};

// Function Engine.SVehicle.AddVelocity
// [0x00024002]
// Parameters infos:

void ASVehicle::AddVelocity() {
    static UFunction* pFnAddVelocity = NULL;

    if (!pFnAddVelocity)
        pFnAddVelocity = (UFunction*)UObject::GObjObjects()->Data[34948];

    ASVehicle_execAddVelocity_Parms AddVelocity_Parms;

    this->ProcessEvent(pFnAddVelocity, &AddVelocity_Parms, NULL);
};

// Function Engine.SVehicle.InitVehicleRagdoll
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASVehicle::InitVehicleRagdoll() {
    static UFunction* pFnInitVehicleRagdoll = NULL;

    if (!pFnInitVehicleRagdoll)
        pFnInitVehicleRagdoll = (UFunction*)UObject::GObjObjects()->Data[34943];

    ASVehicle_execInitVehicleRagdoll_Parms InitVehicleRagdoll_Parms;

    pFnInitVehicleRagdoll->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitVehicleRagdoll, &InitVehicleRagdoll_Parms, NULL);

    pFnInitVehicleRagdoll->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.TakeRadiusDamage
// [0x00824102]
// Parameters infos:

void ASVehicle::TakeRadiusDamage() {
    static UFunction* pFnTakeRadiusDamage = NULL;

    if (!pFnTakeRadiusDamage)
        pFnTakeRadiusDamage = (UFunction*)UObject::GObjObjects()->Data[34927];

    ASVehicle_execTakeRadiusDamage_Parms TakeRadiusDamage_Parms;

    this->ProcessEvent(pFnTakeRadiusDamage, &TakeRadiusDamage_Parms, NULL);
};

// Function Engine.SVehicle.StopVehicleSounds
// [0x00020102]
// Parameters infos:

void ASVehicle::StopVehicleSounds() {
    static UFunction* pFnStopVehicleSounds = NULL;

    if (!pFnStopVehicleSounds)
        pFnStopVehicleSounds = (UFunction*)UObject::GObjObjects()->Data[34926];

    ASVehicle_execStopVehicleSounds_Parms StopVehicleSounds_Parms;

    this->ProcessEvent(pFnStopVehicleSounds, &StopVehicleSounds_Parms, NULL);
};

// Function Engine.SVehicle.TurnOff
// [0x00020102]
// Parameters infos:

void ASVehicle::TurnOff() {
    static UFunction* pFnTurnOff = NULL;

    if (!pFnTurnOff)
        pFnTurnOff = (UFunction*)UObject::GObjObjects()->Data[34925];

    ASVehicle_execTurnOff_Parms TurnOff_Parms;

    this->ProcessEvent(pFnTurnOff, &TurnOff_Parms, NULL);
};

// Function Engine.SVehicle.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASVehicle::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[34924];

    ASVehicle_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.SVehicle.PostInitAnimTree
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASVehicle::eventPostInitAnimTree() {
    static UFunction* pFnPostInitAnimTree = NULL;

    if (!pFnPostInitAnimTree)
        pFnPostInitAnimTree = (UFunction*)UObject::GObjObjects()->Data[34920];

    ASVehicle_eventPostInitAnimTree_Parms PostInitAnimTree_Parms;

    this->ProcessEvent(pFnPostInitAnimTree, &PostInitAnimTree_Parms, NULL);
};

// Function Engine.SVehicle.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ASVehicle::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[34919];

    ASVehicle_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.SVehicle.SetWheelCollision
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ASVehicle::SetWheelCollision() {
    static UFunction* pFnSetWheelCollision = NULL;

    if (!pFnSetWheelCollision)
        pFnSetWheelCollision = (UFunction*)UObject::GObjObjects()->Data[34916];

    ASVehicle_execSetWheelCollision_Parms SetWheelCollision_Parms;

    pFnSetWheelCollision->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetWheelCollision, &SetWheelCollision_Parms, NULL);

    pFnSetWheelCollision->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.DrawGraphsAndPrintTireSurfaceTypes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASVehicle::DrawGraphsAndPrintTireSurfaceTypes() {
    static UFunction* pFnDrawGraphsAndPrintTireSurfaceTypes = NULL;

    if (!pFnDrawGraphsAndPrintTireSurfaceTypes)
        pFnDrawGraphsAndPrintTireSurfaceTypes =
            (UFunction*)UObject::GObjObjects()->Data[34912];

    ASVehicle_execDrawGraphsAndPrintTireSurfaceTypes_Parms
        DrawGraphsAndPrintTireSurfaceTypes_Parms;

    pFnDrawGraphsAndPrintTireSurfaceTypes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDrawGraphsAndPrintTireSurfaceTypes,
                       &DrawGraphsAndPrintTireSurfaceTypes_Parms, NULL);

    pFnDrawGraphsAndPrintTireSurfaceTypes->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.IsSleeping
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASVehicle::IsSleeping() {
    static UFunction* pFnIsSleeping = NULL;

    if (!pFnIsSleeping)
        pFnIsSleeping = (UFunction*)UObject::GObjObjects()->Data[34910];

    ASVehicle_execIsSleeping_Parms IsSleeping_Parms;

    pFnIsSleeping->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsSleeping, &IsSleeping_Parms, NULL);

    pFnIsSleeping->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.AddTorque
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASVehicle::AddTorque() {
    static UFunction* pFnAddTorque = NULL;

    if (!pFnAddTorque)
        pFnAddTorque = (UFunction*)UObject::GObjObjects()->Data[34908];

    ASVehicle_execAddTorque_Parms AddTorque_Parms;

    pFnAddTorque->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddTorque, &AddTorque_Parms, NULL);

    pFnAddTorque->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.AddImpulse
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASVehicle::AddImpulse() {
    static UFunction* pFnAddImpulse = NULL;

    if (!pFnAddImpulse)
        pFnAddImpulse = (UFunction*)UObject::GObjObjects()->Data[34906];

    ASVehicle_execAddImpulse_Parms AddImpulse_Parms;

    pFnAddImpulse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddImpulse, &AddImpulse_Parms, NULL);

    pFnAddImpulse->FunctionFlags |= 0x400;
};

// Function Engine.SVehicle.AddForce
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASVehicle::AddForce() {
    static UFunction* pFnAddForce = NULL;

    if (!pFnAddForce)
        pFnAddForce = (UFunction*)UObject::GObjObjects()->Data[34904];

    ASVehicle_execAddForce_Parms AddForce_Parms;

    pFnAddForce->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddForce, &AddForce_Parms, NULL);

    pFnAddForce->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintActor.OnToggleConstraintDrive
// [0x00020102]
// Parameters infos:

void ARB_ConstraintActor::OnToggleConstraintDrive() {
    static UFunction* pFnOnToggleConstraintDrive = NULL;

    if (!pFnOnToggleConstraintDrive)
        pFnOnToggleConstraintDrive =
            (UFunction*)UObject::GObjObjects()->Data[32332];

    ARB_ConstraintActor_execOnToggleConstraintDrive_Parms
        OnToggleConstraintDrive_Parms;

    this->ProcessEvent(pFnOnToggleConstraintDrive,
                       &OnToggleConstraintDrive_Parms, NULL);
};

// Function Engine.RB_ConstraintActor.OnToggle
// [0x00020102]
// Parameters infos:

void ARB_ConstraintActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32330];

    ARB_ConstraintActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.RB_ConstraintActor.OnDestroy
// [0x00020102]
// Parameters infos:

void ARB_ConstraintActor::OnDestroy() {
    static UFunction* pFnOnDestroy = NULL;

    if (!pFnOnDestroy)
        pFnOnDestroy = (UFunction*)UObject::GObjObjects()->Data[32328];

    ARB_ConstraintActor_execOnDestroy_Parms OnDestroy_Parms;

    this->ProcessEvent(pFnOnDestroy, &OnDestroy_Parms, NULL);
};

// Function Engine.RB_ConstraintActor.TermConstraint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ARB_ConstraintActor::TermConstraint() {
    static UFunction* pFnTermConstraint = NULL;

    if (!pFnTermConstraint)
        pFnTermConstraint = (UFunction*)UObject::GObjObjects()->Data[32327];

    ARB_ConstraintActor_execTermConstraint_Parms TermConstraint_Parms;

    pFnTermConstraint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTermConstraint, &TermConstraint_Parms, NULL);

    pFnTermConstraint->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintActor.InitConstraint
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ARB_ConstraintActor::InitConstraint() {
    static UFunction* pFnInitConstraint = NULL;

    if (!pFnInitConstraint)
        pFnInitConstraint = (UFunction*)UObject::GObjObjects()->Data[32321];

    ARB_ConstraintActor_execInitConstraint_Parms InitConstraint_Parms;

    pFnInitConstraint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitConstraint, &InitConstraint_Parms, NULL);

    pFnInitConstraint->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintActor.SetDisableCollision
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ARB_ConstraintActor::SetDisableCollision() {
    static UFunction* pFnSetDisableCollision = NULL;

    if (!pFnSetDisableCollision)
        pFnSetDisableCollision =
            (UFunction*)UObject::GObjObjects()->Data[32319];

    ARB_ConstraintActor_execSetDisableCollision_Parms SetDisableCollision_Parms;

    pFnSetDisableCollision->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDisableCollision, &SetDisableCollision_Parms,
                       NULL);

    pFnSetDisableCollision->FunctionFlags |= 0x400;
};

// Function Engine.RB_LineImpulseActor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ARB_LineImpulseActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[32461];

    ARB_LineImpulseActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.RB_LineImpulseActor.OnToggle
// [0x00020102]
// Parameters infos:

void ARB_LineImpulseActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32459];

    ARB_LineImpulseActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.RB_LineImpulseActor.FireLineImpulse
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ARB_LineImpulseActor::FireLineImpulse() {
    static UFunction* pFnFireLineImpulse = NULL;

    if (!pFnFireLineImpulse)
        pFnFireLineImpulse = (UFunction*)UObject::GObjObjects()->Data[32458];

    ARB_LineImpulseActor_execFireLineImpulse_Parms FireLineImpulse_Parms;

    pFnFireLineImpulse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFireLineImpulse, &FireLineImpulse_Parms, NULL);

    pFnFireLineImpulse->FunctionFlags |= 0x400;
};

// Function Engine.RB_RadialImpulseActor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ARB_RadialImpulseActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[32502];

    ARB_RadialImpulseActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.RB_RadialImpulseActor.OnToggle
// [0x00020102]
// Parameters infos:

void ARB_RadialImpulseActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32500];

    ARB_RadialImpulseActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.RB_Thruster.OnToggle
// [0x00020102]
// Parameters infos:

void ARB_Thruster::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32531];

    ARB_Thruster_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.WorldAttractor.OnSetWorldAttractorParam
// [0x00020002]
// Parameters infos:

void AWorldAttractor::OnSetWorldAttractorParam() {
    static UFunction* pFnOnSetWorldAttractorParam = NULL;

    if (!pFnOnSetWorldAttractorParam)
        pFnOnSetWorldAttractorParam =
            (UFunction*)UObject::GObjObjects()->Data[33168];

    AWorldAttractor_execOnSetWorldAttractorParam_Parms
        OnSetWorldAttractorParam_Parms;

    this->ProcessEvent(pFnOnSetWorldAttractorParam,
                       &OnSetWorldAttractorParam_Parms, NULL);
};

// Function Engine.FlexForceFieldComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFlexForceFieldComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[19844];

    UFlexForceFieldComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.FlexForceFieldComponent.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UFlexForceFieldComponent::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[19843];

    UFlexForceFieldComponent_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.RB_RadialImpulseComponent.FireImpulse
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_RadialImpulseComponent::FireImpulse() {
    static UFunction* pFnFireImpulse = NULL;

    if (!pFnFireImpulse)
        pFnFireImpulse = (UFunction*)UObject::GObjObjects()->Data[32495];

    URB_RadialImpulseComponent_execFireImpulse_Parms FireImpulse_Parms;

    pFnFireImpulse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFireImpulse, &FireImpulse_Parms, NULL);

    pFnFireImpulse->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.GetOrientation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::GetOrientation() {
    static UFunction* pFnGetOrientation = NULL;

    if (!pFnGetOrientation)
        pFnGetOrientation = (UFunction*)UObject::GObjObjects()->Data[32444];

    URB_Handle_execGetOrientation_Parms GetOrientation_Parms;

    pFnGetOrientation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetOrientation, &GetOrientation_Parms, NULL);

    pFnGetOrientation->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.SetOrientation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::SetOrientation() {
    static UFunction* pFnSetOrientation = NULL;

    if (!pFnSetOrientation)
        pFnSetOrientation = (UFunction*)UObject::GObjObjects()->Data[32442];

    URB_Handle_execSetOrientation_Parms SetOrientation_Parms;

    pFnSetOrientation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOrientation, &SetOrientation_Parms, NULL);

    pFnSetOrientation->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.UpdateSmoothLocation
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::UpdateSmoothLocation() {
    static UFunction* pFnUpdateSmoothLocation = NULL;

    if (!pFnUpdateSmoothLocation)
        pFnUpdateSmoothLocation =
            (UFunction*)UObject::GObjObjects()->Data[32440];

    URB_Handle_execUpdateSmoothLocation_Parms UpdateSmoothLocation_Parms;

    pFnUpdateSmoothLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateSmoothLocation, &UpdateSmoothLocation_Parms,
                       NULL);

    pFnUpdateSmoothLocation->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.SetSmoothLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::SetSmoothLocation() {
    static UFunction* pFnSetSmoothLocation = NULL;

    if (!pFnSetSmoothLocation)
        pFnSetSmoothLocation = (UFunction*)UObject::GObjObjects()->Data[32437];

    URB_Handle_execSetSmoothLocation_Parms SetSmoothLocation_Parms;

    pFnSetSmoothLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSmoothLocation, &SetSmoothLocation_Parms, NULL);

    pFnSetSmoothLocation->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.SetLocation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::SetLocation() {
    static UFunction* pFnSetLocation = NULL;

    if (!pFnSetLocation)
        pFnSetLocation = (UFunction*)UObject::GObjObjects()->Data[32435];

    URB_Handle_execSetLocation_Parms SetLocation_Parms;

    pFnSetLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLocation, &SetLocation_Parms, NULL);

    pFnSetLocation->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.ReleaseComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::ReleaseComponent() {
    static UFunction* pFnReleaseComponent = NULL;

    if (!pFnReleaseComponent)
        pFnReleaseComponent = (UFunction*)UObject::GObjObjects()->Data[32434];

    URB_Handle_execReleaseComponent_Parms ReleaseComponent_Parms;

    pFnReleaseComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReleaseComponent, &ReleaseComponent_Parms, NULL);

    pFnReleaseComponent->FunctionFlags |= 0x400;
};

// Function Engine.RB_Handle.GrabComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Handle::GrabComponent() {
    static UFunction* pFnGrabComponent = NULL;

    if (!pFnGrabComponent)
        pFnGrabComponent = (UFunction*)UObject::GObjObjects()->Data[32429];

    URB_Handle_execGrabComponent_Parms GrabComponent_Parms;

    pFnGrabComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGrabComponent, &GrabComponent_Parms, NULL);

    pFnGrabComponent->FunctionFlags |= 0x400;
};

// Function Engine.RB_Spring.Clear
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Spring::Clear() {
    static UFunction* pFnClear = NULL;

    if (!pFnClear) pFnClear = (UFunction*)UObject::GObjObjects()->Data[32528];

    URB_Spring_execClear_Parms Clear_Parms;

    pFnClear->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClear, &Clear_Parms, NULL);

    pFnClear->FunctionFlags |= 0x400;
};

// Function Engine.RB_Spring.SetComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void URB_Spring::SetComponents() {
    static UFunction* pFnSetComponents = NULL;

    if (!pFnSetComponents)
        pFnSetComponents = (UFunction*)UObject::GObjObjects()->Data[32521];

    URB_Spring_execSetComponents_Parms SetComponents_Parms;

    pFnSetComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetComponents, &SetComponents_Parms, NULL);

    pFnSetComponents->FunctionFlags |= 0x400;
};

// Function Engine.PhysicalMaterial.GetPhysicalMaterialProperty
// [0x00020102]
// Parameters infos:

void UPhysicalMaterial::GetPhysicalMaterialProperty() {
    static UFunction* pFnGetPhysicalMaterialProperty = NULL;

    if (!pFnGetPhysicalMaterialProperty)
        pFnGetPhysicalMaterialProperty =
            (UFunction*)UObject::GObjObjects()->Data[31092];

    UPhysicalMaterial_execGetPhysicalMaterialProperty_Parms
        GetPhysicalMaterialProperty_Parms;

    this->ProcessEvent(pFnGetPhysicalMaterialProperty,
                       &GetPhysicalMaterialProperty_Parms, NULL);
};

// Function Engine.PhysicalMaterial.FindFractureSounds
// [0x00420102]
// Parameters infos:

void UPhysicalMaterial::FindFractureSounds() {
    static UFunction* pFnFindFractureSounds = NULL;

    if (!pFnFindFractureSounds)
        pFnFindFractureSounds = (UFunction*)UObject::GObjObjects()->Data[31088];

    UPhysicalMaterial_execFindFractureSounds_Parms FindFractureSounds_Parms;

    this->ProcessEvent(pFnFindFractureSounds, &FindFractureSounds_Parms, NULL);
};

// Function Engine.PhysicalMaterial.FindPhysEffectInfo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPhysicalMaterial::FindPhysEffectInfo() {
    static UFunction* pFnFindPhysEffectInfo = NULL;

    if (!pFnFindPhysEffectInfo)
        pFnFindPhysEffectInfo = (UFunction*)UObject::GObjObjects()->Data[20927];

    UPhysicalMaterial_execFindPhysEffectInfo_Parms FindPhysEffectInfo_Parms;

    pFnFindPhysEffectInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPhysEffectInfo, &FindPhysEffectInfo_Parms, NULL);

    pFnFindPhysEffectInfo->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAsset.FindBodyIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAsset::FindBodyIndex() {
    static UFunction* pFnFindBodyIndex = NULL;

    if (!pFnFindBodyIndex)
        pFnFindBodyIndex = (UFunction*)UObject::GObjObjects()->Data[9987];

    UPhysicsAsset_execFindBodyIndex_Parms FindBodyIndex_Parms;

    pFnFindBodyIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindBodyIndex, &FindBodyIndex_Parms, NULL);

    pFnFindBodyIndex->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.FindConstraintInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::FindConstraintInstance() {
    static UFunction* pFnFindConstraintInstance = NULL;

    if (!pFnFindConstraintInstance)
        pFnFindConstraintInstance =
            (UFunction*)UObject::GObjObjects()->Data[31223];

    UPhysicsAssetInstance_execFindConstraintInstance_Parms
        FindConstraintInstance_Parms;

    pFnFindConstraintInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindConstraintInstance, &FindConstraintInstance_Parms,
                       NULL);

    pFnFindConstraintInstance->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.FindBodyInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::FindBodyInstance() {
    static UFunction* pFnFindBodyInstance = NULL;

    if (!pFnFindBodyInstance)
        pFnFindBodyInstance = (UFunction*)UObject::GObjObjects()->Data[31219];

    UPhysicsAssetInstance_execFindBodyInstance_Parms FindBodyInstance_Parms;

    pFnFindBodyInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindBodyInstance, &FindBodyInstance_Parms, NULL);

    pFnFindBodyInstance->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetFullAnimWeightBonesFixed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetFullAnimWeightBonesFixed() {
    static UFunction* pFnSetFullAnimWeightBonesFixed = NULL;

    if (!pFnSetFullAnimWeightBonesFixed)
        pFnSetFullAnimWeightBonesFixed =
            (UFunction*)UObject::GObjObjects()->Data[31216];

    UPhysicsAssetInstance_execSetFullAnimWeightBonesFixed_Parms
        SetFullAnimWeightBonesFixed_Parms;

    pFnSetFullAnimWeightBonesFixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFullAnimWeightBonesFixed,
                       &SetFullAnimWeightBonesFixed_Parms, NULL);

    pFnSetFullAnimWeightBonesFixed->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetFullAnimWeightBlockRigidBody
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetFullAnimWeightBlockRigidBody() {
    static UFunction* pFnSetFullAnimWeightBlockRigidBody = NULL;

    if (!pFnSetFullAnimWeightBlockRigidBody)
        pFnSetFullAnimWeightBlockRigidBody =
            (UFunction*)UObject::GObjObjects()->Data[31213];

    UPhysicsAssetInstance_execSetFullAnimWeightBlockRigidBody_Parms
        SetFullAnimWeightBlockRigidBody_Parms;

    pFnSetFullAnimWeightBlockRigidBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFullAnimWeightBlockRigidBody,
                       &SetFullAnimWeightBlockRigidBody_Parms, NULL);

    pFnSetFullAnimWeightBlockRigidBody->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetNamedBodiesBlockRigidBody
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetNamedBodiesBlockRigidBody() {
    static UFunction* pFnSetNamedBodiesBlockRigidBody = NULL;

    if (!pFnSetNamedBodiesBlockRigidBody)
        pFnSetNamedBodiesBlockRigidBody =
            (UFunction*)UObject::GObjObjects()->Data[31208];

    UPhysicsAssetInstance_execSetNamedBodiesBlockRigidBody_Parms
        SetNamedBodiesBlockRigidBody_Parms;

    pFnSetNamedBodiesBlockRigidBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNamedBodiesBlockRigidBody,
                       &SetNamedBodiesBlockRigidBody_Parms, NULL);

    pFnSetNamedBodiesBlockRigidBody->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetNamedRBBoneSprings
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetNamedRBBoneSprings() {
    static UFunction* pFnSetNamedRBBoneSprings = NULL;

    if (!pFnSetNamedRBBoneSprings)
        pFnSetNamedRBBoneSprings =
            (UFunction*)UObject::GObjObjects()->Data[31201];

    UPhysicsAssetInstance_execSetNamedRBBoneSprings_Parms
        SetNamedRBBoneSprings_Parms;

    pFnSetNamedRBBoneSprings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNamedRBBoneSprings, &SetNamedRBBoneSprings_Parms,
                       NULL);

    pFnSetNamedRBBoneSprings->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularVelocityDrive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetNamedMotorsAngularVelocityDrive() {
    static UFunction* pFnSetNamedMotorsAngularVelocityDrive = NULL;

    if (!pFnSetNamedMotorsAngularVelocityDrive)
        pFnSetNamedMotorsAngularVelocityDrive =
            (UFunction*)UObject::GObjObjects()->Data[31194];

    UPhysicsAssetInstance_execSetNamedMotorsAngularVelocityDrive_Parms
        SetNamedMotorsAngularVelocityDrive_Parms;

    pFnSetNamedMotorsAngularVelocityDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNamedMotorsAngularVelocityDrive,
                       &SetNamedMotorsAngularVelocityDrive_Parms, NULL);

    pFnSetNamedMotorsAngularVelocityDrive->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetNamedMotorsAngularPositionDrive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetNamedMotorsAngularPositionDrive() {
    static UFunction* pFnSetNamedMotorsAngularPositionDrive = NULL;

    if (!pFnSetNamedMotorsAngularPositionDrive)
        pFnSetNamedMotorsAngularPositionDrive =
            (UFunction*)UObject::GObjObjects()->Data[31187];

    UPhysicsAssetInstance_execSetNamedMotorsAngularPositionDrive_Parms
        SetNamedMotorsAngularPositionDrive_Parms;

    pFnSetNamedMotorsAngularPositionDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNamedMotorsAngularPositionDrive,
                       &SetNamedMotorsAngularPositionDrive_Parms, NULL);

    pFnSetNamedMotorsAngularPositionDrive->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetAllMotorsAngularDriveParams
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetAllMotorsAngularDriveParams() {
    static UFunction* pFnSetAllMotorsAngularDriveParams = NULL;

    if (!pFnSetAllMotorsAngularDriveParams)
        pFnSetAllMotorsAngularDriveParams =
            (UFunction*)UObject::GObjObjects()->Data[31181];

    UPhysicsAssetInstance_execSetAllMotorsAngularDriveParams_Parms
        SetAllMotorsAngularDriveParams_Parms;

    pFnSetAllMotorsAngularDriveParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAllMotorsAngularDriveParams,
                       &SetAllMotorsAngularDriveParams_Parms, NULL);

    pFnSetAllMotorsAngularDriveParams->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetAllMotorsAngularVelocityDrive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetAllMotorsAngularVelocityDrive() {
    static UFunction* pFnSetAllMotorsAngularVelocityDrive = NULL;

    if (!pFnSetAllMotorsAngularVelocityDrive)
        pFnSetAllMotorsAngularVelocityDrive =
            (UFunction*)UObject::GObjObjects()->Data[31176];

    UPhysicsAssetInstance_execSetAllMotorsAngularVelocityDrive_Parms
        SetAllMotorsAngularVelocityDrive_Parms;

    pFnSetAllMotorsAngularVelocityDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAllMotorsAngularVelocityDrive,
                       &SetAllMotorsAngularVelocityDrive_Parms, NULL);

    pFnSetAllMotorsAngularVelocityDrive->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetAllMotorsAngularPositionDrive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetAllMotorsAngularPositionDrive() {
    static UFunction* pFnSetAllMotorsAngularPositionDrive = NULL;

    if (!pFnSetAllMotorsAngularPositionDrive)
        pFnSetAllMotorsAngularPositionDrive =
            (UFunction*)UObject::GObjObjects()->Data[31171];

    UPhysicsAssetInstance_execSetAllMotorsAngularPositionDrive_Parms
        SetAllMotorsAngularPositionDrive_Parms;

    pFnSetAllMotorsAngularPositionDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAllMotorsAngularPositionDrive,
                       &SetAllMotorsAngularPositionDrive_Parms, NULL);

    pFnSetAllMotorsAngularPositionDrive->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.ForceAllBodiesBelowUnfixed
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::ForceAllBodiesBelowUnfixed() {
    static UFunction* pFnForceAllBodiesBelowUnfixed = NULL;

    if (!pFnForceAllBodiesBelowUnfixed)
        pFnForceAllBodiesBelowUnfixed =
            (UFunction*)UObject::GObjObjects()->Data[31166];

    UPhysicsAssetInstance_execForceAllBodiesBelowUnfixed_Parms
        ForceAllBodiesBelowUnfixed_Parms;

    pFnForceAllBodiesBelowUnfixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceAllBodiesBelowUnfixed,
                       &ForceAllBodiesBelowUnfixed_Parms, NULL);

    pFnForceAllBodiesBelowUnfixed->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetNamedBodiesFixed
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetNamedBodiesFixed() {
    static UFunction* pFnSetNamedBodiesFixed = NULL;

    if (!pFnSetNamedBodiesFixed)
        pFnSetNamedBodiesFixed =
            (UFunction*)UObject::GObjObjects()->Data[31159];

    UPhysicsAssetInstance_execSetNamedBodiesFixed_Parms
        SetNamedBodiesFixed_Parms;

    pFnSetNamedBodiesFixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetNamedBodiesFixed, &SetNamedBodiesFixed_Parms,
                       NULL);

    pFnSetNamedBodiesFixed->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetAllBodiesFixed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetAllBodiesFixed() {
    static UFunction* pFnSetAllBodiesFixed = NULL;

    if (!pFnSetAllBodiesFixed)
        pFnSetAllBodiesFixed = (UFunction*)UObject::GObjObjects()->Data[31157];

    UPhysicsAssetInstance_execSetAllBodiesFixed_Parms SetAllBodiesFixed_Parms;

    pFnSetAllBodiesFixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAllBodiesFixed, &SetAllBodiesFixed_Parms, NULL);

    pFnSetAllBodiesFixed->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.GetTotalMassBelowBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::GetTotalMassBelowBone() {
    static UFunction* pFnGetTotalMassBelowBone = NULL;

    if (!pFnGetTotalMassBelowBone)
        pFnGetTotalMassBelowBone =
            (UFunction*)UObject::GObjObjects()->Data[31152];

    UPhysicsAssetInstance_execGetTotalMassBelowBone_Parms
        GetTotalMassBelowBone_Parms;

    pFnGetTotalMassBelowBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTotalMassBelowBone, &GetTotalMassBelowBone_Parms,
                       NULL);

    pFnGetTotalMassBelowBone->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetAngularDriveScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetAngularDriveScale() {
    static UFunction* pFnSetAngularDriveScale = NULL;

    if (!pFnSetAngularDriveScale)
        pFnSetAngularDriveScale =
            (UFunction*)UObject::GObjObjects()->Data[31148];

    UPhysicsAssetInstance_execSetAngularDriveScale_Parms
        SetAngularDriveScale_Parms;

    pFnSetAngularDriveScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularDriveScale, &SetAngularDriveScale_Parms,
                       NULL);

    pFnSetAngularDriveScale->FunctionFlags |= 0x400;
};

// Function Engine.PhysicsAssetInstance.SetLinearDriveScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPhysicsAssetInstance::SetLinearDriveScale() {
    static UFunction* pFnSetLinearDriveScale = NULL;

    if (!pFnSetLinearDriveScale)
        pFnSetLinearDriveScale =
            (UFunction*)UObject::GObjObjects()->Data[31144];

    UPhysicsAssetInstance_execSetLinearDriveScale_Parms
        SetLinearDriveScale_Parms;

    pFnSetLinearDriveScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearDriveScale, &SetLinearDriveScale_Parms,
                       NULL);

    pFnSetLinearDriveScale->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.UpdateDampingProperties
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::UpdateDampingProperties() {
    static UFunction* pFnUpdateDampingProperties = NULL;

    if (!pFnUpdateDampingProperties)
        pFnUpdateDampingProperties =
            (UFunction*)UObject::GObjObjects()->Data[32211];

    URB_BodyInstance_execUpdateDampingProperties_Parms
        UpdateDampingProperties_Parms;

    pFnUpdateDampingProperties->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateDampingProperties,
                       &UpdateDampingProperties_Parms, NULL);

    pFnUpdateDampingProperties->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.UpdateMassProperties
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::UpdateMassProperties() {
    static UFunction* pFnUpdateMassProperties = NULL;

    if (!pFnUpdateMassProperties)
        pFnUpdateMassProperties =
            (UFunction*)UObject::GObjObjects()->Data[32209];

    URB_BodyInstance_execUpdateMassProperties_Parms UpdateMassProperties_Parms;

    pFnUpdateMassProperties->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMassProperties, &UpdateMassProperties_Parms,
                       NULL);

    pFnUpdateMassProperties->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.SetContactReportForceThreshold
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::SetContactReportForceThreshold() {
    static UFunction* pFnSetContactReportForceThreshold = NULL;

    if (!pFnSetContactReportForceThreshold)
        pFnSetContactReportForceThreshold =
            (UFunction*)UObject::GObjObjects()->Data[32207];

    URB_BodyInstance_execSetContactReportForceThreshold_Parms
        SetContactReportForceThreshold_Parms;

    pFnSetContactReportForceThreshold->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetContactReportForceThreshold,
                       &SetContactReportForceThreshold_Parms, NULL);

    pFnSetContactReportForceThreshold->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.EnableCollisionResponse
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::EnableCollisionResponse() {
    static UFunction* pFnEnableCollisionResponse = NULL;

    if (!pFnEnableCollisionResponse)
        pFnEnableCollisionResponse =
            (UFunction*)UObject::GObjObjects()->Data[32205];

    URB_BodyInstance_execEnableCollisionResponse_Parms
        EnableCollisionResponse_Parms;

    pFnEnableCollisionResponse->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableCollisionResponse,
                       &EnableCollisionResponse_Parms, NULL);

    pFnEnableCollisionResponse->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.SetPhysMaterialOverride
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::SetPhysMaterialOverride() {
    static UFunction* pFnSetPhysMaterialOverride = NULL;

    if (!pFnSetPhysMaterialOverride)
        pFnSetPhysMaterialOverride =
            (UFunction*)UObject::GObjObjects()->Data[32203];

    URB_BodyInstance_execSetPhysMaterialOverride_Parms
        SetPhysMaterialOverride_Parms;

    pFnSetPhysMaterialOverride->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPhysMaterialOverride,
                       &SetPhysMaterialOverride_Parms, NULL);

    pFnSetPhysMaterialOverride->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.SetBlockRigidBody
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::SetBlockRigidBody() {
    static UFunction* pFnSetBlockRigidBody = NULL;

    if (!pFnSetBlockRigidBody)
        pFnSetBlockRigidBody = (UFunction*)UObject::GObjObjects()->Data[32201];

    URB_BodyInstance_execSetBlockRigidBody_Parms SetBlockRigidBody_Parms;

    pFnSetBlockRigidBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBlockRigidBody, &SetBlockRigidBody_Parms, NULL);

    pFnSetBlockRigidBody->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.SetBoneSpringTarget
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::SetBoneSpringTarget() {
    static UFunction* pFnSetBoneSpringTarget = NULL;

    if (!pFnSetBoneSpringTarget)
        pFnSetBoneSpringTarget =
            (UFunction*)UObject::GObjObjects()->Data[32198];

    URB_BodyInstance_execSetBoneSpringTarget_Parms SetBoneSpringTarget_Parms;

    pFnSetBoneSpringTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBoneSpringTarget, &SetBoneSpringTarget_Parms,
                       NULL);

    pFnSetBoneSpringTarget->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.SetBoneSpringParams
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::SetBoneSpringParams() {
    static UFunction* pFnSetBoneSpringParams = NULL;

    if (!pFnSetBoneSpringParams)
        pFnSetBoneSpringParams =
            (UFunction*)UObject::GObjObjects()->Data[32193];

    URB_BodyInstance_execSetBoneSpringParams_Parms SetBoneSpringParams_Parms;

    pFnSetBoneSpringParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetBoneSpringParams, &SetBoneSpringParams_Parms,
                       NULL);

    pFnSetBoneSpringParams->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.EnableBoneSpring
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::EnableBoneSpring() {
    static UFunction* pFnEnableBoneSpring = NULL;

    if (!pFnEnableBoneSpring)
        pFnEnableBoneSpring = (UFunction*)UObject::GObjObjects()->Data[32189];

    URB_BodyInstance_execEnableBoneSpring_Parms EnableBoneSpring_Parms;

    pFnEnableBoneSpring->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableBoneSpring, &EnableBoneSpring_Parms, NULL);

    pFnEnableBoneSpring->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.GetUnrealWorldVelocityAtPoint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::GetUnrealWorldVelocityAtPoint() {
    static UFunction* pFnGetUnrealWorldVelocityAtPoint = NULL;

    if (!pFnGetUnrealWorldVelocityAtPoint)
        pFnGetUnrealWorldVelocityAtPoint =
            (UFunction*)UObject::GObjObjects()->Data[32186];

    URB_BodyInstance_execGetUnrealWorldVelocityAtPoint_Parms
        GetUnrealWorldVelocityAtPoint_Parms;

    pFnGetUnrealWorldVelocityAtPoint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUnrealWorldVelocityAtPoint,
                       &GetUnrealWorldVelocityAtPoint_Parms, NULL);

    pFnGetUnrealWorldVelocityAtPoint->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.GetUnrealWorldAngularVelocity
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::GetUnrealWorldAngularVelocity() {
    static UFunction* pFnGetUnrealWorldAngularVelocity = NULL;

    if (!pFnGetUnrealWorldAngularVelocity)
        pFnGetUnrealWorldAngularVelocity =
            (UFunction*)UObject::GObjObjects()->Data[32184];

    URB_BodyInstance_execGetUnrealWorldAngularVelocity_Parms
        GetUnrealWorldAngularVelocity_Parms;

    pFnGetUnrealWorldAngularVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUnrealWorldAngularVelocity,
                       &GetUnrealWorldAngularVelocity_Parms, NULL);

    pFnGetUnrealWorldAngularVelocity->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.GetUnrealWorldVelocity
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::GetUnrealWorldVelocity() {
    static UFunction* pFnGetUnrealWorldVelocity = NULL;

    if (!pFnGetUnrealWorldVelocity)
        pFnGetUnrealWorldVelocity =
            (UFunction*)UObject::GObjObjects()->Data[32182];

    URB_BodyInstance_execGetUnrealWorldVelocity_Parms
        GetUnrealWorldVelocity_Parms;

    pFnGetUnrealWorldVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUnrealWorldVelocity, &GetUnrealWorldVelocity_Parms,
                       NULL);

    pFnGetUnrealWorldVelocity->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.GetUnrealWorldTM
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::GetUnrealWorldTM() {
    static UFunction* pFnGetUnrealWorldTM = NULL;

    if (!pFnGetUnrealWorldTM)
        pFnGetUnrealWorldTM = (UFunction*)UObject::GObjObjects()->Data[32180];

    URB_BodyInstance_execGetUnrealWorldTM_Parms GetUnrealWorldTM_Parms;

    pFnGetUnrealWorldTM->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetUnrealWorldTM, &GetUnrealWorldTM_Parms, NULL);

    pFnGetUnrealWorldTM->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.GetPhysicsAssetInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::GetPhysicsAssetInstance() {
    static UFunction* pFnGetPhysicsAssetInstance = NULL;

    if (!pFnGetPhysicsAssetInstance)
        pFnGetPhysicsAssetInstance =
            (UFunction*)UObject::GObjObjects()->Data[32178];

    URB_BodyInstance_execGetPhysicsAssetInstance_Parms
        GetPhysicsAssetInstance_Parms;

    pFnGetPhysicsAssetInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPhysicsAssetInstance,
                       &GetPhysicsAssetInstance_Parms, NULL);

    pFnGetPhysicsAssetInstance->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.IsValidBodyInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::IsValidBodyInstance() {
    static UFunction* pFnIsValidBodyInstance = NULL;

    if (!pFnIsValidBodyInstance)
        pFnIsValidBodyInstance =
            (UFunction*)UObject::GObjObjects()->Data[32176];

    URB_BodyInstance_execIsValidBodyInstance_Parms IsValidBodyInstance_Parms;

    pFnIsValidBodyInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsValidBodyInstance, &IsValidBodyInstance_Parms,
                       NULL);

    pFnIsValidBodyInstance->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.IsFixed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::IsFixed() {
    static UFunction* pFnIsFixed = NULL;

    if (!pFnIsFixed)
        pFnIsFixed = (UFunction*)UObject::GObjObjects()->Data[9983];

    URB_BodyInstance_execIsFixed_Parms IsFixed_Parms;

    pFnIsFixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsFixed, &IsFixed_Parms, NULL);

    pFnIsFixed->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.SetFixed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::SetFixed() {
    static UFunction* pFnSetFixed = NULL;

    if (!pFnSetFixed)
        pFnSetFixed = (UFunction*)UObject::GObjObjects()->Data[9985];

    URB_BodyInstance_execSetFixed_Parms SetFixed_Parms;

    pFnSetFixed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFixed, &SetFixed_Parms, NULL);

    pFnSetFixed->FunctionFlags |= 0x400;
};

// Function Engine.RB_BodyInstance.GetBodyMass
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_BodyInstance::GetBodyMass() {
    static UFunction* pFnGetBodyMass = NULL;

    if (!pFnGetBodyMass)
        pFnGetBodyMass = (UFunction*)UObject::GObjObjects()->Data[24221];

    URB_BodyInstance_execGetBodyMass_Parms GetBodyMass_Parms;

    pFnGetBodyMass->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBodyMass, &GetBodyMass_Parms, NULL);

    pFnGetBodyMass->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.MoveKinActorTransform
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::MoveKinActorTransform() {
    static UFunction* pFnMoveKinActorTransform = NULL;

    if (!pFnMoveKinActorTransform)
        pFnMoveKinActorTransform =
            (UFunction*)UObject::GObjObjects()->Data[32308];

    URB_ConstraintInstance_execMoveKinActorTransform_Parms
        MoveKinActorTransform_Parms;

    pFnMoveKinActorTransform->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMoveKinActorTransform, &MoveKinActorTransform_Parms,
                       NULL);

    pFnMoveKinActorTransform->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetLinearLimitSize
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetLinearLimitSize() {
    static UFunction* pFnSetLinearLimitSize = NULL;

    if (!pFnSetLinearLimitSize)
        pFnSetLinearLimitSize = (UFunction*)UObject::GObjObjects()->Data[32306];

    URB_ConstraintInstance_execSetLinearLimitSize_Parms
        SetLinearLimitSize_Parms;

    pFnSetLinearLimitSize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearLimitSize, &SetLinearLimitSize_Parms, NULL);

    pFnSetLinearLimitSize->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetAngularDOFLimitScale
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetAngularDOFLimitScale() {
    static UFunction* pFnSetAngularDOFLimitScale = NULL;

    if (!pFnSetAngularDOFLimitScale)
        pFnSetAngularDOFLimitScale =
            (UFunction*)UObject::GObjObjects()->Data[32301];

    URB_ConstraintInstance_execSetAngularDOFLimitScale_Parms
        SetAngularDOFLimitScale_Parms;

    pFnSetAngularDOFLimitScale->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularDOFLimitScale,
                       &SetAngularDOFLimitScale_Parms, NULL);

    pFnSetAngularDOFLimitScale->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetAngularDriveParams
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetAngularDriveParams() {
    static UFunction* pFnSetAngularDriveParams = NULL;

    if (!pFnSetAngularDriveParams)
        pFnSetAngularDriveParams =
            (UFunction*)UObject::GObjObjects()->Data[32297];

    URB_ConstraintInstance_execSetAngularDriveParams_Parms
        SetAngularDriveParams_Parms;

    pFnSetAngularDriveParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularDriveParams, &SetAngularDriveParams_Parms,
                       NULL);

    pFnSetAngularDriveParams->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetAngularVelocityTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetAngularVelocityTarget() {
    static UFunction* pFnSetAngularVelocityTarget = NULL;

    if (!pFnSetAngularVelocityTarget)
        pFnSetAngularVelocityTarget =
            (UFunction*)UObject::GObjObjects()->Data[32295];

    URB_ConstraintInstance_execSetAngularVelocityTarget_Parms
        SetAngularVelocityTarget_Parms;

    pFnSetAngularVelocityTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularVelocityTarget,
                       &SetAngularVelocityTarget_Parms, NULL);

    pFnSetAngularVelocityTarget->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetAngularPositionTarget
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetAngularPositionTarget() {
    static UFunction* pFnSetAngularPositionTarget = NULL;

    if (!pFnSetAngularPositionTarget)
        pFnSetAngularPositionTarget =
            (UFunction*)UObject::GObjObjects()->Data[32293];

    URB_ConstraintInstance_execSetAngularPositionTarget_Parms
        SetAngularPositionTarget_Parms;

    pFnSetAngularPositionTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularPositionTarget,
                       &SetAngularPositionTarget_Parms, NULL);

    pFnSetAngularPositionTarget->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetLinearDriveParams
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetLinearDriveParams() {
    static UFunction* pFnSetLinearDriveParams = NULL;

    if (!pFnSetLinearDriveParams)
        pFnSetLinearDriveParams =
            (UFunction*)UObject::GObjObjects()->Data[32289];

    URB_ConstraintInstance_execSetLinearDriveParams_Parms
        SetLinearDriveParams_Parms;

    pFnSetLinearDriveParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearDriveParams, &SetLinearDriveParams_Parms,
                       NULL);

    pFnSetLinearDriveParams->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetLinearVelocityTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetLinearVelocityTarget() {
    static UFunction* pFnSetLinearVelocityTarget = NULL;

    if (!pFnSetLinearVelocityTarget)
        pFnSetLinearVelocityTarget =
            (UFunction*)UObject::GObjObjects()->Data[32287];

    URB_ConstraintInstance_execSetLinearVelocityTarget_Parms
        SetLinearVelocityTarget_Parms;

    pFnSetLinearVelocityTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearVelocityTarget,
                       &SetLinearVelocityTarget_Parms, NULL);

    pFnSetLinearVelocityTarget->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetLinearPositionTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetLinearPositionTarget() {
    static UFunction* pFnSetLinearPositionTarget = NULL;

    if (!pFnSetLinearPositionTarget)
        pFnSetLinearPositionTarget =
            (UFunction*)UObject::GObjObjects()->Data[32285];

    URB_ConstraintInstance_execSetLinearPositionTarget_Parms
        SetLinearPositionTarget_Parms;

    pFnSetLinearPositionTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearPositionTarget,
                       &SetLinearPositionTarget_Parms, NULL);

    pFnSetLinearPositionTarget->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetAngularVelocityDrive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetAngularVelocityDrive() {
    static UFunction* pFnSetAngularVelocityDrive = NULL;

    if (!pFnSetAngularVelocityDrive)
        pFnSetAngularVelocityDrive =
            (UFunction*)UObject::GObjObjects()->Data[32282];

    URB_ConstraintInstance_execSetAngularVelocityDrive_Parms
        SetAngularVelocityDrive_Parms;

    pFnSetAngularVelocityDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularVelocityDrive,
                       &SetAngularVelocityDrive_Parms, NULL);

    pFnSetAngularVelocityDrive->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetAngularPositionDrive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetAngularPositionDrive() {
    static UFunction* pFnSetAngularPositionDrive = NULL;

    if (!pFnSetAngularPositionDrive)
        pFnSetAngularPositionDrive =
            (UFunction*)UObject::GObjObjects()->Data[32279];

    URB_ConstraintInstance_execSetAngularPositionDrive_Parms
        SetAngularPositionDrive_Parms;

    pFnSetAngularPositionDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAngularPositionDrive,
                       &SetAngularPositionDrive_Parms, NULL);

    pFnSetAngularPositionDrive->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetLinearVelocityDrive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetLinearVelocityDrive() {
    static UFunction* pFnSetLinearVelocityDrive = NULL;

    if (!pFnSetLinearVelocityDrive)
        pFnSetLinearVelocityDrive =
            (UFunction*)UObject::GObjObjects()->Data[32275];

    URB_ConstraintInstance_execSetLinearVelocityDrive_Parms
        SetLinearVelocityDrive_Parms;

    pFnSetLinearVelocityDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearVelocityDrive, &SetLinearVelocityDrive_Parms,
                       NULL);

    pFnSetLinearVelocityDrive->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.SetLinearPositionDrive
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::SetLinearPositionDrive() {
    static UFunction* pFnSetLinearPositionDrive = NULL;

    if (!pFnSetLinearPositionDrive)
        pFnSetLinearPositionDrive =
            (UFunction*)UObject::GObjObjects()->Data[32271];

    URB_ConstraintInstance_execSetLinearPositionDrive_Parms
        SetLinearPositionDrive_Parms;

    pFnSetLinearPositionDrive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLinearPositionDrive, &SetLinearPositionDrive_Parms,
                       NULL);

    pFnSetLinearPositionDrive->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.GetConstraintLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::GetConstraintLocation() {
    static UFunction* pFnGetConstraintLocation = NULL;

    if (!pFnGetConstraintLocation)
        pFnGetConstraintLocation =
            (UFunction*)UObject::GObjObjects()->Data[32269];

    URB_ConstraintInstance_execGetConstraintLocation_Parms
        GetConstraintLocation_Parms;

    pFnGetConstraintLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetConstraintLocation, &GetConstraintLocation_Parms,
                       NULL);

    pFnGetConstraintLocation->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.GetPhysicsAssetInstance
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::GetPhysicsAssetInstance() {
    static UFunction* pFnGetPhysicsAssetInstance = NULL;

    if (!pFnGetPhysicsAssetInstance)
        pFnGetPhysicsAssetInstance =
            (UFunction*)UObject::GObjObjects()->Data[32267];

    URB_ConstraintInstance_execGetPhysicsAssetInstance_Parms
        GetPhysicsAssetInstance_Parms;

    pFnGetPhysicsAssetInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPhysicsAssetInstance,
                       &GetPhysicsAssetInstance_Parms, NULL);

    pFnGetPhysicsAssetInstance->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.TermConstraint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::TermConstraint() {
    static UFunction* pFnTermConstraint = NULL;

    if (!pFnTermConstraint)
        pFnTermConstraint = (UFunction*)UObject::GObjObjects()->Data[9986];

    URB_ConstraintInstance_execTermConstraint_Parms TermConstraint_Parms;

    pFnTermConstraint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTermConstraint, &TermConstraint_Parms, NULL);

    pFnTermConstraint->FunctionFlags |= 0x400;
};

// Function Engine.RB_ConstraintInstance.InitConstraint
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void URB_ConstraintInstance::InitConstraint() {
    static UFunction* pFnInitConstraint = NULL;

    if (!pFnInitConstraint)
        pFnInitConstraint = (UFunction*)UObject::GObjObjects()->Data[32259];

    URB_ConstraintInstance_execInitConstraint_Parms InitConstraint_Parms;

    pFnInitConstraint->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitConstraint, &InitConstraint_Parms, NULL);

    pFnInitConstraint->FunctionFlags |= 0x400;
};

// Function Engine.NxGenericForceFieldBrush.StopsProjectile
// [0x00020102]
// Parameters infos:

void ANxGenericForceFieldBrush::StopsProjectile() {
    static UFunction* pFnStopsProjectile = NULL;

    if (!pFnStopsProjectile)
        pFnStopsProjectile = (UFunction*)UObject::GObjObjects()->Data[26910];

    ANxGenericForceFieldBrush_execStopsProjectile_Parms StopsProjectile_Parms;

    this->ProcessEvent(pFnStopsProjectile, &StopsProjectile_Parms, NULL);
};

// Function Engine.NxGenericForceFieldBrush.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ANxGenericForceFieldBrush::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[26909];

    ANxGenericForceFieldBrush_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.NxForceField.OnToggle
// [0x00020102]
// Parameters infos:

void ANxForceField::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[26730];

    ANxForceField_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.NxForceField.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANxForceField::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26729];

    ANxForceField_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.NxCylindricalForceFieldCapsule.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANxCylindricalForceFieldCapsule::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26745];

    ANxCylindricalForceFieldCapsule_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.NxForceFieldGeneric.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANxForceFieldGeneric::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26799];

    ANxForceFieldGeneric_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.NxForceFieldRadial.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANxForceFieldRadial::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26826];

    ANxForceFieldRadial_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.NxForceFieldTornado.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANxForceFieldTornado::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26850];

    ANxForceFieldTornado_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.NxGenericForceFieldBox.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ANxGenericForceFieldBox::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26881];

    ANxGenericForceFieldBox_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.NxForceFieldSpawnable.OnToggle
// [0x00020102]
// Parameters infos:

void ANxForceFieldSpawnable::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[26834];

    ANxForceFieldSpawnable_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.RB_CylindricalForceActor.OnToggle
// [0x00020102]
// Parameters infos:

void ARB_CylindricalForceActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32405];

    ARB_CylindricalForceActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.RB_RadialForceActor.OnToggle
// [0x00020102]
// Parameters infos:

void ARB_RadialForceActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32486];

    ARB_RadialForceActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.NxForceFieldComponent.DoInitRBPhys
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UNxForceFieldComponent::DoInitRBPhys() {
    static UFunction* pFnDoInitRBPhys = NULL;

    if (!pFnDoInitRBPhys)
        pFnDoInitRBPhys = (UFunction*)UObject::GObjObjects()->Data[26765];

    UNxForceFieldComponent_execDoInitRBPhys_Parms DoInitRBPhys_Parms;

    pFnDoInitRBPhys->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDoInitRBPhys, &DoInitRBPhys_Parms, NULL);

    pFnDoInitRBPhys->FunctionFlags |= 0x400;
};

// Function Engine.ForceFieldShape.GetDrawComponent
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UForceFieldShape::eventGetDrawComponent() {
    static UFunction* pFnGetDrawComponent = NULL;

    if (!pFnGetDrawComponent)
        pFnGetDrawComponent = (UFunction*)UObject::GObjObjects()->Data[20135];

    UForceFieldShape_eventGetDrawComponent_Parms GetDrawComponent_Parms;

    this->ProcessEvent(pFnGetDrawComponent, &GetDrawComponent_Parms, NULL);
};

// Function Engine.ForceFieldShape.FillByCylinder
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UForceFieldShape::eventFillByCylinder() {
    static UFunction* pFnFillByCylinder = NULL;

    if (!pFnFillByCylinder)
        pFnFillByCylinder = (UFunction*)UObject::GObjObjects()->Data[20130];

    UForceFieldShape_eventFillByCylinder_Parms FillByCylinder_Parms;

    this->ProcessEvent(pFnFillByCylinder, &FillByCylinder_Parms, NULL);
};

// Function Engine.ForceFieldShape.FillByCapsule
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UForceFieldShape::eventFillByCapsule() {
    static UFunction* pFnFillByCapsule = NULL;

    if (!pFnFillByCapsule)
        pFnFillByCapsule = (UFunction*)UObject::GObjObjects()->Data[20127];

    UForceFieldShape_eventFillByCapsule_Parms FillByCapsule_Parms;

    this->ProcessEvent(pFnFillByCapsule, &FillByCapsule_Parms, NULL);
};

// Function Engine.ForceFieldShape.FillByBox
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UForceFieldShape::eventFillByBox() {
    static UFunction* pFnFillByBox = NULL;

    if (!pFnFillByBox)
        pFnFillByBox = (UFunction*)UObject::GObjObjects()->Data[20125];

    UForceFieldShape_eventFillByBox_Parms FillByBox_Parms;

    this->ProcessEvent(pFnFillByBox, &FillByBox_Parms, NULL);
};

// Function Engine.ForceFieldShape.FillBySphere
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UForceFieldShape::eventFillBySphere() {
    static UFunction* pFnFillBySphere = NULL;

    if (!pFnFillBySphere)
        pFnFillBySphere = (UFunction*)UObject::GObjObjects()->Data[20123];

    UForceFieldShape_eventFillBySphere_Parms FillBySphere_Parms;

    this->ProcessEvent(pFnFillBySphere, &FillBySphere_Parms, NULL);
};

// Function Engine.ForceFieldShapeBox.GetDrawComponent
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeBox::eventGetDrawComponent() {
    static UFunction* pFnGetDrawComponent = NULL;

    if (!pFnGetDrawComponent)
        pFnGetDrawComponent = (UFunction*)UObject::GObjObjects()->Data[20152];

    UForceFieldShapeBox_eventGetDrawComponent_Parms GetDrawComponent_Parms;

    this->ProcessEvent(pFnGetDrawComponent, &GetDrawComponent_Parms, NULL);
};

// Function Engine.ForceFieldShapeBox.FillByCylinder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeBox::eventFillByCylinder() {
    static UFunction* pFnFillByCylinder = NULL;

    if (!pFnFillByCylinder)
        pFnFillByCylinder = (UFunction*)UObject::GObjObjects()->Data[20147];

    UForceFieldShapeBox_eventFillByCylinder_Parms FillByCylinder_Parms;

    this->ProcessEvent(pFnFillByCylinder, &FillByCylinder_Parms, NULL);
};

// Function Engine.ForceFieldShapeBox.FillByCapsule
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeBox::eventFillByCapsule() {
    static UFunction* pFnFillByCapsule = NULL;

    if (!pFnFillByCapsule)
        pFnFillByCapsule = (UFunction*)UObject::GObjObjects()->Data[20144];

    UForceFieldShapeBox_eventFillByCapsule_Parms FillByCapsule_Parms;

    this->ProcessEvent(pFnFillByCapsule, &FillByCapsule_Parms, NULL);
};

// Function Engine.ForceFieldShapeBox.FillByBox
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeBox::eventFillByBox() {
    static UFunction* pFnFillByBox = NULL;

    if (!pFnFillByBox)
        pFnFillByBox = (UFunction*)UObject::GObjObjects()->Data[20142];

    UForceFieldShapeBox_eventFillByBox_Parms FillByBox_Parms;

    this->ProcessEvent(pFnFillByBox, &FillByBox_Parms, NULL);
};

// Function Engine.ForceFieldShapeBox.FillBySphere
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeBox::eventFillBySphere() {
    static UFunction* pFnFillBySphere = NULL;

    if (!pFnFillBySphere)
        pFnFillBySphere = (UFunction*)UObject::GObjObjects()->Data[20140];

    UForceFieldShapeBox_eventFillBySphere_Parms FillBySphere_Parms;

    this->ProcessEvent(pFnFillBySphere, &FillBySphere_Parms, NULL);
};

// Function Engine.ForceFieldShapeBox.GetRadii
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeBox::eventGetRadii() {
    static UFunction* pFnGetRadii = NULL;

    if (!pFnGetRadii)
        pFnGetRadii = (UFunction*)UObject::GObjObjects()->Data[20138];

    UForceFieldShapeBox_eventGetRadii_Parms GetRadii_Parms;

    this->ProcessEvent(pFnGetRadii, &GetRadii_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.GetDrawComponent
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventGetDrawComponent() {
    static UFunction* pFnGetDrawComponent = NULL;

    if (!pFnGetDrawComponent)
        pFnGetDrawComponent = (UFunction*)UObject::GObjObjects()->Data[20172];

    UForceFieldShapeCapsule_eventGetDrawComponent_Parms GetDrawComponent_Parms;

    this->ProcessEvent(pFnGetDrawComponent, &GetDrawComponent_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.FillByCylinder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventFillByCylinder() {
    static UFunction* pFnFillByCylinder = NULL;

    if (!pFnFillByCylinder)
        pFnFillByCylinder = (UFunction*)UObject::GObjObjects()->Data[20167];

    UForceFieldShapeCapsule_eventFillByCylinder_Parms FillByCylinder_Parms;

    this->ProcessEvent(pFnFillByCylinder, &FillByCylinder_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.FillByCapsule
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventFillByCapsule() {
    static UFunction* pFnFillByCapsule = NULL;

    if (!pFnFillByCapsule)
        pFnFillByCapsule = (UFunction*)UObject::GObjObjects()->Data[20164];

    UForceFieldShapeCapsule_eventFillByCapsule_Parms FillByCapsule_Parms;

    this->ProcessEvent(pFnFillByCapsule, &FillByCapsule_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.FillByBox
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventFillByBox() {
    static UFunction* pFnFillByBox = NULL;

    if (!pFnFillByBox)
        pFnFillByBox = (UFunction*)UObject::GObjObjects()->Data[20162];

    UForceFieldShapeCapsule_eventFillByBox_Parms FillByBox_Parms;

    this->ProcessEvent(pFnFillByBox, &FillByBox_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.FillBySphere
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventFillBySphere() {
    static UFunction* pFnFillBySphere = NULL;

    if (!pFnFillBySphere)
        pFnFillBySphere = (UFunction*)UObject::GObjObjects()->Data[20160];

    UForceFieldShapeCapsule_eventFillBySphere_Parms FillBySphere_Parms;

    this->ProcessEvent(pFnFillBySphere, &FillBySphere_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.GetRadius
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventGetRadius() {
    static UFunction* pFnGetRadius = NULL;

    if (!pFnGetRadius)
        pFnGetRadius = (UFunction*)UObject::GObjObjects()->Data[20158];

    UForceFieldShapeCapsule_eventGetRadius_Parms GetRadius_Parms;

    this->ProcessEvent(pFnGetRadius, &GetRadius_Parms, NULL);
};

// Function Engine.ForceFieldShapeCapsule.GetHeight
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeCapsule::eventGetHeight() {
    static UFunction* pFnGetHeight = NULL;

    if (!pFnGetHeight)
        pFnGetHeight = (UFunction*)UObject::GObjObjects()->Data[20156];

    UForceFieldShapeCapsule_eventGetHeight_Parms GetHeight_Parms;

    this->ProcessEvent(pFnGetHeight, &GetHeight_Parms, NULL);
};

// Function Engine.ForceFieldShapeSphere.GetDrawComponent
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeSphere::eventGetDrawComponent() {
    static UFunction* pFnGetDrawComponent = NULL;

    if (!pFnGetDrawComponent)
        pFnGetDrawComponent = (UFunction*)UObject::GObjObjects()->Data[20194];

    UForceFieldShapeSphere_eventGetDrawComponent_Parms GetDrawComponent_Parms;

    this->ProcessEvent(pFnGetDrawComponent, &GetDrawComponent_Parms, NULL);
};

// Function Engine.ForceFieldShapeSphere.FillByCylinder
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeSphere::eventFillByCylinder() {
    static UFunction* pFnFillByCylinder = NULL;

    if (!pFnFillByCylinder)
        pFnFillByCylinder = (UFunction*)UObject::GObjObjects()->Data[20185];

    UForceFieldShapeSphere_eventFillByCylinder_Parms FillByCylinder_Parms;

    this->ProcessEvent(pFnFillByCylinder, &FillByCylinder_Parms, NULL);
};

// Function Engine.ForceFieldShapeSphere.FillByCapsule
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeSphere::eventFillByCapsule() {
    static UFunction* pFnFillByCapsule = NULL;

    if (!pFnFillByCapsule)
        pFnFillByCapsule = (UFunction*)UObject::GObjObjects()->Data[20182];

    UForceFieldShapeSphere_eventFillByCapsule_Parms FillByCapsule_Parms;

    this->ProcessEvent(pFnFillByCapsule, &FillByCapsule_Parms, NULL);
};

// Function Engine.ForceFieldShapeSphere.FillByBox
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeSphere::eventFillByBox() {
    static UFunction* pFnFillByBox = NULL;

    if (!pFnFillByBox)
        pFnFillByBox = (UFunction*)UObject::GObjObjects()->Data[20180];

    UForceFieldShapeSphere_eventFillByBox_Parms FillByBox_Parms;

    this->ProcessEvent(pFnFillByBox, &FillByBox_Parms, NULL);
};

// Function Engine.ForceFieldShapeSphere.FillBySphere
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeSphere::eventFillBySphere() {
    static UFunction* pFnFillBySphere = NULL;

    if (!pFnFillBySphere)
        pFnFillBySphere = (UFunction*)UObject::GObjObjects()->Data[20178];

    UForceFieldShapeSphere_eventFillBySphere_Parms FillBySphere_Parms;

    this->ProcessEvent(pFnFillBySphere, &FillBySphere_Parms, NULL);
};

// Function Engine.ForceFieldShapeSphere.GetRadius
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UForceFieldShapeSphere::eventGetRadius() {
    static UFunction* pFnGetRadius = NULL;

    if (!pFnGetRadius)
        pFnGetRadius = (UFunction*)UObject::GObjObjects()->Data[20176];

    UForceFieldShapeSphere_eventGetRadius_Parms GetRadius_Parms;

    this->ProcessEvent(pFnGetRadius, &GetRadius_Parms, NULL);
};

// Function Engine.SequenceObject.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USequenceObject::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[6241];

    USequenceObject_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SequenceObject.ShouldClearNameOnPasting
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USequenceObject::eventShouldClearNameOnPasting() {
    static UFunction* pFnShouldClearNameOnPasting = NULL;

    if (!pFnShouldClearNameOnPasting)
        pFnShouldClearNameOnPasting =
            (UFunction*)UObject::GObjObjects()->Data[9097];

    USequenceObject_eventShouldClearNameOnPasting_Parms
        ShouldClearNameOnPasting_Parms;

    this->ProcessEvent(pFnShouldClearNameOnPasting,
                       &ShouldClearNameOnPasting_Parms, NULL);
};

// Function Engine.SequenceObject.IsPastingIntoLevelSequenceAllowed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USequenceObject::eventIsPastingIntoLevelSequenceAllowed() {
    static UFunction* pFnIsPastingIntoLevelSequenceAllowed = NULL;

    if (!pFnIsPastingIntoLevelSequenceAllowed)
        pFnIsPastingIntoLevelSequenceAllowed =
            (UFunction*)UObject::GObjObjects()->Data[9095];

    USequenceObject_eventIsPastingIntoLevelSequenceAllowed_Parms
        IsPastingIntoLevelSequenceAllowed_Parms;

    this->ProcessEvent(pFnIsPastingIntoLevelSequenceAllowed,
                       &IsPastingIntoLevelSequenceAllowed_Parms, NULL);
};

// Function Engine.SequenceObject.IsValidLevelSequenceObject
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USequenceObject::eventIsValidLevelSequenceObject() {
    static UFunction* pFnIsValidLevelSequenceObject = NULL;

    if (!pFnIsValidLevelSequenceObject)
        pFnIsValidLevelSequenceObject =
            (UFunction*)UObject::GObjObjects()->Data[9093];

    USequenceObject_eventIsValidLevelSequenceObject_Parms
        IsValidLevelSequenceObject_Parms;

    this->ProcessEvent(pFnIsValidLevelSequenceObject,
                       &IsValidLevelSequenceObject_Parms, NULL);
};

// Function Engine.SequenceObject.GetWorldInfo
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceObject::GetWorldInfo() {
    static UFunction* pFnGetWorldInfo = NULL;

    if (!pFnGetWorldInfo)
        pFnGetWorldInfo = (UFunction*)UObject::GObjObjects()->Data[9091];

    USequenceObject_execGetWorldInfo_Parms GetWorldInfo_Parms;

    pFnGetWorldInfo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetWorldInfo, &GetWorldInfo_Parms, NULL);

    pFnGetWorldInfo->FunctionFlags |= 0x400;
};

// Function Engine.SequenceObject.ScriptLog
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceObject::ScriptLog() {
    static UFunction* pFnScriptLog = NULL;

    if (!pFnScriptLog)
        pFnScriptLog = (UFunction*)UObject::GObjObjects()->Data[9088];

    USequenceObject_execScriptLog_Parms ScriptLog_Parms;

    pFnScriptLog->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnScriptLog, &ScriptLog_Parms, NULL);

    pFnScriptLog->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.ForceActivateOutput
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::ForceActivateOutput() {
    static UFunction* pFnForceActivateOutput = NULL;

    if (!pFnForceActivateOutput)
        pFnForceActivateOutput = (UFunction*)UObject::GObjObjects()->Data[9240];

    USequenceOp_execForceActivateOutput_Parms ForceActivateOutput_Parms;

    pFnForceActivateOutput->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceActivateOutput, &ForceActivateOutput_Parms,
                       NULL);

    pFnForceActivateOutput->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.ForceActivateInput
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::ForceActivateInput() {
    static UFunction* pFnForceActivateInput = NULL;

    if (!pFnForceActivateInput)
        pFnForceActivateInput = (UFunction*)UObject::GObjObjects()->Data[9238];

    USequenceOp_execForceActivateInput_Parms ForceActivateInput_Parms;

    pFnForceActivateInput->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceActivateInput, &ForceActivateInput_Parms, NULL);

    pFnForceActivateInput->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.GetController
// [0x00020002]
// Parameters infos:

void USequenceOp::GetController() {
    static UFunction* pFnGetController = NULL;

    if (!pFnGetController)
        pFnGetController = (UFunction*)UObject::GObjObjects()->Data[9233];

    USequenceOp_execGetController_Parms GetController_Parms;

    this->ProcessEvent(pFnGetController, &GetController_Parms, NULL);
};

// Function Engine.SequenceOp.GetPawn
// [0x00020002]
// Parameters infos:

void USequenceOp::GetPawn() {
    static UFunction* pFnGetPawn = NULL;

    if (!pFnGetPawn)
        pFnGetPawn = (UFunction*)UObject::GObjObjects()->Data[9228];

    USequenceOp_execGetPawn_Parms GetPawn_Parms;

    this->ProcessEvent(pFnGetPawn, &GetPawn_Parms, NULL);
};

// Function Engine.SequenceOp.Reset
// [0x00020000]
// Parameters infos:

void USequenceOp::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[9227];

    USequenceOp_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.SequenceOp.PublishLinkedVariableValues
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::PublishLinkedVariableValues() {
    static UFunction* pFnPublishLinkedVariableValues = NULL;

    if (!pFnPublishLinkedVariableValues)
        pFnPublishLinkedVariableValues =
            (UFunction*)UObject::GObjObjects()->Data[9226];

    USequenceOp_execPublishLinkedVariableValues_Parms
        PublishLinkedVariableValues_Parms;

    pFnPublishLinkedVariableValues->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPublishLinkedVariableValues,
                       &PublishLinkedVariableValues_Parms, NULL);

    pFnPublishLinkedVariableValues->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.PopulateLinkedVariableValues
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::PopulateLinkedVariableValues() {
    static UFunction* pFnPopulateLinkedVariableValues = NULL;

    if (!pFnPopulateLinkedVariableValues)
        pFnPopulateLinkedVariableValues =
            (UFunction*)UObject::GObjObjects()->Data[9225];

    USequenceOp_execPopulateLinkedVariableValues_Parms
        PopulateLinkedVariableValues_Parms;

    pFnPopulateLinkedVariableValues->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPopulateLinkedVariableValues,
                       &PopulateLinkedVariableValues_Parms, NULL);

    pFnPopulateLinkedVariableValues->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.VersionUpdated
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USequenceOp::eventVersionUpdated() {
    static UFunction* pFnVersionUpdated = NULL;

    if (!pFnVersionUpdated)
        pFnVersionUpdated = (UFunction*)UObject::GObjObjects()->Data[9222];

    USequenceOp_eventVersionUpdated_Parms VersionUpdated_Parms;

    this->ProcessEvent(pFnVersionUpdated, &VersionUpdated_Parms, NULL);
};

// Function Engine.SequenceOp.Deactivated
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USequenceOp::eventDeactivated() {
    static UFunction* pFnDeactivated = NULL;

    if (!pFnDeactivated)
        pFnDeactivated = (UFunction*)UObject::GObjObjects()->Data[9221];

    USequenceOp_eventDeactivated_Parms Deactivated_Parms;

    this->ProcessEvent(pFnDeactivated, &Deactivated_Parms, NULL);
};

// Function Engine.SequenceOp.Activated
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USequenceOp::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[9220];

    USequenceOp_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SequenceOp.ActivateNamedOutputLink
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::ActivateNamedOutputLink() {
    static UFunction* pFnActivateNamedOutputLink = NULL;

    if (!pFnActivateNamedOutputLink)
        pFnActivateNamedOutputLink =
            (UFunction*)UObject::GObjObjects()->Data[9217];

    USequenceOp_execActivateNamedOutputLink_Parms ActivateNamedOutputLink_Parms;

    pFnActivateNamedOutputLink->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActivateNamedOutputLink,
                       &ActivateNamedOutputLink_Parms, NULL);

    pFnActivateNamedOutputLink->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.ActivateOutputLink
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::ActivateOutputLink() {
    static UFunction* pFnActivateOutputLink = NULL;

    if (!pFnActivateOutputLink)
        pFnActivateOutputLink = (UFunction*)UObject::GObjObjects()->Data[9214];

    USequenceOp_execActivateOutputLink_Parms ActivateOutputLink_Parms;

    pFnActivateOutputLink->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnActivateOutputLink, &ActivateOutputLink_Parms, NULL);

    pFnActivateOutputLink->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.LinkedVariables
// [0x00424405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::LinkedVariables() {
    static UFunction* pFnLinkedVariables = NULL;

    if (!pFnLinkedVariables)
        pFnLinkedVariables = (UFunction*)UObject::GObjObjects()->Data[9210];

    USequenceOp_execLinkedVariables_Parms LinkedVariables_Parms;

    pFnLinkedVariables->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLinkedVariables, &LinkedVariables_Parms, NULL);

    pFnLinkedVariables->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.GetBoolVars
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::GetBoolVars() {
    static UFunction* pFnGetBoolVars = NULL;

    if (!pFnGetBoolVars)
        pFnGetBoolVars = (UFunction*)UObject::GObjObjects()->Data[9206];

    USequenceOp_execGetBoolVars_Parms GetBoolVars_Parms;

    pFnGetBoolVars->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoolVars, &GetBoolVars_Parms, NULL);

    pFnGetBoolVars->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.GetInterpDataVars
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::GetInterpDataVars() {
    static UFunction* pFnGetInterpDataVars = NULL;

    if (!pFnGetInterpDataVars)
        pFnGetInterpDataVars = (UFunction*)UObject::GObjObjects()->Data[9202];

    USequenceOp_execGetInterpDataVars_Parms GetInterpDataVars_Parms;

    pFnGetInterpDataVars->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetInterpDataVars, &GetInterpDataVars_Parms, NULL);

    pFnGetInterpDataVars->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.GetObjectVars
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::GetObjectVars() {
    static UFunction* pFnGetObjectVars = NULL;

    if (!pFnGetObjectVars)
        pFnGetObjectVars = (UFunction*)UObject::GObjObjects()->Data[6228];

    USequenceOp_execGetObjectVars_Parms GetObjectVars_Parms;

    pFnGetObjectVars->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetObjectVars, &GetObjectVars_Parms, NULL);

    pFnGetObjectVars->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.GetLinkedObjects
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::GetLinkedObjects() {
    static UFunction* pFnGetLinkedObjects = NULL;

    if (!pFnGetLinkedObjects)
        pFnGetLinkedObjects = (UFunction*)UObject::GObjObjects()->Data[9194];

    USequenceOp_execGetLinkedObjects_Parms GetLinkedObjects_Parms;

    pFnGetLinkedObjects->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLinkedObjects, &GetLinkedObjects_Parms, NULL);

    pFnGetLinkedObjects->FunctionFlags |= 0x400;
};

// Function Engine.SequenceOp.HasLinkedOps
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceOp::HasLinkedOps() {
    static UFunction* pFnHasLinkedOps = NULL;

    if (!pFnHasLinkedOps)
        pFnHasLinkedOps = (UFunction*)UObject::GObjObjects()->Data[9191];

    USequenceOp_execHasLinkedOps_Parms HasLinkedOps_Parms;

    pFnHasLinkedOps->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasLinkedOps, &HasLinkedOps_Parms, NULL);

    pFnHasLinkedOps->FunctionFlags |= 0x400;
};

// Function Engine.Sequence.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequence::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[32016];

    USequence_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.Sequence.Reset
// [0x00020002]
// Parameters infos:

void USequence::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[32013];

    USequence_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.Sequence.FindSeqObjectsByName
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequence::FindSeqObjectsByName() {
    static UFunction* pFnFindSeqObjectsByName = NULL;

    if (!pFnFindSeqObjectsByName)
        pFnFindSeqObjectsByName =
            (UFunction*)UObject::GObjObjects()->Data[32006];

    USequence_execFindSeqObjectsByName_Parms FindSeqObjectsByName_Parms;

    pFnFindSeqObjectsByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSeqObjectsByName, &FindSeqObjectsByName_Parms,
                       NULL);

    pFnFindSeqObjectsByName->FunctionFlags |= 0x400;
};

// Function Engine.Sequence.FindSeqObjectsByClass
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequence::FindSeqObjectsByClass() {
    static UFunction* pFnFindSeqObjectsByClass = NULL;

    if (!pFnFindSeqObjectsByClass)
        pFnFindSeqObjectsByClass =
            (UFunction*)UObject::GObjObjects()->Data[6287];

    USequence_execFindSeqObjectsByClass_Parms FindSeqObjectsByClass_Parms;

    pFnFindSeqObjectsByClass->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSeqObjectsByClass, &FindSeqObjectsByClass_Parms,
                       NULL);

    pFnFindSeqObjectsByClass->FunctionFlags |= 0x400;
};

// Function Engine.PrefabSequence.GetOwnerPrefab
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrefabSequence::GetOwnerPrefab() {
    static UFunction* pFnGetOwnerPrefab = NULL;

    if (!pFnGetOwnerPrefab)
        pFnGetOwnerPrefab = (UFunction*)UObject::GObjObjects()->Data[32021];

    UPrefabSequence_execGetOwnerPrefab_Parms GetOwnerPrefab_Parms;

    pFnGetOwnerPrefab->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetOwnerPrefab, &GetOwnerPrefab_Parms, NULL);

    pFnGetOwnerPrefab->FunctionFlags |= 0x400;
};

// Function Engine.PrefabSequence.SetOwnerPrefab
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPrefabSequence::SetOwnerPrefab() {
    static UFunction* pFnSetOwnerPrefab = NULL;

    if (!pFnSetOwnerPrefab)
        pFnSetOwnerPrefab = (UFunction*)UObject::GObjObjects()->Data[32019];

    UPrefabSequence_execSetOwnerPrefab_Parms SetOwnerPrefab_Parms;

    pFnSetOwnerPrefab->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetOwnerPrefab, &SetOwnerPrefab_Parms, NULL);

    pFnSetOwnerPrefab->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_ActivateRemoteEvent.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ActivateRemoteEvent::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32708];

    USeqAct_ActivateRemoteEvent_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_CameraFade.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_CameraFade::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32787];

    USeqAct_CameraFade_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_CameraLookAt.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_CameraLookAt::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32808];

    USeqAct_CameraLookAt_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_CameraShake.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_CameraShake::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32810];

    USeqAct_CameraShake_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_ChangeCollision.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ChangeCollision::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[6240];

    USeqAct_ChangeCollision_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_ConvertToString.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ConvertToString::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32829];

    USeqAct_ConvertToString_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_DrawText.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_DrawText::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32854];

    USeqAct_DrawText_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_GetLocationAndRotation.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_GetLocationAndRotation::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32879];

    USeqAct_GetLocationAndRotation_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_GetVelocity.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_GetVelocity::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32888];

    USeqAct_GetVelocity_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_HeadTrackingControl.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqAct_HeadTrackingControl::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[32910];

    USeqAct_HeadTrackingControl_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_HeadTrackingControl.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_HeadTrackingControl::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32908];

    USeqAct_HeadTrackingControl_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_Latent.Update
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USeqAct_Latent::eventUpdate() {
    static UFunction* pFnUpdate = NULL;

    if (!pFnUpdate) pFnUpdate = (UFunction*)UObject::GObjObjects()->Data[32715];

    USeqAct_Latent_eventUpdate_Parms Update_Parms;

    this->ProcessEvent(pFnUpdate, &Update_Parms, NULL);
};

// Function Engine.SeqAct_Latent.AbortFor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USeqAct_Latent::AbortFor() {
    static UFunction* pFnAbortFor = NULL;

    if (!pFnAbortFor)
        pFnAbortFor = (UFunction*)UObject::GObjObjects()->Data[32713];

    USeqAct_Latent_execAbortFor_Parms AbortFor_Parms;

    pFnAbortFor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAbortFor, &AbortFor_Parms, NULL);

    pFnAbortFor->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_ActorFactory.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ActorFactory::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32736];

    USeqAct_ActorFactory_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_ProjectileFactory.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ProjectileFactory::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33044];

    USeqAct_ProjectileFactory_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_AIMoveToActor.PickDestination
// [0x00020002]
// Parameters infos:

void USeqAct_AIMoveToActor::PickDestination() {
    static UFunction* pFnPickDestination = NULL;

    if (!pFnPickDestination)
        pFnPickDestination = (UFunction*)UObject::GObjObjects()->Data[12774];

    USeqAct_AIMoveToActor_execPickDestination_Parms PickDestination_Parms;

    this->ProcessEvent(pFnPickDestination, &PickDestination_Parms, NULL);
};

// Function Engine.SeqAct_AIMoveToActor.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_AIMoveToActor::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32759];

    USeqAct_AIMoveToActor_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_Delay.ResetDelayActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USeqAct_Delay::ResetDelayActive() {
    static UFunction* pFnResetDelayActive = NULL;

    if (!pFnResetDelayActive)
        pFnResetDelayActive = (UFunction*)UObject::GObjObjects()->Data[32838];

    USeqAct_Delay_execResetDelayActive_Parms ResetDelayActive_Parms;

    pFnResetDelayActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetDelayActive, &ResetDelayActive_Parms, NULL);

    pFnResetDelayActive->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_Delay.Reset
// [0x00020002]
// Parameters infos:

void USeqAct_Delay::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[32837];

    USeqAct_Delay_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.SeqAct_Interp.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_Interp::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32957];

    USeqAct_Interp_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_Interp.Reset
// [0x00020002]
// Parameters infos:

void USeqAct_Interp::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[32956];

    USeqAct_Interp_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.SeqAct_Interp.AddPlayerToDirectorTracks
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqAct_Interp::AddPlayerToDirectorTracks() {
    static UFunction* pFnAddPlayerToDirectorTracks = NULL;

    if (!pFnAddPlayerToDirectorTracks)
        pFnAddPlayerToDirectorTracks =
            (UFunction*)UObject::GObjObjects()->Data[12551];

    USeqAct_Interp_execAddPlayerToDirectorTracks_Parms
        AddPlayerToDirectorTracks_Parms;

    pFnAddPlayerToDirectorTracks->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddPlayerToDirectorTracks,
                       &AddPlayerToDirectorTracks_Parms, NULL);

    pFnAddPlayerToDirectorTracks->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_Interp.Stop
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqAct_Interp::Stop() {
    static UFunction* pFnStop = NULL;

    if (!pFnStop) pFnStop = (UFunction*)UObject::GObjObjects()->Data[32954];

    USeqAct_Interp_execStop_Parms Stop_Parms;

    pFnStop->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStop, &Stop_Parms, NULL);

    pFnStop->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_Interp.SetPosition
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqAct_Interp::SetPosition() {
    static UFunction* pFnSetPosition = NULL;

    if (!pFnSetPosition)
        pFnSetPosition = (UFunction*)UObject::GObjObjects()->Data[32951];

    USeqAct_Interp_execSetPosition_Parms SetPosition_Parms;

    pFnSetPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPosition, &SetPosition_Parms, NULL);

    pFnSetPosition->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_PlaySound.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_PlaySound::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33034];

    USeqAct_PlaySound_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_StreamInTextures.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_StreamInTextures::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33214];

    USeqAct_StreamInTextures_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_WaitForLevelsVisible.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqAct_WaitForLevelsVisible::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[33268];

    USeqAct_WaitForLevelsVisible_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_WaitForLevelsVisible.CheckLevelsVisible
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqAct_WaitForLevelsVisible::CheckLevelsVisible() {
    static UFunction* pFnCheckLevelsVisible = NULL;

    if (!pFnCheckLevelsVisible)
        pFnCheckLevelsVisible = (UFunction*)UObject::GObjObjects()->Data[12293];

    USeqAct_WaitForLevelsVisible_execCheckLevelsVisible_Parms
        CheckLevelsVisible_Parms;

    pFnCheckLevelsVisible->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckLevelsVisible, &CheckLevelsVisible_Parms, NULL);

    pFnCheckLevelsVisible->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_Log.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_Log::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32861];

    USeqAct_Log_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_ModifyHealth.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ModifyHealth::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32981];

    USeqAct_ModifyHealth_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_ParticleEventGenerator.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ParticleEventGenerator::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33009];

    USeqAct_ParticleEventGenerator_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_PlayCameraAnim.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_PlayCameraAnim::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33020];

    USeqAct_PlayCameraAnim_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetCameraTarget.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetCameraTarget::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33066];

    USeqAct_SetCameraTarget_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetFloat.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetFloat::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33090];

    USeqAct_SetFloat_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetInt.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetInt::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33095];

    USeqAct_SetInt_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetLocation.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetLocation::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33102];

    USeqAct_SetLocation_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetObject.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetObject::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33127];

    USeqAct_SetObject_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetString.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetString::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33144];

    USeqAct_SetString_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_RandomSwitch.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_RandomSwitch::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33054];

    USeqAct_RandomSwitch_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_Trace.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_Trace::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33259];

    USeqAct_Trace_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqCond_CompareBool.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqCond_CompareBool::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33271];

    USeqCond_CompareBool_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqCond_GetServerType.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqCond_GetServerType::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33277];

    USeqCond_GetServerType_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqCond_IsBenchmarking.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqCond_IsBenchmarking::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33285];

    USeqCond_IsBenchmarking_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqCond_IsLoggedIn.CheckLogins
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_IsLoggedIn::eventCheckLogins() {
    static UFunction* pFnCheckLogins = NULL;

    if (!pFnCheckLogins)
        pFnCheckLogins = (UFunction*)UObject::GObjObjects()->Data[33288];

    USeqCond_IsLoggedIn_eventCheckLogins_Parms CheckLogins_Parms;

    this->ProcessEvent(pFnCheckLogins, &CheckLogins_Parms, NULL);
};

// Function Engine.SeqCond_IsPIE.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqCond_IsPIE::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33294];

    USeqCond_IsPIE_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqCond_SwitchBase.RemoveValueEntry
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchBase::eventRemoveValueEntry() {
    static UFunction* pFnRemoveValueEntry = NULL;

    if (!pFnRemoveValueEntry)
        pFnRemoveValueEntry = (UFunction*)UObject::GObjObjects()->Data[33302];

    USeqCond_SwitchBase_eventRemoveValueEntry_Parms RemoveValueEntry_Parms;

    this->ProcessEvent(pFnRemoveValueEntry, &RemoveValueEntry_Parms, NULL);
};

// Function Engine.SeqCond_SwitchBase.InsertValueEntry
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchBase::eventInsertValueEntry() {
    static UFunction* pFnInsertValueEntry = NULL;

    if (!pFnInsertValueEntry)
        pFnInsertValueEntry = (UFunction*)UObject::GObjObjects()->Data[33300];

    USeqCond_SwitchBase_eventInsertValueEntry_Parms InsertValueEntry_Parms;

    this->ProcessEvent(pFnInsertValueEntry, &InsertValueEntry_Parms, NULL);
};

// Function Engine.SeqCond_SwitchBase.IsFallThruEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchBase::eventIsFallThruEnabled() {
    static UFunction* pFnIsFallThruEnabled = NULL;

    if (!pFnIsFallThruEnabled)
        pFnIsFallThruEnabled = (UFunction*)UObject::GObjObjects()->Data[33297];

    USeqCond_SwitchBase_eventIsFallThruEnabled_Parms IsFallThruEnabled_Parms;

    this->ProcessEvent(pFnIsFallThruEnabled, &IsFallThruEnabled_Parms, NULL);
};

// Function Engine.SeqCond_SwitchBase.VerifyDefaultCaseValue
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchBase::eventVerifyDefaultCaseValue() {
    static UFunction* pFnVerifyDefaultCaseValue = NULL;

    if (!pFnVerifyDefaultCaseValue)
        pFnVerifyDefaultCaseValue =
            (UFunction*)UObject::GObjObjects()->Data[33296];

    USeqCond_SwitchBase_eventVerifyDefaultCaseValue_Parms
        VerifyDefaultCaseValue_Parms;

    this->ProcessEvent(pFnVerifyDefaultCaseValue, &VerifyDefaultCaseValue_Parms,
                       NULL);
};

// Function Engine.SeqCond_SwitchClass.RemoveValueEntry
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchClass::eventRemoveValueEntry() {
    static UFunction* pFnRemoveValueEntry = NULL;

    if (!pFnRemoveValueEntry)
        pFnRemoveValueEntry = (UFunction*)UObject::GObjObjects()->Data[33315];

    USeqCond_SwitchClass_eventRemoveValueEntry_Parms RemoveValueEntry_Parms;

    this->ProcessEvent(pFnRemoveValueEntry, &RemoveValueEntry_Parms, NULL);
};

// Function Engine.SeqCond_SwitchClass.InsertValueEntry
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchClass::eventInsertValueEntry() {
    static UFunction* pFnInsertValueEntry = NULL;

    if (!pFnInsertValueEntry)
        pFnInsertValueEntry = (UFunction*)UObject::GObjObjects()->Data[33313];

    USeqCond_SwitchClass_eventInsertValueEntry_Parms InsertValueEntry_Parms;

    this->ProcessEvent(pFnInsertValueEntry, &InsertValueEntry_Parms, NULL);
};

// Function Engine.SeqCond_SwitchClass.IsFallThruEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchClass::eventIsFallThruEnabled() {
    static UFunction* pFnIsFallThruEnabled = NULL;

    if (!pFnIsFallThruEnabled)
        pFnIsFallThruEnabled = (UFunction*)UObject::GObjObjects()->Data[33310];

    USeqCond_SwitchClass_eventIsFallThruEnabled_Parms IsFallThruEnabled_Parms;

    this->ProcessEvent(pFnIsFallThruEnabled, &IsFallThruEnabled_Parms, NULL);
};

// Function Engine.SeqCond_SwitchClass.VerifyDefaultCaseValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchClass::eventVerifyDefaultCaseValue() {
    static UFunction* pFnVerifyDefaultCaseValue = NULL;

    if (!pFnVerifyDefaultCaseValue)
        pFnVerifyDefaultCaseValue =
            (UFunction*)UObject::GObjObjects()->Data[33309];

    USeqCond_SwitchClass_eventVerifyDefaultCaseValue_Parms
        VerifyDefaultCaseValue_Parms;

    this->ProcessEvent(pFnVerifyDefaultCaseValue, &VerifyDefaultCaseValue_Parms,
                       NULL);
};

// Function Engine.SeqCond_SwitchObject.RemoveValueEntry
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchObject::eventRemoveValueEntry() {
    static UFunction* pFnRemoveValueEntry = NULL;

    if (!pFnRemoveValueEntry)
        pFnRemoveValueEntry = (UFunction*)UObject::GObjObjects()->Data[33330];

    USeqCond_SwitchObject_eventRemoveValueEntry_Parms RemoveValueEntry_Parms;

    this->ProcessEvent(pFnRemoveValueEntry, &RemoveValueEntry_Parms, NULL);
};

// Function Engine.SeqCond_SwitchObject.InsertValueEntry
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchObject::eventInsertValueEntry() {
    static UFunction* pFnInsertValueEntry = NULL;

    if (!pFnInsertValueEntry)
        pFnInsertValueEntry = (UFunction*)UObject::GObjObjects()->Data[33328];

    USeqCond_SwitchObject_eventInsertValueEntry_Parms InsertValueEntry_Parms;

    this->ProcessEvent(pFnInsertValueEntry, &InsertValueEntry_Parms, NULL);
};

// Function Engine.SeqCond_SwitchObject.IsFallThruEnabled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchObject::eventIsFallThruEnabled() {
    static UFunction* pFnIsFallThruEnabled = NULL;

    if (!pFnIsFallThruEnabled)
        pFnIsFallThruEnabled = (UFunction*)UObject::GObjObjects()->Data[33325];

    USeqCond_SwitchObject_eventIsFallThruEnabled_Parms IsFallThruEnabled_Parms;

    this->ProcessEvent(pFnIsFallThruEnabled, &IsFallThruEnabled_Parms, NULL);
};

// Function Engine.SeqCond_SwitchObject.VerifyDefaultCaseValue
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqCond_SwitchObject::eventVerifyDefaultCaseValue() {
    static UFunction* pFnVerifyDefaultCaseValue = NULL;

    if (!pFnVerifyDefaultCaseValue)
        pFnVerifyDefaultCaseValue =
            (UFunction*)UObject::GObjObjects()->Data[33323];

    USeqCond_SwitchObject_eventVerifyDefaultCaseValue_Parms
        VerifyDefaultCaseValue_Parms;

    this->ProcessEvent(pFnVerifyDefaultCaseValue, &VerifyDefaultCaseValue_Parms,
                       NULL);
};

// Function Engine.SequenceEvent.Toggled
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USequenceEvent::eventToggled() {
    static UFunction* pFnToggled = NULL;

    if (!pFnToggled)
        pFnToggled = (UFunction*)UObject::GObjObjects()->Data[33350];

    USequenceEvent_eventToggled_Parms Toggled_Parms;

    this->ProcessEvent(pFnToggled, &Toggled_Parms, NULL);
};

// Function Engine.SequenceEvent.Reset
// [0x00020002]
// Parameters infos:

void USequenceEvent::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[33349];

    USequenceEvent_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.SequenceEvent.CheckActivate
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USequenceEvent::CheckActivate() {
    static UFunction* pFnCheckActivate = NULL;

    if (!pFnCheckActivate)
        pFnCheckActivate = (UFunction*)UObject::GObjObjects()->Data[6283];

    USequenceEvent_execCheckActivate_Parms CheckActivate_Parms;

    pFnCheckActivate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckActivate, &CheckActivate_Parms, NULL);

    pFnCheckActivate->FunctionFlags |= 0x400;
};

// Function Engine.SequenceEvent.RegisterEvent
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void USequenceEvent::eventRegisterEvent() {
    static UFunction* pFnRegisterEvent = NULL;

    if (!pFnRegisterEvent)
        pFnRegisterEvent = (UFunction*)UObject::GObjObjects()->Data[33342];

    USequenceEvent_eventRegisterEvent_Parms RegisterEvent_Parms;

    this->ProcessEvent(pFnRegisterEvent, &RegisterEvent_Parms, NULL);
};

// Function Engine.SeqEvent_LevelLoaded.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_LevelLoaded::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33365];

    USeqEvent_LevelLoaded_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqEvent_Mover.NotifyFinishedOpen
// [0x00020002]
// Parameters infos:

void USeqEvent_Mover::NotifyFinishedOpen() {
    static UFunction* pFnNotifyFinishedOpen = NULL;

    if (!pFnNotifyFinishedOpen)
        pFnNotifyFinishedOpen = (UFunction*)UObject::GObjObjects()->Data[33392];

    USeqEvent_Mover_execNotifyFinishedOpen_Parms NotifyFinishedOpen_Parms;

    this->ProcessEvent(pFnNotifyFinishedOpen, &NotifyFinishedOpen_Parms, NULL);
};

// Function Engine.SeqEvent_Mover.NotifyDetached
// [0x00020002]
// Parameters infos:

void USeqEvent_Mover::NotifyDetached() {
    static UFunction* pFnNotifyDetached = NULL;

    if (!pFnNotifyDetached)
        pFnNotifyDetached = (UFunction*)UObject::GObjObjects()->Data[33387];

    USeqEvent_Mover_execNotifyDetached_Parms NotifyDetached_Parms;

    this->ProcessEvent(pFnNotifyDetached, &NotifyDetached_Parms, NULL);
};

// Function Engine.SeqEvent_Mover.NotifyAttached
// [0x00020002]
// Parameters infos:

void USeqEvent_Mover::NotifyAttached() {
    static UFunction* pFnNotifyAttached = NULL;

    if (!pFnNotifyAttached)
        pFnNotifyAttached = (UFunction*)UObject::GObjObjects()->Data[33383];

    USeqEvent_Mover_execNotifyAttached_Parms NotifyAttached_Parms;

    this->ProcessEvent(pFnNotifyAttached, &NotifyAttached_Parms, NULL);
};

// Function Engine.SeqEvent_Mover.NotifyEncroachingOn
// [0x00020002]
// Parameters infos:

void USeqEvent_Mover::NotifyEncroachingOn() {
    static UFunction* pFnNotifyEncroachingOn = NULL;

    if (!pFnNotifyEncroachingOn)
        pFnNotifyEncroachingOn =
            (UFunction*)UObject::GObjObjects()->Data[33378];

    USeqEvent_Mover_execNotifyEncroachingOn_Parms NotifyEncroachingOn_Parms;

    this->ProcessEvent(pFnNotifyEncroachingOn, &NotifyEncroachingOn_Parms,
                       NULL);
};

// Function Engine.SeqEvent_Mover.RegisterEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_Mover::eventRegisterEvent() {
    static UFunction* pFnRegisterEvent = NULL;

    if (!pFnRegisterEvent)
        pFnRegisterEvent = (UFunction*)UObject::GObjObjects()->Data[33376];

    USeqEvent_Mover_eventRegisterEvent_Parms RegisterEvent_Parms;

    this->ProcessEvent(pFnRegisterEvent, &RegisterEvent_Parms, NULL);
};

// Function Engine.SeqEvent_ParticleEvent.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_ParticleEvent::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33403];

    USeqEvent_ParticleEvent_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqEvent_RemoteEvent.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_RemoteEvent::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33409];

    USeqEvent_RemoteEvent_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqEvent_TakeDamage.Toggled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_TakeDamage::eventToggled() {
    static UFunction* pFnToggled = NULL;

    if (!pFnToggled)
        pFnToggled = (UFunction*)UObject::GObjObjects()->Data[33436];

    USeqEvent_TakeDamage_eventToggled_Parms Toggled_Parms;

    this->ProcessEvent(pFnToggled, &Toggled_Parms, NULL);
};

// Function Engine.SeqEvent_TakeDamage.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_TakeDamage::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33434];

    USeqEvent_TakeDamage_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqEvent_TakeDamage.Reset
// [0x00020002]
// Parameters infos:

void USeqEvent_TakeDamage::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[33433];

    USeqEvent_TakeDamage_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.SeqEvent_TakeDamage.HandleDamage
// [0x00020002]
// Parameters infos:

void USeqEvent_TakeDamage::HandleDamage() {
    static UFunction* pFnHandleDamage = NULL;

    if (!pFnHandleDamage)
        pFnHandleDamage = (UFunction*)UObject::GObjObjects()->Data[33426];

    USeqEvent_TakeDamage_execHandleDamage_Parms HandleDamage_Parms;

    this->ProcessEvent(pFnHandleDamage, &HandleDamage_Parms, NULL);
};

// Function Engine.SeqEvent_TakeDamage.IsValidDamageType
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USeqEvent_TakeDamage::IsValidDamageType() {
    static UFunction* pFnIsValidDamageType = NULL;

    if (!pFnIsValidDamageType)
        pFnIsValidDamageType = (UFunction*)UObject::GObjObjects()->Data[33421];

    USeqEvent_TakeDamage_execIsValidDamageType_Parms IsValidDamageType_Parms;

    this->ProcessEvent(pFnIsValidDamageType, &IsValidDamageType_Parms, NULL);
};

// Function Engine.SeqEvent_Touch.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_Touch::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33459];

    USeqEvent_Touch_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqEvent_Touch.NotifyTouchingPawnDied
// [0x00020002]
// Parameters infos:

void USeqEvent_Touch::NotifyTouchingPawnDied() {
    static UFunction* pFnNotifyTouchingPawnDied = NULL;

    if (!pFnNotifyTouchingPawnDied)
        pFnNotifyTouchingPawnDied =
            (UFunction*)UObject::GObjObjects()->Data[33457];

    USeqEvent_Touch_execNotifyTouchingPawnDied_Parms
        NotifyTouchingPawnDied_Parms;

    this->ProcessEvent(pFnNotifyTouchingPawnDied, &NotifyTouchingPawnDied_Parms,
                       NULL);
};

// Function Engine.SeqEvent_Touch.Toggled
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_Touch::eventToggled() {
    static UFunction* pFnToggled = NULL;

    if (!pFnToggled)
        pFnToggled = (UFunction*)UObject::GObjObjects()->Data[33455];

    USeqEvent_Touch_eventToggled_Parms Toggled_Parms;

    this->ProcessEvent(pFnToggled, &Toggled_Parms, NULL);
};

// Function Engine.SeqEvent_Touch.CheckUnTouchActivate
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqEvent_Touch::CheckUnTouchActivate() {
    static UFunction* pFnCheckUnTouchActivate = NULL;

    if (!pFnCheckUnTouchActivate)
        pFnCheckUnTouchActivate =
            (UFunction*)UObject::GObjObjects()->Data[33450];

    USeqEvent_Touch_execCheckUnTouchActivate_Parms CheckUnTouchActivate_Parms;

    pFnCheckUnTouchActivate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckUnTouchActivate, &CheckUnTouchActivate_Parms,
                       NULL);

    pFnCheckUnTouchActivate->FunctionFlags |= 0x400;
};

// Function Engine.SeqEvent_Touch.CheckTouchActivate
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqEvent_Touch::CheckTouchActivate() {
    static UFunction* pFnCheckTouchActivate = NULL;

    if (!pFnCheckTouchActivate)
        pFnCheckTouchActivate = (UFunction*)UObject::GObjObjects()->Data[12377];

    USeqEvent_Touch_execCheckTouchActivate_Parms CheckTouchActivate_Parms;

    pFnCheckTouchActivate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckTouchActivate, &CheckTouchActivate_Parms, NULL);

    pFnCheckTouchActivate->FunctionFlags |= 0x400;
};

// Function Engine.SeqVar_Object.SetObjectValue
// [0x00020002]
// Parameters infos:

void USeqVar_Object::SetObjectValue() {
    static UFunction* pFnSetObjectValue = NULL;

    if (!pFnSetObjectValue)
        pFnSetObjectValue = (UFunction*)UObject::GObjObjects()->Data[33489];

    USeqVar_Object_execSetObjectValue_Parms SetObjectValue_Parms;

    this->ProcessEvent(pFnSetObjectValue, &SetObjectValue_Parms, NULL);
};

// Function Engine.SeqVar_Object.GetObjectValue
// [0x00020002]
// Parameters infos:

void USeqVar_Object::GetObjectValue() {
    static UFunction* pFnGetObjectValue = NULL;

    if (!pFnGetObjectValue)
        pFnGetObjectValue = (UFunction*)UObject::GObjObjects()->Data[12776];

    USeqVar_Object_execGetObjectValue_Parms GetObjectValue_Parms;

    this->ProcessEvent(pFnGetObjectValue, &GetObjectValue_Parms, NULL);
};

// Function Engine.SeqVar_ObjectList.SetObjectValue
// [0x00020002]
// Parameters infos:

void USeqVar_ObjectList::SetObjectValue() {
    static UFunction* pFnSetObjectValue = NULL;

    if (!pFnSetObjectValue)
        pFnSetObjectValue = (UFunction*)UObject::GObjObjects()->Data[33508];

    USeqVar_ObjectList_execSetObjectValue_Parms SetObjectValue_Parms;

    this->ProcessEvent(pFnSetObjectValue, &SetObjectValue_Parms, NULL);
};

// Function Engine.SeqVar_ObjectList.GetObjectValue
// [0x00020002]
// Parameters infos:

void USeqVar_ObjectList::GetObjectValue() {
    static UFunction* pFnGetObjectValue = NULL;

    if (!pFnGetObjectValue)
        pFnGetObjectValue = (UFunction*)UObject::GObjObjects()->Data[33506];

    USeqVar_ObjectList_execGetObjectValue_Parms GetObjectValue_Parms;

    this->ProcessEvent(pFnGetObjectValue, &GetObjectValue_Parms, NULL);
};

// Function Engine.SeqVar_Player.GetObjectValue
// [0x00020002]
// Parameters infos:

void USeqVar_Player::GetObjectValue() {
    static UFunction* pFnGetObjectValue = NULL;

    if (!pFnGetObjectValue)
        pFnGetObjectValue = (UFunction*)UObject::GObjObjects()->Data[33521];

    USeqVar_Player_execGetObjectValue_Parms GetObjectValue_Parms;

    this->ProcessEvent(pFnGetObjectValue, &GetObjectValue_Parms, NULL);
};

// Function Engine.SeqVar_Player.UpdatePlayersList
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USeqVar_Player::UpdatePlayersList() {
    static UFunction* pFnUpdatePlayersList = NULL;

    if (!pFnUpdatePlayersList)
        pFnUpdatePlayersList = (UFunction*)UObject::GObjObjects()->Data[33520];

    USeqVar_Player_execUpdatePlayersList_Parms UpdatePlayersList_Parms;

    pFnUpdatePlayersList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdatePlayersList, &UpdatePlayersList_Parms, NULL);

    pFnUpdatePlayersList->FunctionFlags |= 0x400;
};

// Function Engine.AmbientSoundSimpleToggleable.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void AAmbientSoundSimpleToggleable::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[13559];

    AAmbientSoundSimpleToggleable_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.AmbientSoundSimpleToggleable.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void AAmbientSoundSimpleToggleable::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[13557];

    AAmbientSoundSimpleToggleable_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.AmbientSoundSimpleToggleable.OnToggle
// [0x00020102]
// Parameters infos:

void AAmbientSoundSimpleToggleable::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[13555];

    AAmbientSoundSimpleToggleable_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.AmbientSoundSimpleToggleable.StopPlaying
// [0x00020102]
// Parameters infos:

void AAmbientSoundSimpleToggleable::StopPlaying() {
    static UFunction* pFnStopPlaying = NULL;

    if (!pFnStopPlaying)
        pFnStopPlaying = (UFunction*)UObject::GObjObjects()->Data[13554];

    AAmbientSoundSimpleToggleable_execStopPlaying_Parms StopPlaying_Parms;

    this->ProcessEvent(pFnStopPlaying, &StopPlaying_Parms, NULL);
};

// Function Engine.AmbientSoundSimpleToggleable.StartPlaying
// [0x00020102]
// Parameters infos:

void AAmbientSoundSimpleToggleable::StartPlaying() {
    static UFunction* pFnStartPlaying = NULL;

    if (!pFnStartPlaying)
        pFnStartPlaying = (UFunction*)UObject::GObjObjects()->Data[13553];

    AAmbientSoundSimpleToggleable_execStartPlaying_Parms StartPlaying_Parms;

    this->ProcessEvent(pFnStartPlaying, &StartPlaying_Parms, NULL);
};

// Function Engine.AmbientSoundSimpleToggleable.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AAmbientSoundSimpleToggleable::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[13551];

    AAmbientSoundSimpleToggleable_eventReplicatedEvent_Parms
        ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.AmbientSoundSimpleToggleable.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AAmbientSoundSimpleToggleable::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[13550];

    AAmbientSoundSimpleToggleable_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.SoundNodeWave.GeneratePCMData
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void USoundNodeWave::eventGeneratePCMData() {
    static UFunction* pFnGeneratePCMData = NULL;

    if (!pFnGeneratePCMData)
        pFnGeneratePCMData = (UFunction*)UObject::GObjObjects()->Data[34378];

    USoundNodeWave_eventGeneratePCMData_Parms GeneratePCMData_Parms;

    this->ProcessEvent(pFnGeneratePCMData, &GeneratePCMData_Parms, NULL);
};

// Function Engine.SoundNodeWaveStreaming.GeneratePCMData
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void USoundNodeWaveStreaming::eventGeneratePCMData() {
    static UFunction* pFnGeneratePCMData = NULL;

    if (!pFnGeneratePCMData)
        pFnGeneratePCMData = (UFunction*)UObject::GObjObjects()->Data[34394];

    USoundNodeWaveStreaming_eventGeneratePCMData_Parms GeneratePCMData_Parms;

    pFnGeneratePCMData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGeneratePCMData, &GeneratePCMData_Parms, NULL);

    pFnGeneratePCMData->FunctionFlags |= 0x400;
};

// Function Engine.SoundNodeWaveStreaming.AvailableAudioBytes
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void USoundNodeWaveStreaming::eventAvailableAudioBytes() {
    static UFunction* pFnAvailableAudioBytes = NULL;

    if (!pFnAvailableAudioBytes)
        pFnAvailableAudioBytes =
            (UFunction*)UObject::GObjObjects()->Data[34392];

    USoundNodeWaveStreaming_eventAvailableAudioBytes_Parms
        AvailableAudioBytes_Parms;

    pFnAvailableAudioBytes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAvailableAudioBytes, &AvailableAudioBytes_Parms,
                       NULL);

    pFnAvailableAudioBytes->FunctionFlags |= 0x400;
};

// Function Engine.SoundNodeWaveStreaming.ResetAudio
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void USoundNodeWaveStreaming::eventResetAudio() {
    static UFunction* pFnResetAudio = NULL;

    if (!pFnResetAudio)
        pFnResetAudio = (UFunction*)UObject::GObjObjects()->Data[34391];

    USoundNodeWaveStreaming_eventResetAudio_Parms ResetAudio_Parms;

    pFnResetAudio->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetAudio, &ResetAudio_Parms, NULL);

    pFnResetAudio->FunctionFlags |= 0x400;
};

// Function Engine.SoundNodeWaveStreaming.QueueSilence
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void USoundNodeWaveStreaming::eventQueueSilence() {
    static UFunction* pFnQueueSilence = NULL;

    if (!pFnQueueSilence)
        pFnQueueSilence = (UFunction*)UObject::GObjObjects()->Data[34389];

    USoundNodeWaveStreaming_eventQueueSilence_Parms QueueSilence_Parms;

    pFnQueueSilence->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnQueueSilence, &QueueSilence_Parms, NULL);

    pFnQueueSilence->FunctionFlags |= 0x400;
};

// Function Engine.SoundNodeWaveStreaming.QueueAudio
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void USoundNodeWaveStreaming::eventQueueAudio() {
    static UFunction* pFnQueueAudio = NULL;

    if (!pFnQueueAudio)
        pFnQueueAudio = (UFunction*)UObject::GObjObjects()->Data[34386];

    USoundNodeWaveStreaming_eventQueueAudio_Parms QueueAudio_Parms;

    pFnQueueAudio->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnQueueAudio, &QueueAudio_Parms, NULL);

    pFnQueueAudio->FunctionFlags |= 0x400;
};

// Function Engine.Terrain.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATerrain::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[35277];

    ATerrain_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Terrain.CalcLayerBounds
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ATerrain::CalcLayerBounds() {
    static UFunction* pFnCalcLayerBounds = NULL;

    if (!pFnCalcLayerBounds)
        pFnCalcLayerBounds = (UFunction*)UObject::GObjObjects()->Data[35276];

    ATerrain_execCalcLayerBounds_Parms CalcLayerBounds_Parms;

    pFnCalcLayerBounds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCalcLayerBounds, &CalcLayerBounds_Parms, NULL);

    pFnCalcLayerBounds->FunctionFlags |= 0x400;
};

// Function Engine.TerrainLayerSetup.PostBeginPlay
// [0x00020100]
// Parameters infos:

void UTerrainLayerSetup::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[35328];

    UTerrainLayerSetup_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.DataStoreClient.DebugDumpDataStoreInfo
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UDataStoreClient::DebugDumpDataStoreInfo() {
    static UFunction* pFnDebugDumpDataStoreInfo = NULL;

    if (!pFnDebugDumpDataStoreInfo)
        pFnDebugDumpDataStoreInfo =
            (UFunction*)UObject::GObjObjects()->Data[17559];

    UDataStoreClient_execDebugDumpDataStoreInfo_Parms
        DebugDumpDataStoreInfo_Parms;

    this->ProcessEvent(pFnDebugDumpDataStoreInfo, &DebugDumpDataStoreInfo_Parms,
                       NULL);
};

// Function Engine.DataStoreClient.NotifyGameSessionEnded
// [0x00020803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UDataStoreClient::eventNotifyGameSessionEnded() {
    static UFunction* pFnNotifyGameSessionEnded = NULL;

    if (!pFnNotifyGameSessionEnded)
        pFnNotifyGameSessionEnded =
            (UFunction*)UObject::GObjObjects()->Data[17554];

    UDataStoreClient_eventNotifyGameSessionEnded_Parms
        NotifyGameSessionEnded_Parms;

    this->ProcessEvent(pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms,
                       NULL);
};

// Function Engine.DataStoreClient.FindDataStoreClass
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UDataStoreClient::FindDataStoreClass() {
    static UFunction* pFnFindDataStoreClass = NULL;

    if (!pFnFindDataStoreClass)
        pFnFindDataStoreClass = (UFunction*)UObject::GObjObjects()->Data[12546];

    UDataStoreClient_execFindDataStoreClass_Parms FindDataStoreClass_Parms;

    this->ProcessEvent(pFnFindDataStoreClass, &FindDataStoreClass_Parms, NULL);
};

// Function Engine.DataStoreClient.GetPlayerDataStoreClasses
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void UDataStoreClient::GetPlayerDataStoreClasses() {
    static UFunction* pFnGetPlayerDataStoreClasses = NULL;

    if (!pFnGetPlayerDataStoreClasses)
        pFnGetPlayerDataStoreClasses =
            (UFunction*)UObject::GObjObjects()->Data[12536];

    UDataStoreClient_execGetPlayerDataStoreClasses_Parms
        GetPlayerDataStoreClasses_Parms;

    this->ProcessEvent(pFnGetPlayerDataStoreClasses,
                       &GetPlayerDataStoreClasses_Parms, NULL);
};

// Function Engine.DataStoreClient.FindPlayerDataStoreIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDataStoreClient::FindPlayerDataStoreIndex() {
    static UFunction* pFnFindPlayerDataStoreIndex = NULL;

    if (!pFnFindPlayerDataStoreIndex)
        pFnFindPlayerDataStoreIndex =
            (UFunction*)UObject::GObjObjects()->Data[17546];

    UDataStoreClient_execFindPlayerDataStoreIndex_Parms
        FindPlayerDataStoreIndex_Parms;

    pFnFindPlayerDataStoreIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindPlayerDataStoreIndex,
                       &FindPlayerDataStoreIndex_Parms, NULL);

    pFnFindPlayerDataStoreIndex->FunctionFlags |= 0x400;
};

// Function Engine.DataStoreClient.UnregisterDataStore
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDataStoreClient::UnregisterDataStore() {
    static UFunction* pFnUnregisterDataStore = NULL;

    if (!pFnUnregisterDataStore)
        pFnUnregisterDataStore =
            (UFunction*)UObject::GObjObjects()->Data[12540];

    UDataStoreClient_execUnregisterDataStore_Parms UnregisterDataStore_Parms;

    pFnUnregisterDataStore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnregisterDataStore, &UnregisterDataStore_Parms,
                       NULL);

    pFnUnregisterDataStore->FunctionFlags |= 0x400;
};

// Function Engine.DataStoreClient.RegisterDataStore
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDataStoreClient::RegisterDataStore() {
    static UFunction* pFnRegisterDataStore = NULL;

    if (!pFnRegisterDataStore)
        pFnRegisterDataStore = (UFunction*)UObject::GObjObjects()->Data[12544];

    UDataStoreClient_execRegisterDataStore_Parms RegisterDataStore_Parms;

    pFnRegisterDataStore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRegisterDataStore, &RegisterDataStore_Parms, NULL);

    pFnRegisterDataStore->FunctionFlags |= 0x400;
};

// Function Engine.DataStoreClient.CreateDataStore
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDataStoreClient::CreateDataStore() {
    static UFunction* pFnCreateDataStore = NULL;

    if (!pFnCreateDataStore)
        pFnCreateDataStore = (UFunction*)UObject::GObjObjects()->Data[12542];

    UDataStoreClient_execCreateDataStore_Parms CreateDataStore_Parms;

    pFnCreateDataStore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreateDataStore, &CreateDataStore_Parms, NULL);

    pFnCreateDataStore->FunctionFlags |= 0x400;
};

// Function Engine.DataStoreClient.FindDataStore
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDataStoreClient::FindDataStore() {
    static UFunction* pFnFindDataStore = NULL;

    if (!pFnFindDataStore)
        pFnFindDataStore = (UFunction*)UObject::GObjObjects()->Data[12537];

    UDataStoreClient_execFindDataStore_Parms FindDataStore_Parms;

    pFnFindDataStore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindDataStore, &FindDataStore_Parms, NULL);

    pFnFindDataStore->FunctionFlags |= 0x400;
};

// Function Engine.Console.UpdateCompleteIndices
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UConsole::UpdateCompleteIndices() {
    static UFunction* pFnUpdateCompleteIndices = NULL;

    if (!pFnUpdateCompleteIndices)
        pFnUpdateCompleteIndices =
            (UFunction*)UObject::GObjObjects()->Data[16865];

    UConsole_execUpdateCompleteIndices_Parms UpdateCompleteIndices_Parms;

    pFnUpdateCompleteIndices->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateCompleteIndices, &UpdateCompleteIndices_Parms,
                       NULL);

    pFnUpdateCompleteIndices->FunctionFlags |= 0x400;
};

// Function Engine.Console.BuildRuntimeAutoCompleteList
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UConsole::BuildRuntimeAutoCompleteList() {
    static UFunction* pFnBuildRuntimeAutoCompleteList = NULL;

    if (!pFnBuildRuntimeAutoCompleteList)
        pFnBuildRuntimeAutoCompleteList =
            (UFunction*)UObject::GObjObjects()->Data[16863];

    UConsole_execBuildRuntimeAutoCompleteList_Parms
        BuildRuntimeAutoCompleteList_Parms;

    pFnBuildRuntimeAutoCompleteList->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBuildRuntimeAutoCompleteList,
                       &BuildRuntimeAutoCompleteList_Parms, NULL);

    pFnBuildRuntimeAutoCompleteList->FunctionFlags |= 0x400;
};

// Function Engine.Console.AppendInputText
// [0x00020002]
// Parameters infos:

void UConsole::AppendInputText() {
    static UFunction* pFnAppendInputText = NULL;

    if (!pFnAppendInputText)
        pFnAppendInputText = (UFunction*)UObject::GObjObjects()->Data[16860];

    UConsole_execAppendInputText_Parms AppendInputText_Parms;

    this->ProcessEvent(pFnAppendInputText, &AppendInputText_Parms, NULL);
};

// Function Engine.Console.ProcessControlKey
// [0x00020002]
// Parameters infos:

void UConsole::ProcessControlKey() {
    static UFunction* pFnProcessControlKey = NULL;

    if (!pFnProcessControlKey)
        pFnProcessControlKey = (UFunction*)UObject::GObjObjects()->Data[16856];

    UConsole_execProcessControlKey_Parms ProcessControlKey_Parms;

    this->ProcessEvent(pFnProcessControlKey, &ProcessControlKey_Parms, NULL);
};

// Function Engine.Console.FlushPlayerInput
// [0x00020002]
// Parameters infos:

void UConsole::FlushPlayerInput() {
    static UFunction* pFnFlushPlayerInput = NULL;

    if (!pFnFlushPlayerInput)
        pFnFlushPlayerInput = (UFunction*)UObject::GObjObjects()->Data[16854];

    UConsole_execFlushPlayerInput_Parms FlushPlayerInput_Parms;

    this->ProcessEvent(pFnFlushPlayerInput, &FlushPlayerInput_Parms, NULL);
};

// Function Engine.Console.InputChar
// [0x00020002]
// Parameters infos:

void UConsole::InputChar() {
    static UFunction* pFnInputChar = NULL;

    if (!pFnInputChar)
        pFnInputChar = (UFunction*)UObject::GObjObjects()->Data[16850];

    UConsole_execInputChar_Parms InputChar_Parms;

    this->ProcessEvent(pFnInputChar, &InputChar_Parms, NULL);
};

// Function Engine.Console.InputKey
// [0x00024002]
// Parameters infos:

void UConsole::InputKey() {
    static UFunction* pFnInputKey = NULL;

    if (!pFnInputKey)
        pFnInputKey = (UFunction*)UObject::GObjObjects()->Data[16842];

    UConsole_execInputKey_Parms InputKey_Parms;

    this->ProcessEvent(pFnInputKey, &InputKey_Parms, NULL);
};

// Function Engine.Console.PostRender_Console
// [0x00020000]
// Parameters infos:

void UConsole::PostRender_Console() {
    static UFunction* pFnPostRender_Console = NULL;

    if (!pFnPostRender_Console)
        pFnPostRender_Console = (UFunction*)UObject::GObjObjects()->Data[16840];

    UConsole_execPostRender_Console_Parms PostRender_Console_Parms;

    this->ProcessEvent(pFnPostRender_Console, &PostRender_Console_Parms, NULL);
};

// Function Engine.Console.StartTyping
// [0x00020002]
// Parameters infos:

void UConsole::StartTyping() {
    static UFunction* pFnStartTyping = NULL;

    if (!pFnStartTyping)
        pFnStartTyping = (UFunction*)UObject::GObjObjects()->Data[16838];

    UConsole_execStartTyping_Parms StartTyping_Parms;

    this->ProcessEvent(pFnStartTyping, &StartTyping_Parms, NULL);
};

// Function Engine.Console.OutputText
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UConsole::eventOutputText() {
    static UFunction* pFnOutputText = NULL;

    if (!pFnOutputText)
        pFnOutputText = (UFunction*)UObject::GObjObjects()->Data[16833];

    UConsole_eventOutputText_Parms OutputText_Parms;

    this->ProcessEvent(pFnOutputText, &OutputText_Parms, NULL);
};

// Function Engine.Console.OutputTextLine
// [0x00020002]
// Parameters infos:

void UConsole::OutputTextLine() {
    static UFunction* pFnOutputTextLine = NULL;

    if (!pFnOutputTextLine)
        pFnOutputTextLine = (UFunction*)UObject::GObjObjects()->Data[16831];

    UConsole_execOutputTextLine_Parms OutputTextLine_Parms;

    this->ProcessEvent(pFnOutputTextLine, &OutputTextLine_Parms, NULL);
};

// Function Engine.Console.ClearOutput
// [0x00020002]
// Parameters infos:

void UConsole::ClearOutput() {
    static UFunction* pFnClearOutput = NULL;

    if (!pFnClearOutput)
        pFnClearOutput = (UFunction*)UObject::GObjObjects()->Data[16830];

    UConsole_execClearOutput_Parms ClearOutput_Parms;

    this->ProcessEvent(pFnClearOutput, &ClearOutput_Parms, NULL);
};

// Function Engine.Console.ConsoleCommand
// [0x00020002]
// Parameters infos:

void UConsole::ConsoleCommand() {
    static UFunction* pFnConsoleCommand = NULL;

    if (!pFnConsoleCommand)
        pFnConsoleCommand = (UFunction*)UObject::GObjObjects()->Data[16828];

    UConsole_execConsoleCommand_Parms ConsoleCommand_Parms;

    this->ProcessEvent(pFnConsoleCommand, &ConsoleCommand_Parms, NULL);
};

// Function Engine.Console.PurgeCommandFromHistory
// [0x00020002]
// Parameters infos:

void UConsole::PurgeCommandFromHistory() {
    static UFunction* pFnPurgeCommandFromHistory = NULL;

    if (!pFnPurgeCommandFromHistory)
        pFnPurgeCommandFromHistory =
            (UFunction*)UObject::GObjObjects()->Data[16823];

    UConsole_execPurgeCommandFromHistory_Parms PurgeCommandFromHistory_Parms;

    this->ProcessEvent(pFnPurgeCommandFromHistory,
                       &PurgeCommandFromHistory_Parms, NULL);
};

// Function Engine.Console.SetCursorPos
// [0x00020002]
// Parameters infos:

void UConsole::SetCursorPos() {
    static UFunction* pFnSetCursorPos = NULL;

    if (!pFnSetCursorPos)
        pFnSetCursorPos = (UFunction*)UObject::GObjObjects()->Data[16821];

    UConsole_execSetCursorPos_Parms SetCursorPos_Parms;

    this->ProcessEvent(pFnSetCursorPos, &SetCursorPos_Parms, NULL);
};

// Function Engine.Console.SetInputText
// [0x00020002]
// Parameters infos:

void UConsole::SetInputText() {
    static UFunction* pFnSetInputText = NULL;

    if (!pFnSetInputText)
        pFnSetInputText = (UFunction*)UObject::GObjObjects()->Data[16819];

    UConsole_execSetInputText_Parms SetInputText_Parms;

    this->ProcessEvent(pFnSetInputText, &SetInputText_Parms, NULL);
};

// Function Engine.Console.Initialized
// [0x00020002]
// Parameters infos:

void UConsole::Initialized() {
    static UFunction* pFnInitialized = NULL;

    if (!pFnInitialized)
        pFnInitialized = (UFunction*)UObject::GObjObjects()->Data[16818];

    UConsole_execInitialized_Parms Initialized_Parms;

    this->ProcessEvent(pFnInitialized, &Initialized_Parms, NULL);
};

// Function Engine.Input.SetBind
// [0x00C20202] ( FUNC_Exec )
// Parameters infos:

void UInput::SetBind() {
    static UFunction* pFnSetBind = NULL;

    if (!pFnSetBind)
        pFnSetBind = (UFunction*)UObject::GObjObjects()->Data[23380];

    UInput_execSetBind_Parms SetBind_Parms;

    this->ProcessEvent(pFnSetBind, &SetBind_Parms, NULL);
};

// Function Engine.Input.GetBind
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UInput::GetBind() {
    static UFunction* pFnGetBind = NULL;

    if (!pFnGetBind)
        pFnGetBind = (UFunction*)UObject::GObjObjects()->Data[23377];

    UInput_execGetBind_Parms GetBind_Parms;

    pFnGetBind->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBind, &GetBind_Parms, NULL);

    pFnGetBind->FunctionFlags |= 0x400;
};

// Function Engine.Input.ResetInput
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UInput::ResetInput() {
    static UFunction* pFnResetInput = NULL;

    if (!pFnResetInput)
        pFnResetInput = (UFunction*)UObject::GObjObjects()->Data[23376];

    UInput_execResetInput_Parms ResetInput_Parms;

    pFnResetInput->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetInput, &ResetInput_Parms, NULL);

    pFnResetInput->FunctionFlags |= 0x400;
};

// Function Engine.PlayerInput.PreClientTravel
// [0x00020000]
// Parameters infos:

void UPlayerInput::PreClientTravel() {
    static UFunction* pFnPreClientTravel = NULL;

    if (!pFnPreClientTravel)
        pFnPreClientTravel = (UFunction*)UObject::GObjObjects()->Data[31485];

    UPlayerInput_execPreClientTravel_Parms PreClientTravel_Parms;

    this->ProcessEvent(pFnPreClientTravel, &PreClientTravel_Parms, NULL);
};

// Function Engine.PlayerInput.ClientInitInputSystem
// [0x00020000]
// Parameters infos:

void UPlayerInput::ClientInitInputSystem() {
    static UFunction* pFnClientInitInputSystem = NULL;

    if (!pFnClientInitInputSystem)
        pFnClientInitInputSystem =
            (UFunction*)UObject::GObjObjects()->Data[31484];

    UPlayerInput_execClientInitInputSystem_Parms ClientInitInputSystem_Parms;

    this->ProcessEvent(pFnClientInitInputSystem, &ClientInitInputSystem_Parms,
                       NULL);
};

// Function Engine.PlayerInput.InitInputSystem
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayerInput::InitInputSystem() {
    static UFunction* pFnInitInputSystem = NULL;

    if (!pFnInitInputSystem)
        pFnInitInputSystem = (UFunction*)UObject::GObjObjects()->Data[31483];

    UPlayerInput_execInitInputSystem_Parms InitInputSystem_Parms;

    pFnInitInputSystem->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitInputSystem, &InitInputSystem_Parms, NULL);

    pFnInitInputSystem->FunctionFlags |= 0x400;
};

// Function Engine.PlayerInput.SmoothMouse
// [0x00420002]
// Parameters infos:

void UPlayerInput::SmoothMouse() {
    static UFunction* pFnSmoothMouse = NULL;

    if (!pFnSmoothMouse)
        pFnSmoothMouse = (UFunction*)UObject::GObjObjects()->Data[31476];

    UPlayerInput_execSmoothMouse_Parms SmoothMouse_Parms;

    this->ProcessEvent(pFnSmoothMouse, &SmoothMouse_Parms, NULL);
};

// Function Engine.PlayerInput.ClearSmoothing
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPlayerInput::ClearSmoothing() {
    static UFunction* pFnClearSmoothing = NULL;

    if (!pFnClearSmoothing)
        pFnClearSmoothing = (UFunction*)UObject::GObjObjects()->Data[31474];

    UPlayerInput_execClearSmoothing_Parms ClearSmoothing_Parms;

    this->ProcessEvent(pFnClearSmoothing, &ClearSmoothing_Parms, NULL);
};

// Function Engine.PlayerInput.SmartJump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPlayerInput::SmartJump() {
    static UFunction* pFnSmartJump = NULL;

    if (!pFnSmartJump)
        pFnSmartJump = (UFunction*)UObject::GObjObjects()->Data[31473];

    UPlayerInput_execSmartJump_Parms SmartJump_Parms;

    this->ProcessEvent(pFnSmartJump, &SmartJump_Parms, NULL);
};

// Function Engine.PlayerInput.Jump
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPlayerInput::Jump() {
    static UFunction* pFnJump = NULL;

    if (!pFnJump) pFnJump = (UFunction*)UObject::GObjObjects()->Data[31472];

    UPlayerInput_execJump_Parms Jump_Parms;

    this->ProcessEvent(pFnJump, &Jump_Parms, NULL);
};

// Function Engine.PlayerInput.ProcessInputMatching
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UPlayerInput::ProcessInputMatching() {
    static UFunction* pFnProcessInputMatching = NULL;

    if (!pFnProcessInputMatching)
        pFnProcessInputMatching =
            (UFunction*)UObject::GObjObjects()->Data[31466];

    UPlayerInput_execProcessInputMatching_Parms ProcessInputMatching_Parms;

    this->ProcessEvent(pFnProcessInputMatching, &ProcessInputMatching_Parms,
                       NULL);
};

// Function Engine.PlayerInput.CheckForDoubleClickMove
// [0x00020002]
// Parameters infos:

void UPlayerInput::CheckForDoubleClickMove() {
    static UFunction* pFnCheckForDoubleClickMove = NULL;

    if (!pFnCheckForDoubleClickMove)
        pFnCheckForDoubleClickMove =
            (UFunction*)UObject::GObjObjects()->Data[12440];

    UPlayerInput_execCheckForDoubleClickMove_Parms
        CheckForDoubleClickMove_Parms;

    this->ProcessEvent(pFnCheckForDoubleClickMove,
                       &CheckForDoubleClickMove_Parms, NULL);
};

// Function Engine.PlayerInput.CatchDoubleClickInput
// [0x00020002]
// Parameters infos:

void UPlayerInput::CatchDoubleClickInput() {
    static UFunction* pFnCatchDoubleClickInput = NULL;

    if (!pFnCatchDoubleClickInput)
        pFnCatchDoubleClickInput =
            (UFunction*)UObject::GObjObjects()->Data[31462];

    UPlayerInput_execCatchDoubleClickInput_Parms CatchDoubleClickInput_Parms;

    this->ProcessEvent(pFnCatchDoubleClickInput, &CatchDoubleClickInput_Parms,
                       NULL);
};

// Function Engine.PlayerInput.PlayerInput
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UPlayerInput::eventPlayerInput() {
    static UFunction* pFnPlayerInput = NULL;

    if (!pFnPlayerInput)
        pFnPlayerInput = (UFunction*)UObject::GObjObjects()->Data[31458];

    UPlayerInput_eventPlayerInput_Parms PlayerInput_Parms;

    this->ProcessEvent(pFnPlayerInput, &PlayerInput_Parms, NULL);
};

// Function Engine.PlayerInput.AdjustMouseSensitivity
// [0x00020002]
// Parameters infos:

void UPlayerInput::AdjustMouseSensitivity() {
    static UFunction* pFnAdjustMouseSensitivity = NULL;

    if (!pFnAdjustMouseSensitivity)
        pFnAdjustMouseSensitivity =
            (UFunction*)UObject::GObjObjects()->Data[31456];

    UPlayerInput_execAdjustMouseSensitivity_Parms AdjustMouseSensitivity_Parms;

    this->ProcessEvent(pFnAdjustMouseSensitivity, &AdjustMouseSensitivity_Parms,
                       NULL);
};

// Function Engine.PlayerInput.PostProcessInput
// [0x00020000]
// Parameters infos:

void UPlayerInput::PostProcessInput() {
    static UFunction* pFnPostProcessInput = NULL;

    if (!pFnPostProcessInput)
        pFnPostProcessInput = (UFunction*)UObject::GObjObjects()->Data[31454];

    UPlayerInput_execPostProcessInput_Parms PostProcessInput_Parms;

    this->ProcessEvent(pFnPostProcessInput, &PostProcessInput_Parms, NULL);
};

// Function Engine.PlayerInput.PreProcessInput
// [0x00020000]
// Parameters infos:

void UPlayerInput::PreProcessInput() {
    static UFunction* pFnPreProcessInput = NULL;

    if (!pFnPreProcessInput)
        pFnPreProcessInput = (UFunction*)UObject::GObjObjects()->Data[31452];

    UPlayerInput_execPreProcessInput_Parms PreProcessInput_Parms;

    this->ProcessEvent(pFnPreProcessInput, &PreProcessInput_Parms, NULL);
};

// Function Engine.PlayerInput.DrawHUD
// [0x00020000]
// Parameters infos:

void UPlayerInput::DrawHUD() {
    static UFunction* pFnDrawHUD = NULL;

    if (!pFnDrawHUD)
        pFnDrawHUD = (UFunction*)UObject::GObjObjects()->Data[31450];

    UPlayerInput_execDrawHUD_Parms DrawHUD_Parms;

    this->ProcessEvent(pFnDrawHUD, &DrawHUD_Parms, NULL);
};

// Function Engine.PlayerInput.SetSensitivity
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPlayerInput::SetSensitivity() {
    static UFunction* pFnSetSensitivity = NULL;

    if (!pFnSetSensitivity)
        pFnSetSensitivity = (UFunction*)UObject::GObjObjects()->Data[31448];

    UPlayerInput_execSetSensitivity_Parms SetSensitivity_Parms;

    this->ProcessEvent(pFnSetSensitivity, &SetSensitivity_Parms, NULL);
};

// Function Engine.PlayerInput.InvertTurn
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPlayerInput::InvertTurn() {
    static UFunction* pFnInvertTurn = NULL;

    if (!pFnInvertTurn)
        pFnInvertTurn = (UFunction*)UObject::GObjObjects()->Data[31446];

    UPlayerInput_execInvertTurn_Parms InvertTurn_Parms;

    this->ProcessEvent(pFnInvertTurn, &InvertTurn_Parms, NULL);
};

// Function Engine.PlayerInput.InvertMouse
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void UPlayerInput::InvertMouse() {
    static UFunction* pFnInvertMouse = NULL;

    if (!pFnInvertMouse)
        pFnInvertMouse = (UFunction*)UObject::GObjObjects()->Data[31444];

    UPlayerInput_execInvertMouse_Parms InvertMouse_Parms;

    this->ProcessEvent(pFnInvertMouse, &InvertMouse_Parms, NULL);
};

// Function Engine.PlayerInput.CancelMobileInput
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlayerInput::CancelMobileInput() {
    static UFunction* pFnCancelMobileInput = NULL;

    if (!pFnCancelMobileInput)
        pFnCancelMobileInput = (UFunction*)UObject::GObjObjects()->Data[31443];

    UPlayerInput_execCancelMobileInput_Parms CancelMobileInput_Parms;

    pFnCancelMobileInput->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCancelMobileInput, &CancelMobileInput_Parms, NULL);

    pFnCancelMobileInput->FunctionFlags |= 0x400;
};

// Function Engine.UISceneClient.InitializeSceneClient
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UUISceneClient::eventInitializeSceneClient() {
    static UFunction* pFnInitializeSceneClient = NULL;

    if (!pFnInitializeSceneClient)
        pFnInitializeSceneClient =
            (UFunction*)UObject::GObjObjects()->Data[22551];

    UUISceneClient_eventInitializeSceneClient_Parms InitializeSceneClient_Parms;

    this->ProcessEvent(pFnInitializeSceneClient, &InitializeSceneClient_Parms,
                       NULL);
};

// Function Engine.UISceneClient.GetInverseCanvasToScreen
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUISceneClient::GetInverseCanvasToScreen() {
    static UFunction* pFnGetInverseCanvasToScreen = NULL;

    if (!pFnGetInverseCanvasToScreen)
        pFnGetInverseCanvasToScreen =
            (UFunction*)UObject::GObjObjects()->Data[22549];

    UUISceneClient_execGetInverseCanvasToScreen_Parms
        GetInverseCanvasToScreen_Parms;

    pFnGetInverseCanvasToScreen->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetInverseCanvasToScreen,
                       &GetInverseCanvasToScreen_Parms, NULL);

    pFnGetInverseCanvasToScreen->FunctionFlags |= 0x400;
};

// Function Engine.UISceneClient.GetCanvasToScreen
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUISceneClient::GetCanvasToScreen() {
    static UFunction* pFnGetCanvasToScreen = NULL;

    if (!pFnGetCanvasToScreen)
        pFnGetCanvasToScreen = (UFunction*)UObject::GObjObjects()->Data[22547];

    UUISceneClient_execGetCanvasToScreen_Parms GetCanvasToScreen_Parms;

    pFnGetCanvasToScreen->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCanvasToScreen, &GetCanvasToScreen_Parms, NULL);

    pFnGetCanvasToScreen->FunctionFlags |= 0x400;
};

// Function Engine.UISceneClient.IsUIActive
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUISceneClient::IsUIActive() {
    static UFunction* pFnIsUIActive = NULL;

    if (!pFnIsUIActive)
        pFnIsUIActive = (UFunction*)UObject::GObjObjects()->Data[22544];

    UUISceneClient_execIsUIActive_Parms IsUIActive_Parms;

    pFnIsUIActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsUIActive, &IsUIActive_Parms, NULL);

    pFnIsUIActive->FunctionFlags |= 0x400;
};

// Function Engine.UISoundTheme.ProcessSoundEvent
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUISoundTheme::eventProcessSoundEvent() {
    static UFunction* pFnProcessSoundEvent = NULL;

    if (!pFnProcessSoundEvent)
        pFnProcessSoundEvent = (UFunction*)UObject::GObjObjects()->Data[36564];

    UUISoundTheme_eventProcessSoundEvent_Parms ProcessSoundEvent_Parms;

    this->ProcessEvent(pFnProcessSoundEvent, &ProcessSoundEvent_Parms, NULL);
};

// Function Engine.UIDataStoreSubscriber.ClearBoundDataStores
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIDataStoreSubscriber::ClearBoundDataStores() {
    static UFunction* pFnClearBoundDataStores = NULL;

    if (!pFnClearBoundDataStores)
        pFnClearBoundDataStores =
            (UFunction*)UObject::GObjObjects()->Data[36418];

    UUIDataStoreSubscriber_execClearBoundDataStores_Parms
        ClearBoundDataStores_Parms;

    pFnClearBoundDataStores->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearBoundDataStores, &ClearBoundDataStores_Parms,
                       NULL);

    pFnClearBoundDataStores->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStoreSubscriber.GetBoundDataStores
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UUIDataStoreSubscriber::GetBoundDataStores() {
    static UFunction* pFnGetBoundDataStores = NULL;

    if (!pFnGetBoundDataStores)
        pFnGetBoundDataStores = (UFunction*)UObject::GObjObjects()->Data[36415];

    UUIDataStoreSubscriber_execGetBoundDataStores_Parms
        GetBoundDataStores_Parms;

    pFnGetBoundDataStores->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoundDataStores, &GetBoundDataStores_Parms, NULL);

    pFnGetBoundDataStores->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStoreSubscriber.NotifyDataStoreValueUpdated
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UUIDataStoreSubscriber::NotifyDataStoreValueUpdated() {
    static UFunction* pFnNotifyDataStoreValueUpdated = NULL;

    if (!pFnNotifyDataStoreValueUpdated)
        pFnNotifyDataStoreValueUpdated =
            (UFunction*)UObject::GObjObjects()->Data[36409];

    UUIDataStoreSubscriber_execNotifyDataStoreValueUpdated_Parms
        NotifyDataStoreValueUpdated_Parms;

    pFnNotifyDataStoreValueUpdated->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnNotifyDataStoreValueUpdated,
                       &NotifyDataStoreValueUpdated_Parms, NULL);

    pFnNotifyDataStoreValueUpdated->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStoreSubscriber.RefreshSubscriberValue
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UUIDataStoreSubscriber::RefreshSubscriberValue() {
    static UFunction* pFnRefreshSubscriberValue = NULL;

    if (!pFnRefreshSubscriberValue)
        pFnRefreshSubscriberValue =
            (UFunction*)UObject::GObjObjects()->Data[36406];

    UUIDataStoreSubscriber_execRefreshSubscriberValue_Parms
        RefreshSubscriberValue_Parms;

    pFnRefreshSubscriberValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRefreshSubscriberValue, &RefreshSubscriberValue_Parms,
                       NULL);

    pFnRefreshSubscriberValue->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStoreSubscriber.GetDataStoreBinding
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UUIDataStoreSubscriber::GetDataStoreBinding() {
    static UFunction* pFnGetDataStoreBinding = NULL;

    if (!pFnGetDataStoreBinding)
        pFnGetDataStoreBinding =
            (UFunction*)UObject::GObjObjects()->Data[36403];

    UUIDataStoreSubscriber_execGetDataStoreBinding_Parms
        GetDataStoreBinding_Parms;

    pFnGetDataStoreBinding->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDataStoreBinding, &GetDataStoreBinding_Parms,
                       NULL);

    pFnGetDataStoreBinding->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStoreSubscriber.SetDataStoreBinding
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void UUIDataStoreSubscriber::SetDataStoreBinding() {
    static UFunction* pFnSetDataStoreBinding = NULL;

    if (!pFnSetDataStoreBinding)
        pFnSetDataStoreBinding =
            (UFunction*)UObject::GObjObjects()->Data[36400];

    UUIDataStoreSubscriber_execSetDataStoreBinding_Parms
        SetDataStoreBinding_Parms;

    pFnSetDataStoreBinding->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDataStoreBinding, &SetDataStoreBinding_Parms,
                       NULL);

    pFnSetDataStoreBinding->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStorePublisher.SaveSubscriberValue
// [0x00424400] ( FUNC_Native )
// Parameters infos:

void UUIDataStorePublisher::SaveSubscriberValue() {
    static UFunction* pFnSaveSubscriberValue = NULL;

    if (!pFnSaveSubscriberValue)
        pFnSaveSubscriberValue =
            (UFunction*)UObject::GObjObjects()->Data[36419];

    UUIDataStorePublisher_execSaveSubscriberValue_Parms
        SaveSubscriberValue_Parms;

    pFnSaveSubscriberValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSaveSubscriberValue, &SaveSubscriberValue_Parms,
                       NULL);

    pFnSaveSubscriberValue->FunctionFlags |= 0x400;
};

// Function Engine.UIDataProvider_OnlinePlayerDataBase.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePlayerDataBase::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[35825];

    UUIDataProvider_OnlinePlayerDataBase_eventOnUnregister_Parms
        OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerDataBase.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePlayerDataBase::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[35823];

    UUIDataProvider_OnlinePlayerDataBase_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.OnGameInviteReceived
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::OnGameInviteReceived() {
    static UFunction* pFnOnGameInviteReceived = NULL;

    if (!pFnOnGameInviteReceived)
        pFnOnGameInviteReceived =
            (UFunction*)UObject::GObjObjects()->Data[35856];

    UUIDataProvider_OnlineFriendMessages_execOnGameInviteReceived_Parms
        OnGameInviteReceived_Parms;

    this->ProcessEvent(pFnOnGameInviteReceived, &OnGameInviteReceived_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.OnLoginChange
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[35854];

    UUIDataProvider_OnlineFriendMessages_execOnLoginChange_Parms
        OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendMessageReceived
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::OnFriendMessageReceived() {
    static UFunction* pFnOnFriendMessageReceived = NULL;

    if (!pFnOnFriendMessageReceived)
        pFnOnFriendMessageReceived =
            (UFunction*)UObject::GObjObjects()->Data[35849];

    UUIDataProvider_OnlineFriendMessages_execOnFriendMessageReceived_Parms
        OnFriendMessageReceived_Parms;

    this->ProcessEvent(pFnOnFriendMessageReceived,
                       &OnFriendMessageReceived_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.OnFriendInviteReceived
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::OnFriendInviteReceived() {
    static UFunction* pFnOnFriendInviteReceived = NULL;

    if (!pFnOnFriendInviteReceived)
        pFnOnFriendInviteReceived =
            (UFunction*)UObject::GObjObjects()->Data[35844];

    UUIDataProvider_OnlineFriendMessages_execOnFriendInviteReceived_Parms
        OnFriendInviteReceived_Parms;

    this->ProcessEvent(pFnOnFriendInviteReceived, &OnFriendInviteReceived_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.ReadMessages
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::ReadMessages() {
    static UFunction* pFnReadMessages = NULL;

    if (!pFnReadMessages)
        pFnReadMessages = (UFunction*)UObject::GObjObjects()->Data[35841];

    UUIDataProvider_OnlineFriendMessages_execReadMessages_Parms
        ReadMessages_Parms;

    this->ProcessEvent(pFnReadMessages, &ReadMessages_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[35838];

    UUIDataProvider_OnlineFriendMessages_eventOnUnregister_Parms
        OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriendMessages.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlineFriendMessages::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[35834];

    UUIDataProvider_OnlineFriendMessages_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriends.RefreshFriendsList
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlineFriends::eventRefreshFriendsList() {
    static UFunction* pFnRefreshFriendsList = NULL;

    if (!pFnRefreshFriendsList)
        pFnRefreshFriendsList = (UFunction*)UObject::GObjObjects()->Data[35890];

    UUIDataProvider_OnlineFriends_eventRefreshFriendsList_Parms
        RefreshFriendsList_Parms;

    this->ProcessEvent(pFnRefreshFriendsList, &RefreshFriendsList_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriends.OnLoginChange
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriends::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[35886];

    UUIDataProvider_OnlineFriends_execOnLoginChange_Parms OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriends.OnFriendsReadComplete
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineFriends::OnFriendsReadComplete() {
    static UFunction* pFnOnFriendsReadComplete = NULL;

    if (!pFnOnFriendsReadComplete)
        pFnOnFriendsReadComplete =
            (UFunction*)UObject::GObjObjects()->Data[35882];

    UUIDataProvider_OnlineFriends_execOnFriendsReadComplete_Parms
        OnFriendsReadComplete_Parms;

    this->ProcessEvent(pFnOnFriendsReadComplete, &OnFriendsReadComplete_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlineFriends.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlineFriends::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[35879];

    UUIDataProvider_OnlineFriends_eventOnUnregister_Parms OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineFriends.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlineFriends::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[35875];

    UUIDataProvider_OnlineFriends_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePartyChatList.RefreshMembersList
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePartyChatList::eventRefreshMembersList() {
    static UFunction* pFnRefreshMembersList = NULL;

    if (!pFnRefreshMembersList)
        pFnRefreshMembersList = (UFunction*)UObject::GObjObjects()->Data[35915];

    UUIDataProvider_OnlinePartyChatList_eventRefreshMembersList_Parms
        RefreshMembersList_Parms;

    this->ProcessEvent(pFnRefreshMembersList, &RefreshMembersList_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePartyChatList.OnLoginChange
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePartyChatList::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[35911];

    UUIDataProvider_OnlinePartyChatList_execOnLoginChange_Parms
        OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePartyChatList.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePartyChatList::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[35908];

    UUIDataProvider_OnlinePartyChatList_eventOnUnregister_Parms
        OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePartyChatList.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePartyChatList::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[35904];

    UUIDataProvider_OnlinePartyChatList_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnExternalUIChange
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::OnExternalUIChange() {
    static UFunction* pFnOnExternalUIChange = NULL;

    if (!pFnOnExternalUIChange)
        pFnOnExternalUIChange = (UFunction*)UObject::GObjObjects()->Data[35981];

    UUIDataProvider_OnlinePlayerStorage_execOnExternalUIChange_Parms
        OnExternalUIChange_Parms;

    this->ProcessEvent(pFnOnExternalUIChange, &OnExternalUIChange_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnStorageDeviceChange
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::OnStorageDeviceChange() {
    static UFunction* pFnOnStorageDeviceChange = NULL;

    if (!pFnOnStorageDeviceChange)
        pFnOnStorageDeviceChange =
            (UFunction*)UObject::GObjObjects()->Data[35979];

    UUIDataProvider_OnlinePlayerStorage_execOnStorageDeviceChange_Parms
        OnStorageDeviceChange_Parms;

    this->ProcessEvent(pFnOnStorageDeviceChange, &OnStorageDeviceChange_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnDeviceSelectionComplete
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::OnDeviceSelectionComplete() {
    static UFunction* pFnOnDeviceSelectionComplete = NULL;

    if (!pFnOnDeviceSelectionComplete)
        pFnOnDeviceSelectionComplete =
            (UFunction*)UObject::GObjObjects()->Data[35975];

    UUIDataProvider_OnlinePlayerStorage_execOnDeviceSelectionComplete_Parms
        OnDeviceSelectionComplete_Parms;

    this->ProcessEvent(pFnOnDeviceSelectionComplete,
                       &OnDeviceSelectionComplete_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.ShowDeviceSelection
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::ShowDeviceSelection() {
    static UFunction* pFnShowDeviceSelection = NULL;

    if (!pFnShowDeviceSelection)
        pFnShowDeviceSelection =
            (UFunction*)UObject::GObjObjects()->Data[35973];

    UUIDataProvider_OnlinePlayerStorage_execShowDeviceSelection_Parms
        ShowDeviceSelection_Parms;

    this->ProcessEvent(pFnShowDeviceSelection, &ShowDeviceSelection_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.RefreshStorageData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::RefreshStorageData() {
    static UFunction* pFnRefreshStorageData = NULL;

    if (!pFnRefreshStorageData)
        pFnRefreshStorageData = (UFunction*)UObject::GObjObjects()->Data[35970];

    UUIDataProvider_OnlinePlayerStorage_execRefreshStorageData_Parms
        RefreshStorageData_Parms;

    this->ProcessEvent(pFnRefreshStorageData, &RefreshStorageData_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnLoginChange
// [0x00820002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[35964];

    UUIDataProvider_OnlinePlayerStorage_execOnLoginChange_Parms
        OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnReadStorageComplete
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::OnReadStorageComplete() {
    static UFunction* pFnOnReadStorageComplete = NULL;

    if (!pFnOnReadStorageComplete)
        pFnOnReadStorageComplete =
            (UFunction*)UObject::GObjObjects()->Data[35959];

    UUIDataProvider_OnlinePlayerStorage_execOnReadStorageComplete_Parms
        OnReadStorageComplete_Parms;

    this->ProcessEvent(pFnOnReadStorageComplete, &OnReadStorageComplete_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[35956];

    UUIDataProvider_OnlinePlayerStorage_eventOnUnregister_Parms
        OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[35952];

    UUIDataProvider_OnlinePlayerStorage_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.ClearReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::ClearReadCompleteDelegate() {
    static UFunction* pFnClearReadCompleteDelegate = NULL;

    if (!pFnClearReadCompleteDelegate)
        pFnClearReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[35949];

    UUIDataProvider_OnlinePlayerStorage_execClearReadCompleteDelegate_Parms
        ClearReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadCompleteDelegate,
                       &ClearReadCompleteDelegate_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.AddReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::AddReadCompleteDelegate() {
    static UFunction* pFnAddReadCompleteDelegate = NULL;

    if (!pFnAddReadCompleteDelegate)
        pFnAddReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[35946];

    UUIDataProvider_OnlinePlayerStorage_execAddReadCompleteDelegate_Parms
        AddReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadCompleteDelegate,
                       &AddReadCompleteDelegate_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.GetData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::GetData() {
    static UFunction* pFnGetData = NULL;

    if (!pFnGetData)
        pFnGetData = (UFunction*)UObject::GObjObjects()->Data[35941];

    UUIDataProvider_OnlinePlayerStorage_execGetData_Parms GetData_Parms;

    this->ProcessEvent(pFnGetData, &GetData_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.WriteData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::WriteData() {
    static UFunction* pFnWriteData = NULL;

    if (!pFnWriteData)
        pFnWriteData = (UFunction*)UObject::GObjObjects()->Data[35935];

    UUIDataProvider_OnlinePlayerStorage_execWriteData_Parms WriteData_Parms;

    this->ProcessEvent(pFnWriteData, &WriteData_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlinePlayerStorage.ReadData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlinePlayerStorage::ReadData() {
    static UFunction* pFnReadData = NULL;

    if (!pFnReadData)
        pFnReadData = (UFunction*)UObject::GObjObjects()->Data[35929];

    UUIDataProvider_OnlinePlayerStorage_execReadData_Parms ReadData_Parms;

    this->ProcessEvent(pFnReadData, &ReadData_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineProfileSettings.OnStorageDeviceChange
// [0x00020000]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::OnStorageDeviceChange() {
    static UFunction* pFnOnStorageDeviceChange = NULL;

    if (!pFnOnStorageDeviceChange)
        pFnOnStorageDeviceChange =
            (UFunction*)UObject::GObjObjects()->Data[36014];

    UUIDataProvider_OnlineProfileSettings_execOnStorageDeviceChange_Parms
        OnStorageDeviceChange_Parms;

    this->ProcessEvent(pFnOnStorageDeviceChange, &OnStorageDeviceChange_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_OnlineProfileSettings.RefreshStorageData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::RefreshStorageData() {
    static UFunction* pFnRefreshStorageData = NULL;

    if (!pFnRefreshStorageData)
        pFnRefreshStorageData = (UFunction*)UObject::GObjObjects()->Data[36011];

    UUIDataProvider_OnlineProfileSettings_execRefreshStorageData_Parms
        RefreshStorageData_Parms;

    this->ProcessEvent(pFnRefreshStorageData, &RefreshStorageData_Parms, NULL);
};

// Function
// Engine.UIDataProvider_OnlineProfileSettings.ClearReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::ClearReadCompleteDelegate() {
    static UFunction* pFnClearReadCompleteDelegate = NULL;

    if (!pFnClearReadCompleteDelegate)
        pFnClearReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36008];

    UUIDataProvider_OnlineProfileSettings_execClearReadCompleteDelegate_Parms
        ClearReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadCompleteDelegate,
                       &ClearReadCompleteDelegate_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineProfileSettings.AddReadCompleteDelegate
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::AddReadCompleteDelegate() {
    static UFunction* pFnAddReadCompleteDelegate = NULL;

    if (!pFnAddReadCompleteDelegate)
        pFnAddReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36005];

    UUIDataProvider_OnlineProfileSettings_execAddReadCompleteDelegate_Parms
        AddReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadCompleteDelegate,
                       &AddReadCompleteDelegate_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineProfileSettings.GetData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::GetData() {
    static UFunction* pFnGetData = NULL;

    if (!pFnGetData)
        pFnGetData = (UFunction*)UObject::GObjObjects()->Data[36000];

    UUIDataProvider_OnlineProfileSettings_execGetData_Parms GetData_Parms;

    this->ProcessEvent(pFnGetData, &GetData_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineProfileSettings.WriteData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::WriteData() {
    static UFunction* pFnWriteData = NULL;

    if (!pFnWriteData)
        pFnWriteData = (UFunction*)UObject::GObjObjects()->Data[35994];

    UUIDataProvider_OnlineProfileSettings_execWriteData_Parms WriteData_Parms;

    this->ProcessEvent(pFnWriteData, &WriteData_Parms, NULL);
};

// Function Engine.UIDataProvider_OnlineProfileSettings.ReadData
// [0x00020002]
// Parameters infos:

void UUIDataProvider_OnlineProfileSettings::ReadData() {
    static UFunction* pFnReadData = NULL;

    if (!pFnReadData)
        pFnReadData = (UFunction*)UObject::GObjObjects()->Data[35988];

    UUIDataProvider_OnlineProfileSettings_execReadData_Parms ReadData_Parms;

    this->ProcessEvent(pFnReadData, &ReadData_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.UpdateAchievements
// [0x00020002]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::UpdateAchievements() {
    static UFunction* pFnUpdateAchievements = NULL;

    if (!pFnUpdateAchievements)
        pFnUpdateAchievements = (UFunction*)UObject::GObjObjects()->Data[36043];

    UUIDataProvider_PlayerAchievements_execUpdateAchievements_Parms
        UpdateAchievements_Parms;

    this->ProcessEvent(pFnUpdateAchievements, &UpdateAchievements_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.OnLoginChange
// [0x00020002]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[36041];

    UUIDataProvider_PlayerAchievements_execOnLoginChange_Parms
        OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_PlayerAchievements::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[36039];

    UUIDataProvider_PlayerAchievements_eventOnUnregister_Parms
        OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataProvider_PlayerAchievements::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[36036];

    UUIDataProvider_PlayerAchievements_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.OnPlayerAchievementUnlocked
// [0x00020002]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::OnPlayerAchievementUnlocked() {
    static UFunction* pFnOnPlayerAchievementUnlocked = NULL;

    if (!pFnOnPlayerAchievementUnlocked)
        pFnOnPlayerAchievementUnlocked =
            (UFunction*)UObject::GObjObjects()->Data[36034];

    UUIDataProvider_PlayerAchievements_execOnPlayerAchievementUnlocked_Parms
        OnPlayerAchievementUnlocked_Parms;

    this->ProcessEvent(pFnOnPlayerAchievementUnlocked,
                       &OnPlayerAchievementUnlocked_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.OnPlayerAchievementsChanged
// [0x00020002]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::OnPlayerAchievementsChanged() {
    static UFunction* pFnOnPlayerAchievementsChanged = NULL;

    if (!pFnOnPlayerAchievementsChanged)
        pFnOnPlayerAchievementsChanged =
            (UFunction*)UObject::GObjObjects()->Data[36030];

    UUIDataProvider_PlayerAchievements_execOnPlayerAchievementsChanged_Parms
        OnPlayerAchievementsChanged_Parms;

    this->ProcessEvent(pFnOnPlayerAchievementsChanged,
                       &OnPlayerAchievementsChanged_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.GetAchievementDetails
// [0x00420002]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::GetAchievementDetails() {
    static UFunction* pFnGetAchievementDetails = NULL;

    if (!pFnGetAchievementDetails)
        pFnGetAchievementDetails =
            (UFunction*)UObject::GObjObjects()->Data[36026];

    UUIDataProvider_PlayerAchievements_execGetAchievementDetails_Parms
        GetAchievementDetails_Parms;

    this->ProcessEvent(pFnGetAchievementDetails, &GetAchievementDetails_Parms,
                       NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.GetAchievementIconPathName
// [0x00024000]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::GetAchievementIconPathName() {
    static UFunction* pFnGetAchievementIconPathName = NULL;

    if (!pFnGetAchievementIconPathName)
        pFnGetAchievementIconPathName =
            (UFunction*)UObject::GObjObjects()->Data[36022];

    UUIDataProvider_PlayerAchievements_execGetAchievementIconPathName_Parms
        GetAchievementIconPathName_Parms;

    this->ProcessEvent(pFnGetAchievementIconPathName,
                       &GetAchievementIconPathName_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.PopulateAchievementIcons
// [0x00020000]
// Parameters infos:

void UUIDataProvider_PlayerAchievements::PopulateAchievementIcons() {
    static UFunction* pFnPopulateAchievementIcons = NULL;

    if (!pFnPopulateAchievementIcons)
        pFnPopulateAchievementIcons =
            (UFunction*)UObject::GObjObjects()->Data[36021];

    UUIDataProvider_PlayerAchievements_execPopulateAchievementIcons_Parms
        PopulateAchievementIcons_Parms;

    this->ProcessEvent(pFnPopulateAchievementIcons,
                       &PopulateAchievementIcons_Parms, NULL);
};

// Function Engine.UIDataProvider_PlayerAchievements.GetMaxTotalGamerScore
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataProvider_PlayerAchievements::GetMaxTotalGamerScore() {
    static UFunction* pFnGetMaxTotalGamerScore = NULL;

    if (!pFnGetMaxTotalGamerScore)
        pFnGetMaxTotalGamerScore =
            (UFunction*)UObject::GObjObjects()->Data[36019];

    UUIDataProvider_PlayerAchievements_execGetMaxTotalGamerScore_Parms
        GetMaxTotalGamerScore_Parms;

    pFnGetMaxTotalGamerScore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaxTotalGamerScore, &GetMaxTotalGamerScore_Parms,
                       NULL);

    pFnGetMaxTotalGamerScore->FunctionFlags |= 0x400;
};

// Function Engine.UIDataProvider_PlayerAchievements.GetTotalGamerScore
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataProvider_PlayerAchievements::GetTotalGamerScore() {
    static UFunction* pFnGetTotalGamerScore = NULL;

    if (!pFnGetTotalGamerScore)
        pFnGetTotalGamerScore = (UFunction*)UObject::GObjObjects()->Data[36017];

    UUIDataProvider_PlayerAchievements_execGetTotalGamerScore_Parms
        GetTotalGamerScore_Parms;

    pFnGetTotalGamerScore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTotalGamerScore, &GetTotalGamerScore_Parms, NULL);

    pFnGetTotalGamerScore->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore.GetDataStoreClient
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UUIDataStore::GetDataStoreClient() {
    static UFunction* pFnGetDataStoreClient = NULL;

    if (!pFnGetDataStoreClient)
        pFnGetDataStoreClient = (UFunction*)UObject::GObjObjects()->Data[36081];

    UUIDataStore_execGetDataStoreClient_Parms GetDataStoreClient_Parms;

    this->ProcessEvent(pFnGetDataStoreClient, &GetDataStoreClient_Parms, NULL);
};

// Function Engine.UIDataStore.RefreshSubscribers
// [0x00024803] ( FUNC_Final | FUNC_Event )
// Parameters infos:

void UUIDataStore::eventRefreshSubscribers() {
    static UFunction* pFnRefreshSubscribers = NULL;

    if (!pFnRefreshSubscribers)
        pFnRefreshSubscribers = (UFunction*)UObject::GObjObjects()->Data[36072];

    UUIDataStore_eventRefreshSubscribers_Parms RefreshSubscribers_Parms;

    this->ProcessEvent(pFnRefreshSubscribers, &RefreshSubscribers_Parms, NULL);
};

// Function Engine.UIDataStore.NotifyGameSessionEnded
// [0x00020000]
// Parameters infos:

void UUIDataStore::NotifyGameSessionEnded() {
    static UFunction* pFnNotifyGameSessionEnded = NULL;

    if (!pFnNotifyGameSessionEnded)
        pFnNotifyGameSessionEnded =
            (UFunction*)UObject::GObjObjects()->Data[17567];

    UUIDataStore_execNotifyGameSessionEnded_Parms NotifyGameSessionEnded_Parms;

    this->ProcessEvent(pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms,
                       NULL);
};

// Function Engine.UIDataStore.SubscriberDetached
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore::eventSubscriberDetached() {
    static UFunction* pFnSubscriberDetached = NULL;

    if (!pFnSubscriberDetached)
        pFnSubscriberDetached = (UFunction*)UObject::GObjObjects()->Data[36069];

    UUIDataStore_eventSubscriberDetached_Parms SubscriberDetached_Parms;

    this->ProcessEvent(pFnSubscriberDetached, &SubscriberDetached_Parms, NULL);
};

// Function Engine.UIDataStore.SubscriberAttached
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore::eventSubscriberAttached() {
    static UFunction* pFnSubscriberAttached = NULL;

    if (!pFnSubscriberAttached)
        pFnSubscriberAttached = (UFunction*)UObject::GObjObjects()->Data[36066];

    UUIDataStore_eventSubscriberAttached_Parms SubscriberAttached_Parms;

    this->ProcessEvent(pFnSubscriberAttached, &SubscriberAttached_Parms, NULL);
};

// Function Engine.UIDataStore.Unregistered
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UUIDataStore::eventUnregistered() {
    static UFunction* pFnUnregistered = NULL;

    if (!pFnUnregistered)
        pFnUnregistered = (UFunction*)UObject::GObjObjects()->Data[36064];

    UUIDataStore_eventUnregistered_Parms Unregistered_Parms;

    this->ProcessEvent(pFnUnregistered, &Unregistered_Parms, NULL);
};

// Function Engine.UIDataStore.Registered
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UUIDataStore::eventRegistered() {
    static UFunction* pFnRegistered = NULL;

    if (!pFnRegistered)
        pFnRegistered = (UFunction*)UObject::GObjObjects()->Data[36062];

    UUIDataStore_eventRegistered_Parms Registered_Parms;

    this->ProcessEvent(pFnRegistered, &Registered_Parms, NULL);
};

// Function Engine.UIDataStore.OnDataStoreValueUpdated
// [0x00120000]
// Parameters infos:

void UUIDataStore::OnDataStoreValueUpdated() {
    static UFunction* pFnOnDataStoreValueUpdated = NULL;

    if (!pFnOnDataStoreValueUpdated)
        pFnOnDataStoreValueUpdated =
            (UFunction*)UObject::GObjObjects()->Data[36056];

    UUIDataStore_execOnDataStoreValueUpdated_Parms
        OnDataStoreValueUpdated_Parms;

    this->ProcessEvent(pFnOnDataStoreValueUpdated,
                       &OnDataStoreValueUpdated_Parms, NULL);
};

// Function Engine.UIDataStore_DynamicResource.Unregistered
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_DynamicResource::eventUnregistered() {
    static UFunction* pFnUnregistered = NULL;

    if (!pFnUnregistered)
        pFnUnregistered = (UFunction*)UObject::GObjObjects()->Data[36107];

    UUIDataStore_DynamicResource_eventUnregistered_Parms Unregistered_Parms;

    this->ProcessEvent(pFnUnregistered, &Unregistered_Parms, NULL);
};

// Function Engine.UIDataStore_DynamicResource.Registered
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_DynamicResource::eventRegistered() {
    static UFunction* pFnRegistered = NULL;

    if (!pFnRegistered)
        pFnRegistered = (UFunction*)UObject::GObjObjects()->Data[36102];

    UUIDataStore_DynamicResource_eventRegistered_Parms Registered_Parms;

    this->ProcessEvent(pFnRegistered, &Registered_Parms, NULL);
};

// Function Engine.UIDataStore_DynamicResource.OnLoginChange
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_DynamicResource::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[36100];

    UUIDataStore_DynamicResource_execOnLoginChange_Parms OnLoginChange_Parms;

    pFnOnLoginChange->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);

    pFnOnLoginChange->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_DynamicResource.GetResourceProviders
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_DynamicResource::GetResourceProviders() {
    static UFunction* pFnGetResourceProviders = NULL;

    if (!pFnGetResourceProviders)
        pFnGetResourceProviders =
            (UFunction*)UObject::GObjObjects()->Data[36095];

    UUIDataStore_DynamicResource_execGetResourceProviders_Parms
        GetResourceProviders_Parms;

    pFnGetResourceProviders->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetResourceProviders, &GetResourceProviders_Parms,
                       NULL);

    pFnGetResourceProviders->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_DynamicResource.FindProviderTypeIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_DynamicResource::FindProviderTypeIndex() {
    static UFunction* pFnFindProviderTypeIndex = NULL;

    if (!pFnFindProviderTypeIndex)
        pFnFindProviderTypeIndex =
            (UFunction*)UObject::GObjObjects()->Data[36092];

    UUIDataStore_DynamicResource_execFindProviderTypeIndex_Parms
        FindProviderTypeIndex_Parms;

    pFnFindProviderTypeIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindProviderTypeIndex, &FindProviderTypeIndex_Parms,
                       NULL);

    pFnFindProviderTypeIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_GameResource.GetResourceProviders
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_GameResource::GetResourceProviders() {
    static UFunction* pFnGetResourceProviders = NULL;

    if (!pFnGetResourceProviders)
        pFnGetResourceProviders =
            (UFunction*)UObject::GObjObjects()->Data[36126];

    UUIDataStore_GameResource_execGetResourceProviders_Parms
        GetResourceProviders_Parms;

    pFnGetResourceProviders->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetResourceProviders, &GetResourceProviders_Parms,
                       NULL);

    pFnGetResourceProviders->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_GameResource.FindProviderTypeIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_GameResource::FindProviderTypeIndex() {
    static UFunction* pFnFindProviderTypeIndex = NULL;

    if (!pFnFindProviderTypeIndex)
        pFnFindProviderTypeIndex =
            (UFunction*)UObject::GObjObjects()->Data[36123];

    UUIDataStore_GameResource_execFindProviderTypeIndex_Parms
        FindProviderTypeIndex_Parms;

    pFnFindProviderTypeIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindProviderTypeIndex, &FindProviderTypeIndex_Parms,
                       NULL);

    pFnFindProviderTypeIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_MenuItems.Unregistered
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_MenuItems::eventUnregistered() {
    static UFunction* pFnUnregistered = NULL;

    if (!pFnUnregistered)
        pFnUnregistered = (UFunction*)UObject::GObjObjects()->Data[36187];

    UUIDataStore_MenuItems_eventUnregistered_Parms Unregistered_Parms;

    this->ProcessEvent(pFnUnregistered, &Unregistered_Parms, NULL);
};

// Function Engine.UIDataStore_MenuItems.Registered
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_MenuItems::eventRegistered() {
    static UFunction* pFnRegistered = NULL;

    if (!pFnRegistered)
        pFnRegistered = (UFunction*)UObject::GObjObjects()->Data[36185];

    UUIDataStore_MenuItems_eventRegistered_Parms Registered_Parms;

    this->ProcessEvent(pFnRegistered, &Registered_Parms, NULL);
};

// Function Engine.UIDataStore_MenuItems.OnGameSettingsChanged
// [0x00024002]
// Parameters infos:

void UUIDataStore_MenuItems::OnGameSettingsChanged() {
    static UFunction* pFnOnGameSettingsChanged = NULL;

    if (!pFnOnGameSettingsChanged)
        pFnOnGameSettingsChanged =
            (UFunction*)UObject::GObjObjects()->Data[36181];

    UUIDataStore_MenuItems_execOnGameSettingsChanged_Parms
        OnGameSettingsChanged_Parms;

    this->ProcessEvent(pFnOnGameSettingsChanged, &OnGameSettingsChanged_Parms,
                       NULL);
};

// Function Engine.UIDataStore_GameState.NotifyGameSessionEnded
// [0x00020002]
// Parameters infos:

void UUIDataStore_GameState::NotifyGameSessionEnded() {
    static UFunction* pFnNotifyGameSessionEnded = NULL;

    if (!pFnNotifyGameSessionEnded)
        pFnNotifyGameSessionEnded =
            (UFunction*)UObject::GObjObjects()->Data[36133];

    UUIDataStore_GameState_execNotifyGameSessionEnded_Parms
        NotifyGameSessionEnded_Parms;

    this->ProcessEvent(pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms,
                       NULL);
};

// Function Engine.UIDataStore_GameState.OnRefreshDataFieldValue
// [0x00120000]
// Parameters infos:

void UUIDataStore_GameState::OnRefreshDataFieldValue() {
    static UFunction* pFnOnRefreshDataFieldValue = NULL;

    if (!pFnOnRefreshDataFieldValue)
        pFnOnRefreshDataFieldValue =
            (UFunction*)UObject::GObjObjects()->Data[36131];

    UUIDataStore_GameState_execOnRefreshDataFieldValue_Parms
        OnRefreshDataFieldValue_Parms;

    this->ProcessEvent(pFnOnRefreshDataFieldValue,
                       &OnRefreshDataFieldValue_Parms, NULL);
};

// Function Engine.UIDataStore_Registry.SetData
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_Registry::eventSetData() {
    static UFunction* pFnSetData = NULL;

    if (!pFnSetData)
        pFnSetData = (UFunction*)UObject::GObjObjects()->Data[36377];

    UUIDataStore_Registry_eventSetData_Parms SetData_Parms;

    this->ProcessEvent(pFnSetData, &SetData_Parms, NULL);
};

// Function Engine.UIDataStore_Registry.GetData
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_Registry::eventGetData() {
    static UFunction* pFnGetData = NULL;

    if (!pFnGetData)
        pFnGetData = (UFunction*)UObject::GObjObjects()->Data[36372];

    UUIDataStore_Registry_eventGetData_Parms GetData_Parms;

    this->ProcessEvent(pFnGetData, &GetData_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.ClearAllSearchResults
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlineGameSearch::ClearAllSearchResults() {
    static UFunction* pFnClearAllSearchResults = NULL;

    if (!pFnClearAllSearchResults)
        pFnClearAllSearchResults =
            (UFunction*)UObject::GObjObjects()->Data[36247];

    UUIDataStore_OnlineGameSearch_execClearAllSearchResults_Parms
        ClearAllSearchResults_Parms;

    this->ProcessEvent(pFnClearAllSearchResults, &ClearAllSearchResults_Parms,
                       NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.MoveToPrevious
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventMoveToPrevious() {
    static UFunction* pFnMoveToPrevious = NULL;

    if (!pFnMoveToPrevious)
        pFnMoveToPrevious = (UFunction*)UObject::GObjObjects()->Data[36245];

    UUIDataStore_OnlineGameSearch_eventMoveToPrevious_Parms
        MoveToPrevious_Parms;

    this->ProcessEvent(pFnMoveToPrevious, &MoveToPrevious_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.MoveToNext
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventMoveToNext() {
    static UFunction* pFnMoveToNext = NULL;

    if (!pFnMoveToNext)
        pFnMoveToNext = (UFunction*)UObject::GObjObjects()->Data[36243];

    UUIDataStore_OnlineGameSearch_eventMoveToNext_Parms MoveToNext_Parms;

    this->ProcessEvent(pFnMoveToNext, &MoveToNext_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByName
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventSetCurrentByName() {
    static UFunction* pFnSetCurrentByName = NULL;

    if (!pFnSetCurrentByName)
        pFnSetCurrentByName = (UFunction*)UObject::GObjObjects()->Data[36239];

    UUIDataStore_OnlineGameSearch_eventSetCurrentByName_Parms
        SetCurrentByName_Parms;

    this->ProcessEvent(pFnSetCurrentByName, &SetCurrentByName_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.SetCurrentByIndex
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventSetCurrentByIndex() {
    static UFunction* pFnSetCurrentByIndex = NULL;

    if (!pFnSetCurrentByIndex)
        pFnSetCurrentByIndex = (UFunction*)UObject::GObjObjects()->Data[36236];

    UUIDataStore_OnlineGameSearch_eventSetCurrentByIndex_Parms
        SetCurrentByIndex_Parms;

    this->ProcessEvent(pFnSetCurrentByIndex, &SetCurrentByIndex_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.FindSearchConfigurationIndex
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlineGameSearch::FindSearchConfigurationIndex() {
    static UFunction* pFnFindSearchConfigurationIndex = NULL;

    if (!pFnFindSearchConfigurationIndex)
        pFnFindSearchConfigurationIndex =
            (UFunction*)UObject::GObjObjects()->Data[36232];

    UUIDataStore_OnlineGameSearch_execFindSearchConfigurationIndex_Parms
        FindSearchConfigurationIndex_Parms;

    this->ProcessEvent(pFnFindSearchConfigurationIndex,
                       &FindSearchConfigurationIndex_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.GetActiveGameSearch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventGetActiveGameSearch() {
    static UFunction* pFnGetActiveGameSearch = NULL;

    if (!pFnGetActiveGameSearch)
        pFnGetActiveGameSearch =
            (UFunction*)UObject::GObjObjects()->Data[36230];

    UUIDataStore_OnlineGameSearch_eventGetActiveGameSearch_Parms
        GetActiveGameSearch_Parms;

    this->ProcessEvent(pFnGetActiveGameSearch, &GetActiveGameSearch_Parms,
                       NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.GetCurrentGameSearch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventGetCurrentGameSearch() {
    static UFunction* pFnGetCurrentGameSearch = NULL;

    if (!pFnGetCurrentGameSearch)
        pFnGetCurrentGameSearch =
            (UFunction*)UObject::GObjObjects()->Data[36228];

    UUIDataStore_OnlineGameSearch_eventGetCurrentGameSearch_Parms
        GetCurrentGameSearch_Parms;

    this->ProcessEvent(pFnGetCurrentGameSearch, &GetCurrentGameSearch_Parms,
                       NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.ShowHostGamercard
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventShowHostGamercard() {
    static UFunction* pFnShowHostGamercard = NULL;

    if (!pFnShowHostGamercard)
        pFnShowHostGamercard = (UFunction*)UObject::GObjObjects()->Data[36222];

    UUIDataStore_OnlineGameSearch_eventShowHostGamercard_Parms
        ShowHostGamercard_Parms;

    this->ProcessEvent(pFnShowHostGamercard, &ShowHostGamercard_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.GetSearchResultFromIndex
// [0x00420802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventGetSearchResultFromIndex() {
    static UFunction* pFnGetSearchResultFromIndex = NULL;

    if (!pFnGetSearchResultFromIndex)
        pFnGetSearchResultFromIndex =
            (UFunction*)UObject::GObjObjects()->Data[36218];

    UUIDataStore_OnlineGameSearch_eventGetSearchResultFromIndex_Parms
        GetSearchResultFromIndex_Parms;

    this->ProcessEvent(pFnGetSearchResultFromIndex,
                       &GetSearchResultFromIndex_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.OnSearchComplete
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlineGameSearch::OnSearchComplete() {
    static UFunction* pFnOnSearchComplete = NULL;

    if (!pFnOnSearchComplete)
        pFnOnSearchComplete = (UFunction*)UObject::GObjObjects()->Data[36216];

    UUIDataStore_OnlineGameSearch_execOnSearchComplete_Parms
        OnSearchComplete_Parms;

    this->ProcessEvent(pFnOnSearchComplete, &OnSearchComplete_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.OverrideQuerySubmission
// [0x00080002]
// Parameters infos:

void UUIDataStore_OnlineGameSearch::OverrideQuerySubmission() {
    static UFunction* pFnOverrideQuerySubmission = NULL;

    if (!pFnOverrideQuerySubmission)
        pFnOverrideQuerySubmission =
            (UFunction*)UObject::GObjObjects()->Data[36212];

    UUIDataStore_OnlineGameSearch_execOverrideQuerySubmission_Parms
        OverrideQuerySubmission_Parms;

    this->ProcessEvent(pFnOverrideQuerySubmission,
                       &OverrideQuerySubmission_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.SubmitGameSearch
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventSubmitGameSearch() {
    static UFunction* pFnSubmitGameSearch = NULL;

    if (!pFnSubmitGameSearch)
        pFnSubmitGameSearch = (UFunction*)UObject::GObjObjects()->Data[36208];

    UUIDataStore_OnlineGameSearch_eventSubmitGameSearch_Parms
        SubmitGameSearch_Parms;

    this->ProcessEvent(pFnSubmitGameSearch, &SubmitGameSearch_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.InvalidateCurrentSearchResults
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlineGameSearch::InvalidateCurrentSearchResults() {
    static UFunction* pFnInvalidateCurrentSearchResults = NULL;

    if (!pFnInvalidateCurrentSearchResults)
        pFnInvalidateCurrentSearchResults =
            (UFunction*)UObject::GObjObjects()->Data[36204];

    UUIDataStore_OnlineGameSearch_execInvalidateCurrentSearchResults_Parms
        InvalidateCurrentSearchResults_Parms;

    this->ProcessEvent(pFnInvalidateCurrentSearchResults,
                       &InvalidateCurrentSearchResults_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSearch.Init
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSearch::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[36203];

    UUIDataStore_OnlineGameSearch_eventInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.GetCachedPlayerStorage
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlinePlayerData::eventGetCachedPlayerStorage() {
    static UFunction* pFnGetCachedPlayerStorage = NULL;

    if (!pFnGetCachedPlayerStorage)
        pFnGetCachedPlayerStorage =
            (UFunction*)UObject::GObjObjects()->Data[36325];

    UUIDataStore_OnlinePlayerData_eventGetCachedPlayerStorage_Parms
        GetCachedPlayerStorage_Parms;

    this->ProcessEvent(pFnGetCachedPlayerStorage, &GetCachedPlayerStorage_Parms,
                       NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.GetCachedPlayerProfile
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlinePlayerData::eventGetCachedPlayerProfile() {
    static UFunction* pFnGetCachedPlayerProfile = NULL;

    if (!pFnGetCachedPlayerProfile)
        pFnGetCachedPlayerProfile =
            (UFunction*)UObject::GObjObjects()->Data[36319];

    UUIDataStore_OnlinePlayerData_eventGetCachedPlayerProfile_Parms
        GetCachedPlayerProfile_Parms;

    this->ProcessEvent(pFnGetCachedPlayerProfile, &GetCachedPlayerProfile_Parms,
                       NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.ClearDelegates
// [0x00020000]
// Parameters infos:

void UUIDataStore_OnlinePlayerData::ClearDelegates() {
    static UFunction* pFnClearDelegates = NULL;

    if (!pFnClearDelegates)
        pFnClearDelegates = (UFunction*)UObject::GObjObjects()->Data[36318];

    UUIDataStore_OnlinePlayerData_execClearDelegates_Parms ClearDelegates_Parms;

    this->ProcessEvent(pFnClearDelegates, &ClearDelegates_Parms, NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.RegisterDelegates
// [0x00020000]
// Parameters infos:

void UUIDataStore_OnlinePlayerData::RegisterDelegates() {
    static UFunction* pFnRegisterDelegates = NULL;

    if (!pFnRegisterDelegates)
        pFnRegisterDelegates = (UFunction*)UObject::GObjObjects()->Data[36317];

    UUIDataStore_OnlinePlayerData_execRegisterDelegates_Parms
        RegisterDelegates_Parms;

    this->ProcessEvent(pFnRegisterDelegates, &RegisterDelegates_Parms, NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.OnPlayerDataChange
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlinePlayerData::OnPlayerDataChange() {
    static UFunction* pFnOnPlayerDataChange = NULL;

    if (!pFnOnPlayerDataChange)
        pFnOnPlayerDataChange = (UFunction*)UObject::GObjObjects()->Data[36315];

    UUIDataStore_OnlinePlayerData_execOnPlayerDataChange_Parms
        OnPlayerDataChange_Parms;

    this->ProcessEvent(pFnOnPlayerDataChange, &OnPlayerDataChange_Parms, NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.OnLoginChange
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlinePlayerData::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[36311];

    UUIDataStore_OnlinePlayerData_execOnLoginChange_Parms OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.OnUnregister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlinePlayerData::eventOnUnregister() {
    static UFunction* pFnOnUnregister = NULL;

    if (!pFnOnUnregister)
        pFnOnUnregister = (UFunction*)UObject::GObjObjects()->Data[36308];

    UUIDataStore_OnlinePlayerData_eventOnUnregister_Parms OnUnregister_Parms;

    this->ProcessEvent(pFnOnUnregister, &OnUnregister_Parms, NULL);
};

// Function Engine.UIDataStore_OnlinePlayerData.OnRegister
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlinePlayerData::eventOnRegister() {
    static UFunction* pFnOnRegister = NULL;

    if (!pFnOnRegister)
        pFnOnRegister = (UFunction*)UObject::GObjObjects()->Data[36304];

    UUIDataStore_OnlinePlayerData_eventOnRegister_Parms OnRegister_Parms;

    this->ProcessEvent(pFnOnRegister, &OnRegister_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineStats.SortResultsByRank
// [0x00022400] ( FUNC_Native )
// Parameters infos:

void UUIDataStore_OnlineStats::SortResultsByRank() {
    static UFunction* pFnSortResultsByRank = NULL;

    if (!pFnSortResultsByRank)
        pFnSortResultsByRank = (UFunction*)UObject::GObjObjects()->Data[36365];

    UUIDataStore_OnlineStats_execSortResultsByRank_Parms
        SortResultsByRank_Parms;

    pFnSortResultsByRank->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSortResultsByRank, &SortResultsByRank_Parms, NULL);

    pFnSortResultsByRank->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_OnlineStats.OnReadComplete
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlineStats::OnReadComplete() {
    static UFunction* pFnOnReadComplete = NULL;

    if (!pFnOnReadComplete)
        pFnOnReadComplete = (UFunction*)UObject::GObjObjects()->Data[36363];

    UUIDataStore_OnlineStats_execOnReadComplete_Parms OnReadComplete_Parms;

    this->ProcessEvent(pFnOnReadComplete, &OnReadComplete_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineStats.ShowGamercard
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineStats::eventShowGamercard() {
    static UFunction* pFnShowGamercard = NULL;

    if (!pFnShowGamercard)
        pFnShowGamercard = (UFunction*)UObject::GObjObjects()->Data[36356];

    UUIDataStore_OnlineStats_eventShowGamercard_Parms ShowGamercard_Parms;

    this->ProcessEvent(pFnShowGamercard, &ShowGamercard_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineStats.RefreshStats
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineStats::eventRefreshStats() {
    static UFunction* pFnRefreshStats = NULL;

    if (!pFnRefreshStats)
        pFnRefreshStats = (UFunction*)UObject::GObjObjects()->Data[36353];

    UUIDataStore_OnlineStats_eventRefreshStats_Parms RefreshStats_Parms;

    this->ProcessEvent(pFnRefreshStats, &RefreshStats_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineStats.SetStatsReadInfo
// [0x00020002]
// Parameters infos:

void UUIDataStore_OnlineStats::SetStatsReadInfo() {
    static UFunction* pFnSetStatsReadInfo = NULL;

    if (!pFnSetStatsReadInfo)
        pFnSetStatsReadInfo = (UFunction*)UObject::GObjObjects()->Data[36352];

    UUIDataStore_OnlineStats_execSetStatsReadInfo_Parms SetStatsReadInfo_Parms;

    this->ProcessEvent(pFnSetStatsReadInfo, &SetStatsReadInfo_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineStats.Init
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineStats::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[36350];

    UUIDataStore_OnlineStats_eventInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.Unregistered
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventUnregistered() {
    static UFunction* pFnUnregistered = NULL;

    if (!pFnUnregistered)
        pFnUnregistered = (UFunction*)UObject::GObjObjects()->Data[36279];

    UUIDataStore_OnlineGameSettings_eventUnregistered_Parms Unregistered_Parms;

    this->ProcessEvent(pFnUnregistered, &Unregistered_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.Registered
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventRegistered() {
    static UFunction* pFnRegistered = NULL;

    if (!pFnRegistered)
        pFnRegistered = (UFunction*)UObject::GObjObjects()->Data[36277];

    UUIDataStore_OnlineGameSettings_eventRegistered_Parms Registered_Parms;

    this->ProcessEvent(pFnRegistered, &Registered_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.MoveToPrevious
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventMoveToPrevious() {
    static UFunction* pFnMoveToPrevious = NULL;

    if (!pFnMoveToPrevious)
        pFnMoveToPrevious = (UFunction*)UObject::GObjObjects()->Data[36275];

    UUIDataStore_OnlineGameSettings_eventMoveToPrevious_Parms
        MoveToPrevious_Parms;

    this->ProcessEvent(pFnMoveToPrevious, &MoveToPrevious_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.MoveToNext
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventMoveToNext() {
    static UFunction* pFnMoveToNext = NULL;

    if (!pFnMoveToNext)
        pFnMoveToNext = (UFunction*)UObject::GObjObjects()->Data[36273];

    UUIDataStore_OnlineGameSettings_eventMoveToNext_Parms MoveToNext_Parms;

    this->ProcessEvent(pFnMoveToNext, &MoveToNext_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByName
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventSetCurrentByName() {
    static UFunction* pFnSetCurrentByName = NULL;

    if (!pFnSetCurrentByName)
        pFnSetCurrentByName = (UFunction*)UObject::GObjObjects()->Data[36270];

    UUIDataStore_OnlineGameSettings_eventSetCurrentByName_Parms
        SetCurrentByName_Parms;

    this->ProcessEvent(pFnSetCurrentByName, &SetCurrentByName_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.SetCurrentByIndex
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventSetCurrentByIndex() {
    static UFunction* pFnSetCurrentByIndex = NULL;

    if (!pFnSetCurrentByIndex)
        pFnSetCurrentByIndex = (UFunction*)UObject::GObjObjects()->Data[36268];

    UUIDataStore_OnlineGameSettings_eventSetCurrentByIndex_Parms
        SetCurrentByIndex_Parms;

    this->ProcessEvent(pFnSetCurrentByIndex, &SetCurrentByIndex_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.GetCurrentProvider
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventGetCurrentProvider() {
    static UFunction* pFnGetCurrentProvider = NULL;

    if (!pFnGetCurrentProvider)
        pFnGetCurrentProvider = (UFunction*)UObject::GObjObjects()->Data[36266];

    UUIDataStore_OnlineGameSettings_eventGetCurrentProvider_Parms
        GetCurrentProvider_Parms;

    this->ProcessEvent(pFnGetCurrentProvider, &GetCurrentProvider_Parms, NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.GetCurrentGameSettings
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventGetCurrentGameSettings() {
    static UFunction* pFnGetCurrentGameSettings = NULL;

    if (!pFnGetCurrentGameSettings)
        pFnGetCurrentGameSettings =
            (UFunction*)UObject::GObjObjects()->Data[36264];

    UUIDataStore_OnlineGameSettings_eventGetCurrentGameSettings_Parms
        GetCurrentGameSettings_Parms;

    this->ProcessEvent(pFnGetCurrentGameSettings, &GetCurrentGameSettings_Parms,
                       NULL);
};

// Function Engine.UIDataStore_OnlineGameSettings.CreateGame
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIDataStore_OnlineGameSettings::eventCreateGame() {
    static UFunction* pFnCreateGame = NULL;

    if (!pFnCreateGame)
        pFnCreateGame = (UFunction*)UObject::GObjObjects()->Data[36259];

    UUIDataStore_OnlineGameSettings_eventCreateGame_Parms CreateGame_Parms;

    this->ProcessEvent(pFnCreateGame, &CreateGame_Parms, NULL);
};

// Function Engine.UIDataStore_InputAlias.HasAliasMappingForPlatform
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::HasAliasMappingForPlatform() {
    static UFunction* pFnHasAliasMappingForPlatform = NULL;

    if (!pFnHasAliasMappingForPlatform)
        pFnHasAliasMappingForPlatform =
            (UFunction*)UObject::GObjObjects()->Data[36173];

    UUIDataStore_InputAlias_execHasAliasMappingForPlatform_Parms
        HasAliasMappingForPlatform_Parms;

    pFnHasAliasMappingForPlatform->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasAliasMappingForPlatform,
                       &HasAliasMappingForPlatform_Parms, NULL);

    pFnHasAliasMappingForPlatform->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.FindInputAliasIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::FindInputAliasIndex() {
    static UFunction* pFnFindInputAliasIndex = NULL;

    if (!pFnFindInputAliasIndex)
        pFnFindInputAliasIndex =
            (UFunction*)UObject::GObjObjects()->Data[36170];

    UUIDataStore_InputAlias_execFindInputAliasIndex_Parms
        FindInputAliasIndex_Parms;

    pFnFindInputAliasIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindInputAliasIndex, &FindInputAliasIndex_Parms,
                       NULL);

    pFnFindInputAliasIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyDataByIndex
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::GetAliasInputKeyDataByIndex() {
    static UFunction* pFnGetAliasInputKeyDataByIndex = NULL;

    if (!pFnGetAliasInputKeyDataByIndex)
        pFnGetAliasInputKeyDataByIndex =
            (UFunction*)UObject::GObjObjects()->Data[36165];

    UUIDataStore_InputAlias_execGetAliasInputKeyDataByIndex_Parms
        GetAliasInputKeyDataByIndex_Parms;

    pFnGetAliasInputKeyDataByIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAliasInputKeyDataByIndex,
                       &GetAliasInputKeyDataByIndex_Parms, NULL);

    pFnGetAliasInputKeyDataByIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyData
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::GetAliasInputKeyData() {
    static UFunction* pFnGetAliasInputKeyData = NULL;

    if (!pFnGetAliasInputKeyData)
        pFnGetAliasInputKeyData =
            (UFunction*)UObject::GObjObjects()->Data[36160];

    UUIDataStore_InputAlias_execGetAliasInputKeyData_Parms
        GetAliasInputKeyData_Parms;

    pFnGetAliasInputKeyData->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAliasInputKeyData, &GetAliasInputKeyData_Parms,
                       NULL);

    pFnGetAliasInputKeyData->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyNameByIndex
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::GetAliasInputKeyNameByIndex() {
    static UFunction* pFnGetAliasInputKeyNameByIndex = NULL;

    if (!pFnGetAliasInputKeyNameByIndex)
        pFnGetAliasInputKeyNameByIndex =
            (UFunction*)UObject::GObjObjects()->Data[36156];

    UUIDataStore_InputAlias_execGetAliasInputKeyNameByIndex_Parms
        GetAliasInputKeyNameByIndex_Parms;

    pFnGetAliasInputKeyNameByIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAliasInputKeyNameByIndex,
                       &GetAliasInputKeyNameByIndex_Parms, NULL);

    pFnGetAliasInputKeyNameByIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.GetAliasInputKeyName
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::GetAliasInputKeyName() {
    static UFunction* pFnGetAliasInputKeyName = NULL;

    if (!pFnGetAliasInputKeyName)
        pFnGetAliasInputKeyName =
            (UFunction*)UObject::GObjObjects()->Data[36152];

    UUIDataStore_InputAlias_execGetAliasInputKeyName_Parms
        GetAliasInputKeyName_Parms;

    pFnGetAliasInputKeyName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAliasInputKeyName, &GetAliasInputKeyName_Parms,
                       NULL);

    pFnGetAliasInputKeyName->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.GetAliasFontMarkupByIndex
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::GetAliasFontMarkupByIndex() {
    static UFunction* pFnGetAliasFontMarkupByIndex = NULL;

    if (!pFnGetAliasFontMarkupByIndex)
        pFnGetAliasFontMarkupByIndex =
            (UFunction*)UObject::GObjObjects()->Data[36148];

    UUIDataStore_InputAlias_execGetAliasFontMarkupByIndex_Parms
        GetAliasFontMarkupByIndex_Parms;

    pFnGetAliasFontMarkupByIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAliasFontMarkupByIndex,
                       &GetAliasFontMarkupByIndex_Parms, NULL);

    pFnGetAliasFontMarkupByIndex->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_InputAlias.GetAliasFontMarkup
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_InputAlias::GetAliasFontMarkup() {
    static UFunction* pFnGetAliasFontMarkup = NULL;

    if (!pFnGetAliasFontMarkup)
        pFnGetAliasFontMarkup = (UFunction*)UObject::GObjObjects()->Data[36144];

    UUIDataStore_InputAlias_execGetAliasFontMarkup_Parms
        GetAliasFontMarkup_Parms;

    pFnGetAliasFontMarkup->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAliasFontMarkup, &GetAliasFontMarkup_Parms, NULL);

    pFnGetAliasFontMarkup->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_StringAliasMap.GetStringWithFieldName
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UUIDataStore_StringAliasMap::GetStringWithFieldName() {
    static UFunction* pFnGetStringWithFieldName = NULL;

    if (!pFnGetStringWithFieldName)
        pFnGetStringWithFieldName =
            (UFunction*)UObject::GObjObjects()->Data[36396];

    UUIDataStore_StringAliasMap_execGetStringWithFieldName_Parms
        GetStringWithFieldName_Parms;

    pFnGetStringWithFieldName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetStringWithFieldName, &GetStringWithFieldName_Parms,
                       NULL);

    pFnGetStringWithFieldName->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_StringAliasMap.FindMappingWithFieldName
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_StringAliasMap::FindMappingWithFieldName() {
    static UFunction* pFnFindMappingWithFieldName = NULL;

    if (!pFnFindMappingWithFieldName)
        pFnFindMappingWithFieldName =
            (UFunction*)UObject::GObjObjects()->Data[36392];

    UUIDataStore_StringAliasMap_execFindMappingWithFieldName_Parms
        FindMappingWithFieldName_Parms;

    pFnFindMappingWithFieldName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindMappingWithFieldName,
                       &FindMappingWithFieldName_Parms, NULL);

    pFnFindMappingWithFieldName->FunctionFlags |= 0x400;
};

// Function Engine.UIDataStore_StringAliasMap.GetPlayerOwner
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UUIDataStore_StringAliasMap::GetPlayerOwner() {
    static UFunction* pFnGetPlayerOwner = NULL;

    if (!pFnGetPlayerOwner)
        pFnGetPlayerOwner = (UFunction*)UObject::GObjObjects()->Data[36390];

    UUIDataStore_StringAliasMap_execGetPlayerOwner_Parms GetPlayerOwner_Parms;

    pFnGetPlayerOwner->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPlayerOwner, &GetPlayerOwner_Parms, NULL);

    pFnGetPlayerOwner->FunctionFlags |= 0x400;
};

// Function Engine.UIPropertyDataProvider.CanSupportComplexPropertyType
// [0x00120000]
// Parameters infos:

void UUIPropertyDataProvider::CanSupportComplexPropertyType() {
    static UFunction* pFnCanSupportComplexPropertyType = NULL;

    if (!pFnCanSupportComplexPropertyType)
        pFnCanSupportComplexPropertyType =
            (UFunction*)UObject::GObjObjects()->Data[29038];

    UUIPropertyDataProvider_execCanSupportComplexPropertyType_Parms
        CanSupportComplexPropertyType_Parms;

    this->ProcessEvent(pFnCanSupportComplexPropertyType,
                       &CanSupportComplexPropertyType_Parms, NULL);
};

// Function Engine.UIResourceDataProvider.InitializeProvider
// [0x00020800] ( FUNC_Event )
// Parameters infos:

void UUIResourceDataProvider::eventInitializeProvider() {
    static UFunction* pFnInitializeProvider = NULL;

    if (!pFnInitializeProvider)
        pFnInitializeProvider = (UFunction*)UObject::GObjObjects()->Data[29042];

    UUIResourceDataProvider_eventInitializeProvider_Parms
        InitializeProvider_Parms;

    this->ProcessEvent(pFnInitializeProvider, &InitializeProvider_Parms, NULL);
};

// Function Engine.UIResourceCombinationProvider.ClearProviderReferences
// [0x00020002]
// Parameters infos:

void UUIResourceCombinationProvider::ClearProviderReferences() {
    static UFunction* pFnClearProviderReferences = NULL;

    if (!pFnClearProviderReferences)
        pFnClearProviderReferences =
            (UFunction*)UObject::GObjObjects()->Data[36558];

    UUIResourceCombinationProvider_execClearProviderReferences_Parms
        ClearProviderReferences_Parms;

    this->ProcessEvent(pFnClearProviderReferences,
                       &ClearProviderReferences_Parms, NULL);
};

// Function Engine.UIResourceCombinationProvider.InitializeProvider
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UUIResourceCombinationProvider::eventInitializeProvider() {
    static UFunction* pFnInitializeProvider = NULL;

    if (!pFnInitializeProvider)
        pFnInitializeProvider = (UFunction*)UObject::GObjObjects()->Data[36554];

    UUIResourceCombinationProvider_eventInitializeProvider_Parms
        InitializeProvider_Parms;

    this->ProcessEvent(pFnInitializeProvider, &InitializeProvider_Parms, NULL);
};

// Function Engine.GameUISceneClient.FindLocalPlayerIndex
// [0x00020002]
// Parameters infos:

void UGameUISceneClient::FindLocalPlayerIndex() {
    static UFunction* pFnFindLocalPlayerIndex = NULL;

    if (!pFnFindLocalPlayerIndex)
        pFnFindLocalPlayerIndex =
            (UFunction*)UObject::GObjObjects()->Data[22586];

    UGameUISceneClient_execFindLocalPlayerIndex_Parms
        FindLocalPlayerIndex_Parms;

    this->ProcessEvent(pFnFindLocalPlayerIndex, &FindLocalPlayerIndex_Parms,
                       NULL);
};

// Function Engine.GameUISceneClient.NotifyPlayerRemoved
// [0x00020002]
// Parameters infos:

void UGameUISceneClient::NotifyPlayerRemoved() {
    static UFunction* pFnNotifyPlayerRemoved = NULL;

    if (!pFnNotifyPlayerRemoved)
        pFnNotifyPlayerRemoved =
            (UFunction*)UObject::GObjObjects()->Data[22583];

    UGameUISceneClient_execNotifyPlayerRemoved_Parms NotifyPlayerRemoved_Parms;

    this->ProcessEvent(pFnNotifyPlayerRemoved, &NotifyPlayerRemoved_Parms,
                       NULL);
};

// Function Engine.GameUISceneClient.NotifyPlayerAdded
// [0x00020002]
// Parameters infos:

void UGameUISceneClient::NotifyPlayerAdded() {
    static UFunction* pFnNotifyPlayerAdded = NULL;

    if (!pFnNotifyPlayerAdded)
        pFnNotifyPlayerAdded = (UFunction*)UObject::GObjObjects()->Data[22580];

    UGameUISceneClient_execNotifyPlayerAdded_Parms NotifyPlayerAdded_Parms;

    this->ProcessEvent(pFnNotifyPlayerAdded, &NotifyPlayerAdded_Parms, NULL);
};

// Function Engine.GameUISceneClient.NotifyGameSessionEnded
// [0x00020000]
// Parameters infos:

void UGameUISceneClient::NotifyGameSessionEnded() {
    static UFunction* pFnNotifyGameSessionEnded = NULL;

    if (!pFnNotifyGameSessionEnded)
        pFnNotifyGameSessionEnded =
            (UFunction*)UObject::GObjObjects()->Data[22579];

    UGameUISceneClient_execNotifyGameSessionEnded_Parms
        NotifyGameSessionEnded_Parms;

    this->ProcessEvent(pFnNotifyGameSessionEnded, &NotifyGameSessionEnded_Parms,
                       NULL);
};

// Function Engine.GameUISceneClient.NotifyClientTravel
// [0x00020000]
// Parameters infos:

void UGameUISceneClient::NotifyClientTravel() {
    static UFunction* pFnNotifyClientTravel = NULL;

    if (!pFnNotifyClientTravel)
        pFnNotifyClientTravel = (UFunction*)UObject::GObjObjects()->Data[22574];

    UGameUISceneClient_execNotifyClientTravel_Parms NotifyClientTravel_Parms;

    this->ProcessEvent(pFnNotifyClientTravel, &NotifyClientTravel_Parms, NULL);
};

// Function Engine.GameUISceneClient.PauseGame
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UGameUISceneClient::eventPauseGame() {
    static UFunction* pFnPauseGame = NULL;

    if (!pFnPauseGame)
        pFnPauseGame = (UFunction*)UObject::GObjObjects()->Data[22570];

    UGameUISceneClient_eventPauseGame_Parms PauseGame_Parms;

    this->ProcessEvent(pFnPauseGame, &PauseGame_Parms, NULL);
};

// Function Engine.GameUISceneClient.CanUnpauseInternalUI
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameUISceneClient::CanUnpauseInternalUI() {
    static UFunction* pFnCanUnpauseInternalUI = NULL;

    if (!pFnCanUnpauseInternalUI)
        pFnCanUnpauseInternalUI =
            (UFunction*)UObject::GObjObjects()->Data[22568];

    UGameUISceneClient_execCanUnpauseInternalUI_Parms
        CanUnpauseInternalUI_Parms;

    pFnCanUnpauseInternalUI->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanUnpauseInternalUI, &CanUnpauseInternalUI_Parms,
                       NULL);

    pFnCanUnpauseInternalUI->FunctionFlags |= 0x400;
};

// Function Engine.GameUISceneClient.RequestInputProcessingUpdate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameUISceneClient::RequestInputProcessingUpdate() {
    static UFunction* pFnRequestInputProcessingUpdate = NULL;

    if (!pFnRequestInputProcessingUpdate)
        pFnRequestInputProcessingUpdate =
            (UFunction*)UObject::GObjObjects()->Data[22567];

    UGameUISceneClient_execRequestInputProcessingUpdate_Parms
        RequestInputProcessingUpdate_Parms;

    pFnRequestInputProcessingUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRequestInputProcessingUpdate,
                       &RequestInputProcessingUpdate_Parms, NULL);

    pFnRequestInputProcessingUpdate->FunctionFlags |= 0x400;
};

// Function Engine.GameUISceneClient.GetCurrentNetMode
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UGameUISceneClient::GetCurrentNetMode() {
    static UFunction* pFnGetCurrentNetMode = NULL;

    if (!pFnGetCurrentNetMode)
        pFnGetCurrentNetMode = (UFunction*)UObject::GObjObjects()->Data[22565];

    UGameUISceneClient_execGetCurrentNetMode_Parms GetCurrentNetMode_Parms;

    pFnGetCurrentNetMode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCurrentNetMode, &GetCurrentNetMode_Parms, NULL);

    pFnGetCurrentNetMode->FunctionFlags |= 0x400;
};

// Function Engine.InteractiveFoliageActor.Touch
// [0x00020D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AInteractiveFoliageActor::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[23520];

    AInteractiveFoliageActor_eventTouch_Parms Touch_Parms;

    pFnTouch->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);

    pFnTouch->FunctionFlags |= 0x400;
};

// Function Engine.InteractiveFoliageActor.TakeDamage
// [0x00024D00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void AInteractiveFoliageActor::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[23512];

    AInteractiveFoliageActor_eventTakeDamage_Parms TakeDamage_Parms;

    pFnTakeDamage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);

    pFnTakeDamage->FunctionFlags |= 0x400;
};

// Function Engine.FluidInfluenceActor.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFluidInfluenceActor::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[19884];

    AFluidInfluenceActor_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.FluidInfluenceActor.OnToggle
// [0x00020102]
// Parameters infos:

void AFluidInfluenceActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[19882];

    AFluidInfluenceActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.FluidSurfaceActor.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AFluidSurfaceActor::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[19958];

    AFluidSurfaceActor_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.FluidSurfaceActor.TakeDamage
// [0x00024902] ( FUNC_Event )
// Parameters infos:

void AFluidSurfaceActor::eventTakeDamage() {
    static UFunction* pFnTakeDamage = NULL;

    if (!pFnTakeDamage)
        pFnTakeDamage = (UFunction*)UObject::GObjObjects()->Data[19950];

    AFluidSurfaceActor_eventTakeDamage_Parms TakeDamage_Parms;

    this->ProcessEvent(pFnTakeDamage, &TakeDamage_Parms, NULL);
};

// Function Engine.FluidSurfaceComponent.SetSimulationPosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFluidSurfaceComponent::SetSimulationPosition() {
    static UFunction* pFnSetSimulationPosition = NULL;

    if (!pFnSetSimulationPosition)
        pFnSetSimulationPosition =
            (UFunction*)UObject::GObjObjects()->Data[19947];

    UFluidSurfaceComponent_execSetSimulationPosition_Parms
        SetSimulationPosition_Parms;

    pFnSetSimulationPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSimulationPosition, &SetSimulationPosition_Parms,
                       NULL);

    pFnSetSimulationPosition->FunctionFlags |= 0x400;
};

// Function Engine.FluidSurfaceComponent.SetDetailPosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFluidSurfaceComponent::SetDetailPosition() {
    static UFunction* pFnSetDetailPosition = NULL;

    if (!pFnSetDetailPosition)
        pFnSetDetailPosition = (UFunction*)UObject::GObjObjects()->Data[19945];

    UFluidSurfaceComponent_execSetDetailPosition_Parms SetDetailPosition_Parms;

    pFnSetDetailPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetDetailPosition, &SetDetailPosition_Parms, NULL);

    pFnSetDetailPosition->FunctionFlags |= 0x400;
};

// Function Engine.FluidSurfaceComponent.ApplyForce
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UFluidSurfaceComponent::ApplyForce() {
    static UFunction* pFnApplyForce = NULL;

    if (!pFnApplyForce)
        pFnApplyForce = (UFunction*)UObject::GObjObjects()->Data[6305];

    UFluidSurfaceComponent_execApplyForce_Parms ApplyForce_Parms;

    pFnApplyForce->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnApplyForce, &ApplyForce_Parms, NULL);

    pFnApplyForce->FunctionFlags |= 0x400;
};

// Function Engine.SpeedTreeComponent.SetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USpeedTreeComponent::SetMaterial() {
    static UFunction* pFnSetMaterial = NULL;

    if (!pFnSetMaterial)
        pFnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[34482];

    USpeedTreeComponent_execSetMaterial_Parms SetMaterial_Parms;

    pFnSetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaterial, &SetMaterial_Parms, NULL);

    pFnSetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.SpeedTreeComponent.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USpeedTreeComponent::GetMaterial() {
    static UFunction* pFnGetMaterial = NULL;

    if (!pFnGetMaterial)
        pFnGetMaterial = (UFunction*)UObject::GObjObjects()->Data[34479];

    USpeedTreeComponent_execGetMaterial_Parms GetMaterial_Parms;

    pFnGetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaterial, &GetMaterial_Parms, NULL);

    pFnGetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareSource.SetActorParameter
// [0x00020100]
// Parameters infos:

void ALensFlareSource::SetActorParameter() {
    static UFunction* pFnSetActorParameter = NULL;

    if (!pFnSetActorParameter)
        pFnSetActorParameter = (UFunction*)UObject::GObjObjects()->Data[24640];

    ALensFlareSource_execSetActorParameter_Parms SetActorParameter_Parms;

    this->ProcessEvent(pFnSetActorParameter, &SetActorParameter_Parms, NULL);
};

// Function Engine.LensFlareSource.SetExtColorParameter
// [0x00020100]
// Parameters infos:

void ALensFlareSource::SetExtColorParameter() {
    static UFunction* pFnSetExtColorParameter = NULL;

    if (!pFnSetExtColorParameter)
        pFnSetExtColorParameter =
            (UFunction*)UObject::GObjObjects()->Data[24634];

    ALensFlareSource_execSetExtColorParameter_Parms SetExtColorParameter_Parms;

    this->ProcessEvent(pFnSetExtColorParameter, &SetExtColorParameter_Parms,
                       NULL);
};

// Function Engine.LensFlareSource.SetColorParameter
// [0x00020100]
// Parameters infos:

void ALensFlareSource::SetColorParameter() {
    static UFunction* pFnSetColorParameter = NULL;

    if (!pFnSetColorParameter)
        pFnSetColorParameter = (UFunction*)UObject::GObjObjects()->Data[24631];

    ALensFlareSource_execSetColorParameter_Parms SetColorParameter_Parms;

    this->ProcessEvent(pFnSetColorParameter, &SetColorParameter_Parms, NULL);
};

// Function Engine.LensFlareSource.SetVectorParameter
// [0x00020100]
// Parameters infos:

void ALensFlareSource::SetVectorParameter() {
    static UFunction* pFnSetVectorParameter = NULL;

    if (!pFnSetVectorParameter)
        pFnSetVectorParameter = (UFunction*)UObject::GObjObjects()->Data[24628];

    ALensFlareSource_execSetVectorParameter_Parms SetVectorParameter_Parms;

    this->ProcessEvent(pFnSetVectorParameter, &SetVectorParameter_Parms, NULL);
};

// Function Engine.LensFlareSource.SetFloatParameter
// [0x00020100]
// Parameters infos:

void ALensFlareSource::SetFloatParameter() {
    static UFunction* pFnSetFloatParameter = NULL;

    if (!pFnSetFloatParameter)
        pFnSetFloatParameter = (UFunction*)UObject::GObjObjects()->Data[24625];

    ALensFlareSource_execSetFloatParameter_Parms SetFloatParameter_Parms;

    this->ProcessEvent(pFnSetFloatParameter, &SetFloatParameter_Parms, NULL);
};

// Function Engine.LensFlareSource.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ALensFlareSource::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[24623];

    ALensFlareSource_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.LensFlareSource.OnToggle
// [0x00020102]
// Parameters infos:

void ALensFlareSource::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[24621];

    ALensFlareSource_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.LensFlareSource.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ALensFlareSource::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[24620];

    ALensFlareSource_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.LensFlareSource.SetTemplate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ALensFlareSource::SetTemplate() {
    static UFunction* pFnSetTemplate = NULL;

    if (!pFnSetTemplate)
        pFnSetTemplate = (UFunction*)UObject::GObjObjects()->Data[24618];

    ALensFlareSource_execSetTemplate_Parms SetTemplate_Parms;

    pFnSetTemplate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTemplate, &SetTemplate_Parms, NULL);

    pFnSetTemplate->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareComponent.CreateAndSetMaterialInstanceConstant
// [0x00020002]
// Parameters infos:

void ULensFlareComponent::CreateAndSetMaterialInstanceConstant() {
    static UFunction* pFnCreateAndSetMaterialInstanceConstant = NULL;

    if (!pFnCreateAndSetMaterialInstanceConstant)
        pFnCreateAndSetMaterialInstanceConstant =
            (UFunction*)UObject::GObjObjects()->Data[18145];

    ULensFlareComponent_execCreateAndSetMaterialInstanceConstant_Parms
        CreateAndSetMaterialInstanceConstant_Parms;

    this->ProcessEvent(pFnCreateAndSetMaterialInstanceConstant,
                       &CreateAndSetMaterialInstanceConstant_Parms, NULL);
};

// Function Engine.LensFlareComponent.GetNumMaterials
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULensFlareComponent::GetNumMaterials() {
    static UFunction* pFnGetNumMaterials = NULL;

    if (!pFnGetNumMaterials)
        pFnGetNumMaterials = (UFunction*)UObject::GObjObjects()->Data[18143];

    ULensFlareComponent_execGetNumMaterials_Parms GetNumMaterials_Parms;

    pFnGetNumMaterials->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumMaterials, &GetNumMaterials_Parms, NULL);

    pFnGetNumMaterials->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareComponent.SetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULensFlareComponent::SetMaterial() {
    static UFunction* pFnSetMaterial = NULL;

    if (!pFnSetMaterial)
        pFnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[18140];

    ULensFlareComponent_execSetMaterial_Parms SetMaterial_Parms;

    pFnSetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaterial, &SetMaterial_Parms, NULL);

    pFnSetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareComponent.GetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULensFlareComponent::GetMaterial() {
    static UFunction* pFnGetMaterial = NULL;

    if (!pFnGetMaterial)
        pFnGetMaterial = (UFunction*)UObject::GObjObjects()->Data[18137];

    ULensFlareComponent_execGetMaterial_Parms GetMaterial_Parms;

    pFnGetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetMaterial, &GetMaterial_Parms, NULL);

    pFnGetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareComponent.SetIsActive
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULensFlareComponent::SetIsActive() {
    static UFunction* pFnSetIsActive = NULL;

    if (!pFnSetIsActive)
        pFnSetIsActive = (UFunction*)UObject::GObjObjects()->Data[18135];

    ULensFlareComponent_execSetIsActive_Parms SetIsActive_Parms;

    pFnSetIsActive->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetIsActive, &SetIsActive_Parms, NULL);

    pFnSetIsActive->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareComponent.SetSourceColor
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ULensFlareComponent::SetSourceColor() {
    static UFunction* pFnSetSourceColor = NULL;

    if (!pFnSetSourceColor)
        pFnSetSourceColor = (UFunction*)UObject::GObjObjects()->Data[18133];

    ULensFlareComponent_execSetSourceColor_Parms SetSourceColor_Parms;

    pFnSetSourceColor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSourceColor, &SetSourceColor_Parms, NULL);

    pFnSetSourceColor->FunctionFlags |= 0x400;
};

// Function Engine.LensFlareComponent.SetTemplate
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULensFlareComponent::SetTemplate() {
    static UFunction* pFnSetTemplate = NULL;

    if (!pFnSetTemplate)
        pFnSetTemplate = (UFunction*)UObject::GObjObjects()->Data[18130];

    ULensFlareComponent_execSetTemplate_Parms SetTemplate_Parms;

    pFnSetTemplate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTemplate, &SetTemplate_Parms, NULL);

    pFnSetTemplate->FunctionFlags |= 0x400;
};

// Function Engine.TextureFlipBook.SetCurrentFrame
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureFlipBook::SetCurrentFrame() {
    static UFunction* pFnSetCurrentFrame = NULL;

    if (!pFnSetCurrentFrame)
        pFnSetCurrentFrame = (UFunction*)UObject::GObjObjects()->Data[35414];

    UTextureFlipBook_execSetCurrentFrame_Parms SetCurrentFrame_Parms;

    pFnSetCurrentFrame->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetCurrentFrame, &SetCurrentFrame_Parms, NULL);

    pFnSetCurrentFrame->FunctionFlags |= 0x400;
};

// Function Engine.TextureFlipBook.Stop
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureFlipBook::Stop() {
    static UFunction* pFnStop = NULL;

    if (!pFnStop) pFnStop = (UFunction*)UObject::GObjObjects()->Data[35413];

    UTextureFlipBook_execStop_Parms Stop_Parms;

    pFnStop->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStop, &Stop_Parms, NULL);

    pFnStop->FunctionFlags |= 0x400;
};

// Function Engine.TextureFlipBook.Pause
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureFlipBook::Pause() {
    static UFunction* pFnPause = NULL;

    if (!pFnPause) pFnPause = (UFunction*)UObject::GObjObjects()->Data[35412];

    UTextureFlipBook_execPause_Parms Pause_Parms;

    pFnPause->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPause, &Pause_Parms, NULL);

    pFnPause->FunctionFlags |= 0x400;
};

// Function Engine.TextureFlipBook.Play
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureFlipBook::Play() {
    static UFunction* pFnPlay = NULL;

    if (!pFnPlay) pFnPlay = (UFunction*)UObject::GObjObjects()->Data[35411];

    UTextureFlipBook_execPlay_Parms Play_Parms;

    pFnPlay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlay, &Play_Parms, NULL);

    pFnPlay->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DComposite.ResetSourceRegions
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2DComposite::ResetSourceRegions() {
    static UFunction* pFnResetSourceRegions = NULL;

    if (!pFnResetSourceRegions)
        pFnResetSourceRegions = (UFunction*)UObject::GObjObjects()->Data[35362];

    UTexture2DComposite_execResetSourceRegions_Parms ResetSourceRegions_Parms;

    pFnResetSourceRegions->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetSourceRegions, &ResetSourceRegions_Parms, NULL);

    pFnResetSourceRegions->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DComposite.UpdateCompositeTexture
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2DComposite::UpdateCompositeTexture() {
    static UFunction* pFnUpdateCompositeTexture = NULL;

    if (!pFnUpdateCompositeTexture)
        pFnUpdateCompositeTexture =
            (UFunction*)UObject::GObjObjects()->Data[35360];

    UTexture2DComposite_execUpdateCompositeTexture_Parms
        UpdateCompositeTexture_Parms;

    pFnUpdateCompositeTexture->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateCompositeTexture, &UpdateCompositeTexture_Parms,
                       NULL);

    pFnUpdateCompositeTexture->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DComposite.SourceTexturesFullyStreamedIn
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2DComposite::SourceTexturesFullyStreamedIn() {
    static UFunction* pFnSourceTexturesFullyStreamedIn = NULL;

    if (!pFnSourceTexturesFullyStreamedIn)
        pFnSourceTexturesFullyStreamedIn =
            (UFunction*)UObject::GObjObjects()->Data[35358];

    UTexture2DComposite_execSourceTexturesFullyStreamedIn_Parms
        SourceTexturesFullyStreamedIn_Parms;

    pFnSourceTexturesFullyStreamedIn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSourceTexturesFullyStreamedIn,
                       &SourceTexturesFullyStreamedIn_Parms, NULL);

    pFnSourceTexturesFullyStreamedIn->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DDynamic.Create
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2DDynamic::Create() {
    static UFunction* pFnCreate = NULL;

    if (!pFnCreate) pFnCreate = (UFunction*)UObject::GObjObjects()->Data[35385];

    UTexture2DDynamic_execCreate_Parms Create_Parms;

    pFnCreate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreate, &Create_Parms, NULL);

    pFnCreate->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DDynamic.UpdateMipFromPNG
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UTexture2DDynamic::UpdateMipFromPNG() {
    static UFunction* pFnUpdateMipFromPNG = NULL;

    if (!pFnUpdateMipFromPNG)
        pFnUpdateMipFromPNG = (UFunction*)UObject::GObjObjects()->Data[35381];

    UTexture2DDynamic_execUpdateMipFromPNG_Parms UpdateMipFromPNG_Parms;

    pFnUpdateMipFromPNG->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMipFromPNG, &UpdateMipFromPNG_Parms, NULL);

    pFnUpdateMipFromPNG->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DDynamic.UpdateMipFromJPEG
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UTexture2DDynamic::UpdateMipFromJPEG() {
    static UFunction* pFnUpdateMipFromJPEG = NULL;

    if (!pFnUpdateMipFromJPEG)
        pFnUpdateMipFromJPEG = (UFunction*)UObject::GObjObjects()->Data[35377];

    UTexture2DDynamic_execUpdateMipFromJPEG_Parms UpdateMipFromJPEG_Parms;

    pFnUpdateMipFromJPEG->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMipFromJPEG, &UpdateMipFromJPEG_Parms, NULL);

    pFnUpdateMipFromJPEG->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DDynamic.UpdateMip
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UTexture2DDynamic::UpdateMip() {
    static UFunction* pFnUpdateMip = NULL;

    if (!pFnUpdateMip)
        pFnUpdateMip = (UFunction*)UObject::GObjObjects()->Data[35373];

    UTexture2DDynamic_execUpdateMip_Parms UpdateMip_Parms;

    pFnUpdateMip->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMip, &UpdateMip_Parms, NULL);

    pFnUpdateMip->FunctionFlags |= 0x400;
};

// Function Engine.Texture2DDynamic.Init
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTexture2DDynamic::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[35368];

    UTexture2DDynamic_execInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.TextureMovie.Stop
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureMovie::Stop() {
    static UFunction* pFnStop = NULL;

    if (!pFnStop) pFnStop = (UFunction*)UObject::GObjObjects()->Data[35436];

    UTextureMovie_execStop_Parms Stop_Parms;

    pFnStop->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStop, &Stop_Parms, NULL);

    pFnStop->FunctionFlags |= 0x400;
};

// Function Engine.TextureMovie.Pause
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureMovie::Pause() {
    static UFunction* pFnPause = NULL;

    if (!pFnPause) pFnPause = (UFunction*)UObject::GObjObjects()->Data[35435];

    UTextureMovie_execPause_Parms Pause_Parms;

    pFnPause->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPause, &Pause_Parms, NULL);

    pFnPause->FunctionFlags |= 0x400;
};

// Function Engine.TextureMovie.Play
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UTextureMovie::Play() {
    static UFunction* pFnPlay = NULL;

    if (!pFnPlay) pFnPlay = (UFunction*)UObject::GObjObjects()->Data[35434];

    UTextureMovie_execPlay_Parms Play_Parms;

    pFnPlay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlay, &Play_Parms, NULL);

    pFnPlay->FunctionFlags |= 0x400;
};

// Function Engine.TextureRenderTarget2D.Create
// [0x00026401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UTextureRenderTarget2D::Create() {
    static UFunction* pFnCreate = NULL;

    if (!pFnCreate) pFnCreate = (UFunction*)UObject::GObjObjects()->Data[32691];

    UTextureRenderTarget2D_execCreate_Parms Create_Parms;

    pFnCreate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreate, &Create_Parms, NULL);

    pFnCreate->FunctionFlags |= 0x400;
};

// Function Engine.ScriptedTexture.Render
// [0x00120000]
// Parameters infos:

void UScriptedTexture::Render() {
    static UFunction* pFnRender = NULL;

    if (!pFnRender) pFnRender = (UFunction*)UObject::GObjObjects()->Data[32701];

    UScriptedTexture_execRender_Parms Render_Parms;

    this->ProcessEvent(pFnRender, &Render_Parms, NULL);
};

// Function Engine.AudioDevice.FindSoundClass
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioDevice::FindSoundClass() {
    static UFunction* pFnFindSoundClass = NULL;

    if (!pFnFindSoundClass)
        pFnFindSoundClass = (UFunction*)UObject::GObjObjects()->Data[13468];

    UAudioDevice_execFindSoundClass_Parms FindSoundClass_Parms;

    pFnFindSoundClass->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSoundClass, &FindSoundClass_Parms, NULL);

    pFnFindSoundClass->FunctionFlags |= 0x400;
};

// Function Engine.AudioDevice.SetSoundMode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UAudioDevice::SetSoundMode() {
    static UFunction* pFnSetSoundMode = NULL;

    if (!pFnSetSoundMode)
        pFnSetSoundMode = (UFunction*)UObject::GObjObjects()->Data[12204];

    UAudioDevice_execSetSoundMode_Parms SetSoundMode_Parms;

    pFnSetSoundMode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSoundMode, &SetSoundMode_Parms, NULL);

    pFnSetSoundMode->FunctionFlags |= 0x400;
};

// Function Engine.Scout.PreBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AScout::eventPreBeginPlay() {
    static UFunction* pFnPreBeginPlay = NULL;

    if (!pFnPreBeginPlay)
        pFnPreBeginPlay = (UFunction*)UObject::GObjObjects()->Data[32678];

    AScout_eventPreBeginPlay_Parms PreBeginPlay_Parms;

    this->ProcessEvent(pFnPreBeginPlay, &PreBeginPlay_Parms, NULL);
};

// Function Engine.Light.TriggerFlickerEvent
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALight::eventTriggerFlickerEvent() {
    static UFunction* pFnTriggerFlickerEvent = NULL;

    if (!pFnTriggerFlickerEvent)
        pFnTriggerFlickerEvent =
            (UFunction*)UObject::GObjObjects()->Data[18182];

    ALight_eventTriggerFlickerEvent_Parms TriggerFlickerEvent_Parms;

    this->ProcessEvent(pFnTriggerFlickerEvent, &TriggerFlickerEvent_Parms,
                       NULL);
};

// Function Engine.Light.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ALight::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18176];

    ALight_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Light.HasVolumetricLightMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ALight::HasVolumetricLightMesh() {
    static UFunction* pFnHasVolumetricLightMesh = NULL;

    if (!pFnHasVolumetricLightMesh)
        pFnHasVolumetricLightMesh =
            (UFunction*)UObject::GObjObjects()->Data[18174];

    ALight_execHasVolumetricLightMesh_Parms HasVolumetricLightMesh_Parms;

    pFnHasVolumetricLightMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasVolumetricLightMesh, &HasVolumetricLightMesh_Parms,
                       NULL);

    pFnHasVolumetricLightMesh->FunctionFlags |= 0x400;
};

// Function Engine.Light.OnToggle
// [0x00020102]
// Parameters infos:

void ALight::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[18172];

    ALight_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.Light.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ALight::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[18170];

    ALight_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Light.AreLightFunctionsSupported
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ALight::AreLightFunctionsSupported() {
    static UFunction* pFnAreLightFunctionsSupported = NULL;

    if (!pFnAreLightFunctionsSupported)
        pFnAreLightFunctionsSupported =
            (UFunction*)UObject::GObjObjects()->Data[18168];

    ALight_execAreLightFunctionsSupported_Parms
        AreLightFunctionsSupported_Parms;

    pFnAreLightFunctionsSupported->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAreLightFunctionsSupported,
                       &AreLightFunctionsSupported_Parms, NULL);

    pFnAreLightFunctionsSupported->FunctionFlags |= 0x400;
};

// Function Engine.Light.IsVolumetricLightingSupported
// [0x00022401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ALight::IsVolumetricLightingSupported() {
    static UFunction* pFnIsVolumetricLightingSupported = NULL;

    if (!pFnIsVolumetricLightingSupported)
        pFnIsVolumetricLightingSupported =
            (UFunction*)UObject::GObjObjects()->Data[18166];

    ALight_execIsVolumetricLightingSupported_Parms
        IsVolumetricLightingSupported_Parms;

    pFnIsVolumetricLightingSupported->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsVolumetricLightingSupported,
                       &IsVolumetricLightingSupported_Parms, NULL);

    pFnIsVolumetricLightingSupported->FunctionFlags |= 0x400;
};

// Function Engine.PointLightToggleable.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void APointLightToggleable::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[31846];

    APointLightToggleable_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.PointLightToggleable.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void APointLightToggleable::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[31844];

    APointLightToggleable_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.PointLightToggleable.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void APointLightToggleable::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[31842];

    APointLightToggleable_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.SpotLightToggleable.ApplyCheckpointRecord
// [0x00420002]
// Parameters infos:

void ASpotLightToggleable::ApplyCheckpointRecord() {
    static UFunction* pFnApplyCheckpointRecord = NULL;

    if (!pFnApplyCheckpointRecord)
        pFnApplyCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[34589];

    ASpotLightToggleable_execApplyCheckpointRecord_Parms
        ApplyCheckpointRecord_Parms;

    this->ProcessEvent(pFnApplyCheckpointRecord, &ApplyCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.SpotLightToggleable.CreateCheckpointRecord
// [0x00420002]
// Parameters infos:

void ASpotLightToggleable::CreateCheckpointRecord() {
    static UFunction* pFnCreateCheckpointRecord = NULL;

    if (!pFnCreateCheckpointRecord)
        pFnCreateCheckpointRecord =
            (UFunction*)UObject::GObjObjects()->Data[34587];

    ASpotLightToggleable_execCreateCheckpointRecord_Parms
        CreateCheckpointRecord_Parms;

    this->ProcessEvent(pFnCreateCheckpointRecord, &CreateCheckpointRecord_Parms,
                       NULL);
};

// Function Engine.SpotLightToggleable.ShouldSaveForCheckpoint
// [0x00020002]
// Parameters infos:

void ASpotLightToggleable::ShouldSaveForCheckpoint() {
    static UFunction* pFnShouldSaveForCheckpoint = NULL;

    if (!pFnShouldSaveForCheckpoint)
        pFnShouldSaveForCheckpoint =
            (UFunction*)UObject::GObjObjects()->Data[34585];

    ASpotLightToggleable_execShouldSaveForCheckpoint_Parms
        ShouldSaveForCheckpoint_Parms;

    this->ProcessEvent(pFnShouldSaveForCheckpoint,
                       &ShouldSaveForCheckpoint_Parms, NULL);
};

// Function Engine.LightComponent.OnUpdatePropertyLightColor
// [0x00020002]
// Parameters infos:

void ULightComponent::OnUpdatePropertyLightColor() {
    static UFunction* pFnOnUpdatePropertyLightColor = NULL;

    if (!pFnOnUpdatePropertyLightColor)
        pFnOnUpdatePropertyLightColor =
            (UFunction*)UObject::GObjObjects()->Data[18269];

    ULightComponent_execOnUpdatePropertyLightColor_Parms
        OnUpdatePropertyLightColor_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyLightColor,
                       &OnUpdatePropertyLightColor_Parms, NULL);
};

// Function Engine.LightComponent.OnUpdatePropertyBrightness
// [0x00020002]
// Parameters infos:

void ULightComponent::OnUpdatePropertyBrightness() {
    static UFunction* pFnOnUpdatePropertyBrightness = NULL;

    if (!pFnOnUpdatePropertyBrightness)
        pFnOnUpdatePropertyBrightness =
            (UFunction*)UObject::GObjObjects()->Data[18268];

    ULightComponent_execOnUpdatePropertyBrightness_Parms
        OnUpdatePropertyBrightness_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBrightness,
                       &OnUpdatePropertyBrightness_Parms, NULL);
};

// Function Engine.LightComponent.OnUpdatePropertyOcclusionMaskDarkness
// [0x00020002]
// Parameters infos:

void ULightComponent::OnUpdatePropertyOcclusionMaskDarkness() {
    static UFunction* pFnOnUpdatePropertyOcclusionMaskDarkness = NULL;

    if (!pFnOnUpdatePropertyOcclusionMaskDarkness)
        pFnOnUpdatePropertyOcclusionMaskDarkness =
            (UFunction*)UObject::GObjObjects()->Data[18267];

    ULightComponent_execOnUpdatePropertyOcclusionMaskDarkness_Parms
        OnUpdatePropertyOcclusionMaskDarkness_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyOcclusionMaskDarkness,
                       &OnUpdatePropertyOcclusionMaskDarkness_Parms, NULL);
};

// Function Engine.LightComponent.OnUpdatePropertyBloomTint
// [0x00020002]
// Parameters infos:

void ULightComponent::OnUpdatePropertyBloomTint() {
    static UFunction* pFnOnUpdatePropertyBloomTint = NULL;

    if (!pFnOnUpdatePropertyBloomTint)
        pFnOnUpdatePropertyBloomTint =
            (UFunction*)UObject::GObjObjects()->Data[18266];

    ULightComponent_execOnUpdatePropertyBloomTint_Parms
        OnUpdatePropertyBloomTint_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBloomTint,
                       &OnUpdatePropertyBloomTint_Parms, NULL);
};

// Function Engine.LightComponent.OnUpdatePropertyBloomScale
// [0x00020002]
// Parameters infos:

void ULightComponent::OnUpdatePropertyBloomScale() {
    static UFunction* pFnOnUpdatePropertyBloomScale = NULL;

    if (!pFnOnUpdatePropertyBloomScale)
        pFnOnUpdatePropertyBloomScale =
            (UFunction*)UObject::GObjObjects()->Data[18265];

    ULightComponent_execOnUpdatePropertyBloomScale_Parms
        OnUpdatePropertyBloomScale_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBloomScale,
                       &OnUpdatePropertyBloomScale_Parms, NULL);
};

// Function Engine.LightComponent.UpdateLightShaftParameters
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightComponent::UpdateLightShaftParameters() {
    static UFunction* pFnUpdateLightShaftParameters = NULL;

    if (!pFnUpdateLightShaftParameters)
        pFnUpdateLightShaftParameters =
            (UFunction*)UObject::GObjObjects()->Data[18264];

    ULightComponent_execUpdateLightShaftParameters_Parms
        UpdateLightShaftParameters_Parms;

    pFnUpdateLightShaftParameters->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateLightShaftParameters,
                       &UpdateLightShaftParameters_Parms, NULL);

    pFnUpdateLightShaftParameters->FunctionFlags |= 0x400;
};

// Function Engine.LightComponent.UpdateColorAndBrightness
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightComponent::UpdateColorAndBrightness() {
    static UFunction* pFnUpdateColorAndBrightness = NULL;

    if (!pFnUpdateColorAndBrightness)
        pFnUpdateColorAndBrightness =
            (UFunction*)UObject::GObjObjects()->Data[18263];

    ULightComponent_execUpdateColorAndBrightness_Parms
        UpdateColorAndBrightness_Parms;

    pFnUpdateColorAndBrightness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateColorAndBrightness,
                       &UpdateColorAndBrightness_Parms, NULL);

    pFnUpdateColorAndBrightness->FunctionFlags |= 0x400;
};

// Function Engine.LightComponent.GetDirection
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightComponent::GetDirection() {
    static UFunction* pFnGetDirection = NULL;

    if (!pFnGetDirection)
        pFnGetDirection = (UFunction*)UObject::GObjObjects()->Data[18261];

    ULightComponent_execGetDirection_Parms GetDirection_Parms;

    pFnGetDirection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetDirection, &GetDirection_Parms, NULL);

    pFnGetDirection->FunctionFlags |= 0x400;
};

// Function Engine.LightComponent.GetOrigin
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightComponent::GetOrigin() {
    static UFunction* pFnGetOrigin = NULL;

    if (!pFnGetOrigin)
        pFnGetOrigin = (UFunction*)UObject::GObjObjects()->Data[18259];

    ULightComponent_execGetOrigin_Parms GetOrigin_Parms;

    pFnGetOrigin->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetOrigin, &GetOrigin_Parms, NULL);

    pFnGetOrigin->FunctionFlags |= 0x400;
};

// Function Engine.LightComponent.SetLightProperties
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightComponent::SetLightProperties() {
    static UFunction* pFnSetLightProperties = NULL;

    if (!pFnSetLightProperties)
        pFnSetLightProperties = (UFunction*)UObject::GObjObjects()->Data[18255];

    ULightComponent_execSetLightProperties_Parms SetLightProperties_Parms;

    pFnSetLightProperties->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLightProperties, &SetLightProperties_Parms, NULL);

    pFnSetLightProperties->FunctionFlags |= 0x400;
};

// Function Engine.LightComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[18185];

    ULightComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.DirectionalLightComponent.OnUpdatePropertyBrightness
// [0x00020002]
// Parameters infos:

void UDirectionalLightComponent::OnUpdatePropertyBrightness() {
    static UFunction* pFnOnUpdatePropertyBrightness = NULL;

    if (!pFnOnUpdatePropertyBrightness)
        pFnOnUpdatePropertyBrightness =
            (UFunction*)UObject::GObjObjects()->Data[18276];

    UDirectionalLightComponent_execOnUpdatePropertyBrightness_Parms
        OnUpdatePropertyBrightness_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBrightness,
                       &OnUpdatePropertyBrightness_Parms, NULL);
};

// Function Engine.DirectionalLightComponent.OnUpdatePropertyLightColor
// [0x00020002]
// Parameters infos:

void UDirectionalLightComponent::OnUpdatePropertyLightColor() {
    static UFunction* pFnOnUpdatePropertyLightColor = NULL;

    if (!pFnOnUpdatePropertyLightColor)
        pFnOnUpdatePropertyLightColor =
            (UFunction*)UObject::GObjObjects()->Data[18275];

    UDirectionalLightComponent_execOnUpdatePropertyLightColor_Parms
        OnUpdatePropertyLightColor_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyLightColor,
                       &OnUpdatePropertyLightColor_Parms, NULL);
};

// Function Engine.PointLightComponent.OnUpdatePropertyBrightness
// [0x00020002]
// Parameters infos:

void UPointLightComponent::OnUpdatePropertyBrightness() {
    static UFunction* pFnOnUpdatePropertyBrightness = NULL;

    if (!pFnOnUpdatePropertyBrightness)
        pFnOnUpdatePropertyBrightness =
            (UFunction*)UObject::GObjObjects()->Data[18380];

    UPointLightComponent_execOnUpdatePropertyBrightness_Parms
        OnUpdatePropertyBrightness_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyBrightness,
                       &OnUpdatePropertyBrightness_Parms, NULL);
};

// Function Engine.PointLightComponent.OnUpdatePropertyLightColor
// [0x00020002]
// Parameters infos:

void UPointLightComponent::OnUpdatePropertyLightColor() {
    static UFunction* pFnOnUpdatePropertyLightColor = NULL;

    if (!pFnOnUpdatePropertyLightColor)
        pFnOnUpdatePropertyLightColor =
            (UFunction*)UObject::GObjObjects()->Data[18379];

    UPointLightComponent_execOnUpdatePropertyLightColor_Parms
        OnUpdatePropertyLightColor_Parms;

    this->ProcessEvent(pFnOnUpdatePropertyLightColor,
                       &OnUpdatePropertyLightColor_Parms, NULL);
};

// Function Engine.PointLightComponent.SetRadius
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPointLightComponent::SetRadius() {
    static UFunction* pFnSetRadius = NULL;

    if (!pFnSetRadius)
        pFnSetRadius = (UFunction*)UObject::GObjObjects()->Data[18377];

    UPointLightComponent_execSetRadius_Parms SetRadius_Parms;

    pFnSetRadius->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRadius, &SetRadius_Parms, NULL);

    pFnSetRadius->FunctionFlags |= 0x400;
};

// Function Engine.PointLightComponent.SetTranslation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UPointLightComponent::SetTranslation() {
    static UFunction* pFnSetTranslation = NULL;

    if (!pFnSetTranslation)
        pFnSetTranslation = (UFunction*)UObject::GObjObjects()->Data[18375];

    UPointLightComponent_execSetTranslation_Parms SetTranslation_Parms;

    pFnSetTranslation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetTranslation, &SetTranslation_Parms, NULL);

    pFnSetTranslation->FunctionFlags |= 0x400;
};

// Function Engine.SpotLightComponent.SetRotation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USpotLightComponent::SetRotation() {
    static UFunction* pFnSetRotation = NULL;

    if (!pFnSetRotation)
        pFnSetRotation = (UFunction*)UObject::GObjObjects()->Data[18397];

    USpotLightComponent_execSetRotation_Parms SetRotation_Parms;

    pFnSetRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetRotation, &SetRotation_Parms, NULL);

    pFnSetRotation->FunctionFlags |= 0x400;
};

// Function Engine.LightEnvironmentComponent.IsEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightEnvironmentComponent::IsEnabled() {
    static UFunction* pFnIsEnabled = NULL;

    if (!pFnIsEnabled)
        pFnIsEnabled = (UFunction*)UObject::GObjObjects()->Data[14958];

    ULightEnvironmentComponent_execIsEnabled_Parms IsEnabled_Parms;

    pFnIsEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsEnabled, &IsEnabled_Parms, NULL);

    pFnIsEnabled->FunctionFlags |= 0x400;
};

// Function Engine.LightEnvironmentComponent.SetEnabled
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ULightEnvironmentComponent::SetEnabled() {
    static UFunction* pFnSetEnabled = NULL;

    if (!pFnSetEnabled)
        pFnSetEnabled = (UFunction*)UObject::GObjObjects()->Data[14956];

    ULightEnvironmentComponent_execSetEnabled_Parms SetEnabled_Parms;

    pFnSetEnabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnabled, &SetEnabled_Parms, NULL);

    pFnSetEnabled->FunctionFlags |= 0x400;
};

// Function Engine.DynamicLightEnvironmentComponent.ResetEnvironment
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UDynamicLightEnvironmentComponent::ResetEnvironment() {
    static UFunction* pFnResetEnvironment = NULL;

    if (!pFnResetEnvironment)
        pFnResetEnvironment = (UFunction*)UObject::GObjObjects()->Data[14998];

    UDynamicLightEnvironmentComponent_execResetEnvironment_Parms
        ResetEnvironment_Parms;

    pFnResetEnvironment->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetEnvironment, &ResetEnvironment_Parms, NULL);

    pFnResetEnvironment->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetLODParent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetLODParent() {
    static UFunction* pFnSetLODParent = NULL;

    if (!pFnSetLODParent)
        pFnSetLODParent = (UFunction*)UObject::GObjObjects()->Data[9971];

    USkeletalMeshComponent_execSetLODParent_Parms SetLODParent_Parms;

    pFnSetLODParent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetLODParent, &SetLODParent_Parms, NULL);

    pFnSetLODParent->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetMaterial
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetMaterial() {
    static UFunction* pFnSetMaterial = NULL;

    if (!pFnSetMaterial)
        pFnSetMaterial = (UFunction*)UObject::GObjObjects()->Data[9968];

    USkeletalMeshComponent_execSetMaterial_Parms SetMaterial_Parms;

    pFnSetMaterial->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetMaterial, &SetMaterial_Parms, NULL);

    pFnSetMaterial->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetRotation
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetRotation() {
    static UFunction* pFnGetRotation = NULL;

    if (!pFnGetRotation)
        pFnGetRotation = (UFunction*)UObject::GObjObjects()->Data[9966];

    USkeletalMeshComponent_execGetRotation_Parms GetRotation_Parms;

    pFnGetRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRotation, &GetRotation_Parms, NULL);

    pFnGetRotation->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetPosition
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetPosition() {
    static UFunction* pFnGetPosition = NULL;

    if (!pFnGetPosition)
        pFnGetPosition = (UFunction*)UObject::GObjObjects()->Data[9964];

    USkeletalMeshComponent_execGetPosition_Parms GetPosition_Parms;

    pFnGetPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetPosition, &GetPosition_Parms, NULL);

    pFnGetPosition->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.IsBrokenConstraint
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void USkeletalMeshComponent::IsBrokenConstraint() {
    static UFunction* pFnIsBrokenConstraint = NULL;

    if (!pFnIsBrokenConstraint)
        pFnIsBrokenConstraint = (UFunction*)UObject::GObjObjects()->Data[9959];

    USkeletalMeshComponent_execIsBrokenConstraint_Parms
        IsBrokenConstraint_Parms;

    this->ProcessEvent(pFnIsBrokenConstraint, &IsBrokenConstraint_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.BreakConstraint
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void USkeletalMeshComponent::BreakConstraint() {
    static UFunction* pFnBreakConstraint = NULL;

    if (!pFnBreakConstraint)
        pFnBreakConstraint = (UFunction*)UObject::GObjObjects()->Data[9951];

    USkeletalMeshComponent_execBreakConstraint_Parms BreakConstraint_Parms;

    this->ProcessEvent(pFnBreakConstraint, &BreakConstraint_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.ToggleAlternateBoneWeights
// [0x00020103] ( FUNC_Final )
// Parameters infos:

void USkeletalMeshComponent::ToggleAlternateBoneWeights() {
    static UFunction* pFnToggleAlternateBoneWeights = NULL;

    if (!pFnToggleAlternateBoneWeights)
        pFnToggleAlternateBoneWeights =
            (UFunction*)UObject::GObjObjects()->Data[9948];

    USkeletalMeshComponent_execToggleAlternateBoneWeights_Parms
        ToggleAlternateBoneWeights_Parms;

    this->ProcessEvent(pFnToggleAlternateBoneWeights,
                       &ToggleAlternateBoneWeights_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.SkelMeshCompOnParticleSystemFinished
// [0x00020102]
// Parameters infos:

void USkeletalMeshComponent::SkelMeshCompOnParticleSystemFinished() {
    static UFunction* pFnSkelMeshCompOnParticleSystemFinished = NULL;

    if (!pFnSkelMeshCompOnParticleSystemFinished)
        pFnSkelMeshCompOnParticleSystemFinished =
            (UFunction*)UObject::GObjObjects()->Data[9946];

    USkeletalMeshComponent_execSkelMeshCompOnParticleSystemFinished_Parms
        SkelMeshCompOnParticleSystemFinished_Parms;

    this->ProcessEvent(pFnSkelMeshCompOnParticleSystemFinished,
                       &SkelMeshCompOnParticleSystemFinished_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.PlayParticleEffect
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void USkeletalMeshComponent::eventPlayParticleEffect() {
    static UFunction* pFnPlayParticleEffect = NULL;

    if (!pFnPlayParticleEffect)
        pFnPlayParticleEffect = (UFunction*)UObject::GObjObjects()->Data[9938];

    USkeletalMeshComponent_eventPlayParticleEffect_Parms
        PlayParticleEffect_Parms;

    this->ProcessEvent(pFnPlayParticleEffect, &PlayParticleEffect_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.CreateForceField
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USkeletalMeshComponent::eventCreateForceField() {
    static UFunction* pFnCreateForceField = NULL;

    if (!pFnCreateForceField)
        pFnCreateForceField = (UFunction*)UObject::GObjObjects()->Data[9934];

    USkeletalMeshComponent_eventCreateForceField_Parms CreateForceField_Parms;

    this->ProcessEvent(pFnCreateForceField, &CreateForceField_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.StopAnim
// [0x00020002]
// Parameters infos:

void USkeletalMeshComponent::StopAnim() {
    static UFunction* pFnStopAnim = NULL;

    if (!pFnStopAnim)
        pFnStopAnim = (UFunction*)UObject::GObjObjects()->Data[9932];

    USkeletalMeshComponent_execStopAnim_Parms StopAnim_Parms;

    this->ProcessEvent(pFnStopAnim, &StopAnim_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.PlayAnim
// [0x00024002]
// Parameters infos:

void USkeletalMeshComponent::PlayAnim() {
    static UFunction* pFnPlayAnim = NULL;

    if (!pFnPlayAnim)
        pFnPlayAnim = (UFunction*)UObject::GObjObjects()->Data[9923];

    USkeletalMeshComponent_execPlayAnim_Parms PlayAnim_Parms;

    this->ProcessEvent(pFnPlayAnim, &PlayAnim_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.ShowMaterialSection
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::ShowMaterialSection() {
    static UFunction* pFnShowMaterialSection = NULL;

    if (!pFnShowMaterialSection)
        pFnShowMaterialSection = (UFunction*)UObject::GObjObjects()->Data[9919];

    USkeletalMeshComponent_execShowMaterialSection_Parms
        ShowMaterialSection_Parms;

    pFnShowMaterialSection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShowMaterialSection, &ShowMaterialSection_Parms,
                       NULL);

    pFnShowMaterialSection->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateMeshForBrokenConstraints
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateMeshForBrokenConstraints() {
    static UFunction* pFnUpdateMeshForBrokenConstraints = NULL;

    if (!pFnUpdateMeshForBrokenConstraints)
        pFnUpdateMeshForBrokenConstraints =
            (UFunction*)UObject::GObjObjects()->Data[9918];

    USkeletalMeshComponent_execUpdateMeshForBrokenConstraints_Parms
        UpdateMeshForBrokenConstraints_Parms;

    pFnUpdateMeshForBrokenConstraints->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateMeshForBrokenConstraints,
                       &UpdateMeshForBrokenConstraints_Parms, NULL);

    pFnUpdateMeshForBrokenConstraints->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UnHideBoneByName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UnHideBoneByName() {
    static UFunction* pFnUnHideBoneByName = NULL;

    if (!pFnUnHideBoneByName)
        pFnUnHideBoneByName = (UFunction*)UObject::GObjObjects()->Data[9916];

    USkeletalMeshComponent_execUnHideBoneByName_Parms UnHideBoneByName_Parms;

    pFnUnHideBoneByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnHideBoneByName, &UnHideBoneByName_Parms, NULL);

    pFnUnHideBoneByName->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.HideBoneByName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::HideBoneByName() {
    static UFunction* pFnHideBoneByName = NULL;

    if (!pFnHideBoneByName)
        pFnHideBoneByName = (UFunction*)UObject::GObjObjects()->Data[9913];

    USkeletalMeshComponent_execHideBoneByName_Parms HideBoneByName_Parms;

    pFnHideBoneByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHideBoneByName, &HideBoneByName_Parms, NULL);

    pFnHideBoneByName->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.IsBoneHidden
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::IsBoneHidden() {
    static UFunction* pFnIsBoneHidden = NULL;

    if (!pFnIsBoneHidden)
        pFnIsBoneHidden = (UFunction*)UObject::GObjObjects()->Data[9910];

    USkeletalMeshComponent_execIsBoneHidden_Parms IsBoneHidden_Parms;

    pFnIsBoneHidden->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsBoneHidden, &IsBoneHidden_Parms, NULL);

    pFnIsBoneHidden->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UnHideBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UnHideBone() {
    static UFunction* pFnUnHideBone = NULL;

    if (!pFnUnHideBone)
        pFnUnHideBone = (UFunction*)UObject::GObjObjects()->Data[9908];

    USkeletalMeshComponent_execUnHideBone_Parms UnHideBone_Parms;

    pFnUnHideBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUnHideBone, &UnHideBone_Parms, NULL);

    pFnUnHideBone->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.HideBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::HideBone() {
    static UFunction* pFnHideBone = NULL;

    if (!pFnHideBone)
        pFnHideBone = (UFunction*)UObject::GObjObjects()->Data[9905];

    USkeletalMeshComponent_execHideBone_Parms HideBone_Parms;

    pFnHideBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHideBone, &HideBone_Parms, NULL);

    pFnHideBone->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetFaceFXRegisterEx
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetFaceFXRegisterEx() {
    static UFunction* pFnSetFaceFXRegisterEx = NULL;

    if (!pFnSetFaceFXRegisterEx)
        pFnSetFaceFXRegisterEx = (UFunction*)UObject::GObjObjects()->Data[9898];

    USkeletalMeshComponent_execSetFaceFXRegisterEx_Parms
        SetFaceFXRegisterEx_Parms;

    pFnSetFaceFXRegisterEx->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFaceFXRegisterEx, &SetFaceFXRegisterEx_Parms,
                       NULL);

    pFnSetFaceFXRegisterEx->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetFaceFXRegister
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetFaceFXRegister() {
    static UFunction* pFnSetFaceFXRegister = NULL;

    if (!pFnSetFaceFXRegister)
        pFnSetFaceFXRegister = (UFunction*)UObject::GObjObjects()->Data[9893];

    USkeletalMeshComponent_execSetFaceFXRegister_Parms SetFaceFXRegister_Parms;

    pFnSetFaceFXRegister->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetFaceFXRegister, &SetFaceFXRegister_Parms, NULL);

    pFnSetFaceFXRegister->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetFaceFXRegister
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetFaceFXRegister() {
    static UFunction* pFnGetFaceFXRegister = NULL;

    if (!pFnGetFaceFXRegister)
        pFnGetFaceFXRegister = (UFunction*)UObject::GObjObjects()->Data[9890];

    USkeletalMeshComponent_execGetFaceFXRegister_Parms GetFaceFXRegister_Parms;

    pFnGetFaceFXRegister->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetFaceFXRegister, &GetFaceFXRegister_Parms, NULL);

    pFnGetFaceFXRegister->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.DeclareFaceFXRegister
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::DeclareFaceFXRegister() {
    static UFunction* pFnDeclareFaceFXRegister = NULL;

    if (!pFnDeclareFaceFXRegister)
        pFnDeclareFaceFXRegister =
            (UFunction*)UObject::GObjObjects()->Data[9888];

    USkeletalMeshComponent_execDeclareFaceFXRegister_Parms
        DeclareFaceFXRegister_Parms;

    pFnDeclareFaceFXRegister->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeclareFaceFXRegister, &DeclareFaceFXRegister_Parms,
                       NULL);

    pFnDeclareFaceFXRegister->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.IsPlayingFaceFXAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::IsPlayingFaceFXAnim() {
    static UFunction* pFnIsPlayingFaceFXAnim = NULL;

    if (!pFnIsPlayingFaceFXAnim)
        pFnIsPlayingFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[9886];

    USkeletalMeshComponent_execIsPlayingFaceFXAnim_Parms
        IsPlayingFaceFXAnim_Parms;

    pFnIsPlayingFaceFXAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsPlayingFaceFXAnim, &IsPlayingFaceFXAnim_Parms,
                       NULL);

    pFnIsPlayingFaceFXAnim->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.StopFaceFXAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::StopFaceFXAnim() {
    static UFunction* pFnStopFaceFXAnim = NULL;

    if (!pFnStopFaceFXAnim)
        pFnStopFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[9885];

    USkeletalMeshComponent_execStopFaceFXAnim_Parms StopFaceFXAnim_Parms;

    pFnStopFaceFXAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopFaceFXAnim, &StopFaceFXAnim_Parms, NULL);

    pFnStopFaceFXAnim->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.PlayFaceFXAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::PlayFaceFXAnim() {
    static UFunction* pFnPlayFaceFXAnim = NULL;

    if (!pFnPlayFaceFXAnim)
        pFnPlayFaceFXAnim = (UFunction*)UObject::GObjObjects()->Data[9878];

    USkeletalMeshComponent_execPlayFaceFXAnim_Parms PlayFaceFXAnim_Parms;

    pFnPlayFaceFXAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayFaceFXAnim, &PlayFaceFXAnim_Parms, NULL);

    pFnPlayFaceFXAnim->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.ToggleInstanceVertexWeights
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::ToggleInstanceVertexWeights() {
    static UFunction* pFnToggleInstanceVertexWeights = NULL;

    if (!pFnToggleInstanceVertexWeights)
        pFnToggleInstanceVertexWeights =
            (UFunction*)UObject::GObjObjects()->Data[9875];

    USkeletalMeshComponent_execToggleInstanceVertexWeights_Parms
        ToggleInstanceVertexWeights_Parms;

    pFnToggleInstanceVertexWeights->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnToggleInstanceVertexWeights,
                       &ToggleInstanceVertexWeights_Parms, NULL);

    pFnToggleInstanceVertexWeights->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateInstanceVertexWeightBones
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateInstanceVertexWeightBones() {
    static UFunction* pFnUpdateInstanceVertexWeightBones = NULL;

    if (!pFnUpdateInstanceVertexWeightBones)
        pFnUpdateInstanceVertexWeightBones =
            (UFunction*)UObject::GObjObjects()->Data[9872];

    USkeletalMeshComponent_execUpdateInstanceVertexWeightBones_Parms
        UpdateInstanceVertexWeightBones_Parms;

    pFnUpdateInstanceVertexWeightBones->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateInstanceVertexWeightBones,
                       &UpdateInstanceVertexWeightBones_Parms, NULL);

    pFnUpdateInstanceVertexWeightBones->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindInstanceVertexweightBonePair
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindInstanceVertexweightBonePair() {
    static UFunction* pFnFindInstanceVertexweightBonePair = NULL;

    if (!pFnFindInstanceVertexweightBonePair)
        pFnFindInstanceVertexweightBonePair =
            (UFunction*)UObject::GObjObjects()->Data[9869];

    USkeletalMeshComponent_execFindInstanceVertexweightBonePair_Parms
        FindInstanceVertexweightBonePair_Parms;

    pFnFindInstanceVertexweightBonePair->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindInstanceVertexweightBonePair,
                       &FindInstanceVertexweightBonePair_Parms, NULL);

    pFnFindInstanceVertexweightBonePair->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.RemoveInstanceVertexWeightBoneParented
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::RemoveInstanceVertexWeightBoneParented() {
    static UFunction* pFnRemoveInstanceVertexWeightBoneParented = NULL;

    if (!pFnRemoveInstanceVertexWeightBoneParented)
        pFnRemoveInstanceVertexWeightBoneParented =
            (UFunction*)UObject::GObjObjects()->Data[9867];

    USkeletalMeshComponent_execRemoveInstanceVertexWeightBoneParented_Parms
        RemoveInstanceVertexWeightBoneParented_Parms;

    pFnRemoveInstanceVertexWeightBoneParented->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRemoveInstanceVertexWeightBoneParented,
                       &RemoveInstanceVertexWeightBoneParented_Parms, NULL);

    pFnRemoveInstanceVertexWeightBoneParented->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.AddInstanceVertexWeightBoneParented
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::AddInstanceVertexWeightBoneParented() {
    static UFunction* pFnAddInstanceVertexWeightBoneParented = NULL;

    if (!pFnAddInstanceVertexWeightBoneParented)
        pFnAddInstanceVertexWeightBoneParented =
            (UFunction*)UObject::GObjObjects()->Data[9864];

    USkeletalMeshComponent_execAddInstanceVertexWeightBoneParented_Parms
        AddInstanceVertexWeightBoneParented_Parms;

    pFnAddInstanceVertexWeightBoneParented->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddInstanceVertexWeightBoneParented,
                       &AddInstanceVertexWeightBoneParented_Parms, NULL);

    pFnAddInstanceVertexWeightBoneParented->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBonesWithinRadius
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBonesWithinRadius() {
    static UFunction* pFnGetBonesWithinRadius = NULL;

    if (!pFnGetBonesWithinRadius)
        pFnGetBonesWithinRadius =
            (UFunction*)UObject::GObjObjects()->Data[9857];

    USkeletalMeshComponent_execGetBonesWithinRadius_Parms
        GetBonesWithinRadius_Parms;

    pFnGetBonesWithinRadius->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBonesWithinRadius, &GetBonesWithinRadius_Parms,
                       NULL);

    pFnGetBonesWithinRadius->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateAnimations
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateAnimations() {
    static UFunction* pFnUpdateAnimations = NULL;

    if (!pFnUpdateAnimations)
        pFnUpdateAnimations = (UFunction*)UObject::GObjObjects()->Data[9856];

    USkeletalMeshComponent_execUpdateAnimations_Parms UpdateAnimations_Parms;

    pFnUpdateAnimations->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateAnimations, &UpdateAnimations_Parms, NULL);

    pFnUpdateAnimations->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.ForceSkelUpdate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::ForceSkelUpdate() {
    static UFunction* pFnForceSkelUpdate = NULL;

    if (!pFnForceSkelUpdate)
        pFnForceSkelUpdate = (UFunction*)UObject::GObjObjects()->Data[9855];

    USkeletalMeshComponent_execForceSkelUpdate_Parms ForceSkelUpdate_Parms;

    pFnForceSkelUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceSkelUpdate, &ForceSkelUpdate_Parms, NULL);

    pFnForceSkelUpdate->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateRBBonesFromSpaceBases
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateRBBonesFromSpaceBases() {
    static UFunction* pFnUpdateRBBonesFromSpaceBases = NULL;

    if (!pFnUpdateRBBonesFromSpaceBases)
        pFnUpdateRBBonesFromSpaceBases =
            (UFunction*)UObject::GObjObjects()->Data[9852];

    USkeletalMeshComponent_execUpdateRBBonesFromSpaceBases_Parms
        UpdateRBBonesFromSpaceBases_Parms;

    pFnUpdateRBBonesFromSpaceBases->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateRBBonesFromSpaceBases,
                       &UpdateRBBonesFromSpaceBases_Parms, NULL);

    pFnUpdateRBBonesFromSpaceBases->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetHasPhysicsAssetInstance
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetHasPhysicsAssetInstance() {
    static UFunction* pFnSetHasPhysicsAssetInstance = NULL;

    if (!pFnSetHasPhysicsAssetInstance)
        pFnSetHasPhysicsAssetInstance =
            (UFunction*)UObject::GObjObjects()->Data[9849];

    USkeletalMeshComponent_execSetHasPhysicsAssetInstance_Parms
        SetHasPhysicsAssetInstance_Parms;

    pFnSetHasPhysicsAssetInstance->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetHasPhysicsAssetInstance,
                       &SetHasPhysicsAssetInstance_Parms, NULL);

    pFnSetHasPhysicsAssetInstance->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindBodyInstanceNamed
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindBodyInstanceNamed() {
    static UFunction* pFnFindBodyInstanceNamed = NULL;

    if (!pFnFindBodyInstanceNamed)
        pFnFindBodyInstanceNamed =
            (UFunction*)UObject::GObjObjects()->Data[9846];

    USkeletalMeshComponent_execFindBodyInstanceNamed_Parms
        FindBodyInstanceNamed_Parms;

    pFnFindBodyInstanceNamed->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindBodyInstanceNamed, &FindBodyInstanceNamed_Parms,
                       NULL);

    pFnFindBodyInstanceNamed->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindConstraintBoneName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindConstraintBoneName() {
    static UFunction* pFnFindConstraintBoneName = NULL;

    if (!pFnFindConstraintBoneName)
        pFnFindConstraintBoneName =
            (UFunction*)UObject::GObjObjects()->Data[9843];

    USkeletalMeshComponent_execFindConstraintBoneName_Parms
        FindConstraintBoneName_Parms;

    pFnFindConstraintBoneName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindConstraintBoneName, &FindConstraintBoneName_Parms,
                       NULL);

    pFnFindConstraintBoneName->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindConstraintIndex
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindConstraintIndex() {
    static UFunction* pFnFindConstraintIndex = NULL;

    if (!pFnFindConstraintIndex)
        pFnFindConstraintIndex = (UFunction*)UObject::GObjObjects()->Data[9840];

    USkeletalMeshComponent_execFindConstraintIndex_Parms
        FindConstraintIndex_Parms;

    pFnFindConstraintIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindConstraintIndex, &FindConstraintIndex_Parms,
                       NULL);

    pFnFindConstraintIndex->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.InitMorphTargets
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::InitMorphTargets() {
    static UFunction* pFnInitMorphTargets = NULL;

    if (!pFnInitMorphTargets)
        pFnInitMorphTargets = (UFunction*)UObject::GObjObjects()->Data[9839];

    USkeletalMeshComponent_execInitMorphTargets_Parms InitMorphTargets_Parms;

    pFnInitMorphTargets->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitMorphTargets, &InitMorphTargets_Parms, NULL);

    pFnInitMorphTargets->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.InitSkelControls
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::InitSkelControls() {
    static UFunction* pFnInitSkelControls = NULL;

    if (!pFnInitSkelControls)
        pFnInitSkelControls = (UFunction*)UObject::GObjObjects()->Data[9838];

    USkeletalMeshComponent_execInitSkelControls_Parms InitSkelControls_Parms;

    pFnInitSkelControls->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInitSkelControls, &InitSkelControls_Parms, NULL);

    pFnInitSkelControls->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateParentBoneMap
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateParentBoneMap() {
    static UFunction* pFnUpdateParentBoneMap = NULL;

    if (!pFnUpdateParentBoneMap)
        pFnUpdateParentBoneMap = (UFunction*)UObject::GObjObjects()->Data[9837];

    USkeletalMeshComponent_execUpdateParentBoneMap_Parms
        UpdateParentBoneMap_Parms;

    pFnUpdateParentBoneMap->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateParentBoneMap, &UpdateParentBoneMap_Parms,
                       NULL);

    pFnUpdateParentBoneMap->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetParentAnimComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetParentAnimComponent() {
    static UFunction* pFnSetParentAnimComponent = NULL;

    if (!pFnSetParentAnimComponent)
        pFnSetParentAnimComponent =
            (UFunction*)UObject::GObjObjects()->Data[9835];

    USkeletalMeshComponent_execSetParentAnimComponent_Parms
        SetParentAnimComponent_Parms;

    pFnSetParentAnimComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetParentAnimComponent, &SetParentAnimComponent_Parms,
                       NULL);

    pFnSetParentAnimComponent->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetAnimTreeTemplate
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetAnimTreeTemplate() {
    static UFunction* pFnSetAnimTreeTemplate = NULL;

    if (!pFnSetAnimTreeTemplate)
        pFnSetAnimTreeTemplate = (UFunction*)UObject::GObjObjects()->Data[9833];

    USkeletalMeshComponent_execSetAnimTreeTemplate_Parms
        SetAnimTreeTemplate_Parms;

    pFnSetAnimTreeTemplate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAnimTreeTemplate, &SetAnimTreeTemplate_Parms,
                       NULL);

    pFnSetAnimTreeTemplate->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClosestCollidingBoneLocation
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClosestCollidingBoneLocation() {
    static UFunction* pFnGetClosestCollidingBoneLocation = NULL;

    if (!pFnGetClosestCollidingBoneLocation)
        pFnGetClosestCollidingBoneLocation =
            (UFunction*)UObject::GObjObjects()->Data[9828];

    USkeletalMeshComponent_execGetClosestCollidingBoneLocation_Parms
        GetClosestCollidingBoneLocation_Parms;

    pFnGetClosestCollidingBoneLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClosestCollidingBoneLocation,
                       &GetClosestCollidingBoneLocation_Parms, NULL);

    pFnGetClosestCollidingBoneLocation->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindClosestBones
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindClosestBones() {
    static UFunction* pFnFindClosestBones = NULL;

    if (!pFnFindClosestBones)
        pFnFindClosestBones = (UFunction*)UObject::GObjObjects()->Data[9819];

    USkeletalMeshComponent_execFindClosestBones_Parms FindClosestBones_Parms;

    pFnFindClosestBones->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindClosestBones, &FindClosestBones_Parms, NULL);

    pFnFindClosestBones->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindClosestBone
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindClosestBone() {
    static UFunction* pFnFindClosestBone = NULL;

    if (!pFnFindClosestBone)
        pFnFindClosestBone = (UFunction*)UObject::GObjObjects()->Data[9814];

    USkeletalMeshComponent_execFindClosestBone_Parms FindClosestBone_Parms;

    pFnFindClosestBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindClosestBone, &FindClosestBone_Parms, NULL);

    pFnFindClosestBone->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.TransformFromBoneSpace
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::TransformFromBoneSpace() {
    static UFunction* pFnTransformFromBoneSpace = NULL;

    if (!pFnTransformFromBoneSpace)
        pFnTransformFromBoneSpace =
            (UFunction*)UObject::GObjObjects()->Data[9808];

    USkeletalMeshComponent_execTransformFromBoneSpace_Parms
        TransformFromBoneSpace_Parms;

    pFnTransformFromBoneSpace->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTransformFromBoneSpace, &TransformFromBoneSpace_Parms,
                       NULL);

    pFnTransformFromBoneSpace->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.TransformToBoneSpace
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::TransformToBoneSpace() {
    static UFunction* pFnTransformToBoneSpace = NULL;

    if (!pFnTransformToBoneSpace)
        pFnTransformToBoneSpace =
            (UFunction*)UObject::GObjObjects()->Data[9802];

    USkeletalMeshComponent_execTransformToBoneSpace_Parms
        TransformToBoneSpace_Parms;

    pFnTransformToBoneSpace->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTransformToBoneSpace, &TransformToBoneSpace_Parms,
                       NULL);

    pFnTransformToBoneSpace->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBoneAxis
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBoneAxis() {
    static UFunction* pFnGetBoneAxis = NULL;

    if (!pFnGetBoneAxis)
        pFnGetBoneAxis = (UFunction*)UObject::GObjObjects()->Data[9798];

    USkeletalMeshComponent_execGetBoneAxis_Parms GetBoneAxis_Parms;

    pFnGetBoneAxis->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoneAxis, &GetBoneAxis_Parms, NULL);

    pFnGetBoneAxis->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetRefPosePosition
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetRefPosePosition() {
    static UFunction* pFnGetRefPosePosition = NULL;

    if (!pFnGetRefPosePosition)
        pFnGetRefPosePosition = (UFunction*)UObject::GObjObjects()->Data[9795];

    USkeletalMeshComponent_execGetRefPosePosition_Parms
        GetRefPosePosition_Parms;

    pFnGetRefPosePosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRefPosePosition, &GetRefPosePosition_Parms, NULL);

    pFnGetRefPosePosition->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.BoneIsChildOf
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::BoneIsChildOf() {
    static UFunction* pFnBoneIsChildOf = NULL;

    if (!pFnBoneIsChildOf)
        pFnBoneIsChildOf = (UFunction*)UObject::GObjObjects()->Data[9791];

    USkeletalMeshComponent_execBoneIsChildOf_Parms BoneIsChildOf_Parms;

    pFnBoneIsChildOf->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBoneIsChildOf, &BoneIsChildOf_Parms, NULL);

    pFnBoneIsChildOf->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBoneNames
// [0x00420401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBoneNames() {
    static UFunction* pFnGetBoneNames = NULL;

    if (!pFnGetBoneNames)
        pFnGetBoneNames = (UFunction*)UObject::GObjObjects()->Data[9788];

    USkeletalMeshComponent_execGetBoneNames_Parms GetBoneNames_Parms;

    pFnGetBoneNames->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoneNames, &GetBoneNames_Parms, NULL);

    pFnGetBoneNames->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetParentBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetParentBone() {
    static UFunction* pFnGetParentBone = NULL;

    if (!pFnGetParentBone)
        pFnGetParentBone = (UFunction*)UObject::GObjObjects()->Data[9785];

    USkeletalMeshComponent_execGetParentBone_Parms GetParentBone_Parms;

    pFnGetParentBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetParentBone, &GetParentBone_Parms, NULL);

    pFnGetParentBone->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBoneMatrix
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBoneMatrix() {
    static UFunction* pFnGetBoneMatrix = NULL;

    if (!pFnGetBoneMatrix)
        pFnGetBoneMatrix = (UFunction*)UObject::GObjObjects()->Data[9782];

    USkeletalMeshComponent_execGetBoneMatrix_Parms GetBoneMatrix_Parms;

    pFnGetBoneMatrix->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoneMatrix, &GetBoneMatrix_Parms, NULL);

    pFnGetBoneMatrix->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBoneName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBoneName() {
    static UFunction* pFnGetBoneName = NULL;

    if (!pFnGetBoneName)
        pFnGetBoneName = (UFunction*)UObject::GObjObjects()->Data[9779];

    USkeletalMeshComponent_execGetBoneName_Parms GetBoneName_Parms;

    pFnGetBoneName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoneName, &GetBoneName_Parms, NULL);

    pFnGetBoneName->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.MatchRefBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::MatchRefBone() {
    static UFunction* pFnMatchRefBone = NULL;

    if (!pFnMatchRefBone)
        pFnMatchRefBone = (UFunction*)UObject::GObjObjects()->Data[9776];

    USkeletalMeshComponent_execMatchRefBone_Parms MatchRefBone_Parms;

    pFnMatchRefBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnMatchRefBone, &MatchRefBone_Parms, NULL);

    pFnMatchRefBone->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBoneLocation
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBoneLocation() {
    static UFunction* pFnGetBoneLocation = NULL;

    if (!pFnGetBoneLocation)
        pFnGetBoneLocation = (UFunction*)UObject::GObjObjects()->Data[9772];

    USkeletalMeshComponent_execGetBoneLocation_Parms GetBoneLocation_Parms;

    pFnGetBoneLocation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoneLocation, &GetBoneLocation_Parms, NULL);

    pFnGetBoneLocation->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetBoneQuaternion
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetBoneQuaternion() {
    static UFunction* pFnGetBoneQuaternion = NULL;

    if (!pFnGetBoneQuaternion)
        pFnGetBoneQuaternion = (UFunction*)UObject::GObjObjects()->Data[9768];

    USkeletalMeshComponent_execGetBoneQuaternion_Parms GetBoneQuaternion_Parms;

    pFnGetBoneQuaternion->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBoneQuaternion, &GetBoneQuaternion_Parms, NULL);

    pFnGetBoneQuaternion->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindMorphNode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindMorphNode() {
    static UFunction* pFnFindMorphNode = NULL;

    if (!pFnFindMorphNode)
        pFnFindMorphNode = (UFunction*)UObject::GObjObjects()->Data[9765];

    USkeletalMeshComponent_execFindMorphNode_Parms FindMorphNode_Parms;

    pFnFindMorphNode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindMorphNode, &FindMorphNode_Parms, NULL);

    pFnFindMorphNode->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindSkelControl
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindSkelControl() {
    static UFunction* pFnFindSkelControl = NULL;

    if (!pFnFindSkelControl)
        pFnFindSkelControl = (UFunction*)UObject::GObjObjects()->Data[9762];

    USkeletalMeshComponent_execFindSkelControl_Parms FindSkelControl_Parms;

    pFnFindSkelControl->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSkelControl, &FindSkelControl_Parms, NULL);

    pFnFindSkelControl->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.AllAnimNodes
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::AllAnimNodes() {
    static UFunction* pFnAllAnimNodes = NULL;

    if (!pFnAllAnimNodes)
        pFnAllAnimNodes = (UFunction*)UObject::GObjObjects()->Data[9759];

    USkeletalMeshComponent_execAllAnimNodes_Parms AllAnimNodes_Parms;

    pFnAllAnimNodes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAllAnimNodes, &AllAnimNodes_Parms, NULL);

    pFnAllAnimNodes->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindAnimNode
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindAnimNode() {
    static UFunction* pFnFindAnimNode = NULL;

    if (!pFnFindAnimNode)
        pFnFindAnimNode = (UFunction*)UObject::GObjObjects()->Data[9756];

    USkeletalMeshComponent_execFindAnimNode_Parms FindAnimNode_Parms;

    pFnFindAnimNode->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindAnimNode, &FindAnimNode_Parms, NULL);

    pFnFindAnimNode->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindMorphTarget
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindMorphTarget() {
    static UFunction* pFnFindMorphTarget = NULL;

    if (!pFnFindMorphTarget)
        pFnFindMorphTarget = (UFunction*)UObject::GObjObjects()->Data[9753];

    USkeletalMeshComponent_execFindMorphTarget_Parms FindMorphTarget_Parms;

    pFnFindMorphTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindMorphTarget, &FindMorphTarget_Parms, NULL);

    pFnFindMorphTarget->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetAnimLength
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USkeletalMeshComponent::GetAnimLength() {
    static UFunction* pFnGetAnimLength = NULL;

    if (!pFnGetAnimLength)
        pFnGetAnimLength = (UFunction*)UObject::GObjObjects()->Data[9749];

    USkeletalMeshComponent_execGetAnimLength_Parms GetAnimLength_Parms;

    this->ProcessEvent(pFnGetAnimLength, &GetAnimLength_Parms, NULL);
};

// Function Engine.SkeletalMeshComponent.GetAnimRateByDuration
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void USkeletalMeshComponent::GetAnimRateByDuration() {
    static UFunction* pFnGetAnimRateByDuration = NULL;

    if (!pFnGetAnimRateByDuration)
        pFnGetAnimRateByDuration =
            (UFunction*)UObject::GObjObjects()->Data[9744];

    USkeletalMeshComponent_execGetAnimRateByDuration_Parms
        GetAnimRateByDuration_Parms;

    this->ProcessEvent(pFnGetAnimRateByDuration, &GetAnimRateByDuration_Parms,
                       NULL);
};

// Function Engine.SkeletalMeshComponent.RestoreSavedAnimSets
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::RestoreSavedAnimSets() {
    static UFunction* pFnRestoreSavedAnimSets = NULL;

    if (!pFnRestoreSavedAnimSets)
        pFnRestoreSavedAnimSets =
            (UFunction*)UObject::GObjObjects()->Data[9743];

    USkeletalMeshComponent_execRestoreSavedAnimSets_Parms
        RestoreSavedAnimSets_Parms;

    pFnRestoreSavedAnimSets->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnRestoreSavedAnimSets, &RestoreSavedAnimSets_Parms,
                       NULL);

    pFnRestoreSavedAnimSets->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SaveAnimSets
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SaveAnimSets() {
    static UFunction* pFnSaveAnimSets = NULL;

    if (!pFnSaveAnimSets)
        pFnSaveAnimSets = (UFunction*)UObject::GObjObjects()->Data[9742];

    USkeletalMeshComponent_execSaveAnimSets_Parms SaveAnimSets_Parms;

    pFnSaveAnimSets->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSaveAnimSets, &SaveAnimSets_Parms, NULL);

    pFnSaveAnimSets->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindAnimSequence
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindAnimSequence() {
    static UFunction* pFnFindAnimSequence = NULL;

    if (!pFnFindAnimSequence)
        pFnFindAnimSequence = (UFunction*)UObject::GObjObjects()->Data[9739];

    USkeletalMeshComponent_execFindAnimSequence_Parms FindAnimSequence_Parms;

    pFnFindAnimSequence->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindAnimSequence, &FindAnimSequence_Parms, NULL);

    pFnFindAnimSequence->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.WakeSoftBody
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::WakeSoftBody() {
    static UFunction* pFnWakeSoftBody = NULL;

    if (!pFnWakeSoftBody)
        pFnWakeSoftBody = (UFunction*)UObject::GObjObjects()->Data[9738];

    USkeletalMeshComponent_execWakeSoftBody_Parms WakeSoftBody_Parms;

    pFnWakeSoftBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWakeSoftBody, &WakeSoftBody_Parms, NULL);

    pFnWakeSoftBody->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetSoftBodyFrozen
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetSoftBodyFrozen() {
    static UFunction* pFnSetSoftBodyFrozen = NULL;

    if (!pFnSetSoftBodyFrozen)
        pFnSetSoftBodyFrozen = (UFunction*)UObject::GObjObjects()->Data[9736];

    USkeletalMeshComponent_execSetSoftBodyFrozen_Parms SetSoftBodyFrozen_Parms;

    pFnSetSoftBodyFrozen->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSoftBodyFrozen, &SetSoftBodyFrozen_Parms, NULL);

    pFnSetSoftBodyFrozen->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateSoftBodyParams
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateSoftBodyParams() {
    static UFunction* pFnUpdateSoftBodyParams = NULL;

    if (!pFnUpdateSoftBodyParams)
        pFnUpdateSoftBodyParams =
            (UFunction*)UObject::GObjObjects()->Data[9735];

    USkeletalMeshComponent_execUpdateSoftBodyParams_Parms
        UpdateSoftBodyParams_Parms;

    pFnUpdateSoftBodyParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateSoftBodyParams, &UpdateSoftBodyParams_Parms,
                       NULL);

    pFnUpdateSoftBodyParams->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothValidBounds
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothValidBounds() {
    static UFunction* pFnSetClothValidBounds = NULL;

    if (!pFnSetClothValidBounds)
        pFnSetClothValidBounds = (UFunction*)UObject::GObjObjects()->Data[9732];

    USkeletalMeshComponent_execSetClothValidBounds_Parms
        SetClothValidBounds_Parms;

    pFnSetClothValidBounds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothValidBounds, &SetClothValidBounds_Parms,
                       NULL);

    pFnSetClothValidBounds->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.EnableClothValidBounds
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::EnableClothValidBounds() {
    static UFunction* pFnEnableClothValidBounds = NULL;

    if (!pFnEnableClothValidBounds)
        pFnEnableClothValidBounds =
            (UFunction*)UObject::GObjObjects()->Data[9730];

    USkeletalMeshComponent_execEnableClothValidBounds_Parms
        EnableClothValidBounds_Parms;

    pFnEnableClothValidBounds->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEnableClothValidBounds, &EnableClothValidBounds_Parms,
                       NULL);

    pFnEnableClothValidBounds->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.AttachClothToCollidingShapes
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::AttachClothToCollidingShapes() {
    static UFunction* pFnAttachClothToCollidingShapes = NULL;

    if (!pFnAttachClothToCollidingShapes)
        pFnAttachClothToCollidingShapes =
            (UFunction*)UObject::GObjObjects()->Data[9727];

    USkeletalMeshComponent_execAttachClothToCollidingShapes_Parms
        AttachClothToCollidingShapes_Parms;

    pFnAttachClothToCollidingShapes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAttachClothToCollidingShapes,
                       &AttachClothToCollidingShapes_Parms, NULL);

    pFnAttachClothToCollidingShapes->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothVelocity
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothVelocity() {
    static UFunction* pFnSetClothVelocity = NULL;

    if (!pFnSetClothVelocity)
        pFnSetClothVelocity = (UFunction*)UObject::GObjObjects()->Data[9725];

    USkeletalMeshComponent_execSetClothVelocity_Parms SetClothVelocity_Parms;

    pFnSetClothVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothVelocity, &SetClothVelocity_Parms, NULL);

    pFnSetClothVelocity->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothPosition
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothPosition() {
    static UFunction* pFnSetClothPosition = NULL;

    if (!pFnSetClothPosition)
        pFnSetClothPosition = (UFunction*)UObject::GObjObjects()->Data[9723];

    USkeletalMeshComponent_execSetClothPosition_Parms SetClothPosition_Parms;

    pFnSetClothPosition->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothPosition, &SetClothPosition_Parms, NULL);

    pFnSetClothPosition->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothSleep
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothSleep() {
    static UFunction* pFnSetClothSleep = NULL;

    if (!pFnSetClothSleep)
        pFnSetClothSleep = (UFunction*)UObject::GObjObjects()->Data[9721];

    USkeletalMeshComponent_execSetClothSleep_Parms SetClothSleep_Parms;

    pFnSetClothSleep->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothSleep, &SetClothSleep_Parms, NULL);

    pFnSetClothSleep->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothThickness
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothThickness() {
    static UFunction* pFnSetClothThickness = NULL;

    if (!pFnSetClothThickness)
        pFnSetClothThickness = (UFunction*)UObject::GObjObjects()->Data[9719];

    USkeletalMeshComponent_execSetClothThickness_Parms SetClothThickness_Parms;

    pFnSetClothThickness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothThickness, &SetClothThickness_Parms, NULL);

    pFnSetClothThickness->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothTearFactor
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothTearFactor() {
    static UFunction* pFnSetClothTearFactor = NULL;

    if (!pFnSetClothTearFactor)
        pFnSetClothTearFactor = (UFunction*)UObject::GObjObjects()->Data[9717];

    USkeletalMeshComponent_execSetClothTearFactor_Parms
        SetClothTearFactor_Parms;

    pFnSetClothTearFactor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothTearFactor, &SetClothTearFactor_Parms, NULL);

    pFnSetClothTearFactor->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothStretchingStiffness
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothStretchingStiffness() {
    static UFunction* pFnSetClothStretchingStiffness = NULL;

    if (!pFnSetClothStretchingStiffness)
        pFnSetClothStretchingStiffness =
            (UFunction*)UObject::GObjObjects()->Data[9715];

    USkeletalMeshComponent_execSetClothStretchingStiffness_Parms
        SetClothStretchingStiffness_Parms;

    pFnSetClothStretchingStiffness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothStretchingStiffness,
                       &SetClothStretchingStiffness_Parms, NULL);

    pFnSetClothStretchingStiffness->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothSolverIterations
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothSolverIterations() {
    static UFunction* pFnSetClothSolverIterations = NULL;

    if (!pFnSetClothSolverIterations)
        pFnSetClothSolverIterations =
            (UFunction*)UObject::GObjObjects()->Data[9713];

    USkeletalMeshComponent_execSetClothSolverIterations_Parms
        SetClothSolverIterations_Parms;

    pFnSetClothSolverIterations->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothSolverIterations,
                       &SetClothSolverIterations_Parms, NULL);

    pFnSetClothSolverIterations->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothSleepLinearVelocity
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothSleepLinearVelocity() {
    static UFunction* pFnSetClothSleepLinearVelocity = NULL;

    if (!pFnSetClothSleepLinearVelocity)
        pFnSetClothSleepLinearVelocity =
            (UFunction*)UObject::GObjObjects()->Data[9711];

    USkeletalMeshComponent_execSetClothSleepLinearVelocity_Parms
        SetClothSleepLinearVelocity_Parms;

    pFnSetClothSleepLinearVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothSleepLinearVelocity,
                       &SetClothSleepLinearVelocity_Parms, NULL);

    pFnSetClothSleepLinearVelocity->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothPressure
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothPressure() {
    static UFunction* pFnSetClothPressure = NULL;

    if (!pFnSetClothPressure)
        pFnSetClothPressure = (UFunction*)UObject::GObjObjects()->Data[9709];

    USkeletalMeshComponent_execSetClothPressure_Parms SetClothPressure_Parms;

    pFnSetClothPressure->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothPressure, &SetClothPressure_Parms, NULL);

    pFnSetClothPressure->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothFriction
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothFriction() {
    static UFunction* pFnSetClothFriction = NULL;

    if (!pFnSetClothFriction)
        pFnSetClothFriction = (UFunction*)UObject::GObjObjects()->Data[9707];

    USkeletalMeshComponent_execSetClothFriction_Parms SetClothFriction_Parms;

    pFnSetClothFriction->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothFriction, &SetClothFriction_Parms, NULL);

    pFnSetClothFriction->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothFlags
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothFlags() {
    static UFunction* pFnSetClothFlags = NULL;

    if (!pFnSetClothFlags)
        pFnSetClothFlags = (UFunction*)UObject::GObjObjects()->Data[9705];

    USkeletalMeshComponent_execSetClothFlags_Parms SetClothFlags_Parms;

    pFnSetClothFlags->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothFlags, &SetClothFlags_Parms, NULL);

    pFnSetClothFlags->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothDampingCoefficient
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothDampingCoefficient() {
    static UFunction* pFnSetClothDampingCoefficient = NULL;

    if (!pFnSetClothDampingCoefficient)
        pFnSetClothDampingCoefficient =
            (UFunction*)UObject::GObjObjects()->Data[9703];

    USkeletalMeshComponent_execSetClothDampingCoefficient_Parms
        SetClothDampingCoefficient_Parms;

    pFnSetClothDampingCoefficient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothDampingCoefficient,
                       &SetClothDampingCoefficient_Parms, NULL);

    pFnSetClothDampingCoefficient->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothCollisionResponseCoefficient
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothCollisionResponseCoefficient() {
    static UFunction* pFnSetClothCollisionResponseCoefficient = NULL;

    if (!pFnSetClothCollisionResponseCoefficient)
        pFnSetClothCollisionResponseCoefficient =
            (UFunction*)UObject::GObjObjects()->Data[9701];

    USkeletalMeshComponent_execSetClothCollisionResponseCoefficient_Parms
        SetClothCollisionResponseCoefficient_Parms;

    pFnSetClothCollisionResponseCoefficient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothCollisionResponseCoefficient,
                       &SetClothCollisionResponseCoefficient_Parms, NULL);

    pFnSetClothCollisionResponseCoefficient->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothBendingStiffness
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothBendingStiffness() {
    static UFunction* pFnSetClothBendingStiffness = NULL;

    if (!pFnSetClothBendingStiffness)
        pFnSetClothBendingStiffness =
            (UFunction*)UObject::GObjObjects()->Data[9699];

    USkeletalMeshComponent_execSetClothBendingStiffness_Parms
        SetClothBendingStiffness_Parms;

    pFnSetClothBendingStiffness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothBendingStiffness,
                       &SetClothBendingStiffness_Parms, NULL);

    pFnSetClothBendingStiffness->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothAttachmentTearFactor
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothAttachmentTearFactor() {
    static UFunction* pFnSetClothAttachmentTearFactor = NULL;

    if (!pFnSetClothAttachmentTearFactor)
        pFnSetClothAttachmentTearFactor =
            (UFunction*)UObject::GObjObjects()->Data[9697];

    USkeletalMeshComponent_execSetClothAttachmentTearFactor_Parms
        SetClothAttachmentTearFactor_Parms;

    pFnSetClothAttachmentTearFactor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothAttachmentTearFactor,
                       &SetClothAttachmentTearFactor_Parms, NULL);

    pFnSetClothAttachmentTearFactor->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothAttachmentResponseCoefficient
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothAttachmentResponseCoefficient() {
    static UFunction* pFnSetClothAttachmentResponseCoefficient = NULL;

    if (!pFnSetClothAttachmentResponseCoefficient)
        pFnSetClothAttachmentResponseCoefficient =
            (UFunction*)UObject::GObjObjects()->Data[9695];

    USkeletalMeshComponent_execSetClothAttachmentResponseCoefficient_Parms
        SetClothAttachmentResponseCoefficient_Parms;

    pFnSetClothAttachmentResponseCoefficient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothAttachmentResponseCoefficient,
                       &SetClothAttachmentResponseCoefficient_Parms, NULL);

    pFnSetClothAttachmentResponseCoefficient->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothThickness
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothThickness() {
    static UFunction* pFnGetClothThickness = NULL;

    if (!pFnGetClothThickness)
        pFnGetClothThickness = (UFunction*)UObject::GObjObjects()->Data[9693];

    USkeletalMeshComponent_execGetClothThickness_Parms GetClothThickness_Parms;

    pFnGetClothThickness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothThickness, &GetClothThickness_Parms, NULL);

    pFnGetClothThickness->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothTearFactor
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothTearFactor() {
    static UFunction* pFnGetClothTearFactor = NULL;

    if (!pFnGetClothTearFactor)
        pFnGetClothTearFactor = (UFunction*)UObject::GObjObjects()->Data[9691];

    USkeletalMeshComponent_execGetClothTearFactor_Parms
        GetClothTearFactor_Parms;

    pFnGetClothTearFactor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothTearFactor, &GetClothTearFactor_Parms, NULL);

    pFnGetClothTearFactor->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothStretchingStiffness
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothStretchingStiffness() {
    static UFunction* pFnGetClothStretchingStiffness = NULL;

    if (!pFnGetClothStretchingStiffness)
        pFnGetClothStretchingStiffness =
            (UFunction*)UObject::GObjObjects()->Data[9689];

    USkeletalMeshComponent_execGetClothStretchingStiffness_Parms
        GetClothStretchingStiffness_Parms;

    pFnGetClothStretchingStiffness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothStretchingStiffness,
                       &GetClothStretchingStiffness_Parms, NULL);

    pFnGetClothStretchingStiffness->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothSolverIterations
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothSolverIterations() {
    static UFunction* pFnGetClothSolverIterations = NULL;

    if (!pFnGetClothSolverIterations)
        pFnGetClothSolverIterations =
            (UFunction*)UObject::GObjObjects()->Data[9687];

    USkeletalMeshComponent_execGetClothSolverIterations_Parms
        GetClothSolverIterations_Parms;

    pFnGetClothSolverIterations->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothSolverIterations,
                       &GetClothSolverIterations_Parms, NULL);

    pFnGetClothSolverIterations->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothSleepLinearVelocity
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothSleepLinearVelocity() {
    static UFunction* pFnGetClothSleepLinearVelocity = NULL;

    if (!pFnGetClothSleepLinearVelocity)
        pFnGetClothSleepLinearVelocity =
            (UFunction*)UObject::GObjObjects()->Data[9685];

    USkeletalMeshComponent_execGetClothSleepLinearVelocity_Parms
        GetClothSleepLinearVelocity_Parms;

    pFnGetClothSleepLinearVelocity->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothSleepLinearVelocity,
                       &GetClothSleepLinearVelocity_Parms, NULL);

    pFnGetClothSleepLinearVelocity->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothPressure
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothPressure() {
    static UFunction* pFnGetClothPressure = NULL;

    if (!pFnGetClothPressure)
        pFnGetClothPressure = (UFunction*)UObject::GObjObjects()->Data[9683];

    USkeletalMeshComponent_execGetClothPressure_Parms GetClothPressure_Parms;

    pFnGetClothPressure->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothPressure, &GetClothPressure_Parms, NULL);

    pFnGetClothPressure->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothFriction
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothFriction() {
    static UFunction* pFnGetClothFriction = NULL;

    if (!pFnGetClothFriction)
        pFnGetClothFriction = (UFunction*)UObject::GObjObjects()->Data[9681];

    USkeletalMeshComponent_execGetClothFriction_Parms GetClothFriction_Parms;

    pFnGetClothFriction->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothFriction, &GetClothFriction_Parms, NULL);

    pFnGetClothFriction->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothFlags
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothFlags() {
    static UFunction* pFnGetClothFlags = NULL;

    if (!pFnGetClothFlags)
        pFnGetClothFlags = (UFunction*)UObject::GObjObjects()->Data[9679];

    USkeletalMeshComponent_execGetClothFlags_Parms GetClothFlags_Parms;

    pFnGetClothFlags->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothFlags, &GetClothFlags_Parms, NULL);

    pFnGetClothFlags->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothDampingCoefficient
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothDampingCoefficient() {
    static UFunction* pFnGetClothDampingCoefficient = NULL;

    if (!pFnGetClothDampingCoefficient)
        pFnGetClothDampingCoefficient =
            (UFunction*)UObject::GObjObjects()->Data[9677];

    USkeletalMeshComponent_execGetClothDampingCoefficient_Parms
        GetClothDampingCoefficient_Parms;

    pFnGetClothDampingCoefficient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothDampingCoefficient,
                       &GetClothDampingCoefficient_Parms, NULL);

    pFnGetClothDampingCoefficient->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothCollisionResponseCoefficient
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothCollisionResponseCoefficient() {
    static UFunction* pFnGetClothCollisionResponseCoefficient = NULL;

    if (!pFnGetClothCollisionResponseCoefficient)
        pFnGetClothCollisionResponseCoefficient =
            (UFunction*)UObject::GObjObjects()->Data[9675];

    USkeletalMeshComponent_execGetClothCollisionResponseCoefficient_Parms
        GetClothCollisionResponseCoefficient_Parms;

    pFnGetClothCollisionResponseCoefficient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothCollisionResponseCoefficient,
                       &GetClothCollisionResponseCoefficient_Parms, NULL);

    pFnGetClothCollisionResponseCoefficient->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothBendingStiffness
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothBendingStiffness() {
    static UFunction* pFnGetClothBendingStiffness = NULL;

    if (!pFnGetClothBendingStiffness)
        pFnGetClothBendingStiffness =
            (UFunction*)UObject::GObjObjects()->Data[9673];

    USkeletalMeshComponent_execGetClothBendingStiffness_Parms
        GetClothBendingStiffness_Parms;

    pFnGetClothBendingStiffness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothBendingStiffness,
                       &GetClothBendingStiffness_Parms, NULL);

    pFnGetClothBendingStiffness->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothAttachmentTearFactor
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothAttachmentTearFactor() {
    static UFunction* pFnGetClothAttachmentTearFactor = NULL;

    if (!pFnGetClothAttachmentTearFactor)
        pFnGetClothAttachmentTearFactor =
            (UFunction*)UObject::GObjObjects()->Data[9671];

    USkeletalMeshComponent_execGetClothAttachmentTearFactor_Parms
        GetClothAttachmentTearFactor_Parms;

    pFnGetClothAttachmentTearFactor->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothAttachmentTearFactor,
                       &GetClothAttachmentTearFactor_Parms, NULL);

    pFnGetClothAttachmentTearFactor->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetClothAttachmentResponseCoefficient
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetClothAttachmentResponseCoefficient() {
    static UFunction* pFnGetClothAttachmentResponseCoefficient = NULL;

    if (!pFnGetClothAttachmentResponseCoefficient)
        pFnGetClothAttachmentResponseCoefficient =
            (UFunction*)UObject::GObjObjects()->Data[9669];

    USkeletalMeshComponent_execGetClothAttachmentResponseCoefficient_Parms
        GetClothAttachmentResponseCoefficient_Parms;

    pFnGetClothAttachmentResponseCoefficient->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetClothAttachmentResponseCoefficient,
                       &GetClothAttachmentResponseCoefficient_Parms, NULL);

    pFnGetClothAttachmentResponseCoefficient->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.ForceApexClothingTeleport
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::ForceApexClothingTeleport() {
    static UFunction* pFnForceApexClothingTeleport = NULL;

    if (!pFnForceApexClothingTeleport)
        pFnForceApexClothingTeleport =
            (UFunction*)UObject::GObjObjects()->Data[9668];

    USkeletalMeshComponent_execForceApexClothingTeleport_Parms
        ForceApexClothingTeleport_Parms;

    pFnForceApexClothingTeleport->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceApexClothingTeleport,
                       &ForceApexClothingTeleport_Parms, NULL);

    pFnForceApexClothingTeleport->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.ForceApexClothingTeleportAndReset
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::ForceApexClothingTeleportAndReset() {
    static UFunction* pFnForceApexClothingTeleportAndReset = NULL;

    if (!pFnForceApexClothingTeleportAndReset)
        pFnForceApexClothingTeleportAndReset =
            (UFunction*)UObject::GObjObjects()->Data[9667];

    USkeletalMeshComponent_execForceApexClothingTeleportAndReset_Parms
        ForceApexClothingTeleportAndReset_Parms;

    pFnForceApexClothingTeleportAndReset->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceApexClothingTeleportAndReset,
                       &ForceApexClothingTeleportAndReset_Parms, NULL);

    pFnForceApexClothingTeleportAndReset->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.ResetClothVertsToRefPose
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::ResetClothVertsToRefPose() {
    static UFunction* pFnResetClothVertsToRefPose = NULL;

    if (!pFnResetClothVertsToRefPose)
        pFnResetClothVertsToRefPose =
            (UFunction*)UObject::GObjObjects()->Data[9666];

    USkeletalMeshComponent_execResetClothVertsToRefPose_Parms
        ResetClothVertsToRefPose_Parms;

    pFnResetClothVertsToRefPose->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResetClothVertsToRefPose,
                       &ResetClothVertsToRefPose_Parms, NULL);

    pFnResetClothVertsToRefPose->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetAttachClothVertsToBaseBody
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetAttachClothVertsToBaseBody() {
    static UFunction* pFnSetAttachClothVertsToBaseBody = NULL;

    if (!pFnSetAttachClothVertsToBaseBody)
        pFnSetAttachClothVertsToBaseBody =
            (UFunction*)UObject::GObjObjects()->Data[9664];

    USkeletalMeshComponent_execSetAttachClothVertsToBaseBody_Parms
        SetAttachClothVertsToBaseBody_Parms;

    pFnSetAttachClothVertsToBaseBody->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetAttachClothVertsToBaseBody,
                       &SetAttachClothVertsToBaseBody_Parms, NULL);

    pFnSetAttachClothVertsToBaseBody->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothExternalForce
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothExternalForce() {
    static UFunction* pFnSetClothExternalForce = NULL;

    if (!pFnSetClothExternalForce)
        pFnSetClothExternalForce =
            (UFunction*)UObject::GObjObjects()->Data[9662];

    USkeletalMeshComponent_execSetClothExternalForce_Parms
        SetClothExternalForce_Parms;

    pFnSetClothExternalForce->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothExternalForce, &SetClothExternalForce_Parms,
                       NULL);

    pFnSetClothExternalForce->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.UpdateClothParams
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::UpdateClothParams() {
    static UFunction* pFnUpdateClothParams = NULL;

    if (!pFnUpdateClothParams)
        pFnUpdateClothParams = (UFunction*)UObject::GObjObjects()->Data[9661];

    USkeletalMeshComponent_execUpdateClothParams_Parms UpdateClothParams_Parms;

    pFnUpdateClothParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateClothParams, &UpdateClothParams_Parms, NULL);

    pFnUpdateClothParams->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetEnableClothingSimulation
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetEnableClothingSimulation() {
    static UFunction* pFnSetEnableClothingSimulation = NULL;

    if (!pFnSetEnableClothingSimulation)
        pFnSetEnableClothingSimulation =
            (UFunction*)UObject::GObjObjects()->Data[9659];

    USkeletalMeshComponent_execSetEnableClothingSimulation_Parms
        SetEnableClothingSimulation_Parms;

    pFnSetEnableClothingSimulation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnableClothingSimulation,
                       &SetEnableClothingSimulation_Parms, NULL);

    pFnSetEnableClothingSimulation->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetClothFrozen
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetClothFrozen() {
    static UFunction* pFnSetClothFrozen = NULL;

    if (!pFnSetClothFrozen)
        pFnSetClothFrozen = (UFunction*)UObject::GObjObjects()->Data[9657];

    USkeletalMeshComponent_execSetClothFrozen_Parms SetClothFrozen_Parms;

    pFnSetClothFrozen->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetClothFrozen, &SetClothFrozen_Parms, NULL);

    pFnSetClothFrozen->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetEnableClothSimulation
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetEnableClothSimulation() {
    static UFunction* pFnSetEnableClothSimulation = NULL;

    if (!pFnSetEnableClothSimulation)
        pFnSetEnableClothSimulation =
            (UFunction*)UObject::GObjObjects()->Data[9655];

    USkeletalMeshComponent_execSetEnableClothSimulation_Parms
        SetEnableClothSimulation_Parms;

    pFnSetEnableClothSimulation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetEnableClothSimulation,
                       &SetEnableClothSimulation_Parms, NULL);

    pFnSetEnableClothSimulation->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetForceRefPose
// [0x00020501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetForceRefPose() {
    static UFunction* pFnSetForceRefPose = NULL;

    if (!pFnSetForceRefPose)
        pFnSetForceRefPose = (UFunction*)UObject::GObjObjects()->Data[9653];

    USkeletalMeshComponent_execSetForceRefPose_Parms SetForceRefPose_Parms;

    pFnSetForceRefPose->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetForceRefPose, &SetForceRefPose_Parms, NULL);

    pFnSetForceRefPose->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetPhysicsAsset
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetPhysicsAsset() {
    static UFunction* pFnSetPhysicsAsset = NULL;

    if (!pFnSetPhysicsAsset)
        pFnSetPhysicsAsset = (UFunction*)UObject::GObjObjects()->Data[9649];

    USkeletalMeshComponent_execSetPhysicsAsset_Parms SetPhysicsAsset_Parms;

    pFnSetPhysicsAsset->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPhysicsAsset, &SetPhysicsAsset_Parms, NULL);

    pFnSetPhysicsAsset->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.SetSkeletalMesh
// [0x00024501] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::SetSkeletalMesh() {
    static UFunction* pFnSetSkeletalMesh = NULL;

    if (!pFnSetSkeletalMesh)
        pFnSetSkeletalMesh = (UFunction*)UObject::GObjObjects()->Data[9646];

    USkeletalMeshComponent_execSetSkeletalMesh_Parms SetSkeletalMesh_Parms;

    pFnSetSkeletalMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetSkeletalMesh, &SetSkeletalMesh_Parms, NULL);

    pFnSetSkeletalMesh->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetTransformMatrix
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetTransformMatrix() {
    static UFunction* pFnGetTransformMatrix = NULL;

    if (!pFnGetTransformMatrix)
        pFnGetTransformMatrix = (UFunction*)UObject::GObjObjects()->Data[9644];

    USkeletalMeshComponent_execGetTransformMatrix_Parms
        GetTransformMatrix_Parms;

    pFnGetTransformMatrix->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTransformMatrix, &GetTransformMatrix_Parms, NULL);

    pFnGetTransformMatrix->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.AttachedComponents
// [0x00420405] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::AttachedComponents() {
    static UFunction* pFnAttachedComponents = NULL;

    if (!pFnAttachedComponents)
        pFnAttachedComponents = (UFunction*)UObject::GObjObjects()->Data[9641];

    USkeletalMeshComponent_execAttachedComponents_Parms
        AttachedComponents_Parms;

    pFnAttachedComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAttachedComponents, &AttachedComponents_Parms, NULL);

    pFnAttachedComponents->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.IsComponentAttached
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::IsComponentAttached() {
    static UFunction* pFnIsComponentAttached = NULL;

    if (!pFnIsComponentAttached)
        pFnIsComponentAttached = (UFunction*)UObject::GObjObjects()->Data[9637];

    USkeletalMeshComponent_execIsComponentAttached_Parms
        IsComponentAttached_Parms;

    pFnIsComponentAttached->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsComponentAttached, &IsComponentAttached_Parms,
                       NULL);

    pFnIsComponentAttached->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.FindComponentAttachedToBone
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::FindComponentAttachedToBone() {
    static UFunction* pFnFindComponentAttachedToBone = NULL;

    if (!pFnFindComponentAttachedToBone)
        pFnFindComponentAttachedToBone =
            (UFunction*)UObject::GObjObjects()->Data[9634];

    USkeletalMeshComponent_execFindComponentAttachedToBone_Parms
        FindComponentAttachedToBone_Parms;

    pFnFindComponentAttachedToBone->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindComponentAttachedToBone,
                       &FindComponentAttachedToBone_Parms, NULL);

    pFnFindComponentAttachedToBone->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetSocketBoneName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetSocketBoneName() {
    static UFunction* pFnGetSocketBoneName = NULL;

    if (!pFnGetSocketBoneName)
        pFnGetSocketBoneName = (UFunction*)UObject::GObjObjects()->Data[9631];

    USkeletalMeshComponent_execGetSocketBoneName_Parms GetSocketBoneName_Parms;

    pFnGetSocketBoneName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSocketBoneName, &GetSocketBoneName_Parms, NULL);

    pFnGetSocketBoneName->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetSocketByName
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetSocketByName() {
    static UFunction* pFnGetSocketByName = NULL;

    if (!pFnGetSocketByName)
        pFnGetSocketByName = (UFunction*)UObject::GObjObjects()->Data[9628];

    USkeletalMeshComponent_execGetSocketByName_Parms GetSocketByName_Parms;

    pFnGetSocketByName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSocketByName, &GetSocketByName_Parms, NULL);

    pFnGetSocketByName->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetSocketMatrix
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetSocketMatrix() {
    static UFunction* pFnGetSocketMatrix = NULL;

    if (!pFnGetSocketMatrix)
        pFnGetSocketMatrix = (UFunction*)UObject::GObjObjects()->Data[9625];

    USkeletalMeshComponent_execGetSocketMatrix_Parms GetSocketMatrix_Parms;

    pFnGetSocketMatrix->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSocketMatrix, &GetSocketMatrix_Parms, NULL);

    pFnGetSocketMatrix->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.GetSocketWorldLocationAndRotation
// [0x00424401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::GetSocketWorldLocationAndRotation() {
    static UFunction* pFnGetSocketWorldLocationAndRotation = NULL;

    if (!pFnGetSocketWorldLocationAndRotation)
        pFnGetSocketWorldLocationAndRotation =
            (UFunction*)UObject::GObjObjects()->Data[9619];

    USkeletalMeshComponent_execGetSocketWorldLocationAndRotation_Parms
        GetSocketWorldLocationAndRotation_Parms;

    pFnGetSocketWorldLocationAndRotation->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSocketWorldLocationAndRotation,
                       &GetSocketWorldLocationAndRotation_Parms, NULL);

    pFnGetSocketWorldLocationAndRotation->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.AttachComponentToSocket
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::AttachComponentToSocket() {
    static UFunction* pFnAttachComponentToSocket = NULL;

    if (!pFnAttachComponentToSocket)
        pFnAttachComponentToSocket =
            (UFunction*)UObject::GObjObjects()->Data[9616];

    USkeletalMeshComponent_execAttachComponentToSocket_Parms
        AttachComponentToSocket_Parms;

    pFnAttachComponentToSocket->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAttachComponentToSocket,
                       &AttachComponentToSocket_Parms, NULL);

    pFnAttachComponentToSocket->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.DetachComponent
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::DetachComponent() {
    static UFunction* pFnDetachComponent = NULL;

    if (!pFnDetachComponent)
        pFnDetachComponent = (UFunction*)UObject::GObjObjects()->Data[9614];

    USkeletalMeshComponent_execDetachComponent_Parms DetachComponent_Parms;

    pFnDetachComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDetachComponent, &DetachComponent_Parms, NULL);

    pFnDetachComponent->FunctionFlags |= 0x400;
};

// Function Engine.SkeletalMeshComponent.AttachComponent
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void USkeletalMeshComponent::AttachComponent() {
    static UFunction* pFnAttachComponent = NULL;

    if (!pFnAttachComponent)
        pFnAttachComponent = (UFunction*)UObject::GObjObjects()->Data[9608];

    USkeletalMeshComponent_execAttachComponent_Parms AttachComponent_Parms;

    pFnAttachComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAttachComponent, &AttachComponent_Parms, NULL);

    pFnAttachComponent->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.OnToggleHidden
// [0x00020102]
// Parameters infos:

void ASplineActor::OnToggleHidden() {
    static UFunction* pFnOnToggleHidden = NULL;

    if (!pFnOnToggleHidden)
        pFnOnToggleHidden = (UFunction*)UObject::GObjObjects()->Data[34547];

    ASplineActor_execOnToggleHidden_Parms OnToggleHidden_Parms;

    this->ProcessEvent(pFnOnToggleHidden, &OnToggleHidden_Parms, NULL);
};

// Function Engine.SplineActor.OnToggle
// [0x00020002]
// Parameters infos:

void ASplineActor::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[34545];

    ASplineActor_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.SplineActor.GetAllConnectedSplineActors
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::GetAllConnectedSplineActors() {
    static UFunction* pFnGetAllConnectedSplineActors = NULL;

    if (!pFnGetAllConnectedSplineActors)
        pFnGetAllConnectedSplineActors =
            (UFunction*)UObject::GObjObjects()->Data[34542];

    ASplineActor_execGetAllConnectedSplineActors_Parms
        GetAllConnectedSplineActors_Parms;

    pFnGetAllConnectedSplineActors->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAllConnectedSplineActors,
                       &GetAllConnectedSplineActors_Parms, NULL);

    pFnGetAllConnectedSplineActors->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.FindSplinePathTo
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::FindSplinePathTo() {
    static UFunction* pFnFindSplinePathTo = NULL;

    if (!pFnFindSplinePathTo)
        pFnFindSplinePathTo = (UFunction*)UObject::GObjObjects()->Data[34537];

    ASplineActor_execFindSplinePathTo_Parms FindSplinePathTo_Parms;

    pFnFindSplinePathTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSplinePathTo, &FindSplinePathTo_Parms, NULL);

    pFnFindSplinePathTo->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.GetBestConnectionInDirection
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::GetBestConnectionInDirection() {
    static UFunction* pFnGetBestConnectionInDirection = NULL;

    if (!pFnGetBestConnectionInDirection)
        pFnGetBestConnectionInDirection =
            (UFunction*)UObject::GObjObjects()->Data[34533];

    ASplineActor_execGetBestConnectionInDirection_Parms
        GetBestConnectionInDirection_Parms;

    pFnGetBestConnectionInDirection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBestConnectionInDirection,
                       &GetBestConnectionInDirection_Parms, NULL);

    pFnGetBestConnectionInDirection->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.GetRandomConnection
// [0x00024400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::GetRandomConnection() {
    static UFunction* pFnGetRandomConnection = NULL;

    if (!pFnGetRandomConnection)
        pFnGetRandomConnection =
            (UFunction*)UObject::GObjObjects()->Data[34530];

    ASplineActor_execGetRandomConnection_Parms GetRandomConnection_Parms;

    pFnGetRandomConnection->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetRandomConnection, &GetRandomConnection_Parms,
                       NULL);

    pFnGetRandomConnection->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.BreakAllConnectionsFrom
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::BreakAllConnectionsFrom() {
    static UFunction* pFnBreakAllConnectionsFrom = NULL;

    if (!pFnBreakAllConnectionsFrom)
        pFnBreakAllConnectionsFrom =
            (UFunction*)UObject::GObjObjects()->Data[34529];

    ASplineActor_execBreakAllConnectionsFrom_Parms
        BreakAllConnectionsFrom_Parms;

    pFnBreakAllConnectionsFrom->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBreakAllConnectionsFrom,
                       &BreakAllConnectionsFrom_Parms, NULL);

    pFnBreakAllConnectionsFrom->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.BreakAllConnections
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::BreakAllConnections() {
    static UFunction* pFnBreakAllConnections = NULL;

    if (!pFnBreakAllConnections)
        pFnBreakAllConnections =
            (UFunction*)UObject::GObjObjects()->Data[34528];

    ASplineActor_execBreakAllConnections_Parms BreakAllConnections_Parms;

    pFnBreakAllConnections->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBreakAllConnections, &BreakAllConnections_Parms,
                       NULL);

    pFnBreakAllConnections->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.BreakConnectionTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::BreakConnectionTo() {
    static UFunction* pFnBreakConnectionTo = NULL;

    if (!pFnBreakConnectionTo)
        pFnBreakConnectionTo = (UFunction*)UObject::GObjObjects()->Data[34526];

    ASplineActor_execBreakConnectionTo_Parms BreakConnectionTo_Parms;

    pFnBreakConnectionTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBreakConnectionTo, &BreakConnectionTo_Parms, NULL);

    pFnBreakConnectionTo->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.FindTargetForComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::FindTargetForComponent() {
    static UFunction* pFnFindTargetForComponent = NULL;

    if (!pFnFindTargetForComponent)
        pFnFindTargetForComponent =
            (UFunction*)UObject::GObjObjects()->Data[34523];

    ASplineActor_execFindTargetForComponent_Parms FindTargetForComponent_Parms;

    pFnFindTargetForComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindTargetForComponent, &FindTargetForComponent_Parms,
                       NULL);

    pFnFindTargetForComponent->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.FindSplineComponentTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::FindSplineComponentTo() {
    static UFunction* pFnFindSplineComponentTo = NULL;

    if (!pFnFindSplineComponentTo)
        pFnFindSplineComponentTo =
            (UFunction*)UObject::GObjObjects()->Data[34520];

    ASplineActor_execFindSplineComponentTo_Parms FindSplineComponentTo_Parms;

    pFnFindSplineComponentTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindSplineComponentTo, &FindSplineComponentTo_Parms,
                       NULL);

    pFnFindSplineComponentTo->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.IsConnectedTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::IsConnectedTo() {
    static UFunction* pFnIsConnectedTo = NULL;

    if (!pFnIsConnectedTo)
        pFnIsConnectedTo = (UFunction*)UObject::GObjObjects()->Data[34516];

    ASplineActor_execIsConnectedTo_Parms IsConnectedTo_Parms;

    pFnIsConnectedTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsConnectedTo, &IsConnectedTo_Parms, NULL);

    pFnIsConnectedTo->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.AddConnectionTo
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::AddConnectionTo() {
    static UFunction* pFnAddConnectionTo = NULL;

    if (!pFnAddConnectionTo)
        pFnAddConnectionTo = (UFunction*)UObject::GObjObjects()->Data[34514];

    ASplineActor_execAddConnectionTo_Parms AddConnectionTo_Parms;

    pFnAddConnectionTo->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAddConnectionTo, &AddConnectionTo_Parms, NULL);

    pFnAddConnectionTo->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.UpdateConnectedSplineComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::UpdateConnectedSplineComponents() {
    static UFunction* pFnUpdateConnectedSplineComponents = NULL;

    if (!pFnUpdateConnectedSplineComponents)
        pFnUpdateConnectedSplineComponents =
            (UFunction*)UObject::GObjObjects()->Data[34512];

    ASplineActor_execUpdateConnectedSplineComponents_Parms
        UpdateConnectedSplineComponents_Parms;

    pFnUpdateConnectedSplineComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateConnectedSplineComponents,
                       &UpdateConnectedSplineComponents_Parms, NULL);

    pFnUpdateConnectedSplineComponents->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.UpdateSplineComponents
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::UpdateSplineComponents() {
    static UFunction* pFnUpdateSplineComponents = NULL;

    if (!pFnUpdateSplineComponents)
        pFnUpdateSplineComponents =
            (UFunction*)UObject::GObjObjects()->Data[34511];

    ASplineActor_execUpdateSplineComponents_Parms UpdateSplineComponents_Parms;

    pFnUpdateSplineComponents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateSplineComponents, &UpdateSplineComponents_Parms,
                       NULL);

    pFnUpdateSplineComponents->FunctionFlags |= 0x400;
};

// Function Engine.SplineActor.GetWorldSpaceTangent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineActor::GetWorldSpaceTangent() {
    static UFunction* pFnGetWorldSpaceTangent = NULL;

    if (!pFnGetWorldSpaceTangent)
        pFnGetWorldSpaceTangent =
            (UFunction*)UObject::GObjObjects()->Data[34509];

    ASplineActor_execGetWorldSpaceTangent_Parms GetWorldSpaceTangent_Parms;

    pFnGetWorldSpaceTangent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetWorldSpaceTangent, &GetWorldSpaceTangent_Parms,
                       NULL);

    pFnGetWorldSpaceTangent->FunctionFlags |= 0x400;
};

// Function Engine.SplineLoftActor.UpdateSplineParams
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineLoftActor::UpdateSplineParams() {
    static UFunction* pFnUpdateSplineParams = NULL;

    if (!pFnUpdateSplineParams)
        pFnUpdateSplineParams = (UFunction*)UObject::GObjObjects()->Data[34564];

    ASplineLoftActor_execUpdateSplineParams_Parms UpdateSplineParams_Parms;

    pFnUpdateSplineParams->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateSplineParams, &UpdateSplineParams_Parms, NULL);

    pFnUpdateSplineParams->FunctionFlags |= 0x400;
};

// Function Engine.SplineLoftActor.ClearLoftMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ASplineLoftActor::ClearLoftMesh() {
    static UFunction* pFnClearLoftMesh = NULL;

    if (!pFnClearLoftMesh)
        pFnClearLoftMesh = (UFunction*)UObject::GObjObjects()->Data[34563];

    ASplineLoftActor_execClearLoftMesh_Parms ClearLoftMesh_Parms;

    pFnClearLoftMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearLoftMesh, &ClearLoftMesh_Parms, NULL);

    pFnClearLoftMesh->FunctionFlags |= 0x400;
};

// Function Engine.SplineComponent.GetTangentAtDistanceAlongSpline
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USplineComponent::GetTangentAtDistanceAlongSpline() {
    static UFunction* pFnGetTangentAtDistanceAlongSpline = NULL;

    if (!pFnGetTangentAtDistanceAlongSpline)
        pFnGetTangentAtDistanceAlongSpline =
            (UFunction*)UObject::GObjObjects()->Data[13582];

    USplineComponent_execGetTangentAtDistanceAlongSpline_Parms
        GetTangentAtDistanceAlongSpline_Parms;

    pFnGetTangentAtDistanceAlongSpline->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTangentAtDistanceAlongSpline,
                       &GetTangentAtDistanceAlongSpline_Parms, NULL);

    pFnGetTangentAtDistanceAlongSpline->FunctionFlags |= 0x400;
};

// Function Engine.SplineComponent.GetLocationAtDistanceAlongSpline
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USplineComponent::GetLocationAtDistanceAlongSpline() {
    static UFunction* pFnGetLocationAtDistanceAlongSpline = NULL;

    if (!pFnGetLocationAtDistanceAlongSpline)
        pFnGetLocationAtDistanceAlongSpline =
            (UFunction*)UObject::GObjObjects()->Data[13579];

    USplineComponent_execGetLocationAtDistanceAlongSpline_Parms
        GetLocationAtDistanceAlongSpline_Parms;

    pFnGetLocationAtDistanceAlongSpline->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetLocationAtDistanceAlongSpline,
                       &GetLocationAtDistanceAlongSpline_Parms, NULL);

    pFnGetLocationAtDistanceAlongSpline->FunctionFlags |= 0x400;
};

// Function Engine.SplineComponent.GetSplineLength
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USplineComponent::GetSplineLength() {
    static UFunction* pFnGetSplineLength = NULL;

    if (!pFnGetSplineLength)
        pFnGetSplineLength = (UFunction*)UObject::GObjObjects()->Data[13577];

    USplineComponent_execGetSplineLength_Parms GetSplineLength_Parms;

    pFnGetSplineLength->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetSplineLength, &GetSplineLength_Parms, NULL);

    pFnGetSplineLength->FunctionFlags |= 0x400;
};

// Function Engine.SplineComponent.UpdateSplineReparamTable
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USplineComponent::UpdateSplineReparamTable() {
    static UFunction* pFnUpdateSplineReparamTable = NULL;

    if (!pFnUpdateSplineReparamTable)
        pFnUpdateSplineReparamTable =
            (UFunction*)UObject::GObjObjects()->Data[13576];

    USplineComponent_execUpdateSplineReparamTable_Parms
        UpdateSplineReparamTable_Parms;

    pFnUpdateSplineReparamTable->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateSplineReparamTable,
                       &UpdateSplineReparamTable_Parms, NULL);

    pFnUpdateSplineReparamTable->FunctionFlags |= 0x400;
};

// Function Engine.SplineComponent.UpdateSplineCurviness
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void USplineComponent::UpdateSplineCurviness() {
    static UFunction* pFnUpdateSplineCurviness = NULL;

    if (!pFnUpdateSplineCurviness)
        pFnUpdateSplineCurviness =
            (UFunction*)UObject::GObjObjects()->Data[13575];

    USplineComponent_execUpdateSplineCurviness_Parms
        UpdateSplineCurviness_Parms;

    pFnUpdateSplineCurviness->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateSplineCurviness, &UpdateSplineCurviness_Parms,
                       NULL);

    pFnUpdateSplineCurviness->FunctionFlags |= 0x400;
};

// Function Engine.ProcBuilding.FindEdgeForTopLevelScope
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AProcBuilding::FindEdgeForTopLevelScope() {
    static UFunction* pFnFindEdgeForTopLevelScope = NULL;

    if (!pFnFindEdgeForTopLevelScope)
        pFnFindEdgeForTopLevelScope =
            (UFunction*)UObject::GObjObjects()->Data[30876];

    AProcBuilding_execFindEdgeForTopLevelScope_Parms
        FindEdgeForTopLevelScope_Parms;

    pFnFindEdgeForTopLevelScope->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindEdgeForTopLevelScope,
                       &FindEdgeForTopLevelScope_Parms, NULL);

    pFnFindEdgeForTopLevelScope->FunctionFlags |= 0x400;
};

// Function Engine.ProcBuilding.BreakFractureComponent
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AProcBuilding::BreakFractureComponent() {
    static UFunction* pFnBreakFractureComponent = NULL;

    if (!pFnBreakFractureComponent)
        pFnBreakFractureComponent =
            (UFunction*)UObject::GObjObjects()->Data[30877];

    AProcBuilding_execBreakFractureComponent_Parms BreakFractureComponent_Parms;

    pFnBreakFractureComponent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnBreakFractureComponent, &BreakFractureComponent_Parms,
                       NULL);

    pFnBreakFractureComponent->FunctionFlags |= 0x400;
};

// Function Engine.ProcBuilding.GetAllGroupedProcBuildings
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void AProcBuilding::GetAllGroupedProcBuildings() {
    static UFunction* pFnGetAllGroupedProcBuildings = NULL;

    if (!pFnGetAllGroupedProcBuildings)
        pFnGetAllGroupedProcBuildings =
            (UFunction*)UObject::GObjObjects()->Data[30883];

    AProcBuilding_execGetAllGroupedProcBuildings_Parms
        GetAllGroupedProcBuildings_Parms;

    pFnGetAllGroupedProcBuildings->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAllGroupedProcBuildings,
                       &GetAllGroupedProcBuildings_Parms, NULL);

    pFnGetAllGroupedProcBuildings->FunctionFlags |= 0x400;
};

// Function Engine.ProcBuilding.GetBaseMostBuilding
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AProcBuilding::GetBaseMostBuilding() {
    static UFunction* pFnGetBaseMostBuilding = NULL;

    if (!pFnGetBaseMostBuilding)
        pFnGetBaseMostBuilding =
            (UFunction*)UObject::GObjObjects()->Data[30887];

    AProcBuilding_execGetBaseMostBuilding_Parms GetBaseMostBuilding_Parms;

    pFnGetBaseMostBuilding->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetBaseMostBuilding, &GetBaseMostBuilding_Parms,
                       NULL);

    pFnGetBaseMostBuilding->FunctionFlags |= 0x400;
};

// Function Engine.ProcBuilding.FindComponentsForTopLevelScope
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AProcBuilding::FindComponentsForTopLevelScope() {
    static UFunction* pFnFindComponentsForTopLevelScope = NULL;

    if (!pFnFindComponentsForTopLevelScope)
        pFnFindComponentsForTopLevelScope =
            (UFunction*)UObject::GObjObjects()->Data[30890];

    AProcBuilding_execFindComponentsForTopLevelScope_Parms
        FindComponentsForTopLevelScope_Parms;

    pFnFindComponentsForTopLevelScope->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFindComponentsForTopLevelScope,
                       &FindComponentsForTopLevelScope_Parms, NULL);

    pFnFindComponentsForTopLevelScope->FunctionFlags |= 0x400;
};

// Function Engine.ProcBuilding.ClearBuildingMeshes
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void AProcBuilding::ClearBuildingMeshes() {
    static UFunction* pFnClearBuildingMeshes = NULL;

    if (!pFnClearBuildingMeshes)
        pFnClearBuildingMeshes =
            (UFunction*)UObject::GObjObjects()->Data[30892];

    AProcBuilding_execClearBuildingMeshes_Parms ClearBuildingMeshes_Parms;

    pFnClearBuildingMeshes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnClearBuildingMeshes, &ClearBuildingMeshes_Parms,
                       NULL);

    pFnClearBuildingMeshes->FunctionFlags |= 0x400;
};

// Function Engine.PBRuleNodeMesh.PickRandomBuildingMesh
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPBRuleNodeMesh::PickRandomBuildingMesh() {
    static UFunction* pFnPickRandomBuildingMesh = NULL;

    if (!pFnPickRandomBuildingMesh)
        pFnPickRandomBuildingMesh =
            (UFunction*)UObject::GObjObjects()->Data[31048];

    UPBRuleNodeMesh_execPickRandomBuildingMesh_Parms
        PickRandomBuildingMesh_Parms;

    pFnPickRandomBuildingMesh->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPickRandomBuildingMesh, &PickRandomBuildingMesh_Parms,
                       NULL);

    pFnPickRandomBuildingMesh->FunctionFlags |= 0x400;
};

// Function Engine.GameReplicationInfo.IsStatsSessionValid
// [0x00020900] ( FUNC_Event )
// Parameters infos:

void AGameReplicationInfo::eventIsStatsSessionValid() {
    static UFunction* pFnIsStatsSessionValid = NULL;

    if (!pFnIsStatsSessionValid)
        pFnIsStatsSessionValid =
            (UFunction*)UObject::GObjObjects()->Data[22525];

    AGameReplicationInfo_eventIsStatsSessionValid_Parms
        IsStatsSessionValid_Parms;

    this->ProcessEvent(pFnIsStatsSessionValid, &IsStatsSessionValid_Parms,
                       NULL);
};

// Function Engine.GameReplicationInfo.GetPRIByPlayfabId
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AGameReplicationInfo::eventGetPRIByPlayfabId() {
    static UFunction* pFnGetPRIByPlayfabId = NULL;

    if (!pFnGetPRIByPlayfabId)
        pFnGetPRIByPlayfabId = (UFunction*)UObject::GObjObjects()->Data[22521];

    AGameReplicationInfo_eventGetPRIByPlayfabId_Parms GetPRIByPlayfabId_Parms;

    this->ProcessEvent(pFnGetPRIByPlayfabId, &GetPRIByPlayfabId_Parms, NULL);
};

// Function Engine.GameReplicationInfo.ShouldShowGore
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AGameReplicationInfo::eventShouldShowGore() {
    static UFunction* pFnShouldShowGore = NULL;

    if (!pFnShouldShowGore)
        pFnShouldShowGore = (UFunction*)UObject::GObjObjects()->Data[9996];

    AGameReplicationInfo_eventShouldShowGore_Parms ShouldShowGore_Parms;

    this->ProcessEvent(pFnShouldShowGore, &ShouldShowGore_Parms, NULL);
};

// Function Engine.GameReplicationInfo.IsCoopMultiplayerGame
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::IsCoopMultiplayerGame() {
    static UFunction* pFnIsCoopMultiplayerGame = NULL;

    if (!pFnIsCoopMultiplayerGame)
        pFnIsCoopMultiplayerGame =
            (UFunction*)UObject::GObjObjects()->Data[22519];

    AGameReplicationInfo_execIsCoopMultiplayerGame_Parms
        IsCoopMultiplayerGame_Parms;

    this->ProcessEvent(pFnIsCoopMultiplayerGame, &IsCoopMultiplayerGame_Parms,
                       NULL);
};

// Function Engine.GameReplicationInfo.IsMultiplayerGame
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::IsMultiplayerGame() {
    static UFunction* pFnIsMultiplayerGame = NULL;

    if (!pFnIsMultiplayerGame)
        pFnIsMultiplayerGame = (UFunction*)UObject::GObjObjects()->Data[22517];

    AGameReplicationInfo_execIsMultiplayerGame_Parms IsMultiplayerGame_Parms;

    this->ProcessEvent(pFnIsMultiplayerGame, &IsMultiplayerGame_Parms, NULL);
};

// Function Engine.GameReplicationInfo.EndGame
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::EndGame() {
    static UFunction* pFnEndGame = NULL;

    if (!pFnEndGame)
        pFnEndGame = (UFunction*)UObject::GObjObjects()->Data[22516];

    AGameReplicationInfo_execEndGame_Parms EndGame_Parms;

    this->ProcessEvent(pFnEndGame, &EndGame_Parms, NULL);
};

// Function Engine.GameReplicationInfo.StartMatch
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::StartMatch() {
    static UFunction* pFnStartMatch = NULL;

    if (!pFnStartMatch)
        pFnStartMatch = (UFunction*)UObject::GObjObjects()->Data[22515];

    AGameReplicationInfo_execStartMatch_Parms StartMatch_Parms;

    this->ProcessEvent(pFnStartMatch, &StartMatch_Parms, NULL);
};

// Function Engine.GameReplicationInfo.SetTeam
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::SetTeam() {
    static UFunction* pFnSetTeam = NULL;

    if (!pFnSetTeam)
        pFnSetTeam = (UFunction*)UObject::GObjObjects()->Data[22512];

    AGameReplicationInfo_execSetTeam_Parms SetTeam_Parms;

    this->ProcessEvent(pFnSetTeam, &SetTeam_Parms, NULL);
};

// Function Engine.GameReplicationInfo.RemovePRI
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::RemovePRI() {
    static UFunction* pFnRemovePRI = NULL;

    if (!pFnRemovePRI)
        pFnRemovePRI = (UFunction*)UObject::GObjObjects()->Data[22509];

    AGameReplicationInfo_execRemovePRI_Parms RemovePRI_Parms;

    this->ProcessEvent(pFnRemovePRI, &RemovePRI_Parms, NULL);
};

// Function Engine.GameReplicationInfo.AddPRI
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::AddPRI() {
    static UFunction* pFnAddPRI = NULL;

    if (!pFnAddPRI) pFnAddPRI = (UFunction*)UObject::GObjObjects()->Data[22506];

    AGameReplicationInfo_execAddPRI_Parms AddPRI_Parms;

    this->ProcessEvent(pFnAddPRI, &AddPRI_Parms, NULL);
};

// Function Engine.GameReplicationInfo.OnSameTeam
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void AGameReplicationInfo::OnSameTeam() {
    static UFunction* pFnOnSameTeam = NULL;

    if (!pFnOnSameTeam)
        pFnOnSameTeam = (UFunction*)UObject::GObjObjects()->Data[22502];

    AGameReplicationInfo_execOnSameTeam_Parms OnSameTeam_Parms;

    pFnOnSameTeam->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnOnSameTeam, &OnSameTeam_Parms, NULL);

    pFnOnSameTeam->FunctionFlags |= 0x400;
};

// Function Engine.GameReplicationInfo.Timer
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AGameReplicationInfo::eventTimer() {
    static UFunction* pFnTimer = NULL;

    if (!pFnTimer) pFnTimer = (UFunction*)UObject::GObjObjects()->Data[22501];

    AGameReplicationInfo_eventTimer_Parms Timer_Parms;

    this->ProcessEvent(pFnTimer, &Timer_Parms, NULL);
};

// Function Engine.GameReplicationInfo.Reset
// [0x00020002]
// Parameters infos:

void AGameReplicationInfo::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[22500];

    AGameReplicationInfo_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.GameReplicationInfo.ReceivedGameClass
// [0x00020102]
// Parameters infos:

void AGameReplicationInfo::ReceivedGameClass() {
    static UFunction* pFnReceivedGameClass = NULL;

    if (!pFnReceivedGameClass)
        pFnReceivedGameClass = (UFunction*)UObject::GObjObjects()->Data[22498];

    AGameReplicationInfo_execReceivedGameClass_Parms ReceivedGameClass_Parms;

    this->ProcessEvent(pFnReceivedGameClass, &ReceivedGameClass_Parms, NULL);
};

// Function Engine.GameReplicationInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AGameReplicationInfo::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[22496];

    AGameReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.GameReplicationInfo.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AGameReplicationInfo::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[22493];

    AGameReplicationInfo_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.HasHadInitialSpawn
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerReplicationInfo::HasHadInitialSpawn() {
    static UFunction* pFnHasHadInitialSpawn = NULL;

    if (!pFnHasHadInitialSpawn)
        pFnHasHadInitialSpawn = (UFunction*)UObject::GObjObjects()->Data[31569];

    APlayerReplicationInfo_execHasHadInitialSpawn_Parms
        HasHadInitialSpawn_Parms;

    pFnHasHadInitialSpawn->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHasHadInitialSpawn, &HasHadInitialSpawn_Parms, NULL);

    pFnHasHadInitialSpawn->FunctionFlags |= 0x400;
};

// Function Engine.PlayerReplicationInfo.IsPrimaryPlayer
// [0x00020102]
// Parameters infos:

void APlayerReplicationInfo::IsPrimaryPlayer() {
    static UFunction* pFnIsPrimaryPlayer = NULL;

    if (!pFnIsPrimaryPlayer)
        pFnIsPrimaryPlayer = (UFunction*)UObject::GObjObjects()->Data[12569];

    APlayerReplicationInfo_execIsPrimaryPlayer_Parms IsPrimaryPlayer_Parms;

    this->ProcessEvent(pFnIsPrimaryPlayer, &IsPrimaryPlayer_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.UnregisterPlayerFromSession
// [0x00820102]
// Parameters infos:

void APlayerReplicationInfo::UnregisterPlayerFromSession() {
    static UFunction* pFnUnregisterPlayerFromSession = NULL;

    if (!pFnUnregisterPlayerFromSession)
        pFnUnregisterPlayerFromSession =
            (UFunction*)UObject::GObjObjects()->Data[31566];

    APlayerReplicationInfo_execUnregisterPlayerFromSession_Parms
        UnregisterPlayerFromSession_Parms;

    this->ProcessEvent(pFnUnregisterPlayerFromSession,
                       &UnregisterPlayerFromSession_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.RegisterPlayerWithSession
// [0x00820102]
// Parameters infos:

void APlayerReplicationInfo::RegisterPlayerWithSession() {
    static UFunction* pFnRegisterPlayerWithSession = NULL;

    if (!pFnRegisterPlayerWithSession)
        pFnRegisterPlayerWithSession =
            (UFunction*)UObject::GObjObjects()->Data[31562];

    APlayerReplicationInfo_execRegisterPlayerWithSession_Parms
        RegisterPlayerWithSession_Parms;

    this->ProcessEvent(pFnRegisterPlayerWithSession,
                       &RegisterPlayerWithSession_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.IsInvalidName
// [0x00020102]
// Parameters infos:

void APlayerReplicationInfo::IsInvalidName() {
    static UFunction* pFnIsInvalidName = NULL;

    if (!pFnIsInvalidName)
        pFnIsInvalidName = (UFunction*)UObject::GObjObjects()->Data[31556];

    APlayerReplicationInfo_execIsInvalidName_Parms IsInvalidName_Parms;

    this->ProcessEvent(pFnIsInvalidName, &IsInvalidName_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void APlayerReplicationInfo::GetTeamNum() {
    static UFunction* pFnGetTeamNum = NULL;

    if (!pFnGetTeamNum)
        pFnGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[31554];

    APlayerReplicationInfo_execGetTeamNum_Parms GetTeamNum_Parms;

    pFnGetTeamNum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTeamNum, &GetTeamNum_Parms, NULL);

    pFnGetTeamNum->FunctionFlags |= 0x400;
};

// Function Engine.PlayerReplicationInfo.SetUniqueId
// [0x00020102]
// Parameters infos:

void APlayerReplicationInfo::SetUniqueId() {
    static UFunction* pFnSetUniqueId = NULL;

    if (!pFnSetUniqueId)
        pFnSetUniqueId = (UFunction*)UObject::GObjObjects()->Data[31552];

    APlayerReplicationInfo_execSetUniqueId_Parms SetUniqueId_Parms;

    this->ProcessEvent(pFnSetUniqueId, &SetUniqueId_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.SeamlessTravelTo
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::SeamlessTravelTo() {
    static UFunction* pFnSeamlessTravelTo = NULL;

    if (!pFnSeamlessTravelTo)
        pFnSeamlessTravelTo = (UFunction*)UObject::GObjObjects()->Data[31550];

    APlayerReplicationInfo_execSeamlessTravelTo_Parms SeamlessTravelTo_Parms;

    this->ProcessEvent(pFnSeamlessTravelTo, &SeamlessTravelTo_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.IncrementDeaths
// [0x00024002]
// Parameters infos:

void APlayerReplicationInfo::IncrementDeaths() {
    static UFunction* pFnIncrementDeaths = NULL;

    if (!pFnIncrementDeaths)
        pFnIncrementDeaths = (UFunction*)UObject::GObjObjects()->Data[31548];

    APlayerReplicationInfo_execIncrementDeaths_Parms IncrementDeaths_Parms;

    this->ProcessEvent(pFnIncrementDeaths, &IncrementDeaths_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.CopyProperties
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::CopyProperties() {
    static UFunction* pFnCopyProperties = NULL;

    if (!pFnCopyProperties)
        pFnCopyProperties = (UFunction*)UObject::GObjObjects()->Data[31546];

    APlayerReplicationInfo_execCopyProperties_Parms CopyProperties_Parms;

    this->ProcessEvent(pFnCopyProperties, &CopyProperties_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.OverrideWith
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::OverrideWith() {
    static UFunction* pFnOverrideWith = NULL;

    if (!pFnOverrideWith)
        pFnOverrideWith = (UFunction*)UObject::GObjObjects()->Data[31544];

    APlayerReplicationInfo_execOverrideWith_Parms OverrideWith_Parms;

    this->ProcessEvent(pFnOverrideWith, &OverrideWith_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.Duplicate
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::Duplicate() {
    static UFunction* pFnDuplicate = NULL;

    if (!pFnDuplicate)
        pFnDuplicate = (UFunction*)UObject::GObjObjects()->Data[21807];

    APlayerReplicationInfo_execDuplicate_Parms Duplicate_Parms;

    this->ProcessEvent(pFnDuplicate, &Duplicate_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.SetWaitingPlayer
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::SetWaitingPlayer() {
    static UFunction* pFnSetWaitingPlayer = NULL;

    if (!pFnSetWaitingPlayer)
        pFnSetWaitingPlayer = (UFunction*)UObject::GObjObjects()->Data[31541];

    APlayerReplicationInfo_execSetWaitingPlayer_Parms SetWaitingPlayer_Parms;

    this->ProcessEvent(pFnSetWaitingPlayer, &SetWaitingPlayer_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.SetPlayerName
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void APlayerReplicationInfo::eventSetPlayerName() {
    static UFunction* pFnSetPlayerName = NULL;

    if (!pFnSetPlayerName)
        pFnSetPlayerName = (UFunction*)UObject::GObjObjects()->Data[31539];

    APlayerReplicationInfo_eventSetPlayerName_Parms SetPlayerName_Parms;

    this->ProcessEvent(pFnSetPlayerName, &SetPlayerName_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.DisplayDebug
// [0x00420102]
// Parameters infos:

void APlayerReplicationInfo::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[31533];

    APlayerReplicationInfo_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.GetHumanReadableName
// [0x00020102]
// Parameters infos:

void APlayerReplicationInfo::GetHumanReadableName() {
    static UFunction* pFnGetHumanReadableName = NULL;

    if (!pFnGetHumanReadableName)
        pFnGetHumanReadableName =
            (UFunction*)UObject::GObjObjects()->Data[31531];

    APlayerReplicationInfo_execGetHumanReadableName_Parms
        GetHumanReadableName_Parms;

    this->ProcessEvent(pFnGetHumanReadableName, &GetHumanReadableName_Parms,
                       NULL);
};

// Function Engine.PlayerReplicationInfo.Reset
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::Reset() {
    static UFunction* pFnReset = NULL;

    if (!pFnReset) pFnReset = (UFunction*)UObject::GObjObjects()->Data[31530];

    APlayerReplicationInfo_execReset_Parms Reset_Parms;

    this->ProcessEvent(pFnReset, &Reset_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.Destroyed
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void APlayerReplicationInfo::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[31527];

    APlayerReplicationInfo_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.ShouldBroadCastWelcomeMessage
// [0x00024102]
// Parameters infos:

void APlayerReplicationInfo::ShouldBroadCastWelcomeMessage() {
    static UFunction* pFnShouldBroadCastWelcomeMessage = NULL;

    if (!pFnShouldBroadCastWelcomeMessage)
        pFnShouldBroadCastWelcomeMessage =
            (UFunction*)UObject::GObjObjects()->Data[31524];

    APlayerReplicationInfo_execShouldBroadCastWelcomeMessage_Parms
        ShouldBroadCastWelcomeMessage_Parms;

    this->ProcessEvent(pFnShouldBroadCastWelcomeMessage,
                       &ShouldBroadCastWelcomeMessage_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.UpdatePing
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void APlayerReplicationInfo::UpdatePing() {
    static UFunction* pFnUpdatePing = NULL;

    if (!pFnUpdatePing)
        pFnUpdatePing = (UFunction*)UObject::GObjObjects()->Data[12480];

    APlayerReplicationInfo_execUpdatePing_Parms UpdatePing_Parms;

    pFnUpdatePing->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdatePing, &UpdatePing_Parms, NULL);

    pFnUpdatePing->FunctionFlags |= 0x400;
};

// Function Engine.PlayerReplicationInfo.ReplicatedEvent
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void APlayerReplicationInfo::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[31516];

    APlayerReplicationInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.SetPlayerTeam
// [0x00020002]
// Parameters infos:

void APlayerReplicationInfo::SetPlayerTeam() {
    static UFunction* pFnSetPlayerTeam = NULL;

    if (!pFnSetPlayerTeam)
        pFnSetPlayerTeam = (UFunction*)UObject::GObjObjects()->Data[31514];

    APlayerReplicationInfo_execSetPlayerTeam_Parms SetPlayerTeam_Parms;

    this->ProcessEvent(pFnSetPlayerTeam, &SetPlayerTeam_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.ClientInitialize
// [0x00020102]
// Parameters infos:

void APlayerReplicationInfo::ClientInitialize() {
    static UFunction* pFnClientInitialize = NULL;

    if (!pFnClientInitialize)
        pFnClientInitialize = (UFunction*)UObject::GObjObjects()->Data[31510];

    APlayerReplicationInfo_execClientInitialize_Parms ClientInitialize_Parms;

    this->ProcessEvent(pFnClientInitialize, &ClientInitialize_Parms, NULL);
};

// Function Engine.PlayerReplicationInfo.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APlayerReplicationInfo::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[31509];

    APlayerReplicationInfo_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.TeamInfo.GetTeamNum
// [0x00020500] ( FUNC_Native )
// Parameters infos:

void ATeamInfo::GetTeamNum() {
    static UFunction* pFnGetTeamNum = NULL;

    if (!pFnGetTeamNum)
        pFnGetTeamNum = (UFunction*)UObject::GObjObjects()->Data[35135];

    ATeamInfo_execGetTeamNum_Parms GetTeamNum_Parms;

    pFnGetTeamNum->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetTeamNum, &GetTeamNum_Parms, NULL);

    pFnGetTeamNum->FunctionFlags |= 0x400;
};

// Function Engine.TeamInfo.GetHumanReadableName
// [0x00020102]
// Parameters infos:

void ATeamInfo::GetHumanReadableName() {
    static UFunction* pFnGetHumanReadableName = NULL;

    if (!pFnGetHumanReadableName)
        pFnGetHumanReadableName =
            (UFunction*)UObject::GObjObjects()->Data[21948];

    ATeamInfo_execGetHumanReadableName_Parms GetHumanReadableName_Parms;

    this->ProcessEvent(pFnGetHumanReadableName, &GetHumanReadableName_Parms,
                       NULL);
};

// Function Engine.TeamInfo.RemoveFromTeam
// [0x00020002]
// Parameters infos:

void ATeamInfo::RemoveFromTeam() {
    static UFunction* pFnRemoveFromTeam = NULL;

    if (!pFnRemoveFromTeam)
        pFnRemoveFromTeam = (UFunction*)UObject::GObjObjects()->Data[35133];

    ATeamInfo_execRemoveFromTeam_Parms RemoveFromTeam_Parms;

    this->ProcessEvent(pFnRemoveFromTeam, &RemoveFromTeam_Parms, NULL);
};

// Function Engine.TeamInfo.AddToTeam
// [0x00020002]
// Parameters infos:

void ATeamInfo::AddToTeam() {
    static UFunction* pFnAddToTeam = NULL;

    if (!pFnAddToTeam)
        pFnAddToTeam = (UFunction*)UObject::GObjObjects()->Data[35130];

    ATeamInfo_execAddToTeam_Parms AddToTeam_Parms;

    this->ProcessEvent(pFnAddToTeam, &AddToTeam_Parms, NULL);
};

// Function Engine.TeamInfo.Destroyed
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATeamInfo::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[35128];

    ATeamInfo_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.TeamInfo.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATeamInfo::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[35126];

    ATeamInfo_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.Camera.StopCameraAnim
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void ACamera::StopCameraAnim() {
    static UFunction* pFnStopCameraAnim = NULL;

    if (!pFnStopCameraAnim)
        pFnStopCameraAnim = (UFunction*)UObject::GObjObjects()->Data[9051];

    ACamera_execStopCameraAnim_Parms StopCameraAnim_Parms;

    pFnStopCameraAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopCameraAnim, &StopCameraAnim_Parms, NULL);

    pFnStopCameraAnim->FunctionFlags |= 0x400;
};

// Function Engine.Camera.StopAllCameraAnimsByType
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void ACamera::StopAllCameraAnimsByType() {
    static UFunction* pFnStopAllCameraAnimsByType = NULL;

    if (!pFnStopAllCameraAnimsByType)
        pFnStopAllCameraAnimsByType =
            (UFunction*)UObject::GObjObjects()->Data[9048];

    ACamera_execStopAllCameraAnimsByType_Parms StopAllCameraAnimsByType_Parms;

    pFnStopAllCameraAnimsByType->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopAllCameraAnimsByType,
                       &StopAllCameraAnimsByType_Parms, NULL);

    pFnStopAllCameraAnimsByType->FunctionFlags |= 0x400;
};

// Function Engine.Camera.StopAllCameraAnims
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void ACamera::StopAllCameraAnims() {
    static UFunction* pFnStopAllCameraAnims = NULL;

    if (!pFnStopAllCameraAnims)
        pFnStopAllCameraAnims = (UFunction*)UObject::GObjObjects()->Data[9046];

    ACamera_execStopAllCameraAnims_Parms StopAllCameraAnims_Parms;

    pFnStopAllCameraAnims->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStopAllCameraAnims, &StopAllCameraAnims_Parms, NULL);

    pFnStopAllCameraAnims->FunctionFlags |= 0x400;
};

// Function Engine.Camera.PlayCameraAnim
// [0x00024500] ( FUNC_Native )
// Parameters infos:

void ACamera::PlayCameraAnim() {
    static UFunction* pFnPlayCameraAnim = NULL;

    if (!pFnPlayCameraAnim)
        pFnPlayCameraAnim = (UFunction*)UObject::GObjObjects()->Data[9035];

    ACamera_execPlayCameraAnim_Parms PlayCameraAnim_Parms;

    pFnPlayCameraAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlayCameraAnim, &PlayCameraAnim_Parms, NULL);

    pFnPlayCameraAnim->FunctionFlags |= 0x400;
};

// Function Engine.Camera.ClearAllCameraShakes
// [0x00020002]
// Parameters infos:

void ACamera::ClearAllCameraShakes() {
    static UFunction* pFnClearAllCameraShakes = NULL;

    if (!pFnClearAllCameraShakes)
        pFnClearAllCameraShakes =
            (UFunction*)UObject::GObjObjects()->Data[9034];

    ACamera_execClearAllCameraShakes_Parms ClearAllCameraShakes_Parms;

    this->ProcessEvent(pFnClearAllCameraShakes, &ClearAllCameraShakes_Parms,
                       NULL);
};

// Function Engine.Camera.PlayWorldCameraShake
// [0x00826002]
// Parameters infos:

void ACamera::PlayWorldCameraShake() {
    static UFunction* pFnPlayWorldCameraShake = NULL;

    if (!pFnPlayWorldCameraShake)
        pFnPlayWorldCameraShake =
            (UFunction*)UObject::GObjObjects()->Data[9021];

    ACamera_execPlayWorldCameraShake_Parms PlayWorldCameraShake_Parms;

    this->ProcessEvent(pFnPlayWorldCameraShake, &PlayWorldCameraShake_Parms,
                       NULL);
};

// Function Engine.Camera.CalcRadialShakeScale
// [0x00822002]
// Parameters infos:

void ACamera::CalcRadialShakeScale() {
    static UFunction* pFnCalcRadialShakeScale = NULL;

    if (!pFnCalcRadialShakeScale)
        pFnCalcRadialShakeScale =
            (UFunction*)UObject::GObjObjects()->Data[9012];

    ACamera_execCalcRadialShakeScale_Parms CalcRadialShakeScale_Parms;

    this->ProcessEvent(pFnCalcRadialShakeScale, &CalcRadialShakeScale_Parms,
                       NULL);
};

// Function Engine.Camera.StopCameraShake
// [0x00020002]
// Parameters infos:

void ACamera::StopCameraShake() {
    static UFunction* pFnStopCameraShake = NULL;

    if (!pFnStopCameraShake)
        pFnStopCameraShake = (UFunction*)UObject::GObjObjects()->Data[9010];

    ACamera_execStopCameraShake_Parms StopCameraShake_Parms;

    this->ProcessEvent(pFnStopCameraShake, &StopCameraShake_Parms, NULL);
};

// Function Engine.Camera.PlayCameraShake
// [0x00024002]
// Parameters infos:

void ACamera::PlayCameraShake() {
    static UFunction* pFnPlayCameraShake = NULL;

    if (!pFnPlayCameraShake)
        pFnPlayCameraShake = (UFunction*)UObject::GObjObjects()->Data[9005];

    ACamera_execPlayCameraShake_Parms PlayCameraShake_Parms;

    this->ProcessEvent(pFnPlayCameraShake, &PlayCameraShake_Parms, NULL);
};

// Function Engine.Camera.ClearCameraLensEffects
// [0x00020002]
// Parameters infos:

void ACamera::ClearCameraLensEffects() {
    static UFunction* pFnClearCameraLensEffects = NULL;

    if (!pFnClearCameraLensEffects)
        pFnClearCameraLensEffects =
            (UFunction*)UObject::GObjObjects()->Data[9003];

    ACamera_execClearCameraLensEffects_Parms ClearCameraLensEffects_Parms;

    this->ProcessEvent(pFnClearCameraLensEffects, &ClearCameraLensEffects_Parms,
                       NULL);
};

// Function Engine.Camera.RemoveCameraLensEffect
// [0x00020002]
// Parameters infos:

void ACamera::RemoveCameraLensEffect() {
    static UFunction* pFnRemoveCameraLensEffect = NULL;

    if (!pFnRemoveCameraLensEffect)
        pFnRemoveCameraLensEffect =
            (UFunction*)UObject::GObjObjects()->Data[9001];

    ACamera_execRemoveCameraLensEffect_Parms RemoveCameraLensEffect_Parms;

    this->ProcessEvent(pFnRemoveCameraLensEffect, &RemoveCameraLensEffect_Parms,
                       NULL);
};

// Function Engine.Camera.AddCameraLensEffect
// [0x00820002]
// Parameters infos:

void ACamera::AddCameraLensEffect() {
    static UFunction* pFnAddCameraLensEffect = NULL;

    if (!pFnAddCameraLensEffect)
        pFnAddCameraLensEffect = (UFunction*)UObject::GObjObjects()->Data[8996];

    ACamera_execAddCameraLensEffect_Parms AddCameraLensEffect_Parms;

    this->ProcessEvent(pFnAddCameraLensEffect, &AddCameraLensEffect_Parms,
                       NULL);
};

// Function Engine.Camera.FindCameraLensEffect
// [0x00020002]
// Parameters infos:

void ACamera::FindCameraLensEffect() {
    static UFunction* pFnFindCameraLensEffect = NULL;

    if (!pFnFindCameraLensEffect)
        pFnFindCameraLensEffect =
            (UFunction*)UObject::GObjObjects()->Data[8992];

    ACamera_execFindCameraLensEffect_Parms FindCameraLensEffect_Parms;

    this->ProcessEvent(pFnFindCameraLensEffect, &FindCameraLensEffect_Parms,
                       NULL);
};

// Function Engine.Camera.DisplayDebug
// [0x00C20102]
// Parameters infos:

void ACamera::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[8985];

    ACamera_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.Camera.ProcessViewRotation
// [0x00420002]
// Parameters infos:

void ACamera::ProcessViewRotation() {
    static UFunction* pFnProcessViewRotation = NULL;

    if (!pFnProcessViewRotation)
        pFnProcessViewRotation = (UFunction*)UObject::GObjObjects()->Data[8980];

    ACamera_execProcessViewRotation_Parms ProcessViewRotation_Parms;

    this->ProcessEvent(pFnProcessViewRotation, &ProcessViewRotation_Parms,
                       NULL);
};

// Function Engine.Camera.SetViewTarget
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void ACamera::SetViewTarget() {
    static UFunction* pFnSetViewTarget = NULL;

    if (!pFnSetViewTarget)
        pFnSetViewTarget = (UFunction*)UObject::GObjObjects()->Data[8977];

    ACamera_execSetViewTarget_Parms SetViewTarget_Parms;

    pFnSetViewTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetViewTarget, &SetViewTarget_Parms, NULL);

    pFnSetViewTarget->FunctionFlags |= 0x400;
};

// Function Engine.Camera.UpdateViewTarget
// [0x00C20002]
// Parameters infos:

void ACamera::UpdateViewTarget() {
    static UFunction* pFnUpdateViewTarget = NULL;

    if (!pFnUpdateViewTarget)
        pFnUpdateViewTarget = (UFunction*)UObject::GObjObjects()->Data[8964];

    ACamera_execUpdateViewTarget_Parms UpdateViewTarget_Parms;

    this->ProcessEvent(pFnUpdateViewTarget, &UpdateViewTarget_Parms, NULL);
};

// Function Engine.Camera.CheckViewTarget
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void ACamera::CheckViewTarget() {
    static UFunction* pFnCheckViewTarget = NULL;

    if (!pFnCheckViewTarget)
        pFnCheckViewTarget = (UFunction*)UObject::GObjObjects()->Data[8715];

    ACamera_execCheckViewTarget_Parms CheckViewTarget_Parms;

    pFnCheckViewTarget->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCheckViewTarget, &CheckViewTarget_Parms, NULL);

    pFnCheckViewTarget->FunctionFlags |= 0x400;
};

// Function Engine.Camera.FillCameraCache
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void ACamera::FillCameraCache() {
    static UFunction* pFnFillCameraCache = NULL;

    if (!pFnFillCameraCache)
        pFnFillCameraCache = (UFunction*)UObject::GObjObjects()->Data[8713];

    ACamera_execFillCameraCache_Parms FillCameraCache_Parms;

    this->ProcessEvent(pFnFillCameraCache, &FillCameraCache_Parms, NULL);
};

// Function Engine.Camera.BlendViewTargets
// [0x00C20003] ( FUNC_Final )
// Parameters infos:

void ACamera::BlendViewTargets() {
    static UFunction* pFnBlendViewTargets = NULL;

    if (!pFnBlendViewTargets)
        pFnBlendViewTargets = (UFunction*)UObject::GObjObjects()->Data[8707];

    ACamera_execBlendViewTargets_Parms BlendViewTargets_Parms;

    this->ProcessEvent(pFnBlendViewTargets, &BlendViewTargets_Parms, NULL);
};

// Function Engine.Camera.ApplyAudioFade
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ACamera::ApplyAudioFade() {
    static UFunction* pFnApplyAudioFade = NULL;

    if (!pFnApplyAudioFade)
        pFnApplyAudioFade = (UFunction*)UObject::GObjObjects()->Data[8706];

    ACamera_execApplyAudioFade_Parms ApplyAudioFade_Parms;

    pFnApplyAudioFade->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnApplyAudioFade, &ApplyAudioFade_Parms, NULL);

    pFnApplyAudioFade->FunctionFlags |= 0x400;
};

// Function Engine.Camera.DoUpdateCamera
// [0x00820102]
// Parameters infos:

void ACamera::DoUpdateCamera() {
    static UFunction* pFnDoUpdateCamera = NULL;

    if (!pFnDoUpdateCamera)
        pFnDoUpdateCamera = (UFunction*)UObject::GObjObjects()->Data[8701];

    ACamera_execDoUpdateCamera_Parms DoUpdateCamera_Parms;

    this->ProcessEvent(pFnDoUpdateCamera, &DoUpdateCamera_Parms, NULL);
};

// Function Engine.Camera.UpdateCamera
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ACamera::eventUpdateCamera() {
    static UFunction* pFnUpdateCamera = NULL;

    if (!pFnUpdateCamera)
        pFnUpdateCamera = (UFunction*)UObject::GObjObjects()->Data[8699];

    ACamera_eventUpdateCamera_Parms UpdateCamera_Parms;

    this->ProcessEvent(pFnUpdateCamera, &UpdateCamera_Parms, NULL);
};

// Function Engine.Camera.SetDesiredColorScale
// [0x00020102]
// Parameters infos:

void ACamera::SetDesiredColorScale() {
    static UFunction* pFnSetDesiredColorScale = NULL;

    if (!pFnSetDesiredColorScale)
        pFnSetDesiredColorScale =
            (UFunction*)UObject::GObjObjects()->Data[8696];

    ACamera_execSetDesiredColorScale_Parms SetDesiredColorScale_Parms;

    this->ProcessEvent(pFnSetDesiredColorScale, &SetDesiredColorScale_Parms,
                       NULL);
};

// Function Engine.Camera.GetCameraRotation
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void ACamera::GetCameraRotation() {
    static UFunction* pFnGetCameraRotation = NULL;

    if (!pFnGetCameraRotation)
        pFnGetCameraRotation = (UFunction*)UObject::GObjObjects()->Data[8694];

    ACamera_execGetCameraRotation_Parms GetCameraRotation_Parms;

    this->ProcessEvent(pFnGetCameraRotation, &GetCameraRotation_Parms, NULL);
};

// Function Engine.Camera.GetCameraViewPoint
// [0x00420003] ( FUNC_Final )
// Parameters infos:

void ACamera::GetCameraViewPoint() {
    static UFunction* pFnGetCameraViewPoint = NULL;

    if (!pFnGetCameraViewPoint)
        pFnGetCameraViewPoint = (UFunction*)UObject::GObjObjects()->Data[8691];

    ACamera_execGetCameraViewPoint_Parms GetCameraViewPoint_Parms;

    this->ProcessEvent(pFnGetCameraViewPoint, &GetCameraViewPoint_Parms, NULL);
};

// Function Engine.Camera.GetActualFOV
// [0x00020002]
// Parameters infos:

void ACamera::GetActualFOV() {
    static UFunction* pFnGetActualFOV = NULL;

    if (!pFnGetActualFOV)
        pFnGetActualFOV = (UFunction*)UObject::GObjObjects()->Data[8689];

    ACamera_execGetActualFOV_Parms GetActualFOV_Parms;

    this->ProcessEvent(pFnGetActualFOV, &GetActualFOV_Parms, NULL);
};

// Function Engine.Camera.SetUnmodifiedFOV
// [0x00020002]
// Parameters infos:

void ACamera::SetUnmodifiedFOV() {
    static UFunction* pFnSetUnmodifiedFOV = NULL;

    if (!pFnSetUnmodifiedFOV)
        pFnSetUnmodifiedFOV = (UFunction*)UObject::GObjObjects()->Data[8687];

    ACamera_execSetUnmodifiedFOV_Parms SetUnmodifiedFOV_Parms;

    this->ProcessEvent(pFnSetUnmodifiedFOV, &SetUnmodifiedFOV_Parms, NULL);
};

// Function Engine.Camera.SetFOV
// [0x00020002]
// Parameters infos:

void ACamera::SetFOV() {
    static UFunction* pFnSetFOV = NULL;

    if (!pFnSetFOV) pFnSetFOV = (UFunction*)UObject::GObjObjects()->Data[8685];

    ACamera_execSetFOV_Parms SetFOV_Parms;

    this->ProcessEvent(pFnSetFOV, &SetFOV_Parms, NULL);
};

// Function Engine.Camera.GetFOVAngle
// [0x00020002]
// Parameters infos:

void ACamera::GetFOVAngle() {
    static UFunction* pFnGetFOVAngle = NULL;

    if (!pFnGetFOVAngle)
        pFnGetFOVAngle = (UFunction*)UObject::GObjObjects()->Data[8683];

    ACamera_execGetFOVAngle_Parms GetFOVAngle_Parms;

    this->ProcessEvent(pFnGetFOVAngle, &GetFOVAngle_Parms, NULL);
};

// Function Engine.Camera.InitializeFor
// [0x00020002]
// Parameters infos:

void ACamera::InitializeFor() {
    static UFunction* pFnInitializeFor = NULL;

    if (!pFnInitializeFor)
        pFnInitializeFor = (UFunction*)UObject::GObjObjects()->Data[8681];

    ACamera_execInitializeFor_Parms InitializeFor_Parms;

    this->ProcessEvent(pFnInitializeFor, &InitializeFor_Parms, NULL);
};

// Function Engine.Camera.ApplyCameraModifiers
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void ACamera::ApplyCameraModifiers() {
    static UFunction* pFnApplyCameraModifiers = NULL;

    if (!pFnApplyCameraModifiers)
        pFnApplyCameraModifiers =
            (UFunction*)UObject::GObjObjects()->Data[8678];

    ACamera_execApplyCameraModifiers_Parms ApplyCameraModifiers_Parms;

    pFnApplyCameraModifiers->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnApplyCameraModifiers, &ApplyCameraModifiers_Parms,
                       NULL);

    pFnApplyCameraModifiers->FunctionFlags |= 0x400;
};

// Function Engine.Camera.Destroyed
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ACamera::eventDestroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[8677];

    ACamera_eventDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.Camera.PostBeginPlay
// [0x00020002]
// Parameters infos:

void ACamera::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[8675];

    ACamera_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Camera.CreateCameraModifier
// [0x00080002]
// Parameters infos:

void ACamera::CreateCameraModifier() {
    static UFunction* pFnCreateCameraModifier = NULL;

    if (!pFnCreateCameraModifier)
        pFnCreateCameraModifier =
            (UFunction*)UObject::GObjObjects()->Data[8671];

    ACamera_execCreateCameraModifier_Parms CreateCameraModifier_Parms;

    this->ProcessEvent(pFnCreateCameraModifier, &CreateCameraModifier_Parms,
                       NULL);
};

// Function Engine.CameraActor.DisplayDebug
// [0x00420102]
// Parameters infos:

void ACameraActor::DisplayDebug() {
    static UFunction* pFnDisplayDebug = NULL;

    if (!pFnDisplayDebug)
        pFnDisplayDebug = (UFunction*)UObject::GObjObjects()->Data[15432];

    ACameraActor_execDisplayDebug_Parms DisplayDebug_Parms;

    this->ProcessEvent(pFnDisplayDebug, &DisplayDebug_Parms, NULL);
};

// Function Engine.CameraActor.GetCameraView
// [0x00420102]
// Parameters infos:

void ACameraActor::GetCameraView() {
    static UFunction* pFnGetCameraView = NULL;

    if (!pFnGetCameraView)
        pFnGetCameraView = (UFunction*)UObject::GObjObjects()->Data[15429];

    ACameraActor_execGetCameraView_Parms GetCameraView_Parms;

    this->ProcessEvent(pFnGetCameraView, &GetCameraView_Parms, NULL);
};

// Function Engine.CameraAnimInst.SetPlaySpace
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCameraAnimInst::SetPlaySpace() {
    static UFunction* pFnSetPlaySpace = NULL;

    if (!pFnSetPlaySpace)
        pFnSetPlaySpace = (UFunction*)UObject::GObjObjects()->Data[12207];

    UCameraAnimInst_execSetPlaySpace_Parms SetPlaySpace_Parms;

    pFnSetPlaySpace->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetPlaySpace, &SetPlaySpace_Parms, NULL);

    pFnSetPlaySpace->FunctionFlags |= 0x400;
};

// Function Engine.CameraAnimInst.ApplyTransientScaling
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCameraAnimInst::ApplyTransientScaling() {
    static UFunction* pFnApplyTransientScaling = NULL;

    if (!pFnApplyTransientScaling)
        pFnApplyTransientScaling =
            (UFunction*)UObject::GObjObjects()->Data[15497];

    UCameraAnimInst_execApplyTransientScaling_Parms ApplyTransientScaling_Parms;

    pFnApplyTransientScaling->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnApplyTransientScaling, &ApplyTransientScaling_Parms,
                       NULL);

    pFnApplyTransientScaling->FunctionFlags |= 0x400;
};

// Function Engine.CameraAnimInst.Stop
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCameraAnimInst::Stop() {
    static UFunction* pFnStop = NULL;

    if (!pFnStop) pFnStop = (UFunction*)UObject::GObjObjects()->Data[15495];

    UCameraAnimInst_execStop_Parms Stop_Parms;

    pFnStop->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStop, &Stop_Parms, NULL);

    pFnStop->FunctionFlags |= 0x400;
};

// Function Engine.CameraAnimInst.AdvanceAnim
// [0x00020401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCameraAnimInst::AdvanceAnim() {
    static UFunction* pFnAdvanceAnim = NULL;

    if (!pFnAdvanceAnim)
        pFnAdvanceAnim = (UFunction*)UObject::GObjObjects()->Data[15492];

    UCameraAnimInst_execAdvanceAnim_Parms AdvanceAnim_Parms;

    pFnAdvanceAnim->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAdvanceAnim, &AdvanceAnim_Parms, NULL);

    pFnAdvanceAnim->FunctionFlags |= 0x400;
};

// Function Engine.CameraAnimInst.Update
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCameraAnimInst::Update() {
    static UFunction* pFnUpdate = NULL;

    if (!pFnUpdate) pFnUpdate = (UFunction*)UObject::GObjObjects()->Data[15486];

    UCameraAnimInst_execUpdate_Parms Update_Parms;

    pFnUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdate, &Update_Parms, NULL);

    pFnUpdate->FunctionFlags |= 0x400;
};

// Function Engine.CameraAnimInst.Play
// [0x00024401] ( FUNC_Final | FUNC_Native )
// Parameters infos:

void UCameraAnimInst::Play() {
    static UFunction* pFnPlay = NULL;

    if (!pFnPlay) pFnPlay = (UFunction*)UObject::GObjObjects()->Data[15476];

    UCameraAnimInst_execPlay_Parms Play_Parms;

    pFnPlay->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnPlay, &Play_Parms, NULL);

    pFnPlay->FunctionFlags |= 0x400;
};

// Function Engine.CameraModifier.UpdateAlpha
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCameraModifier::UpdateAlpha() {
    static UFunction* pFnUpdateAlpha = NULL;

    if (!pFnUpdateAlpha)
        pFnUpdateAlpha = (UFunction*)UObject::GObjObjects()->Data[15536];

    UCameraModifier_execUpdateAlpha_Parms UpdateAlpha_Parms;

    pFnUpdateAlpha->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateAlpha, &UpdateAlpha_Parms, NULL);

    pFnUpdateAlpha->FunctionFlags |= 0x400;
};

// Function Engine.CameraModifier.ProcessViewRotation
// [0x00420100]
// Parameters infos:

void UCameraModifier::ProcessViewRotation() {
    static UFunction* pFnProcessViewRotation = NULL;

    if (!pFnProcessViewRotation)
        pFnProcessViewRotation = (UFunction*)UObject::GObjObjects()->Data[9058];

    UCameraModifier_execProcessViewRotation_Parms ProcessViewRotation_Parms;

    this->ProcessEvent(pFnProcessViewRotation, &ProcessViewRotation_Parms,
                       NULL);
};

// Function Engine.CameraModifier.ToggleModifier
// [0x00020002]
// Parameters infos:

void UCameraModifier::ToggleModifier() {
    static UFunction* pFnToggleModifier = NULL;

    if (!pFnToggleModifier)
        pFnToggleModifier = (UFunction*)UObject::GObjObjects()->Data[15531];

    UCameraModifier_execToggleModifier_Parms ToggleModifier_Parms;

    this->ProcessEvent(pFnToggleModifier, &ToggleModifier_Parms, NULL);
};

// Function Engine.CameraModifier.EnableModifier
// [0x00020002]
// Parameters infos:

void UCameraModifier::EnableModifier() {
    static UFunction* pFnEnableModifier = NULL;

    if (!pFnEnableModifier)
        pFnEnableModifier = (UFunction*)UObject::GObjObjects()->Data[15530];

    UCameraModifier_execEnableModifier_Parms EnableModifier_Parms;

    this->ProcessEvent(pFnEnableModifier, &EnableModifier_Parms, NULL);
};

// Function Engine.CameraModifier.DisableModifier
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void UCameraModifier::eventDisableModifier() {
    static UFunction* pFnDisableModifier = NULL;

    if (!pFnDisableModifier)
        pFnDisableModifier = (UFunction*)UObject::GObjObjects()->Data[15528];

    UCameraModifier_eventDisableModifier_Parms DisableModifier_Parms;

    this->ProcessEvent(pFnDisableModifier, &DisableModifier_Parms, NULL);
};

// Function Engine.CameraModifier.RemoveCameraModifier
// [0x00020002]
// Parameters infos:

void UCameraModifier::RemoveCameraModifier() {
    static UFunction* pFnRemoveCameraModifier = NULL;

    if (!pFnRemoveCameraModifier)
        pFnRemoveCameraModifier =
            (UFunction*)UObject::GObjObjects()->Data[15524];

    UCameraModifier_execRemoveCameraModifier_Parms RemoveCameraModifier_Parms;

    this->ProcessEvent(pFnRemoveCameraModifier, &RemoveCameraModifier_Parms,
                       NULL);
};

// Function Engine.CameraModifier.AddCameraModifier
// [0x00020002]
// Parameters infos:

void UCameraModifier::AddCameraModifier() {
    static UFunction* pFnAddCameraModifier = NULL;

    if (!pFnAddCameraModifier)
        pFnAddCameraModifier = (UFunction*)UObject::GObjObjects()->Data[9069];

    UCameraModifier_execAddCameraModifier_Parms AddCameraModifier_Parms;

    this->ProcessEvent(pFnAddCameraModifier, &AddCameraModifier_Parms, NULL);
};

// Function Engine.CameraModifier.IsDisabled
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCameraModifier::IsDisabled() {
    static UFunction* pFnIsDisabled = NULL;

    if (!pFnIsDisabled)
        pFnIsDisabled = (UFunction*)UObject::GObjObjects()->Data[15518];

    UCameraModifier_execIsDisabled_Parms IsDisabled_Parms;

    pFnIsDisabled->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsDisabled, &IsDisabled_Parms, NULL);

    pFnIsDisabled->FunctionFlags |= 0x400;
};

// Function Engine.CameraModifier.ModifyCamera
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UCameraModifier::ModifyCamera() {
    static UFunction* pFnModifyCamera = NULL;

    if (!pFnModifyCamera)
        pFnModifyCamera = (UFunction*)UObject::GObjObjects()->Data[15513];

    UCameraModifier_execModifyCamera_Parms ModifyCamera_Parms;

    pFnModifyCamera->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnModifyCamera, &ModifyCamera_Parms, NULL);

    pFnModifyCamera->FunctionFlags |= 0x400;
};

// Function Engine.CameraModifier.Init
// [0x00020000]
// Parameters infos:

void UCameraModifier::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[15512];

    UCameraModifier_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.CameraModifier_CameraShake.ModifyCamera
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UCameraModifier_CameraShake::ModifyCamera() {
    static UFunction* pFnModifyCamera = NULL;

    if (!pFnModifyCamera)
        pFnModifyCamera = (UFunction*)UObject::GObjObjects()->Data[15628];

    UCameraModifier_CameraShake_execModifyCamera_Parms ModifyCamera_Parms;

    pFnModifyCamera->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnModifyCamera, &ModifyCamera_Parms, NULL);

    pFnModifyCamera->FunctionFlags |= 0x400;
};

// Function Engine.CameraModifier_CameraShake.UpdateCameraShake
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UCameraModifier_CameraShake::UpdateCameraShake() {
    static UFunction* pFnUpdateCameraShake = NULL;

    if (!pFnUpdateCameraShake)
        pFnUpdateCameraShake = (UFunction*)UObject::GObjObjects()->Data[15624];

    UCameraModifier_CameraShake_execUpdateCameraShake_Parms
        UpdateCameraShake_Parms;

    pFnUpdateCameraShake->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpdateCameraShake, &UpdateCameraShake_Parms, NULL);

    pFnUpdateCameraShake->FunctionFlags |= 0x400;
};

// Function Engine.CameraModifier_CameraShake.RemoveAllCameraShakes
// [0x00020002]
// Parameters infos:

void UCameraModifier_CameraShake::RemoveAllCameraShakes() {
    static UFunction* pFnRemoveAllCameraShakes = NULL;

    if (!pFnRemoveAllCameraShakes)
        pFnRemoveAllCameraShakes =
            (UFunction*)UObject::GObjObjects()->Data[15621];

    UCameraModifier_CameraShake_execRemoveAllCameraShakes_Parms
        RemoveAllCameraShakes_Parms;

    this->ProcessEvent(pFnRemoveAllCameraShakes, &RemoveAllCameraShakes_Parms,
                       NULL);
};

// Function Engine.CameraModifier_CameraShake.RemoveCameraShake
// [0x00020002]
// Parameters infos:

void UCameraModifier_CameraShake::RemoveCameraShake() {
    static UFunction* pFnRemoveCameraShake = NULL;

    if (!pFnRemoveCameraShake)
        pFnRemoveCameraShake = (UFunction*)UObject::GObjObjects()->Data[15617];

    UCameraModifier_CameraShake_execRemoveCameraShake_Parms
        RemoveCameraShake_Parms;

    this->ProcessEvent(pFnRemoveCameraShake, &RemoveCameraShake_Parms, NULL);
};

// Function Engine.CameraModifier_CameraShake.AddCameraShake
// [0x00024002]
// Parameters infos:

void UCameraModifier_CameraShake::AddCameraShake() {
    static UFunction* pFnAddCameraShake = NULL;

    if (!pFnAddCameraShake)
        pFnAddCameraShake = (UFunction*)UObject::GObjObjects()->Data[15610];

    UCameraModifier_CameraShake_execAddCameraShake_Parms AddCameraShake_Parms;

    this->ProcessEvent(pFnAddCameraShake, &AddCameraShake_Parms, NULL);
};

// Function Engine.CameraModifier_CameraShake.InitializeShake
// [0x00884002]
// Parameters infos:

void UCameraModifier_CameraShake::InitializeShake() {
    static UFunction* pFnInitializeShake = NULL;

    if (!pFnInitializeShake)
        pFnInitializeShake = (UFunction*)UObject::GObjObjects()->Data[15600];

    UCameraModifier_CameraShake_execInitializeShake_Parms InitializeShake_Parms;

    this->ProcessEvent(pFnInitializeShake, &InitializeShake_Parms, NULL);
};

// Function Engine.CameraModifier_CameraShake.ReinitShake
// [0x00080002]
// Parameters infos:

void UCameraModifier_CameraShake::ReinitShake() {
    static UFunction* pFnReinitShake = NULL;

    if (!pFnReinitShake)
        pFnReinitShake = (UFunction*)UObject::GObjObjects()->Data[15593];

    UCameraModifier_CameraShake_execReinitShake_Parms ReinitShake_Parms;

    this->ProcessEvent(pFnReinitShake, &ReinitShake_Parms, NULL);
};

// Function Engine.CameraModifier_CameraShake.InitializeOffset
// [0x00482002]
// Parameters infos:

void UCameraModifier_CameraShake::InitializeOffset() {
    static UFunction* pFnInitializeOffset = NULL;

    if (!pFnInitializeOffset)
        pFnInitializeOffset = (UFunction*)UObject::GObjObjects()->Data[15590];

    UCameraModifier_CameraShake_execInitializeOffset_Parms
        InitializeOffset_Parms;

    this->ProcessEvent(pFnInitializeOffset, &InitializeOffset_Parms, NULL);
};

// Function Engine.CameraShake.GetLocOscillationMagnitude
// [0x00820102]
// Parameters infos:

void UCameraShake::GetLocOscillationMagnitude() {
    static UFunction* pFnGetLocOscillationMagnitude = NULL;

    if (!pFnGetLocOscillationMagnitude)
        pFnGetLocOscillationMagnitude =
            (UFunction*)UObject::GObjObjects()->Data[15539];

    UCameraShake_execGetLocOscillationMagnitude_Parms
        GetLocOscillationMagnitude_Parms;

    this->ProcessEvent(pFnGetLocOscillationMagnitude,
                       &GetLocOscillationMagnitude_Parms, NULL);
};

// Function Engine.CameraShake.GetRotOscillationMagnitude
// [0x00820102]
// Parameters infos:

void UCameraShake::GetRotOscillationMagnitude() {
    static UFunction* pFnGetRotOscillationMagnitude = NULL;

    if (!pFnGetRotOscillationMagnitude)
        pFnGetRotOscillationMagnitude =
            (UFunction*)UObject::GObjObjects()->Data[15540];

    UCameraShake_execGetRotOscillationMagnitude_Parms
        GetRotOscillationMagnitude_Parms;

    this->ProcessEvent(pFnGetRotOscillationMagnitude,
                       &GetRotOscillationMagnitude_Parms, NULL);
};

// Function Engine.CloudStorageUpgradeHelper.GetCloudUpgradeKeys
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void UCloudStorageUpgradeHelper::eventGetCloudUpgradeKeys() {
    static UFunction* pFnGetCloudUpgradeKeys = NULL;

    if (!pFnGetCloudUpgradeKeys)
        pFnGetCloudUpgradeKeys =
            (UFunction*)UObject::GObjObjects()->Data[16643];

    UCloudStorageUpgradeHelper_eventGetCloudUpgradeKeys_Parms
        GetCloudUpgradeKeys_Parms;

    this->ProcessEvent(pFnGetCloudUpgradeKeys, &GetCloudUpgradeKeys_Parms,
                       NULL);
};

// Function Engine.CloudStorageUpgradeHelper.HandleLocalKeyValue
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void UCloudStorageUpgradeHelper::eventHandleLocalKeyValue() {
    static UFunction* pFnHandleLocalKeyValue = NULL;

    if (!pFnHandleLocalKeyValue)
        pFnHandleLocalKeyValue =
            (UFunction*)UObject::GObjObjects()->Data[16638];

    UCloudStorageUpgradeHelper_eventHandleLocalKeyValue_Parms
        HandleLocalKeyValue_Parms;

    this->ProcessEvent(pFnHandleLocalKeyValue, &HandleLocalKeyValue_Parms,
                       NULL);
};

// Function Engine.CloudStorageUpgradeHelper.HandleLocalDocument
// [0x00420800] ( FUNC_Event )
// Parameters infos:

void UCloudStorageUpgradeHelper::eventHandleLocalDocument() {
    static UFunction* pFnHandleLocalDocument = NULL;

    if (!pFnHandleLocalDocument)
        pFnHandleLocalDocument =
            (UFunction*)UObject::GObjObjects()->Data[16634];

    UCloudStorageUpgradeHelper_eventHandleLocalDocument_Parms
        HandleLocalDocument_Parms;

    this->ProcessEvent(pFnHandleLocalDocument, &HandleLocalDocument_Parms,
                       NULL);
};

// Function Engine.AnalyticEventsBase.SendCachedEvents
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventSendCachedEvents() {
    static UFunction* pFnSendCachedEvents = NULL;

    if (!pFnSendCachedEvents)
        pFnSendCachedEvents = (UFunction*)UObject::GObjObjects()->Data[13770];

    UAnalyticEventsBase_eventSendCachedEvents_Parms SendCachedEvents_Parms;

    pFnSendCachedEvents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSendCachedEvents, &SendCachedEvents_Parms, NULL);

    pFnSendCachedEvents->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogCurrencyGivenEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogCurrencyGivenEvent() {
    static UFunction* pFnLogCurrencyGivenEvent = NULL;

    if (!pFnLogCurrencyGivenEvent)
        pFnLogCurrencyGivenEvent =
            (UFunction*)UObject::GObjObjects()->Data[13767];

    UAnalyticEventsBase_eventLogCurrencyGivenEvent_Parms
        LogCurrencyGivenEvent_Parms;

    pFnLogCurrencyGivenEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogCurrencyGivenEvent, &LogCurrencyGivenEvent_Parms,
                       NULL);

    pFnLogCurrencyGivenEvent->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogCurrencyPurchaseEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogCurrencyPurchaseEvent() {
    static UFunction* pFnLogCurrencyPurchaseEvent = NULL;

    if (!pFnLogCurrencyPurchaseEvent)
        pFnLogCurrencyPurchaseEvent =
            (UFunction*)UObject::GObjObjects()->Data[13761];

    UAnalyticEventsBase_eventLogCurrencyPurchaseEvent_Parms
        LogCurrencyPurchaseEvent_Parms;

    pFnLogCurrencyPurchaseEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogCurrencyPurchaseEvent,
                       &LogCurrencyPurchaseEvent_Parms, NULL);

    pFnLogCurrencyPurchaseEvent->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogItemPurchaseEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogItemPurchaseEvent() {
    static UFunction* pFnLogItemPurchaseEvent = NULL;

    if (!pFnLogItemPurchaseEvent)
        pFnLogItemPurchaseEvent =
            (UFunction*)UObject::GObjObjects()->Data[13756];

    UAnalyticEventsBase_eventLogItemPurchaseEvent_Parms
        LogItemPurchaseEvent_Parms;

    pFnLogItemPurchaseEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogItemPurchaseEvent, &LogItemPurchaseEvent_Parms,
                       NULL);

    pFnLogItemPurchaseEvent->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogUserAttributeUpdateArray
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogUserAttributeUpdateArray() {
    static UFunction* pFnLogUserAttributeUpdateArray = NULL;

    if (!pFnLogUserAttributeUpdateArray)
        pFnLogUserAttributeUpdateArray =
            (UFunction*)UObject::GObjObjects()->Data[13753];

    UAnalyticEventsBase_eventLogUserAttributeUpdateArray_Parms
        LogUserAttributeUpdateArray_Parms;

    pFnLogUserAttributeUpdateArray->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogUserAttributeUpdateArray,
                       &LogUserAttributeUpdateArray_Parms, NULL);

    pFnLogUserAttributeUpdateArray->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogUserAttributeUpdate
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogUserAttributeUpdate() {
    static UFunction* pFnLogUserAttributeUpdate = NULL;

    if (!pFnLogUserAttributeUpdate)
        pFnLogUserAttributeUpdate =
            (UFunction*)UObject::GObjObjects()->Data[13750];

    UAnalyticEventsBase_eventLogUserAttributeUpdate_Parms
        LogUserAttributeUpdate_Parms;

    pFnLogUserAttributeUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogUserAttributeUpdate, &LogUserAttributeUpdate_Parms,
                       NULL);

    pFnLogUserAttributeUpdate->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogErrorMessage
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogErrorMessage() {
    static UFunction* pFnLogErrorMessage = NULL;

    if (!pFnLogErrorMessage)
        pFnLogErrorMessage = (UFunction*)UObject::GObjObjects()->Data[13747];

    UAnalyticEventsBase_eventLogErrorMessage_Parms LogErrorMessage_Parms;

    pFnLogErrorMessage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogErrorMessage, &LogErrorMessage_Parms, NULL);

    pFnLogErrorMessage->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.EndStringEventParamArray
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventEndStringEventParamArray() {
    static UFunction* pFnEndStringEventParamArray = NULL;

    if (!pFnEndStringEventParamArray)
        pFnEndStringEventParamArray =
            (UFunction*)UObject::GObjObjects()->Data[13743];

    UAnalyticEventsBase_eventEndStringEventParamArray_Parms
        EndStringEventParamArray_Parms;

    pFnEndStringEventParamArray->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndStringEventParamArray,
                       &EndStringEventParamArray_Parms, NULL);

    pFnEndStringEventParamArray->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogStringEventParamArray
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogStringEventParamArray() {
    static UFunction* pFnLogStringEventParamArray = NULL;

    if (!pFnLogStringEventParamArray)
        pFnLogStringEventParamArray =
            (UFunction*)UObject::GObjObjects()->Data[13738];

    UAnalyticEventsBase_eventLogStringEventParamArray_Parms
        LogStringEventParamArray_Parms;

    pFnLogStringEventParamArray->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogStringEventParamArray,
                       &LogStringEventParamArray_Parms, NULL);

    pFnLogStringEventParamArray->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.EndStringEventParam
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventEndStringEventParam() {
    static UFunction* pFnEndStringEventParam = NULL;

    if (!pFnEndStringEventParam)
        pFnEndStringEventParam =
            (UFunction*)UObject::GObjObjects()->Data[13734];

    UAnalyticEventsBase_eventEndStringEventParam_Parms
        EndStringEventParam_Parms;

    pFnEndStringEventParam->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndStringEventParam, &EndStringEventParam_Parms,
                       NULL);

    pFnEndStringEventParam->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogStringEventParam
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogStringEventParam() {
    static UFunction* pFnLogStringEventParam = NULL;

    if (!pFnLogStringEventParam)
        pFnLogStringEventParam =
            (UFunction*)UObject::GObjObjects()->Data[13729];

    UAnalyticEventsBase_eventLogStringEventParam_Parms
        LogStringEventParam_Parms;

    pFnLogStringEventParam->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogStringEventParam, &LogStringEventParam_Parms,
                       NULL);

    pFnLogStringEventParam->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.EndStringEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventEndStringEvent() {
    static UFunction* pFnEndStringEvent = NULL;

    if (!pFnEndStringEvent)
        pFnEndStringEvent = (UFunction*)UObject::GObjObjects()->Data[13727];

    UAnalyticEventsBase_eventEndStringEvent_Parms EndStringEvent_Parms;

    pFnEndStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndStringEvent, &EndStringEvent_Parms, NULL);

    pFnEndStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.LogStringEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventLogStringEvent() {
    static UFunction* pFnLogStringEvent = NULL;

    if (!pFnLogStringEvent)
        pFnLogStringEvent = (UFunction*)UObject::GObjObjects()->Data[13724];

    UAnalyticEventsBase_eventLogStringEvent_Parms LogStringEvent_Parms;

    pFnLogStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogStringEvent, &LogStringEvent_Parms, NULL);

    pFnLogStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.EndSession
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventEndSession() {
    static UFunction* pFnEndSession = NULL;

    if (!pFnEndSession)
        pFnEndSession = (UFunction*)UObject::GObjObjects()->Data[13723];

    UAnalyticEventsBase_eventEndSession_Parms EndSession_Parms;

    pFnEndSession->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndSession, &EndSession_Parms, NULL);

    pFnEndSession->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.StartSession
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventStartSession() {
    static UFunction* pFnStartSession = NULL;

    if (!pFnStartSession)
        pFnStartSession = (UFunction*)UObject::GObjObjects()->Data[13722];

    UAnalyticEventsBase_eventStartSession_Parms StartSession_Parms;

    pFnStartSession->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStartSession, &StartSession_Parms, NULL);

    pFnStartSession->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.SetUserId
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventSetUserId() {
    static UFunction* pFnSetUserId = NULL;

    if (!pFnSetUserId)
        pFnSetUserId = (UFunction*)UObject::GObjObjects()->Data[13720];

    UAnalyticEventsBase_eventSetUserId_Parms SetUserId_Parms;

    pFnSetUserId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetUserId, &SetUserId_Parms, NULL);

    pFnSetUserId->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAnalyticEventsBase::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[13719];

    UAnalyticEventsBase_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.AnalyticEventsBase.IsSessionInProgress
// [0x00020002]
// Parameters infos:

void UAnalyticEventsBase::IsSessionInProgress() {
    static UFunction* pFnIsSessionInProgress = NULL;

    if (!pFnIsSessionInProgress)
        pFnIsSessionInProgress =
            (UFunction*)UObject::GObjObjects()->Data[13717];

    UAnalyticEventsBase_execIsSessionInProgress_Parms IsSessionInProgress_Parms;

    this->ProcessEvent(pFnIsSessionInProgress, &IsSessionInProgress_Parms,
                       NULL);
};

// Function Engine.MultiProviderAnalytics.SendCachedEvents
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventSendCachedEvents() {
    static UFunction* pFnSendCachedEvents = NULL;

    if (!pFnSendCachedEvents)
        pFnSendCachedEvents = (UFunction*)UObject::GObjObjects()->Data[26172];

    UMultiProviderAnalytics_eventSendCachedEvents_Parms SendCachedEvents_Parms;

    pFnSendCachedEvents->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSendCachedEvents, &SendCachedEvents_Parms, NULL);

    pFnSendCachedEvents->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogCurrencyGivenEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogCurrencyGivenEvent() {
    static UFunction* pFnLogCurrencyGivenEvent = NULL;

    if (!pFnLogCurrencyGivenEvent)
        pFnLogCurrencyGivenEvent =
            (UFunction*)UObject::GObjObjects()->Data[26169];

    UMultiProviderAnalytics_eventLogCurrencyGivenEvent_Parms
        LogCurrencyGivenEvent_Parms;

    pFnLogCurrencyGivenEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogCurrencyGivenEvent, &LogCurrencyGivenEvent_Parms,
                       NULL);

    pFnLogCurrencyGivenEvent->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogCurrencyPurchaseEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogCurrencyPurchaseEvent() {
    static UFunction* pFnLogCurrencyPurchaseEvent = NULL;

    if (!pFnLogCurrencyPurchaseEvent)
        pFnLogCurrencyPurchaseEvent =
            (UFunction*)UObject::GObjObjects()->Data[26163];

    UMultiProviderAnalytics_eventLogCurrencyPurchaseEvent_Parms
        LogCurrencyPurchaseEvent_Parms;

    pFnLogCurrencyPurchaseEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogCurrencyPurchaseEvent,
                       &LogCurrencyPurchaseEvent_Parms, NULL);

    pFnLogCurrencyPurchaseEvent->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogItemPurchaseEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogItemPurchaseEvent() {
    static UFunction* pFnLogItemPurchaseEvent = NULL;

    if (!pFnLogItemPurchaseEvent)
        pFnLogItemPurchaseEvent =
            (UFunction*)UObject::GObjObjects()->Data[26158];

    UMultiProviderAnalytics_eventLogItemPurchaseEvent_Parms
        LogItemPurchaseEvent_Parms;

    pFnLogItemPurchaseEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogItemPurchaseEvent, &LogItemPurchaseEvent_Parms,
                       NULL);

    pFnLogItemPurchaseEvent->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogUserAttributeUpdateArray
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogUserAttributeUpdateArray() {
    static UFunction* pFnLogUserAttributeUpdateArray = NULL;

    if (!pFnLogUserAttributeUpdateArray)
        pFnLogUserAttributeUpdateArray =
            (UFunction*)UObject::GObjObjects()->Data[26155];

    UMultiProviderAnalytics_eventLogUserAttributeUpdateArray_Parms
        LogUserAttributeUpdateArray_Parms;

    pFnLogUserAttributeUpdateArray->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogUserAttributeUpdateArray,
                       &LogUserAttributeUpdateArray_Parms, NULL);

    pFnLogUserAttributeUpdateArray->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogUserAttributeUpdate
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogUserAttributeUpdate() {
    static UFunction* pFnLogUserAttributeUpdate = NULL;

    if (!pFnLogUserAttributeUpdate)
        pFnLogUserAttributeUpdate =
            (UFunction*)UObject::GObjObjects()->Data[26152];

    UMultiProviderAnalytics_eventLogUserAttributeUpdate_Parms
        LogUserAttributeUpdate_Parms;

    pFnLogUserAttributeUpdate->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogUserAttributeUpdate, &LogUserAttributeUpdate_Parms,
                       NULL);

    pFnLogUserAttributeUpdate->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogErrorMessage
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogErrorMessage() {
    static UFunction* pFnLogErrorMessage = NULL;

    if (!pFnLogErrorMessage)
        pFnLogErrorMessage = (UFunction*)UObject::GObjObjects()->Data[26149];

    UMultiProviderAnalytics_eventLogErrorMessage_Parms LogErrorMessage_Parms;

    pFnLogErrorMessage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogErrorMessage, &LogErrorMessage_Parms, NULL);

    pFnLogErrorMessage->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.EndStringEventParamArray
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventEndStringEventParamArray() {
    static UFunction* pFnEndStringEventParamArray = NULL;

    if (!pFnEndStringEventParamArray)
        pFnEndStringEventParamArray =
            (UFunction*)UObject::GObjObjects()->Data[26145];

    UMultiProviderAnalytics_eventEndStringEventParamArray_Parms
        EndStringEventParamArray_Parms;

    pFnEndStringEventParamArray->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndStringEventParamArray,
                       &EndStringEventParamArray_Parms, NULL);

    pFnEndStringEventParamArray->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogStringEventParamArray
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogStringEventParamArray() {
    static UFunction* pFnLogStringEventParamArray = NULL;

    if (!pFnLogStringEventParamArray)
        pFnLogStringEventParamArray =
            (UFunction*)UObject::GObjObjects()->Data[26140];

    UMultiProviderAnalytics_eventLogStringEventParamArray_Parms
        LogStringEventParamArray_Parms;

    pFnLogStringEventParamArray->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogStringEventParamArray,
                       &LogStringEventParamArray_Parms, NULL);

    pFnLogStringEventParamArray->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.EndStringEventParam
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventEndStringEventParam() {
    static UFunction* pFnEndStringEventParam = NULL;

    if (!pFnEndStringEventParam)
        pFnEndStringEventParam =
            (UFunction*)UObject::GObjObjects()->Data[26136];

    UMultiProviderAnalytics_eventEndStringEventParam_Parms
        EndStringEventParam_Parms;

    pFnEndStringEventParam->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndStringEventParam, &EndStringEventParam_Parms,
                       NULL);

    pFnEndStringEventParam->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogStringEventParam
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogStringEventParam() {
    static UFunction* pFnLogStringEventParam = NULL;

    if (!pFnLogStringEventParam)
        pFnLogStringEventParam =
            (UFunction*)UObject::GObjObjects()->Data[26131];

    UMultiProviderAnalytics_eventLogStringEventParam_Parms
        LogStringEventParam_Parms;

    pFnLogStringEventParam->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogStringEventParam, &LogStringEventParam_Parms,
                       NULL);

    pFnLogStringEventParam->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.EndStringEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventEndStringEvent() {
    static UFunction* pFnEndStringEvent = NULL;

    if (!pFnEndStringEvent)
        pFnEndStringEvent = (UFunction*)UObject::GObjObjects()->Data[26129];

    UMultiProviderAnalytics_eventEndStringEvent_Parms EndStringEvent_Parms;

    pFnEndStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndStringEvent, &EndStringEvent_Parms, NULL);

    pFnEndStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.LogStringEvent
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventLogStringEvent() {
    static UFunction* pFnLogStringEvent = NULL;

    if (!pFnLogStringEvent)
        pFnLogStringEvent = (UFunction*)UObject::GObjObjects()->Data[26126];

    UMultiProviderAnalytics_eventLogStringEvent_Parms LogStringEvent_Parms;

    pFnLogStringEvent->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnLogStringEvent, &LogStringEvent_Parms, NULL);

    pFnLogStringEvent->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.EndSession
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventEndSession() {
    static UFunction* pFnEndSession = NULL;

    if (!pFnEndSession)
        pFnEndSession = (UFunction*)UObject::GObjObjects()->Data[26125];

    UMultiProviderAnalytics_eventEndSession_Parms EndSession_Parms;

    pFnEndSession->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnEndSession, &EndSession_Parms, NULL);

    pFnEndSession->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.StartSession
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventStartSession() {
    static UFunction* pFnStartSession = NULL;

    if (!pFnStartSession)
        pFnStartSession = (UFunction*)UObject::GObjObjects()->Data[26124];

    UMultiProviderAnalytics_eventStartSession_Parms StartSession_Parms;

    pFnStartSession->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnStartSession, &StartSession_Parms, NULL);

    pFnStartSession->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.SetUserId
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UMultiProviderAnalytics::eventSetUserId() {
    static UFunction* pFnSetUserId = NULL;

    if (!pFnSetUserId)
        pFnSetUserId = (UFunction*)UObject::GObjObjects()->Data[26122];

    UMultiProviderAnalytics_eventSetUserId_Parms SetUserId_Parms;

    pFnSetUserId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSetUserId, &SetUserId_Parms, NULL);

    pFnSetUserId->FunctionFlags |= 0x400;
};

// Function Engine.MultiProviderAnalytics.Init
// [0x00020002]
// Parameters infos:

void UMultiProviderAnalytics::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[26118];

    UMultiProviderAnalytics_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.AppNotificationsBase.DebugLogNotification
// [0x00420002]
// Parameters infos:

void UAppNotificationsBase::DebugLogNotification() {
    static UFunction* pFnDebugLogNotification = NULL;

    if (!pFnDebugLogNotification)
        pFnDebugLogNotification =
            (UFunction*)UObject::GObjObjects()->Data[15182];

    UAppNotificationsBase_execDebugLogNotification_Parms
        DebugLogNotification_Parms;

    this->ProcessEvent(pFnDebugLogNotification, &DebugLogNotification_Parms,
                       NULL);
};

// Function Engine.AppNotificationsBase.OnReceivedRemoteNotification
// [0x00520000]
// Parameters infos:

void UAppNotificationsBase::OnReceivedRemoteNotification() {
    static UFunction* pFnOnReceivedRemoteNotification = NULL;

    if (!pFnOnReceivedRemoteNotification)
        pFnOnReceivedRemoteNotification =
            (UFunction*)UObject::GObjObjects()->Data[15179];

    UAppNotificationsBase_execOnReceivedRemoteNotification_Parms
        OnReceivedRemoteNotification_Parms;

    this->ProcessEvent(pFnOnReceivedRemoteNotification,
                       &OnReceivedRemoteNotification_Parms, NULL);
};

// Function Engine.AppNotificationsBase.OnReceivedLocalNotification
// [0x00520000]
// Parameters infos:

void UAppNotificationsBase::OnReceivedLocalNotification() {
    static UFunction* pFnOnReceivedLocalNotification = NULL;

    if (!pFnOnReceivedLocalNotification)
        pFnOnReceivedLocalNotification =
            (UFunction*)UObject::GObjObjects()->Data[15176];

    UAppNotificationsBase_execOnReceivedLocalNotification_Parms
        OnReceivedLocalNotification_Parms;

    this->ProcessEvent(pFnOnReceivedLocalNotification,
                       &OnReceivedLocalNotification_Parms, NULL);
};

// Function Engine.AppNotificationsBase.CancelAllScheduledLocalNotifications
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UAppNotificationsBase::CancelAllScheduledLocalNotifications() {
    static UFunction* pFnCancelAllScheduledLocalNotifications = NULL;

    if (!pFnCancelAllScheduledLocalNotifications)
        pFnCancelAllScheduledLocalNotifications =
            (UFunction*)UObject::GObjObjects()->Data[15175];

    UAppNotificationsBase_execCancelAllScheduledLocalNotifications_Parms
        CancelAllScheduledLocalNotifications_Parms;

    pFnCancelAllScheduledLocalNotifications->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCancelAllScheduledLocalNotifications,
                       &CancelAllScheduledLocalNotifications_Parms, NULL);

    pFnCancelAllScheduledLocalNotifications->FunctionFlags |= 0x400;
};

// Function Engine.AppNotificationsBase.ScheduleLocalNotification
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UAppNotificationsBase::ScheduleLocalNotification() {
    static UFunction* pFnScheduleLocalNotification = NULL;

    if (!pFnScheduleLocalNotification)
        pFnScheduleLocalNotification =
            (UFunction*)UObject::GObjObjects()->Data[15172];

    UAppNotificationsBase_execScheduleLocalNotification_Parms
        ScheduleLocalNotification_Parms;

    pFnScheduleLocalNotification->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnScheduleLocalNotification,
                       &ScheduleLocalNotification_Parms, NULL);

    pFnScheduleLocalNotification->FunctionFlags |= 0x400;
};

// Function Engine.AppNotificationsBase.WasLaunchedViaNotification
// [0x00020002]
// Parameters infos:

void UAppNotificationsBase::WasLaunchedViaNotification() {
    static UFunction* pFnWasLaunchedViaNotification = NULL;

    if (!pFnWasLaunchedViaNotification)
        pFnWasLaunchedViaNotification =
            (UFunction*)UObject::GObjObjects()->Data[15170];

    UAppNotificationsBase_execWasLaunchedViaNotification_Parms
        WasLaunchedViaNotification_Parms;

    this->ProcessEvent(pFnWasLaunchedViaNotification,
                       &WasLaunchedViaNotification_Parms, NULL);
};

// Function Engine.AppNotificationsBase.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UAppNotificationsBase::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[15169];

    UAppNotificationsBase_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.UpgradeLocalStorageToCloud
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventUpgradeLocalStorageToCloud() {
    static UFunction* pFnUpgradeLocalStorageToCloud = NULL;

    if (!pFnUpgradeLocalStorageToCloud)
        pFnUpgradeLocalStorageToCloud =
            (UFunction*)UObject::GObjObjects()->Data[16608];

    UCloudStorageBase_eventUpgradeLocalStorageToCloud_Parms
        UpgradeLocalStorageToCloud_Parms;

    pFnUpgradeLocalStorageToCloud->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnUpgradeLocalStorageToCloud,
                       &UpgradeLocalStorageToCloud_Parms, NULL);

    pFnUpgradeLocalStorageToCloud->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ResolveConflictWithVersionIndex
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventResolveConflictWithVersionIndex() {
    static UFunction* pFnResolveConflictWithVersionIndex = NULL;

    if (!pFnResolveConflictWithVersionIndex)
        pFnResolveConflictWithVersionIndex =
            (UFunction*)UObject::GObjObjects()->Data[16605];

    UCloudStorageBase_eventResolveConflictWithVersionIndex_Parms
        ResolveConflictWithVersionIndex_Parms;

    pFnResolveConflictWithVersionIndex->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResolveConflictWithVersionIndex,
                       &ResolveConflictWithVersionIndex_Parms, NULL);

    pFnResolveConflictWithVersionIndex->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ResolveConflictWithNewestDocument
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventResolveConflictWithNewestDocument() {
    static UFunction* pFnResolveConflictWithNewestDocument = NULL;

    if (!pFnResolveConflictWithNewestDocument)
        pFnResolveConflictWithNewestDocument =
            (UFunction*)UObject::GObjObjects()->Data[16603];

    UCloudStorageBase_eventResolveConflictWithNewestDocument_Parms
        ResolveConflictWithNewestDocument_Parms;

    pFnResolveConflictWithNewestDocument->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnResolveConflictWithNewestDocument,
                       &ResolveConflictWithNewestDocument_Parms, NULL);

    pFnResolveConflictWithNewestDocument->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.WaitForWritesToFinish
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventWaitForWritesToFinish() {
    static UFunction* pFnWaitForWritesToFinish = NULL;

    if (!pFnWaitForWritesToFinish)
        pFnWaitForWritesToFinish =
            (UFunction*)UObject::GObjObjects()->Data[16600];

    UCloudStorageBase_eventWaitForWritesToFinish_Parms
        WaitForWritesToFinish_Parms;

    pFnWaitForWritesToFinish->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWaitForWritesToFinish, &WaitForWritesToFinish_Parms,
                       NULL);

    pFnWaitForWritesToFinish->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.IsStillWritingFiles
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventIsStillWritingFiles() {
    static UFunction* pFnIsStillWritingFiles = NULL;

    if (!pFnIsStillWritingFiles)
        pFnIsStillWritingFiles =
            (UFunction*)UObject::GObjObjects()->Data[16598];

    UCloudStorageBase_eventIsStillWritingFiles_Parms IsStillWritingFiles_Parms;

    pFnIsStillWritingFiles->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsStillWritingFiles, &IsStillWritingFiles_Parms,
                       NULL);

    pFnIsStillWritingFiles->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.SaveDocumentWithObject
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventSaveDocumentWithObject() {
    static UFunction* pFnSaveDocumentWithObject = NULL;

    if (!pFnSaveDocumentWithObject)
        pFnSaveDocumentWithObject =
            (UFunction*)UObject::GObjObjects()->Data[16593];

    UCloudStorageBase_eventSaveDocumentWithObject_Parms
        SaveDocumentWithObject_Parms;

    pFnSaveDocumentWithObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSaveDocumentWithObject, &SaveDocumentWithObject_Parms,
                       NULL);

    pFnSaveDocumentWithObject->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.SaveDocumentWithBytes
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventSaveDocumentWithBytes() {
    static UFunction* pFnSaveDocumentWithBytes = NULL;

    if (!pFnSaveDocumentWithBytes)
        pFnSaveDocumentWithBytes =
            (UFunction*)UObject::GObjObjects()->Data[16588];

    UCloudStorageBase_eventSaveDocumentWithBytes_Parms
        SaveDocumentWithBytes_Parms;

    pFnSaveDocumentWithBytes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSaveDocumentWithBytes, &SaveDocumentWithBytes_Parms,
                       NULL);

    pFnSaveDocumentWithBytes->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.SaveDocumentWithString
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventSaveDocumentWithString() {
    static UFunction* pFnSaveDocumentWithString = NULL;

    if (!pFnSaveDocumentWithString)
        pFnSaveDocumentWithString =
            (UFunction*)UObject::GObjObjects()->Data[16584];

    UCloudStorageBase_eventSaveDocumentWithString_Parms
        SaveDocumentWithString_Parms;

    pFnSaveDocumentWithString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnSaveDocumentWithString, &SaveDocumentWithString_Parms,
                       NULL);

    pFnSaveDocumentWithString->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.WriteCloudDocument
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventWriteCloudDocument() {
    static UFunction* pFnWriteCloudDocument = NULL;

    if (!pFnWriteCloudDocument)
        pFnWriteCloudDocument = (UFunction*)UObject::GObjObjects()->Data[16581];

    UCloudStorageBase_eventWriteCloudDocument_Parms WriteCloudDocument_Parms;

    pFnWriteCloudDocument->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWriteCloudDocument, &WriteCloudDocument_Parms, NULL);

    pFnWriteCloudDocument->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ParseDocumentAsObject
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventParseDocumentAsObject() {
    static UFunction* pFnParseDocumentAsObject = NULL;

    if (!pFnParseDocumentAsObject)
        pFnParseDocumentAsObject =
            (UFunction*)UObject::GObjObjects()->Data[16575];

    UCloudStorageBase_eventParseDocumentAsObject_Parms
        ParseDocumentAsObject_Parms;

    pFnParseDocumentAsObject->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnParseDocumentAsObject, &ParseDocumentAsObject_Parms,
                       NULL);

    pFnParseDocumentAsObject->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ParseDocumentAsBytes
// [0x00424C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventParseDocumentAsBytes() {
    static UFunction* pFnParseDocumentAsBytes = NULL;

    if (!pFnParseDocumentAsBytes)
        pFnParseDocumentAsBytes =
            (UFunction*)UObject::GObjObjects()->Data[16570];

    UCloudStorageBase_eventParseDocumentAsBytes_Parms
        ParseDocumentAsBytes_Parms;

    pFnParseDocumentAsBytes->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnParseDocumentAsBytes, &ParseDocumentAsBytes_Parms,
                       NULL);

    pFnParseDocumentAsBytes->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ParseDocumentAsString
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventParseDocumentAsString() {
    static UFunction* pFnParseDocumentAsString = NULL;

    if (!pFnParseDocumentAsString)
        pFnParseDocumentAsString =
            (UFunction*)UObject::GObjObjects()->Data[16566];

    UCloudStorageBase_eventParseDocumentAsString_Parms
        ParseDocumentAsString_Parms;

    pFnParseDocumentAsString->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnParseDocumentAsString, &ParseDocumentAsString_Parms,
                       NULL);

    pFnParseDocumentAsString->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ReadCloudDocument
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventReadCloudDocument() {
    static UFunction* pFnReadCloudDocument = NULL;

    if (!pFnReadCloudDocument)
        pFnReadCloudDocument = (UFunction*)UObject::GObjObjects()->Data[16562];

    UCloudStorageBase_eventReadCloudDocument_Parms ReadCloudDocument_Parms;

    pFnReadCloudDocument->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReadCloudDocument, &ReadCloudDocument_Parms, NULL);

    pFnReadCloudDocument->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.DeleteAllCloudDocuments
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventDeleteAllCloudDocuments() {
    static UFunction* pFnDeleteAllCloudDocuments = NULL;

    if (!pFnDeleteAllCloudDocuments)
        pFnDeleteAllCloudDocuments =
            (UFunction*)UObject::GObjObjects()->Data[16561];

    UCloudStorageBase_eventDeleteAllCloudDocuments_Parms
        DeleteAllCloudDocuments_Parms;

    pFnDeleteAllCloudDocuments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeleteAllCloudDocuments,
                       &DeleteAllCloudDocuments_Parms, NULL);

    pFnDeleteAllCloudDocuments->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.CreateCloudDocument
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventCreateCloudDocument() {
    static UFunction* pFnCreateCloudDocument = NULL;

    if (!pFnCreateCloudDocument)
        pFnCreateCloudDocument =
            (UFunction*)UObject::GObjObjects()->Data[16558];

    UCloudStorageBase_eventCreateCloudDocument_Parms CreateCloudDocument_Parms;

    pFnCreateCloudDocument->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCreateCloudDocument, &CreateCloudDocument_Parms,
                       NULL);

    pFnCreateCloudDocument->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.GetCloudDocumentName
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventGetCloudDocumentName() {
    static UFunction* pFnGetCloudDocumentName = NULL;

    if (!pFnGetCloudDocumentName)
        pFnGetCloudDocumentName =
            (UFunction*)UObject::GObjObjects()->Data[16555];

    UCloudStorageBase_eventGetCloudDocumentName_Parms
        GetCloudDocumentName_Parms;

    pFnGetCloudDocumentName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetCloudDocumentName, &GetCloudDocumentName_Parms,
                       NULL);

    pFnGetCloudDocumentName->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.GetNumCloudDocuments
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventGetNumCloudDocuments() {
    static UFunction* pFnGetNumCloudDocuments = NULL;

    if (!pFnGetNumCloudDocuments)
        pFnGetNumCloudDocuments =
            (UFunction*)UObject::GObjObjects()->Data[16552];

    UCloudStorageBase_eventGetNumCloudDocuments_Parms
        GetNumCloudDocuments_Parms;

    pFnGetNumCloudDocuments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumCloudDocuments, &GetNumCloudDocuments_Parms,
                       NULL);

    pFnGetNumCloudDocuments->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.QueryForCloudDocuments
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventQueryForCloudDocuments() {
    static UFunction* pFnQueryForCloudDocuments = NULL;

    if (!pFnQueryForCloudDocuments)
        pFnQueryForCloudDocuments =
            (UFunction*)UObject::GObjObjects()->Data[16550];

    UCloudStorageBase_eventQueryForCloudDocuments_Parms
        QueryForCloudDocuments_Parms;

    pFnQueryForCloudDocuments->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnQueryForCloudDocuments, &QueryForCloudDocuments_Parms,
                       NULL);

    pFnQueryForCloudDocuments->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.WriteKeyValue
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventWriteKeyValue() {
    static UFunction* pFnWriteKeyValue = NULL;

    if (!pFnWriteKeyValue)
        pFnWriteKeyValue = (UFunction*)UObject::GObjObjects()->Data[16546];

    UCloudStorageBase_eventWriteKeyValue_Parms WriteKeyValue_Parms;

    pFnWriteKeyValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnWriteKeyValue, &WriteKeyValue_Parms, NULL);

    pFnWriteKeyValue->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ReadKeyValueFromLocalStore
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventReadKeyValueFromLocalStore() {
    static UFunction* pFnReadKeyValueFromLocalStore = NULL;

    if (!pFnReadKeyValueFromLocalStore)
        pFnReadKeyValueFromLocalStore =
            (UFunction*)UObject::GObjObjects()->Data[16541];

    UCloudStorageBase_eventReadKeyValueFromLocalStore_Parms
        ReadKeyValueFromLocalStore_Parms;

    pFnReadKeyValueFromLocalStore->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReadKeyValueFromLocalStore,
                       &ReadKeyValueFromLocalStore_Parms, NULL);

    pFnReadKeyValueFromLocalStore->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.ReadKeyValue
// [0x00420C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventReadKeyValue() {
    static UFunction* pFnReadKeyValue = NULL;

    if (!pFnReadKeyValue)
        pFnReadKeyValue = (UFunction*)UObject::GObjObjects()->Data[16536];

    UCloudStorageBase_eventReadKeyValue_Parms ReadKeyValue_Parms;

    pFnReadKeyValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnReadKeyValue, &ReadKeyValue_Parms, NULL);

    pFnReadKeyValue->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.IsUsingLocalStorage
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UCloudStorageBase::IsUsingLocalStorage() {
    static UFunction* pFnIsUsingLocalStorage = NULL;

    if (!pFnIsUsingLocalStorage)
        pFnIsUsingLocalStorage =
            (UFunction*)UObject::GObjObjects()->Data[16534];

    UCloudStorageBase_execIsUsingLocalStorage_Parms IsUsingLocalStorage_Parms;

    pFnIsUsingLocalStorage->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsUsingLocalStorage, &IsUsingLocalStorage_Parms,
                       NULL);

    pFnIsUsingLocalStorage->FunctionFlags |= 0x400;
};

// Function Engine.CloudStorageBase.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UCloudStorageBase::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[16533];

    UCloudStorageBase_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.FacebookIntegration.Disconnect
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UFacebookIntegration::eventDisconnect() {
    static UFunction* pFnDisconnect = NULL;

    if (!pFnDisconnect)
        pFnDisconnect = (UFunction*)UObject::GObjObjects()->Data[19519];

    UFacebookIntegration_eventDisconnect_Parms Disconnect_Parms;

    pFnDisconnect->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDisconnect, &Disconnect_Parms, NULL);

    pFnDisconnect->FunctionFlags |= 0x400;
};

// Function Engine.FacebookIntegration.FacebookDialog
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UFacebookIntegration::eventFacebookDialog() {
    static UFunction* pFnFacebookDialog = NULL;

    if (!pFnFacebookDialog)
        pFnFacebookDialog = (UFunction*)UObject::GObjObjects()->Data[19515];

    UFacebookIntegration_eventFacebookDialog_Parms FacebookDialog_Parms;

    pFnFacebookDialog->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFacebookDialog, &FacebookDialog_Parms, NULL);

    pFnFacebookDialog->FunctionFlags |= 0x400;
};

// Function Engine.FacebookIntegration.FacebookRequest
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UFacebookIntegration::eventFacebookRequest() {
    static UFunction* pFnFacebookRequest = NULL;

    if (!pFnFacebookRequest)
        pFnFacebookRequest = (UFunction*)UObject::GObjObjects()->Data[19513];

    UFacebookIntegration_eventFacebookRequest_Parms FacebookRequest_Parms;

    pFnFacebookRequest->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnFacebookRequest, &FacebookRequest_Parms, NULL);

    pFnFacebookRequest->FunctionFlags |= 0x400;
};

// Function Engine.FacebookIntegration.IsAuthorized
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UFacebookIntegration::eventIsAuthorized() {
    static UFunction* pFnIsAuthorized = NULL;

    if (!pFnIsAuthorized)
        pFnIsAuthorized = (UFunction*)UObject::GObjObjects()->Data[19511];

    UFacebookIntegration_eventIsAuthorized_Parms IsAuthorized_Parms;

    pFnIsAuthorized->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsAuthorized, &IsAuthorized_Parms, NULL);

    pFnIsAuthorized->FunctionFlags |= 0x400;
};

// Function Engine.FacebookIntegration.Authorize
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UFacebookIntegration::eventAuthorize() {
    static UFunction* pFnAuthorize = NULL;

    if (!pFnAuthorize)
        pFnAuthorize = (UFunction*)UObject::GObjObjects()->Data[19509];

    UFacebookIntegration_eventAuthorize_Parms Authorize_Parms;

    pFnAuthorize->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAuthorize, &Authorize_Parms, NULL);

    pFnAuthorize->FunctionFlags |= 0x400;
};

// Function Engine.FacebookIntegration.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UFacebookIntegration::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[19507];

    UFacebookIntegration_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.InAppMessageBase.ShowInAppEmailUI
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UInAppMessageBase::eventShowInAppEmailUI() {
    static UFunction* pFnShowInAppEmailUI = NULL;

    if (!pFnShowInAppEmailUI)
        pFnShowInAppEmailUI = (UFunction*)UObject::GObjObjects()->Data[23223];

    UInAppMessageBase_eventShowInAppEmailUI_Parms ShowInAppEmailUI_Parms;

    pFnShowInAppEmailUI->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShowInAppEmailUI, &ShowInAppEmailUI_Parms, NULL);

    pFnShowInAppEmailUI->FunctionFlags |= 0x400;
};

// Function Engine.InAppMessageBase.ShowInAppSMSUI
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UInAppMessageBase::eventShowInAppSMSUI() {
    static UFunction* pFnShowInAppSMSUI = NULL;

    if (!pFnShowInAppSMSUI)
        pFnShowInAppSMSUI = (UFunction*)UObject::GObjObjects()->Data[23220];

    UInAppMessageBase_eventShowInAppSMSUI_Parms ShowInAppSMSUI_Parms;

    pFnShowInAppSMSUI->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShowInAppSMSUI, &ShowInAppSMSUI_Parms, NULL);

    pFnShowInAppSMSUI->FunctionFlags |= 0x400;
};

// Function Engine.InAppMessageBase.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UInAppMessageBase::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[23219];

    UInAppMessageBase_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.InGameAdManager.SetPauseWhileAdOpen
// [0x00020002]
// Parameters infos:

void UInGameAdManager::SetPauseWhileAdOpen() {
    static UFunction* pFnSetPauseWhileAdOpen = NULL;

    if (!pFnSetPauseWhileAdOpen)
        pFnSetPauseWhileAdOpen =
            (UFunction*)UObject::GObjObjects()->Data[23234];

    UInGameAdManager_execSetPauseWhileAdOpen_Parms SetPauseWhileAdOpen_Parms;

    this->ProcessEvent(pFnSetPauseWhileAdOpen, &SetPauseWhileAdOpen_Parms,
                       NULL);
};

// Function Engine.InGameAdManager.ForceCloseAd
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UInGameAdManager::ForceCloseAd() {
    static UFunction* pFnForceCloseAd = NULL;

    if (!pFnForceCloseAd)
        pFnForceCloseAd = (UFunction*)UObject::GObjObjects()->Data[23233];

    UInGameAdManager_execForceCloseAd_Parms ForceCloseAd_Parms;

    pFnForceCloseAd->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnForceCloseAd, &ForceCloseAd_Parms, NULL);

    pFnForceCloseAd->FunctionFlags |= 0x400;
};

// Function Engine.InGameAdManager.HideBanner
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UInGameAdManager::HideBanner() {
    static UFunction* pFnHideBanner = NULL;

    if (!pFnHideBanner)
        pFnHideBanner = (UFunction*)UObject::GObjObjects()->Data[23232];

    UInGameAdManager_execHideBanner_Parms HideBanner_Parms;

    pFnHideBanner->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnHideBanner, &HideBanner_Parms, NULL);

    pFnHideBanner->FunctionFlags |= 0x400;
};

// Function Engine.InGameAdManager.ShowBanner
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UInGameAdManager::ShowBanner() {
    static UFunction* pFnShowBanner = NULL;

    if (!pFnShowBanner)
        pFnShowBanner = (UFunction*)UObject::GObjObjects()->Data[23230];

    UInGameAdManager_execShowBanner_Parms ShowBanner_Parms;

    pFnShowBanner->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShowBanner, &ShowBanner_Parms, NULL);

    pFnShowBanner->FunctionFlags |= 0x400;
};

// Function Engine.InGameAdManager.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UInGameAdManager::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[23229];

    UInGameAdManager_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.TwitterRequest
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventTwitterRequest() {
    static UFunction* pFnTwitterRequest = NULL;

    if (!pFnTwitterRequest)
        pFnTwitterRequest = (UFunction*)UObject::GObjObjects()->Data[35602];

    UTwitterIntegrationBase_eventTwitterRequest_Parms TwitterRequest_Parms;

    pFnTwitterRequest->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnTwitterRequest, &TwitterRequest_Parms, NULL);

    pFnTwitterRequest->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.GetAccountId
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventGetAccountId() {
    static UFunction* pFnGetAccountId = NULL;

    if (!pFnGetAccountId)
        pFnGetAccountId = (UFunction*)UObject::GObjObjects()->Data[35599];

    UTwitterIntegrationBase_eventGetAccountId_Parms GetAccountId_Parms;

    pFnGetAccountId->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAccountId, &GetAccountId_Parms, NULL);

    pFnGetAccountId->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.GetAccountName
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventGetAccountName() {
    static UFunction* pFnGetAccountName = NULL;

    if (!pFnGetAccountName)
        pFnGetAccountName = (UFunction*)UObject::GObjObjects()->Data[35596];

    UTwitterIntegrationBase_eventGetAccountName_Parms GetAccountName_Parms;

    pFnGetAccountName->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetAccountName, &GetAccountName_Parms, NULL);

    pFnGetAccountName->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.GetNumAccounts
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventGetNumAccounts() {
    static UFunction* pFnGetNumAccounts = NULL;

    if (!pFnGetNumAccounts)
        pFnGetNumAccounts = (UFunction*)UObject::GObjObjects()->Data[35594];

    UTwitterIntegrationBase_eventGetNumAccounts_Parms GetNumAccounts_Parms;

    pFnGetNumAccounts->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumAccounts, &GetNumAccounts_Parms, NULL);

    pFnGetNumAccounts->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.AuthorizeAccounts
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventAuthorizeAccounts() {
    static UFunction* pFnAuthorizeAccounts = NULL;

    if (!pFnAuthorizeAccounts)
        pFnAuthorizeAccounts = (UFunction*)UObject::GObjObjects()->Data[35592];

    UTwitterIntegrationBase_eventAuthorizeAccounts_Parms
        AuthorizeAccounts_Parms;

    pFnAuthorizeAccounts->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnAuthorizeAccounts, &AuthorizeAccounts_Parms, NULL);

    pFnAuthorizeAccounts->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.ShowTweetUI
// [0x00024C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventShowTweetUI() {
    static UFunction* pFnShowTweetUI = NULL;

    if (!pFnShowTweetUI)
        pFnShowTweetUI = (UFunction*)UObject::GObjObjects()->Data[35587];

    UTwitterIntegrationBase_eventShowTweetUI_Parms ShowTweetUI_Parms;

    pFnShowTweetUI->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnShowTweetUI, &ShowTweetUI_Parms, NULL);

    pFnShowTweetUI->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.CanShowTweetUI
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventCanShowTweetUI() {
    static UFunction* pFnCanShowTweetUI = NULL;

    if (!pFnCanShowTweetUI)
        pFnCanShowTweetUI = (UFunction*)UObject::GObjObjects()->Data[35585];

    UTwitterIntegrationBase_eventCanShowTweetUI_Parms CanShowTweetUI_Parms;

    pFnCanShowTweetUI->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnCanShowTweetUI, &CanShowTweetUI_Parms, NULL);

    pFnCanShowTweetUI->FunctionFlags |= 0x400;
};

// Function Engine.TwitterIntegrationBase.Init
// [0x00020C00] ( FUNC_Event | FUNC_Native )
// Parameters infos:

void UTwitterIntegrationBase::eventInit() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[35584];

    UTwitterIntegrationBase_eventInit_Parms Init_Parms;

    pFnInit->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);

    pFnInit->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceWebResponse.GetHeaderValue
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceWebResponse::GetHeaderValue() {
    static UFunction* pFnGetHeaderValue = NULL;

    if (!pFnGetHeaderValue)
        pFnGetHeaderValue = (UFunction*)UObject::GObjObjects()->Data[31390];

    UPlatformInterfaceWebResponse_execGetHeaderValue_Parms GetHeaderValue_Parms;

    pFnGetHeaderValue->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetHeaderValue, &GetHeaderValue_Parms, NULL);

    pFnGetHeaderValue->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceWebResponse.GetHeader
// [0x00420400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceWebResponse::GetHeader() {
    static UFunction* pFnGetHeader = NULL;

    if (!pFnGetHeader)
        pFnGetHeader = (UFunction*)UObject::GObjObjects()->Data[31386];

    UPlatformInterfaceWebResponse_execGetHeader_Parms GetHeader_Parms;

    pFnGetHeader->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetHeader, &GetHeader_Parms, NULL);

    pFnGetHeader->FunctionFlags |= 0x400;
};

// Function Engine.PlatformInterfaceWebResponse.GetNumHeaders
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void UPlatformInterfaceWebResponse::GetNumHeaders() {
    static UFunction* pFnGetNumHeaders = NULL;

    if (!pFnGetNumHeaders)
        pFnGetNumHeaders = (UFunction*)UObject::GObjObjects()->Data[31384];

    UPlatformInterfaceWebResponse_execGetNumHeaders_Parms GetNumHeaders_Parms;

    pFnGetNumHeaders->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnGetNumHeaders, &GetNumHeaders_Parms, NULL);

    pFnGetNumHeaders->FunctionFlags |= 0x400;
};

// Function Engine.TWIndoorLightingVolume.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATWIndoorLightingVolume::eventUnTouch() {
    static UFunction* pFnUnTouch = NULL;

    if (!pFnUnTouch)
        pFnUnTouch = (UFunction*)UObject::GObjObjects()->Data[35578];

    ATWIndoorLightingVolume_eventUnTouch_Parms UnTouch_Parms;

    this->ProcessEvent(pFnUnTouch, &UnTouch_Parms, NULL);
};

// Function Engine.TWIndoorLightingVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATWIndoorLightingVolume::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[35572];

    ATWIndoorLightingVolume_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.TWOutdoorLightingVolume.UnTouch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATWOutdoorLightingVolume::eventUnTouch() {
    static UFunction* pFnUnTouch = NULL;

    if (!pFnUnTouch)
        pFnUnTouch = (UFunction*)UObject::GObjObjects()->Data[35714];

    ATWOutdoorLightingVolume_eventUnTouch_Parms UnTouch_Parms;

    this->ProcessEvent(pFnUnTouch, &UnTouch_Parms, NULL);
};

// Function Engine.TWOutdoorLightingVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ATWOutdoorLightingVolume::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[35708];

    ATWOutdoorLightingVolume_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.TWDeferredWorkManager.DeferSpecialMoveAnimEnd
// [0x00020002]
// Parameters infos:

void ATWDeferredWorkManager::DeferSpecialMoveAnimEnd() {
    static UFunction* pFnDeferSpecialMoveAnimEnd = NULL;

    if (!pFnDeferSpecialMoveAnimEnd)
        pFnDeferSpecialMoveAnimEnd =
            (UFunction*)UObject::GObjObjects()->Data[35558];

    ATWDeferredWorkManager_execDeferSpecialMoveAnimEnd_Parms
        DeferSpecialMoveAnimEnd_Parms;

    this->ProcessEvent(pFnDeferSpecialMoveAnimEnd,
                       &DeferSpecialMoveAnimEnd_Parms, NULL);
};

// Function Engine.TWDeferredWorkManager.DeferNotifyEnd
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATWDeferredWorkManager::DeferNotifyEnd() {
    static UFunction* pFnDeferNotifyEnd = NULL;

    if (!pFnDeferNotifyEnd)
        pFnDeferNotifyEnd = (UFunction*)UObject::GObjObjects()->Data[35554];

    ATWDeferredWorkManager_execDeferNotifyEnd_Parms DeferNotifyEnd_Parms;

    pFnDeferNotifyEnd->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeferNotifyEnd, &DeferNotifyEnd_Parms, NULL);

    pFnDeferNotifyEnd->FunctionFlags |= 0x400;
};

// Function Engine.TWDeferredWorkManager.DeferNotifyTick
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATWDeferredWorkManager::DeferNotifyTick() {
    static UFunction* pFnDeferNotifyTick = NULL;

    if (!pFnDeferNotifyTick)
        pFnDeferNotifyTick = (UFunction*)UObject::GObjObjects()->Data[35548];

    ATWDeferredWorkManager_execDeferNotifyTick_Parms DeferNotifyTick_Parms;

    pFnDeferNotifyTick->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeferNotifyTick, &DeferNotifyTick_Parms, NULL);

    pFnDeferNotifyTick->FunctionFlags |= 0x400;
};

// Function Engine.TWDeferredWorkManager.DeferNotify
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATWDeferredWorkManager::DeferNotify() {
    static UFunction* pFnDeferNotify = NULL;

    if (!pFnDeferNotify)
        pFnDeferNotify = (UFunction*)UObject::GObjObjects()->Data[35545];

    ATWDeferredWorkManager_execDeferNotify_Parms DeferNotify_Parms;

    pFnDeferNotify->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnDeferNotify, &DeferNotify_Parms, NULL);

    pFnDeferNotify->FunctionFlags |= 0x400;
};

// Function Engine.TWDeferredWorkManager.IsDuringAsyncWork
// [0x00020400] ( FUNC_Native )
// Parameters infos:

void ATWDeferredWorkManager::IsDuringAsyncWork() {
    static UFunction* pFnIsDuringAsyncWork = NULL;

    if (!pFnIsDuringAsyncWork)
        pFnIsDuringAsyncWork = (UFunction*)UObject::GObjObjects()->Data[35543];

    ATWDeferredWorkManager_execIsDuringAsyncWork_Parms IsDuringAsyncWork_Parms;

    pFnIsDuringAsyncWork->FunctionFlags |= ~0x400;

    this->ProcessEvent(pFnIsDuringAsyncWork, &IsDuringAsyncWork_Parms, NULL);

    pFnIsDuringAsyncWork->FunctionFlags |= 0x400;
};

// Function Engine.SeqAct_AttachToActor.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_AttachToActor::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32774];

    USeqAct_AttachToActor_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetVelocity.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetVelocity::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33158];

    USeqAct_SetVelocity_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_Teleport.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_Teleport::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33231];

    USeqAct_Teleport_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_Teleport.ShouldTeleport
// [0x00026003] ( FUNC_Final )
// Parameters infos:

void USeqAct_Teleport::ShouldTeleport() {
    static UFunction* pFnShouldTeleport = NULL;

    if (!pFnShouldTeleport)
        pFnShouldTeleport = (UFunction*)UObject::GObjObjects()->Data[6260];

    USeqAct_Teleport_execShouldTeleport_Parms ShouldTeleport_Parms;

    this->ProcessEvent(pFnShouldTeleport, &ShouldTeleport_Parms, NULL);
};

// Function Engine.LocalMessage.PartiallyDuplicates
// [0x00022002]
// Parameters infos:

void ULocalMessage::PartiallyDuplicates() {
    static UFunction* pFnPartiallyDuplicates = NULL;

    if (!pFnPartiallyDuplicates)
        pFnPartiallyDuplicates =
            (UFunction*)UObject::GObjObjects()->Data[19599];

    ULocalMessage_execPartiallyDuplicates_Parms PartiallyDuplicates_Parms;

    this->ProcessEvent(pFnPartiallyDuplicates, &PartiallyDuplicates_Parms,
                       NULL);
};

// Function Engine.LocalMessage.IsConsoleMessage
// [0x00022002]
// Parameters infos:

void ULocalMessage::IsConsoleMessage() {
    static UFunction* pFnIsConsoleMessage = NULL;

    if (!pFnIsConsoleMessage)
        pFnIsConsoleMessage = (UFunction*)UObject::GObjObjects()->Data[19596];

    ULocalMessage_execIsConsoleMessage_Parms IsConsoleMessage_Parms;

    this->ProcessEvent(pFnIsConsoleMessage, &IsConsoleMessage_Parms, NULL);
};

// Function Engine.LocalMessage.GetLifeTime
// [0x00022002]
// Parameters infos:

void ULocalMessage::GetLifeTime() {
    static UFunction* pFnGetLifeTime = NULL;

    if (!pFnGetLifeTime)
        pFnGetLifeTime = (UFunction*)UObject::GObjObjects()->Data[19593];

    ULocalMessage_execGetLifeTime_Parms GetLifeTime_Parms;

    this->ProcessEvent(pFnGetLifeTime, &GetLifeTime_Parms, NULL);
};

// Function Engine.LocalMessage.GetFontSize
// [0x00022002]
// Parameters infos:

void ULocalMessage::GetFontSize() {
    static UFunction* pFnGetFontSize = NULL;

    if (!pFnGetFontSize)
        pFnGetFontSize = (UFunction*)UObject::GObjObjects()->Data[19587];

    ULocalMessage_execGetFontSize_Parms GetFontSize_Parms;

    this->ProcessEvent(pFnGetFontSize, &GetFontSize_Parms, NULL);
};

// Function Engine.LocalMessage.GetPos
// [0x00022002]
// Parameters infos:

void ULocalMessage::GetPos() {
    static UFunction* pFnGetPos = NULL;

    if (!pFnGetPos) pFnGetPos = (UFunction*)UObject::GObjObjects()->Data[19583];

    ULocalMessage_execGetPos_Parms GetPos_Parms;

    this->ProcessEvent(pFnGetPos, &GetPos_Parms, NULL);
};

// Function Engine.LocalMessage.GetColor
// [0x00026002]
// Parameters infos:

void ULocalMessage::GetColor() {
    static UFunction* pFnGetColor = NULL;

    if (!pFnGetColor)
        pFnGetColor = (UFunction*)UObject::GObjObjects()->Data[19577];

    ULocalMessage_execGetColor_Parms GetColor_Parms;

    this->ProcessEvent(pFnGetColor, &GetColor_Parms, NULL);
};

// Function Engine.LocalMessage.GetConsoleColor
// [0x00022002]
// Parameters infos:

void ULocalMessage::GetConsoleColor() {
    static UFunction* pFnGetConsoleColor = NULL;

    if (!pFnGetConsoleColor)
        pFnGetConsoleColor = (UFunction*)UObject::GObjObjects()->Data[19574];

    ULocalMessage_execGetConsoleColor_Parms GetConsoleColor_Parms;

    this->ProcessEvent(pFnGetConsoleColor, &GetConsoleColor_Parms, NULL);
};

// Function Engine.LocalMessage.GetString
// [0x00026002]
// Parameters infos:

void ULocalMessage::GetString() {
    static UFunction* pFnGetString = NULL;

    if (!pFnGetString)
        pFnGetString = (UFunction*)UObject::GObjObjects()->Data[19567];

    ULocalMessage_execGetString_Parms GetString_Parms;

    this->ProcessEvent(pFnGetString, &GetString_Parms, NULL);
};

// Function Engine.LocalMessage.ClientReceive
// [0x00026002]
// Parameters infos:

void ULocalMessage::ClientReceive() {
    static UFunction* pFnClientReceive = NULL;

    if (!pFnClientReceive)
        pFnClientReceive = (UFunction*)UObject::GObjObjects()->Data[19560];

    ULocalMessage_execClientReceive_Parms ClientReceive_Parms;

    this->ProcessEvent(pFnClientReceive, &ClientReceive_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetAchievements
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::GetAchievements() {
    static UFunction* pFnGetAchievements = NULL;

    if (!pFnGetAchievements)
        pFnGetAchievements = (UFunction*)UObject::GObjObjects()->Data[28627];

    UOnlinePlayerInterface_execGetAchievements_Parms GetAchievements_Parms;

    this->ProcessEvent(pFnGetAchievements, &GetAchievements_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearReadAchievementsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReadAchievementsCompleteDelegate() {
    static UFunction* pFnClearReadAchievementsCompleteDelegate = NULL;

    if (!pFnClearReadAchievementsCompleteDelegate)
        pFnClearReadAchievementsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28624];

    UOnlinePlayerInterface_execClearReadAchievementsCompleteDelegate_Parms
        ClearReadAchievementsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadAchievementsCompleteDelegate,
                       &ClearReadAchievementsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddReadAchievementsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReadAchievementsCompleteDelegate() {
    static UFunction* pFnAddReadAchievementsCompleteDelegate = NULL;

    if (!pFnAddReadAchievementsCompleteDelegate)
        pFnAddReadAchievementsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28621];

    UOnlinePlayerInterface_execAddReadAchievementsCompleteDelegate_Parms
        AddReadAchievementsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadAchievementsCompleteDelegate,
                       &AddReadAchievementsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnReadAchievementsComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReadAchievementsComplete() {
    static UFunction* pFnOnReadAchievementsComplete = NULL;

    if (!pFnOnReadAchievementsComplete)
        pFnOnReadAchievementsComplete =
            (UFunction*)UObject::GObjObjects()->Data[28619];

    UOnlinePlayerInterface_execOnReadAchievementsComplete_Parms
        OnReadAchievementsComplete_Parms;

    this->ProcessEvent(pFnOnReadAchievementsComplete,
                       &OnReadAchievementsComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ReadAchievements
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::ReadAchievements() {
    static UFunction* pFnReadAchievements = NULL;

    if (!pFnReadAchievements)
        pFnReadAchievements = (UFunction*)UObject::GObjObjects()->Data[28613];

    UOnlinePlayerInterface_execReadAchievements_Parms ReadAchievements_Parms;

    this->ProcessEvent(pFnReadAchievements, &ReadAchievements_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearUnlockAchievementCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearUnlockAchievementCompleteDelegate() {
    static UFunction* pFnClearUnlockAchievementCompleteDelegate = NULL;

    if (!pFnClearUnlockAchievementCompleteDelegate)
        pFnClearUnlockAchievementCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28610];

    UOnlinePlayerInterface_execClearUnlockAchievementCompleteDelegate_Parms
        ClearUnlockAchievementCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUnlockAchievementCompleteDelegate,
                       &ClearUnlockAchievementCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddUnlockAchievementCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddUnlockAchievementCompleteDelegate() {
    static UFunction* pFnAddUnlockAchievementCompleteDelegate = NULL;

    if (!pFnAddUnlockAchievementCompleteDelegate)
        pFnAddUnlockAchievementCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28607];

    UOnlinePlayerInterface_execAddUnlockAchievementCompleteDelegate_Parms
        AddUnlockAchievementCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUnlockAchievementCompleteDelegate,
                       &AddUnlockAchievementCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnUnlockAchievementComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnUnlockAchievementComplete() {
    static UFunction* pFnOnUnlockAchievementComplete = NULL;

    if (!pFnOnUnlockAchievementComplete)
        pFnOnUnlockAchievementComplete =
            (UFunction*)UObject::GObjObjects()->Data[28605];

    UOnlinePlayerInterface_execOnUnlockAchievementComplete_Parms
        OnUnlockAchievementComplete_Parms;

    this->ProcessEvent(pFnOnUnlockAchievementComplete,
                       &OnUnlockAchievementComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.UnlockAchievement
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::UnlockAchievement() {
    static UFunction* pFnUnlockAchievement = NULL;

    if (!pFnUnlockAchievement)
        pFnUnlockAchievement = (UFunction*)UObject::GObjObjects()->Data[28600];

    UOnlinePlayerInterface_execUnlockAchievement_Parms UnlockAchievement_Parms;

    this->ProcessEvent(pFnUnlockAchievement, &UnlockAchievement_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.DeleteMessage
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::DeleteMessage() {
    static UFunction* pFnDeleteMessage = NULL;

    if (!pFnDeleteMessage)
        pFnDeleteMessage = (UFunction*)UObject::GObjObjects()->Data[28596];

    UOnlinePlayerInterface_execDeleteMessage_Parms DeleteMessage_Parms;

    this->ProcessEvent(pFnDeleteMessage, &DeleteMessage_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearFriendMessageReceivedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearFriendMessageReceivedDelegate() {
    static UFunction* pFnClearFriendMessageReceivedDelegate = NULL;

    if (!pFnClearFriendMessageReceivedDelegate)
        pFnClearFriendMessageReceivedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28593];

    UOnlinePlayerInterface_execClearFriendMessageReceivedDelegate_Parms
        ClearFriendMessageReceivedDelegate_Parms;

    this->ProcessEvent(pFnClearFriendMessageReceivedDelegate,
                       &ClearFriendMessageReceivedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddFriendMessageReceivedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddFriendMessageReceivedDelegate() {
    static UFunction* pFnAddFriendMessageReceivedDelegate = NULL;

    if (!pFnAddFriendMessageReceivedDelegate)
        pFnAddFriendMessageReceivedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28590];

    UOnlinePlayerInterface_execAddFriendMessageReceivedDelegate_Parms
        AddFriendMessageReceivedDelegate_Parms;

    this->ProcessEvent(pFnAddFriendMessageReceivedDelegate,
                       &AddFriendMessageReceivedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnFriendMessageReceived
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnFriendMessageReceived() {
    static UFunction* pFnOnFriendMessageReceived = NULL;

    if (!pFnOnFriendMessageReceived)
        pFnOnFriendMessageReceived =
            (UFunction*)UObject::GObjObjects()->Data[28585];

    UOnlinePlayerInterface_execOnFriendMessageReceived_Parms
        OnFriendMessageReceived_Parms;

    this->ProcessEvent(pFnOnFriendMessageReceived,
                       &OnFriendMessageReceived_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetFriendMessages
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterface::GetFriendMessages() {
    static UFunction* pFnGetFriendMessages = NULL;

    if (!pFnGetFriendMessages)
        pFnGetFriendMessages = (UFunction*)UObject::GObjObjects()->Data[28581];

    UOnlinePlayerInterface_execGetFriendMessages_Parms GetFriendMessages_Parms;

    this->ProcessEvent(pFnGetFriendMessages, &GetFriendMessages_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearJoinFriendGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearJoinFriendGameCompleteDelegate() {
    static UFunction* pFnClearJoinFriendGameCompleteDelegate = NULL;

    if (!pFnClearJoinFriendGameCompleteDelegate)
        pFnClearJoinFriendGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28579];

    UOnlinePlayerInterface_execClearJoinFriendGameCompleteDelegate_Parms
        ClearJoinFriendGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearJoinFriendGameCompleteDelegate,
                       &ClearJoinFriendGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddJoinFriendGameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddJoinFriendGameCompleteDelegate() {
    static UFunction* pFnAddJoinFriendGameCompleteDelegate = NULL;

    if (!pFnAddJoinFriendGameCompleteDelegate)
        pFnAddJoinFriendGameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28577];

    UOnlinePlayerInterface_execAddJoinFriendGameCompleteDelegate_Parms
        AddJoinFriendGameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddJoinFriendGameCompleteDelegate,
                       &AddJoinFriendGameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnJoinFriendGameComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnJoinFriendGameComplete() {
    static UFunction* pFnOnJoinFriendGameComplete = NULL;

    if (!pFnOnJoinFriendGameComplete)
        pFnOnJoinFriendGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[28575];

    UOnlinePlayerInterface_execOnJoinFriendGameComplete_Parms
        OnJoinFriendGameComplete_Parms;

    this->ProcessEvent(pFnOnJoinFriendGameComplete,
                       &OnJoinFriendGameComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.JoinFriendGame
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::JoinFriendGame() {
    static UFunction* pFnJoinFriendGame = NULL;

    if (!pFnJoinFriendGame)
        pFnJoinFriendGame = (UFunction*)UObject::GObjObjects()->Data[28571];

    UOnlinePlayerInterface_execJoinFriendGame_Parms JoinFriendGame_Parms;

    this->ProcessEvent(pFnJoinFriendGame, &JoinFriendGame_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CheckForGameInviteOnLaunch
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::CheckForGameInviteOnLaunch() {
    static UFunction* pFnCheckForGameInviteOnLaunch = NULL;

    if (!pFnCheckForGameInviteOnLaunch)
        pFnCheckForGameInviteOnLaunch =
            (UFunction*)UObject::GObjObjects()->Data[28570];

    UOnlinePlayerInterface_execCheckForGameInviteOnLaunch_Parms
        CheckForGameInviteOnLaunch_Parms;

    this->ProcessEvent(pFnCheckForGameInviteOnLaunch,
                       &CheckForGameInviteOnLaunch_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearReceivedGameInviteByIdDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReceivedGameInviteByIdDelegate() {
    static UFunction* pFnClearReceivedGameInviteByIdDelegate = NULL;

    if (!pFnClearReceivedGameInviteByIdDelegate)
        pFnClearReceivedGameInviteByIdDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28567];

    UOnlinePlayerInterface_execClearReceivedGameInviteByIdDelegate_Parms
        ClearReceivedGameInviteByIdDelegate_Parms;

    this->ProcessEvent(pFnClearReceivedGameInviteByIdDelegate,
                       &ClearReceivedGameInviteByIdDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearReceivedGameInviteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReceivedGameInviteDelegate() {
    static UFunction* pFnClearReceivedGameInviteDelegate = NULL;

    if (!pFnClearReceivedGameInviteDelegate)
        pFnClearReceivedGameInviteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28564];

    UOnlinePlayerInterface_execClearReceivedGameInviteDelegate_Parms
        ClearReceivedGameInviteDelegate_Parms;

    this->ProcessEvent(pFnClearReceivedGameInviteDelegate,
                       &ClearReceivedGameInviteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddReceivedGameInviteByIdDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReceivedGameInviteByIdDelegate() {
    static UFunction* pFnAddReceivedGameInviteByIdDelegate = NULL;

    if (!pFnAddReceivedGameInviteByIdDelegate)
        pFnAddReceivedGameInviteByIdDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28561];

    UOnlinePlayerInterface_execAddReceivedGameInviteByIdDelegate_Parms
        AddReceivedGameInviteByIdDelegate_Parms;

    this->ProcessEvent(pFnAddReceivedGameInviteByIdDelegate,
                       &AddReceivedGameInviteByIdDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddReceivedGameInviteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReceivedGameInviteDelegate() {
    static UFunction* pFnAddReceivedGameInviteDelegate = NULL;

    if (!pFnAddReceivedGameInviteDelegate)
        pFnAddReceivedGameInviteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28558];

    UOnlinePlayerInterface_execAddReceivedGameInviteDelegate_Parms
        AddReceivedGameInviteDelegate_Parms;

    this->ProcessEvent(pFnAddReceivedGameInviteDelegate,
                       &AddReceivedGameInviteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnReceivedGameInviteById
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReceivedGameInviteById() {
    static UFunction* pFnOnReceivedGameInviteById = NULL;

    if (!pFnOnReceivedGameInviteById)
        pFnOnReceivedGameInviteById =
            (UFunction*)UObject::GObjObjects()->Data[28555];

    UOnlinePlayerInterface_execOnReceivedGameInviteById_Parms
        OnReceivedGameInviteById_Parms;

    this->ProcessEvent(pFnOnReceivedGameInviteById,
                       &OnReceivedGameInviteById_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnReceivedGameInvite
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReceivedGameInvite() {
    static UFunction* pFnOnReceivedGameInvite = NULL;

    if (!pFnOnReceivedGameInvite)
        pFnOnReceivedGameInvite =
            (UFunction*)UObject::GObjObjects()->Data[28552];

    UOnlinePlayerInterface_execOnReceivedGameInvite_Parms
        OnReceivedGameInvite_Parms;

    this->ProcessEvent(pFnOnReceivedGameInvite, &OnReceivedGameInvite_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.SendGameInviteToUsers
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::SendGameInviteToUsers() {
    static UFunction* pFnSendGameInviteToUsers = NULL;

    if (!pFnSendGameInviteToUsers)
        pFnSendGameInviteToUsers =
            (UFunction*)UObject::GObjObjects()->Data[28545];

    UOnlinePlayerInterface_execSendGameInviteToUsers_Parms
        SendGameInviteToUsers_Parms;

    this->ProcessEvent(pFnSendGameInviteToUsers, &SendGameInviteToUsers_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.SendGameInviteToFriends
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::SendGameInviteToFriends() {
    static UFunction* pFnSendGameInviteToFriends = NULL;

    if (!pFnSendGameInviteToFriends)
        pFnSendGameInviteToFriends =
            (UFunction*)UObject::GObjObjects()->Data[28538];

    UOnlinePlayerInterface_execSendGameInviteToFriends_Parms
        SendGameInviteToFriends_Parms;

    this->ProcessEvent(pFnSendGameInviteToFriends,
                       &SendGameInviteToFriends_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.SendGameInviteToFriend
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::SendGameInviteToFriend() {
    static UFunction* pFnSendGameInviteToFriend = NULL;

    if (!pFnSendGameInviteToFriend)
        pFnSendGameInviteToFriend =
            (UFunction*)UObject::GObjObjects()->Data[28532];

    UOnlinePlayerInterface_execSendGameInviteToFriend_Parms
        SendGameInviteToFriend_Parms;

    this->ProcessEvent(pFnSendGameInviteToFriend, &SendGameInviteToFriend_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.SendMessageToFriend
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::SendMessageToFriend() {
    static UFunction* pFnSendMessageToFriend = NULL;

    if (!pFnSendMessageToFriend)
        pFnSendMessageToFriend =
            (UFunction*)UObject::GObjObjects()->Data[28527];

    UOnlinePlayerInterface_execSendMessageToFriend_Parms
        SendMessageToFriend_Parms;

    this->ProcessEvent(pFnSendMessageToFriend, &SendMessageToFriend_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.ClearFriendInviteReceivedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearFriendInviteReceivedDelegate() {
    static UFunction* pFnClearFriendInviteReceivedDelegate = NULL;

    if (!pFnClearFriendInviteReceivedDelegate)
        pFnClearFriendInviteReceivedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28524];

    UOnlinePlayerInterface_execClearFriendInviteReceivedDelegate_Parms
        ClearFriendInviteReceivedDelegate_Parms;

    this->ProcessEvent(pFnClearFriendInviteReceivedDelegate,
                       &ClearFriendInviteReceivedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddFriendInviteReceivedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddFriendInviteReceivedDelegate() {
    static UFunction* pFnAddFriendInviteReceivedDelegate = NULL;

    if (!pFnAddFriendInviteReceivedDelegate)
        pFnAddFriendInviteReceivedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28521];

    UOnlinePlayerInterface_execAddFriendInviteReceivedDelegate_Parms
        AddFriendInviteReceivedDelegate_Parms;

    this->ProcessEvent(pFnAddFriendInviteReceivedDelegate,
                       &AddFriendInviteReceivedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnFriendInviteReceived
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnFriendInviteReceived() {
    static UFunction* pFnOnFriendInviteReceived = NULL;

    if (!pFnOnFriendInviteReceived)
        pFnOnFriendInviteReceived =
            (UFunction*)UObject::GObjObjects()->Data[28516];

    UOnlinePlayerInterface_execOnFriendInviteReceived_Parms
        OnFriendInviteReceived_Parms;

    this->ProcessEvent(pFnOnFriendInviteReceived, &OnFriendInviteReceived_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.RemoveFriend
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::RemoveFriend() {
    static UFunction* pFnRemoveFriend = NULL;

    if (!pFnRemoveFriend)
        pFnRemoveFriend = (UFunction*)UObject::GObjObjects()->Data[28512];

    UOnlinePlayerInterface_execRemoveFriend_Parms RemoveFriend_Parms;

    this->ProcessEvent(pFnRemoveFriend, &RemoveFriend_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.DenyFriendInvite
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::DenyFriendInvite() {
    static UFunction* pFnDenyFriendInvite = NULL;

    if (!pFnDenyFriendInvite)
        pFnDenyFriendInvite = (UFunction*)UObject::GObjObjects()->Data[28508];

    UOnlinePlayerInterface_execDenyFriendInvite_Parms DenyFriendInvite_Parms;

    this->ProcessEvent(pFnDenyFriendInvite, &DenyFriendInvite_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AcceptFriendInvite
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AcceptFriendInvite() {
    static UFunction* pFnAcceptFriendInvite = NULL;

    if (!pFnAcceptFriendInvite)
        pFnAcceptFriendInvite = (UFunction*)UObject::GObjObjects()->Data[28504];

    UOnlinePlayerInterface_execAcceptFriendInvite_Parms
        AcceptFriendInvite_Parms;

    this->ProcessEvent(pFnAcceptFriendInvite, &AcceptFriendInvite_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearAddFriendByNameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearAddFriendByNameCompleteDelegate() {
    static UFunction* pFnClearAddFriendByNameCompleteDelegate = NULL;

    if (!pFnClearAddFriendByNameCompleteDelegate)
        pFnClearAddFriendByNameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28501];

    UOnlinePlayerInterface_execClearAddFriendByNameCompleteDelegate_Parms
        ClearAddFriendByNameCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearAddFriendByNameCompleteDelegate,
                       &ClearAddFriendByNameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddAddFriendByNameCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddAddFriendByNameCompleteDelegate() {
    static UFunction* pFnAddAddFriendByNameCompleteDelegate = NULL;

    if (!pFnAddAddFriendByNameCompleteDelegate)
        pFnAddAddFriendByNameCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28498];

    UOnlinePlayerInterface_execAddAddFriendByNameCompleteDelegate_Parms
        AddAddFriendByNameCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddAddFriendByNameCompleteDelegate,
                       &AddAddFriendByNameCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnAddFriendByNameComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnAddFriendByNameComplete() {
    static UFunction* pFnOnAddFriendByNameComplete = NULL;

    if (!pFnOnAddFriendByNameComplete)
        pFnOnAddFriendByNameComplete =
            (UFunction*)UObject::GObjObjects()->Data[28496];

    UOnlinePlayerInterface_execOnAddFriendByNameComplete_Parms
        OnAddFriendByNameComplete_Parms;

    this->ProcessEvent(pFnOnAddFriendByNameComplete,
                       &OnAddFriendByNameComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddFriendByName
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::AddFriendByName() {
    static UFunction* pFnAddFriendByName = NULL;

    if (!pFnAddFriendByName)
        pFnAddFriendByName = (UFunction*)UObject::GObjObjects()->Data[28491];

    UOnlinePlayerInterface_execAddFriendByName_Parms AddFriendByName_Parms;

    this->ProcessEvent(pFnAddFriendByName, &AddFriendByName_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddFriend
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::AddFriend() {
    static UFunction* pFnAddFriend = NULL;

    if (!pFnAddFriend)
        pFnAddFriend = (UFunction*)UObject::GObjObjects()->Data[28486];

    UOnlinePlayerInterface_execAddFriend_Parms AddFriend_Parms;

    this->ProcessEvent(pFnAddFriend, &AddFriend_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetKeyboardInputResults
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterface::GetKeyboardInputResults() {
    static UFunction* pFnGetKeyboardInputResults = NULL;

    if (!pFnGetKeyboardInputResults)
        pFnGetKeyboardInputResults =
            (UFunction*)UObject::GObjObjects()->Data[16943];

    UOnlinePlayerInterface_execGetKeyboardInputResults_Parms
        GetKeyboardInputResults_Parms;

    this->ProcessEvent(pFnGetKeyboardInputResults,
                       &GetKeyboardInputResults_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearKeyboardInputDoneDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearKeyboardInputDoneDelegate() {
    static UFunction* pFnClearKeyboardInputDoneDelegate = NULL;

    if (!pFnClearKeyboardInputDoneDelegate)
        pFnClearKeyboardInputDoneDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28483];

    UOnlinePlayerInterface_execClearKeyboardInputDoneDelegate_Parms
        ClearKeyboardInputDoneDelegate_Parms;

    this->ProcessEvent(pFnClearKeyboardInputDoneDelegate,
                       &ClearKeyboardInputDoneDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddKeyboardInputDoneDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddKeyboardInputDoneDelegate() {
    static UFunction* pFnAddKeyboardInputDoneDelegate = NULL;

    if (!pFnAddKeyboardInputDoneDelegate)
        pFnAddKeyboardInputDoneDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28481];

    UOnlinePlayerInterface_execAddKeyboardInputDoneDelegate_Parms
        AddKeyboardInputDoneDelegate_Parms;

    this->ProcessEvent(pFnAddKeyboardInputDoneDelegate,
                       &AddKeyboardInputDoneDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnKeyboardInputComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnKeyboardInputComplete() {
    static UFunction* pFnOnKeyboardInputComplete = NULL;

    if (!pFnOnKeyboardInputComplete)
        pFnOnKeyboardInputComplete =
            (UFunction*)UObject::GObjObjects()->Data[28479];

    UOnlinePlayerInterface_execOnKeyboardInputComplete_Parms
        OnKeyboardInputComplete_Parms;

    this->ProcessEvent(pFnOnKeyboardInputComplete,
                       &OnKeyboardInputComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.HideKeyboardUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::HideKeyboardUI() {
    static UFunction* pFnHideKeyboardUI = NULL;

    if (!pFnHideKeyboardUI)
        pFnHideKeyboardUI = (UFunction*)UObject::GObjObjects()->Data[16937];

    UOnlinePlayerInterface_execHideKeyboardUI_Parms HideKeyboardUI_Parms;

    this->ProcessEvent(pFnHideKeyboardUI, &HideKeyboardUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ShowKeyboardUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::ShowKeyboardUI() {
    static UFunction* pFnShowKeyboardUI = NULL;

    if (!pFnShowKeyboardUI)
        pFnShowKeyboardUI = (UFunction*)UObject::GObjObjects()->Data[16939];

    UOnlinePlayerInterface_execShowKeyboardUI_Parms ShowKeyboardUI_Parms;

    this->ProcessEvent(pFnShowKeyboardUI, &ShowKeyboardUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.SetOnlineStatus
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::SetOnlineStatus() {
    static UFunction* pFnSetOnlineStatus = NULL;

    if (!pFnSetOnlineStatus)
        pFnSetOnlineStatus = (UFunction*)UObject::GObjObjects()->Data[28467];

    UOnlinePlayerInterface_execSetOnlineStatus_Parms SetOnlineStatus_Parms;

    this->ProcessEvent(pFnSetOnlineStatus, &SetOnlineStatus_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetFriendsList
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::GetFriendsList() {
    static UFunction* pFnGetFriendsList = NULL;

    if (!pFnGetFriendsList)
        pFnGetFriendsList = (UFunction*)UObject::GObjObjects()->Data[12187];

    UOnlinePlayerInterface_execGetFriendsList_Parms GetFriendsList_Parms;

    this->ProcessEvent(pFnGetFriendsList, &GetFriendsList_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearReadFriendsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReadFriendsCompleteDelegate() {
    static UFunction* pFnClearReadFriendsCompleteDelegate = NULL;

    if (!pFnClearReadFriendsCompleteDelegate)
        pFnClearReadFriendsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28459];

    UOnlinePlayerInterface_execClearReadFriendsCompleteDelegate_Parms
        ClearReadFriendsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadFriendsCompleteDelegate,
                       &ClearReadFriendsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddReadFriendsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReadFriendsCompleteDelegate() {
    static UFunction* pFnAddReadFriendsCompleteDelegate = NULL;

    if (!pFnAddReadFriendsCompleteDelegate)
        pFnAddReadFriendsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28456];

    UOnlinePlayerInterface_execAddReadFriendsCompleteDelegate_Parms
        AddReadFriendsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadFriendsCompleteDelegate,
                       &AddReadFriendsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnReadFriendsComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReadFriendsComplete() {
    static UFunction* pFnOnReadFriendsComplete = NULL;

    if (!pFnOnReadFriendsComplete)
        pFnOnReadFriendsComplete =
            (UFunction*)UObject::GObjObjects()->Data[28454];

    UOnlinePlayerInterface_execOnReadFriendsComplete_Parms
        OnReadFriendsComplete_Parms;

    this->ProcessEvent(pFnOnReadFriendsComplete, &OnReadFriendsComplete_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.ReadFriendsList
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::ReadFriendsList() {
    static UFunction* pFnReadFriendsList = NULL;

    if (!pFnReadFriendsList)
        pFnReadFriendsList = (UFunction*)UObject::GObjObjects()->Data[12185];

    UOnlinePlayerInterface_execReadFriendsList_Parms ReadFriendsList_Parms;

    this->ProcessEvent(pFnReadFriendsList, &ReadFriendsList_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearWritePlayerStorageCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearWritePlayerStorageCompleteDelegate() {
    static UFunction* pFnClearWritePlayerStorageCompleteDelegate = NULL;

    if (!pFnClearWritePlayerStorageCompleteDelegate)
        pFnClearWritePlayerStorageCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28448];

    UOnlinePlayerInterface_execClearWritePlayerStorageCompleteDelegate_Parms
        ClearWritePlayerStorageCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearWritePlayerStorageCompleteDelegate,
                       &ClearWritePlayerStorageCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddWritePlayerStorageCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddWritePlayerStorageCompleteDelegate() {
    static UFunction* pFnAddWritePlayerStorageCompleteDelegate = NULL;

    if (!pFnAddWritePlayerStorageCompleteDelegate)
        pFnAddWritePlayerStorageCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28445];

    UOnlinePlayerInterface_execAddWritePlayerStorageCompleteDelegate_Parms
        AddWritePlayerStorageCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddWritePlayerStorageCompleteDelegate,
                       &AddWritePlayerStorageCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnWritePlayerStorageComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnWritePlayerStorageComplete() {
    static UFunction* pFnOnWritePlayerStorageComplete = NULL;

    if (!pFnOnWritePlayerStorageComplete)
        pFnOnWritePlayerStorageComplete =
            (UFunction*)UObject::GObjObjects()->Data[28442];

    UOnlinePlayerInterface_execOnWritePlayerStorageComplete_Parms
        OnWritePlayerStorageComplete_Parms;

    this->ProcessEvent(pFnOnWritePlayerStorageComplete,
                       &OnWritePlayerStorageComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.WritePlayerStorage
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::WritePlayerStorage() {
    static UFunction* pFnWritePlayerStorage = NULL;

    if (!pFnWritePlayerStorage)
        pFnWritePlayerStorage = (UFunction*)UObject::GObjObjects()->Data[28437];

    UOnlinePlayerInterface_execWritePlayerStorage_Parms
        WritePlayerStorage_Parms;

    this->ProcessEvent(pFnWritePlayerStorage, &WritePlayerStorage_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetPlayerStorage
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::GetPlayerStorage() {
    static UFunction* pFnGetPlayerStorage = NULL;

    if (!pFnGetPlayerStorage)
        pFnGetPlayerStorage = (UFunction*)UObject::GObjObjects()->Data[28434];

    UOnlinePlayerInterface_execGetPlayerStorage_Parms GetPlayerStorage_Parms;

    this->ProcessEvent(pFnGetPlayerStorage, &GetPlayerStorage_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterface.ClearReadPlayerStorageForNetIdCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReadPlayerStorageForNetIdCompleteDelegate() {
    static UFunction* pFnClearReadPlayerStorageForNetIdCompleteDelegate = NULL;

    if (!pFnClearReadPlayerStorageForNetIdCompleteDelegate)
        pFnClearReadPlayerStorageForNetIdCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28431];

    UOnlinePlayerInterface_execClearReadPlayerStorageForNetIdCompleteDelegate_Parms
        ClearReadPlayerStorageForNetIdCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadPlayerStorageForNetIdCompleteDelegate,
                       &ClearReadPlayerStorageForNetIdCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlinePlayerInterface.AddReadPlayerStorageForNetIdCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReadPlayerStorageForNetIdCompleteDelegate() {
    static UFunction* pFnAddReadPlayerStorageForNetIdCompleteDelegate = NULL;

    if (!pFnAddReadPlayerStorageForNetIdCompleteDelegate)
        pFnAddReadPlayerStorageForNetIdCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28428];

    UOnlinePlayerInterface_execAddReadPlayerStorageForNetIdCompleteDelegate_Parms
        AddReadPlayerStorageForNetIdCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadPlayerStorageForNetIdCompleteDelegate,
                       &AddReadPlayerStorageForNetIdCompleteDelegate_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.OnReadPlayerStorageForNetIdComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReadPlayerStorageForNetIdComplete() {
    static UFunction* pFnOnReadPlayerStorageForNetIdComplete = NULL;

    if (!pFnOnReadPlayerStorageForNetIdComplete)
        pFnOnReadPlayerStorageForNetIdComplete =
            (UFunction*)UObject::GObjObjects()->Data[28425];

    UOnlinePlayerInterface_execOnReadPlayerStorageForNetIdComplete_Parms
        OnReadPlayerStorageForNetIdComplete_Parms;

    this->ProcessEvent(pFnOnReadPlayerStorageForNetIdComplete,
                       &OnReadPlayerStorageForNetIdComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ReadPlayerStorageForNetId
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ReadPlayerStorageForNetId() {
    static UFunction* pFnReadPlayerStorageForNetId = NULL;

    if (!pFnReadPlayerStorageForNetId)
        pFnReadPlayerStorageForNetId =
            (UFunction*)UObject::GObjObjects()->Data[28420];

    UOnlinePlayerInterface_execReadPlayerStorageForNetId_Parms
        ReadPlayerStorageForNetId_Parms;

    this->ProcessEvent(pFnReadPlayerStorageForNetId,
                       &ReadPlayerStorageForNetId_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearReadPlayerStorageCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReadPlayerStorageCompleteDelegate() {
    static UFunction* pFnClearReadPlayerStorageCompleteDelegate = NULL;

    if (!pFnClearReadPlayerStorageCompleteDelegate)
        pFnClearReadPlayerStorageCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28417];

    UOnlinePlayerInterface_execClearReadPlayerStorageCompleteDelegate_Parms
        ClearReadPlayerStorageCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadPlayerStorageCompleteDelegate,
                       &ClearReadPlayerStorageCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddReadPlayerStorageCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReadPlayerStorageCompleteDelegate() {
    static UFunction* pFnAddReadPlayerStorageCompleteDelegate = NULL;

    if (!pFnAddReadPlayerStorageCompleteDelegate)
        pFnAddReadPlayerStorageCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28414];

    UOnlinePlayerInterface_execAddReadPlayerStorageCompleteDelegate_Parms
        AddReadPlayerStorageCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadPlayerStorageCompleteDelegate,
                       &AddReadPlayerStorageCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnReadPlayerStorageComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReadPlayerStorageComplete() {
    static UFunction* pFnOnReadPlayerStorageComplete = NULL;

    if (!pFnOnReadPlayerStorageComplete)
        pFnOnReadPlayerStorageComplete =
            (UFunction*)UObject::GObjObjects()->Data[28411];

    UOnlinePlayerInterface_execOnReadPlayerStorageComplete_Parms
        OnReadPlayerStorageComplete_Parms;

    this->ProcessEvent(pFnOnReadPlayerStorageComplete,
                       &OnReadPlayerStorageComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ReadPlayerStorage
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::ReadPlayerStorage() {
    static UFunction* pFnReadPlayerStorage = NULL;

    if (!pFnReadPlayerStorage)
        pFnReadPlayerStorage = (UFunction*)UObject::GObjObjects()->Data[28406];

    UOnlinePlayerInterface_execReadPlayerStorage_Parms ReadPlayerStorage_Parms;

    this->ProcessEvent(pFnReadPlayerStorage, &ReadPlayerStorage_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterface.ClearWriteProfileSettingsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearWriteProfileSettingsCompleteDelegate() {
    static UFunction* pFnClearWriteProfileSettingsCompleteDelegate = NULL;

    if (!pFnClearWriteProfileSettingsCompleteDelegate)
        pFnClearWriteProfileSettingsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28403];

    UOnlinePlayerInterface_execClearWriteProfileSettingsCompleteDelegate_Parms
        ClearWriteProfileSettingsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearWriteProfileSettingsCompleteDelegate,
                       &ClearWriteProfileSettingsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddWriteProfileSettingsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddWriteProfileSettingsCompleteDelegate() {
    static UFunction* pFnAddWriteProfileSettingsCompleteDelegate = NULL;

    if (!pFnAddWriteProfileSettingsCompleteDelegate)
        pFnAddWriteProfileSettingsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28400];

    UOnlinePlayerInterface_execAddWriteProfileSettingsCompleteDelegate_Parms
        AddWriteProfileSettingsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddWriteProfileSettingsCompleteDelegate,
                       &AddWriteProfileSettingsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnWriteProfileSettingsComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnWriteProfileSettingsComplete() {
    static UFunction* pFnOnWriteProfileSettingsComplete = NULL;

    if (!pFnOnWriteProfileSettingsComplete)
        pFnOnWriteProfileSettingsComplete =
            (UFunction*)UObject::GObjObjects()->Data[28397];

    UOnlinePlayerInterface_execOnWriteProfileSettingsComplete_Parms
        OnWriteProfileSettingsComplete_Parms;

    this->ProcessEvent(pFnOnWriteProfileSettingsComplete,
                       &OnWriteProfileSettingsComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.WriteProfileSettings
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::WriteProfileSettings() {
    static UFunction* pFnWriteProfileSettings = NULL;

    if (!pFnWriteProfileSettings)
        pFnWriteProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[28393];

    UOnlinePlayerInterface_execWriteProfileSettings_Parms
        WriteProfileSettings_Parms;

    this->ProcessEvent(pFnWriteProfileSettings, &WriteProfileSettings_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.GetProfileSettings
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::GetProfileSettings() {
    static UFunction* pFnGetProfileSettings = NULL;

    if (!pFnGetProfileSettings)
        pFnGetProfileSettings = (UFunction*)UObject::GObjObjects()->Data[28390];

    UOnlinePlayerInterface_execGetProfileSettings_Parms
        GetProfileSettings_Parms;

    this->ProcessEvent(pFnGetProfileSettings, &GetProfileSettings_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterface.ClearReadProfileSettingsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearReadProfileSettingsCompleteDelegate() {
    static UFunction* pFnClearReadProfileSettingsCompleteDelegate = NULL;

    if (!pFnClearReadProfileSettingsCompleteDelegate)
        pFnClearReadProfileSettingsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28387];

    UOnlinePlayerInterface_execClearReadProfileSettingsCompleteDelegate_Parms
        ClearReadProfileSettingsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadProfileSettingsCompleteDelegate,
                       &ClearReadProfileSettingsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddReadProfileSettingsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddReadProfileSettingsCompleteDelegate() {
    static UFunction* pFnAddReadProfileSettingsCompleteDelegate = NULL;

    if (!pFnAddReadProfileSettingsCompleteDelegate)
        pFnAddReadProfileSettingsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28384];

    UOnlinePlayerInterface_execAddReadProfileSettingsCompleteDelegate_Parms
        AddReadProfileSettingsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadProfileSettingsCompleteDelegate,
                       &AddReadProfileSettingsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnReadProfileSettingsComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnReadProfileSettingsComplete() {
    static UFunction* pFnOnReadProfileSettingsComplete = NULL;

    if (!pFnOnReadProfileSettingsComplete)
        pFnOnReadProfileSettingsComplete =
            (UFunction*)UObject::GObjObjects()->Data[28381];

    UOnlinePlayerInterface_execOnReadProfileSettingsComplete_Parms
        OnReadProfileSettingsComplete_Parms;

    this->ProcessEvent(pFnOnReadProfileSettingsComplete,
                       &OnReadProfileSettingsComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ReadProfileSettings
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ReadProfileSettings() {
    static UFunction* pFnReadProfileSettings = NULL;

    if (!pFnReadProfileSettings)
        pFnReadProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[28377];

    UOnlinePlayerInterface_execReadProfileSettings_Parms
        ReadProfileSettings_Parms;

    this->ProcessEvent(pFnReadProfileSettings, &ReadProfileSettings_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.ClearFriendsChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearFriendsChangeDelegate() {
    static UFunction* pFnClearFriendsChangeDelegate = NULL;

    if (!pFnClearFriendsChangeDelegate)
        pFnClearFriendsChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28374];

    UOnlinePlayerInterface_execClearFriendsChangeDelegate_Parms
        ClearFriendsChangeDelegate_Parms;

    this->ProcessEvent(pFnClearFriendsChangeDelegate,
                       &ClearFriendsChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddFriendsChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddFriendsChangeDelegate() {
    static UFunction* pFnAddFriendsChangeDelegate = NULL;

    if (!pFnAddFriendsChangeDelegate)
        pFnAddFriendsChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28371];

    UOnlinePlayerInterface_execAddFriendsChangeDelegate_Parms
        AddFriendsChangeDelegate_Parms;

    this->ProcessEvent(pFnAddFriendsChangeDelegate,
                       &AddFriendsChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearMutingChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearMutingChangeDelegate() {
    static UFunction* pFnClearMutingChangeDelegate = NULL;

    if (!pFnClearMutingChangeDelegate)
        pFnClearMutingChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28369];

    UOnlinePlayerInterface_execClearMutingChangeDelegate_Parms
        ClearMutingChangeDelegate_Parms;

    this->ProcessEvent(pFnClearMutingChangeDelegate,
                       &ClearMutingChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddMutingChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddMutingChangeDelegate() {
    static UFunction* pFnAddMutingChangeDelegate = NULL;

    if (!pFnAddMutingChangeDelegate)
        pFnAddMutingChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28367];

    UOnlinePlayerInterface_execAddMutingChangeDelegate_Parms
        AddMutingChangeDelegate_Parms;

    this->ProcessEvent(pFnAddMutingChangeDelegate,
                       &AddMutingChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearCurrentUserChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearCurrentUserChangedDelegate() {
    static UFunction* pFnClearCurrentUserChangedDelegate = NULL;

    if (!pFnClearCurrentUserChangedDelegate)
        pFnClearCurrentUserChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28365];

    UOnlinePlayerInterface_execClearCurrentUserChangedDelegate_Parms
        ClearCurrentUserChangedDelegate_Parms;

    this->ProcessEvent(pFnClearCurrentUserChangedDelegate,
                       &ClearCurrentUserChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddCurrentUserChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddCurrentUserChangedDelegate() {
    static UFunction* pFnAddCurrentUserChangedDelegate = NULL;

    if (!pFnAddCurrentUserChangedDelegate)
        pFnAddCurrentUserChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28363];

    UOnlinePlayerInterface_execAddCurrentUserChangedDelegate_Parms
        AddCurrentUserChangedDelegate_Parms;

    this->ProcessEvent(pFnAddCurrentUserChangedDelegate,
                       &AddCurrentUserChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearLoginCancelledDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearLoginCancelledDelegate() {
    static UFunction* pFnClearLoginCancelledDelegate = NULL;

    if (!pFnClearLoginCancelledDelegate)
        pFnClearLoginCancelledDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28361];

    UOnlinePlayerInterface_execClearLoginCancelledDelegate_Parms
        ClearLoginCancelledDelegate_Parms;

    this->ProcessEvent(pFnClearLoginCancelledDelegate,
                       &ClearLoginCancelledDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddLoginCancelledDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddLoginCancelledDelegate() {
    static UFunction* pFnAddLoginCancelledDelegate = NULL;

    if (!pFnAddLoginCancelledDelegate)
        pFnAddLoginCancelledDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28359];

    UOnlinePlayerInterface_execAddLoginCancelledDelegate_Parms
        AddLoginCancelledDelegate_Parms;

    this->ProcessEvent(pFnAddLoginCancelledDelegate,
                       &AddLoginCancelledDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearLoginStatusChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearLoginStatusChangeDelegate() {
    static UFunction* pFnClearLoginStatusChangeDelegate = NULL;

    if (!pFnClearLoginStatusChangeDelegate)
        pFnClearLoginStatusChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28356];

    UOnlinePlayerInterface_execClearLoginStatusChangeDelegate_Parms
        ClearLoginStatusChangeDelegate_Parms;

    this->ProcessEvent(pFnClearLoginStatusChangeDelegate,
                       &ClearLoginStatusChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddLoginStatusChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddLoginStatusChangeDelegate() {
    static UFunction* pFnAddLoginStatusChangeDelegate = NULL;

    if (!pFnAddLoginStatusChangeDelegate)
        pFnAddLoginStatusChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28353];

    UOnlinePlayerInterface_execAddLoginStatusChangeDelegate_Parms
        AddLoginStatusChangeDelegate_Parms;

    this->ProcessEvent(pFnAddLoginStatusChangeDelegate,
                       &AddLoginStatusChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnLoginStatusChange
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnLoginStatusChange() {
    static UFunction* pFnOnLoginStatusChange = NULL;

    if (!pFnOnLoginStatusChange)
        pFnOnLoginStatusChange =
            (UFunction*)UObject::GObjObjects()->Data[28350];

    UOnlinePlayerInterface_execOnLoginStatusChange_Parms
        OnLoginStatusChange_Parms;

    this->ProcessEvent(pFnOnLoginStatusChange, &OnLoginStatusChange_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.ClearLoginChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearLoginChangeDelegate() {
    static UFunction* pFnClearLoginChangeDelegate = NULL;

    if (!pFnClearLoginChangeDelegate)
        pFnClearLoginChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28348];

    UOnlinePlayerInterface_execClearLoginChangeDelegate_Parms
        ClearLoginChangeDelegate_Parms;

    this->ProcessEvent(pFnClearLoginChangeDelegate,
                       &ClearLoginChangeDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddLoginChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddLoginChangeDelegate() {
    static UFunction* pFnAddLoginChangeDelegate = NULL;

    if (!pFnAddLoginChangeDelegate)
        pFnAddLoginChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28346];

    UOnlinePlayerInterface_execAddLoginChangeDelegate_Parms
        AddLoginChangeDelegate_Parms;

    this->ProcessEvent(pFnAddLoginChangeDelegate, &AddLoginChangeDelegate_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.ShowFriendsUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ShowFriendsUI() {
    static UFunction* pFnShowFriendsUI = NULL;

    if (!pFnShowFriendsUI)
        pFnShowFriendsUI = (UFunction*)UObject::GObjObjects()->Data[28343];

    UOnlinePlayerInterface_execShowFriendsUI_Parms ShowFriendsUI_Parms;

    this->ProcessEvent(pFnShowFriendsUI, &ShowFriendsUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.IsMuted
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::IsMuted() {
    static UFunction* pFnIsMuted = NULL;

    if (!pFnIsMuted)
        pFnIsMuted = (UFunction*)UObject::GObjObjects()->Data[28339];

    UOnlinePlayerInterface_execIsMuted_Parms IsMuted_Parms;

    this->ProcessEvent(pFnIsMuted, &IsMuted_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AreAnyFriends
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterface::AreAnyFriends() {
    static UFunction* pFnAreAnyFriends = NULL;

    if (!pFnAreAnyFriends)
        pFnAreAnyFriends = (UFunction*)UObject::GObjObjects()->Data[28334];

    UOnlinePlayerInterface_execAreAnyFriends_Parms AreAnyFriends_Parms;

    this->ProcessEvent(pFnAreAnyFriends, &AreAnyFriends_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.IsFriend
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::IsFriend() {
    static UFunction* pFnIsFriend = NULL;

    if (!pFnIsFriend)
        pFnIsFriend = (UFunction*)UObject::GObjObjects()->Data[28330];

    UOnlinePlayerInterface_execIsFriend_Parms IsFriend_Parms;

    this->ProcessEvent(pFnIsFriend, &IsFriend_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanUploadFitnessData
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanUploadFitnessData() {
    static UFunction* pFnCanUploadFitnessData = NULL;

    if (!pFnCanUploadFitnessData)
        pFnCanUploadFitnessData =
            (UFunction*)UObject::GObjObjects()->Data[28324];

    UOnlinePlayerInterface_execCanUploadFitnessData_Parms
        CanUploadFitnessData_Parms;

    this->ProcessEvent(pFnCanUploadFitnessData, &CanUploadFitnessData_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.CanShareKinectContent
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanShareKinectContent() {
    static UFunction* pFnCanShareKinectContent = NULL;

    if (!pFnCanShareKinectContent)
        pFnCanShareKinectContent =
            (UFunction*)UObject::GObjObjects()->Data[28318];

    UOnlinePlayerInterface_execCanShareKinectContent_Parms
        CanShareKinectContent_Parms;

    this->ProcessEvent(pFnCanShareKinectContent, &CanShareKinectContent_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.CanShareWithSocialNetwork
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanShareWithSocialNetwork() {
    static UFunction* pFnCanShareWithSocialNetwork = NULL;

    if (!pFnCanShareWithSocialNetwork)
        pFnCanShareWithSocialNetwork =
            (UFunction*)UObject::GObjObjects()->Data[28312];

    UOnlinePlayerInterface_execCanShareWithSocialNetwork_Parms
        CanShareWithSocialNetwork_Parms;

    this->ProcessEvent(pFnCanShareWithSocialNetwork,
                       &CanShareWithSocialNetwork_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanBrowseInternet
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanBrowseInternet() {
    static UFunction* pFnCanBrowseInternet = NULL;

    if (!pFnCanBrowseInternet)
        pFnCanBrowseInternet = (UFunction*)UObject::GObjObjects()->Data[28306];

    UOnlinePlayerInterface_execCanBrowseInternet_Parms CanBrowseInternet_Parms;

    this->ProcessEvent(pFnCanBrowseInternet, &CanBrowseInternet_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanAccessPremiumVideoContent
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanAccessPremiumVideoContent() {
    static UFunction* pFnCanAccessPremiumVideoContent = NULL;

    if (!pFnCanAccessPremiumVideoContent)
        pFnCanAccessPremiumVideoContent =
            (UFunction*)UObject::GObjObjects()->Data[28300];

    UOnlinePlayerInterface_execCanAccessPremiumVideoContent_Parms
        CanAccessPremiumVideoContent_Parms;

    this->ProcessEvent(pFnCanAccessPremiumVideoContent,
                       &CanAccessPremiumVideoContent_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanAccessPremiumContent
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanAccessPremiumContent() {
    static UFunction* pFnCanAccessPremiumContent = NULL;

    if (!pFnCanAccessPremiumContent)
        pFnCanAccessPremiumContent =
            (UFunction*)UObject::GObjObjects()->Data[28294];

    UOnlinePlayerInterface_execCanAccessPremiumContent_Parms
        CanAccessPremiumContent_Parms;

    this->ProcessEvent(pFnCanAccessPremiumContent,
                       &CanAccessPremiumContent_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanUseCloudStorage
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanUseCloudStorage() {
    static UFunction* pFnCanUseCloudStorage = NULL;

    if (!pFnCanUseCloudStorage)
        pFnCanUseCloudStorage = (UFunction*)UObject::GObjObjects()->Data[28288];

    UOnlinePlayerInterface_execCanUseCloudStorage_Parms
        CanUseCloudStorage_Parms;

    this->ProcessEvent(pFnCanUseCloudStorage, &CanUseCloudStorage_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanRecordDVRClips
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanRecordDVRClips() {
    static UFunction* pFnCanRecordDVRClips = NULL;

    if (!pFnCanRecordDVRClips)
        pFnCanRecordDVRClips = (UFunction*)UObject::GObjObjects()->Data[28282];

    UOnlinePlayerInterface_execCanRecordDVRClips_Parms CanRecordDVRClips_Parms;

    this->ProcessEvent(pFnCanRecordDVRClips, &CanRecordDVRClips_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanShowPresenceInformation
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanShowPresenceInformation() {
    static UFunction* pFnCanShowPresenceInformation = NULL;

    if (!pFnCanShowPresenceInformation)
        pFnCanShowPresenceInformation =
            (UFunction*)UObject::GObjObjects()->Data[28276];

    UOnlinePlayerInterface_execCanShowPresenceInformation_Parms
        CanShowPresenceInformation_Parms;

    this->ProcessEvent(pFnCanShowPresenceInformation,
                       &CanShowPresenceInformation_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanViewPlayerProfiles
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanViewPlayerProfiles() {
    static UFunction* pFnCanViewPlayerProfiles = NULL;

    if (!pFnCanViewPlayerProfiles)
        pFnCanViewPlayerProfiles =
            (UFunction*)UObject::GObjObjects()->Data[28270];

    UOnlinePlayerInterface_execCanViewPlayerProfiles_Parms
        CanViewPlayerProfiles_Parms;

    this->ProcessEvent(pFnCanViewPlayerProfiles, &CanViewPlayerProfiles_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.CanPurchaseContent
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanPurchaseContent() {
    static UFunction* pFnCanPurchaseContent = NULL;

    if (!pFnCanPurchaseContent)
        pFnCanPurchaseContent = (UFunction*)UObject::GObjObjects()->Data[28264];

    UOnlinePlayerInterface_execCanPurchaseContent_Parms
        CanPurchaseContent_Parms;

    this->ProcessEvent(pFnCanPurchaseContent, &CanPurchaseContent_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanShareUserCreatedContent
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanShareUserCreatedContent() {
    static UFunction* pFnCanShareUserCreatedContent = NULL;

    if (!pFnCanShareUserCreatedContent)
        pFnCanShareUserCreatedContent =
            (UFunction*)UObject::GObjObjects()->Data[12591];

    UOnlinePlayerInterface_execCanShareUserCreatedContent_Parms
        CanShareUserCreatedContent_Parms;

    this->ProcessEvent(pFnCanShareUserCreatedContent,
                       &CanShareUserCreatedContent_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanCommunicateVoice
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanCommunicateVoice() {
    static UFunction* pFnCanCommunicateVoice = NULL;

    if (!pFnCanCommunicateVoice)
        pFnCanCommunicateVoice =
            (UFunction*)UObject::GObjObjects()->Data[12593];

    UOnlinePlayerInterface_execCanCommunicateVoice_Parms
        CanCommunicateVoice_Parms;

    this->ProcessEvent(pFnCanCommunicateVoice, &CanCommunicateVoice_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.CanCommunicateVideo
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanCommunicateVideo() {
    static UFunction* pFnCanCommunicateVideo = NULL;

    if (!pFnCanCommunicateVideo)
        pFnCanCommunicateVideo =
            (UFunction*)UObject::GObjObjects()->Data[28250];

    UOnlinePlayerInterface_execCanCommunicateVideo_Parms
        CanCommunicateVideo_Parms;

    this->ProcessEvent(pFnCanCommunicateVideo, &CanCommunicateVideo_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.CanCommunicateText
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanCommunicateText() {
    static UFunction* pFnCanCommunicateText = NULL;

    if (!pFnCanCommunicateText)
        pFnCanCommunicateText = (UFunction*)UObject::GObjObjects()->Data[28244];

    UOnlinePlayerInterface_execCanCommunicateText_Parms
        CanCommunicateText_Parms;

    this->ProcessEvent(pFnCanCommunicateText, &CanCommunicateText_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.CanPlayOnline
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterface::CanPlayOnline() {
    static UFunction* pFnCanPlayOnline = NULL;

    if (!pFnCanPlayOnline)
        pFnCanPlayOnline = (UFunction*)UObject::GObjObjects()->Data[12589];

    UOnlinePlayerInterface_execCanPlayOnline_Parms CanPlayOnline_Parms;

    this->ProcessEvent(pFnCanPlayOnline, &CanPlayOnline_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearPrivilegeLevelCheckedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearPrivilegeLevelCheckedDelegate() {
    static UFunction* pFnClearPrivilegeLevelCheckedDelegate = NULL;

    if (!pFnClearPrivilegeLevelCheckedDelegate)
        pFnClearPrivilegeLevelCheckedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28238];

    UOnlinePlayerInterface_execClearPrivilegeLevelCheckedDelegate_Parms
        ClearPrivilegeLevelCheckedDelegate_Parms;

    this->ProcessEvent(pFnClearPrivilegeLevelCheckedDelegate,
                       &ClearPrivilegeLevelCheckedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddPrivilegeLevelCheckedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddPrivilegeLevelCheckedDelegate() {
    static UFunction* pFnAddPrivilegeLevelCheckedDelegate = NULL;

    if (!pFnAddPrivilegeLevelCheckedDelegate)
        pFnAddPrivilegeLevelCheckedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28236];

    UOnlinePlayerInterface_execAddPrivilegeLevelCheckedDelegate_Parms
        AddPrivilegeLevelCheckedDelegate_Parms;

    this->ProcessEvent(pFnAddPrivilegeLevelCheckedDelegate,
                       &AddPrivilegeLevelCheckedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnPrivilegeLevelChecked
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnPrivilegeLevelChecked() {
    static UFunction* pFnOnPrivilegeLevelChecked = NULL;

    if (!pFnOnPrivilegeLevelChecked)
        pFnOnPrivilegeLevelChecked =
            (UFunction*)UObject::GObjObjects()->Data[28231];

    UOnlinePlayerInterface_execOnPrivilegeLevelChecked_Parms
        OnPrivilegeLevelChecked_Parms;

    this->ProcessEvent(pFnOnPrivilegeLevelChecked,
                       &OnPrivilegeLevelChecked_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.IsLocalLogin
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::IsLocalLogin() {
    static UFunction* pFnIsLocalLogin = NULL;

    if (!pFnIsLocalLogin)
        pFnIsLocalLogin = (UFunction*)UObject::GObjObjects()->Data[28228];

    UOnlinePlayerInterface_execIsLocalLogin_Parms IsLocalLogin_Parms;

    this->ProcessEvent(pFnIsLocalLogin, &IsLocalLogin_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.IsGuestLogin
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::IsGuestLogin() {
    static UFunction* pFnIsGuestLogin = NULL;

    if (!pFnIsGuestLogin)
        pFnIsGuestLogin = (UFunction*)UObject::GObjObjects()->Data[28225];

    UOnlinePlayerInterface_execIsGuestLogin_Parms IsGuestLogin_Parms;

    this->ProcessEvent(pFnIsGuestLogin, &IsGuestLogin_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetPlayerNickname
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::GetPlayerNickname() {
    static UFunction* pFnGetPlayerNickname = NULL;

    if (!pFnGetPlayerNickname)
        pFnGetPlayerNickname = (UFunction*)UObject::GObjObjects()->Data[12457];

    UOnlinePlayerInterface_execGetPlayerNickname_Parms GetPlayerNickname_Parms;

    this->ProcessEvent(pFnGetPlayerNickname, &GetPlayerNickname_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetControllerIdFromNetId
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterface::GetControllerIdFromNetId() {
    static UFunction* pFnGetControllerIdFromNetId = NULL;

    if (!pFnGetControllerIdFromNetId)
        pFnGetControllerIdFromNetId =
            (UFunction*)UObject::GObjObjects()->Data[28220];

    UOnlinePlayerInterface_execGetControllerIdFromNetId_Parms
        GetControllerIdFromNetId_Parms;

    this->ProcessEvent(pFnGetControllerIdFromNetId,
                       &GetControllerIdFromNetId_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetUniquePlayerId
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterface::GetUniquePlayerId() {
    static UFunction* pFnGetUniquePlayerId = NULL;

    if (!pFnGetUniquePlayerId)
        pFnGetUniquePlayerId = (UFunction*)UObject::GObjObjects()->Data[7154];

    UOnlinePlayerInterface_execGetUniquePlayerId_Parms GetUniquePlayerId_Parms;

    this->ProcessEvent(pFnGetUniquePlayerId, &GetUniquePlayerId_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetLoginStatus
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::GetLoginStatus() {
    static UFunction* pFnGetLoginStatus = NULL;

    if (!pFnGetLoginStatus)
        pFnGetLoginStatus = (UFunction*)UObject::GObjObjects()->Data[12277];

    UOnlinePlayerInterface_execGetLoginStatus_Parms GetLoginStatus_Parms;

    this->ProcessEvent(pFnGetLoginStatus, &GetLoginStatus_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.PairUserAndControllerAtIndex
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::PairUserAndControllerAtIndex() {
    static UFunction* pFnPairUserAndControllerAtIndex = NULL;

    if (!pFnPairUserAndControllerAtIndex)
        pFnPairUserAndControllerAtIndex =
            (UFunction*)UObject::GObjObjects()->Data[28212];

    UOnlinePlayerInterface_execPairUserAndControllerAtIndex_Parms
        PairUserAndControllerAtIndex_Parms;

    this->ProcessEvent(pFnPairUserAndControllerAtIndex,
                       &PairUserAndControllerAtIndex_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterface.ClearSystemUserContrllerPairingChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearSystemUserContrllerPairingChangedDelegate() {
    static UFunction* pFnClearSystemUserContrllerPairingChangedDelegate = NULL;

    if (!pFnClearSystemUserContrllerPairingChangedDelegate)
        pFnClearSystemUserContrllerPairingChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28210];

    UOnlinePlayerInterface_execClearSystemUserContrllerPairingChangedDelegate_Parms
        ClearSystemUserContrllerPairingChangedDelegate_Parms;

    this->ProcessEvent(pFnClearSystemUserContrllerPairingChangedDelegate,
                       &ClearSystemUserContrllerPairingChangedDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlinePlayerInterface.AddSystemUserContrllerPairingChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddSystemUserContrllerPairingChangedDelegate() {
    static UFunction* pFnAddSystemUserContrllerPairingChangedDelegate = NULL;

    if (!pFnAddSystemUserContrllerPairingChangedDelegate)
        pFnAddSystemUserContrllerPairingChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28208];

    UOnlinePlayerInterface_execAddSystemUserContrllerPairingChangedDelegate_Parms
        AddSystemUserContrllerPairingChangedDelegate_Parms;

    this->ProcessEvent(pFnAddSystemUserContrllerPairingChangedDelegate,
                       &AddSystemUserContrllerPairingChangedDelegate_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.OnSystemUserControllerPairingChanged
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnSystemUserControllerPairingChanged() {
    static UFunction* pFnOnSystemUserControllerPairingChanged = NULL;

    if (!pFnOnSystemUserControllerPairingChanged)
        pFnOnSystemUserControllerPairingChanged =
            (UFunction*)UObject::GObjObjects()->Data[28205];

    UOnlinePlayerInterface_execOnSystemUserControllerPairingChanged_Parms
        OnSystemUserControllerPairingChanged_Parms;

    this->ProcessEvent(pFnOnSystemUserControllerPairingChanged,
                       &OnSystemUserControllerPairingChanged_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearLogoutCompletedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearLogoutCompletedDelegate() {
    static UFunction* pFnClearLogoutCompletedDelegate = NULL;

    if (!pFnClearLogoutCompletedDelegate)
        pFnClearLogoutCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28202];

    UOnlinePlayerInterface_execClearLogoutCompletedDelegate_Parms
        ClearLogoutCompletedDelegate_Parms;

    this->ProcessEvent(pFnClearLogoutCompletedDelegate,
                       &ClearLogoutCompletedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddLogoutCompletedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddLogoutCompletedDelegate() {
    static UFunction* pFnAddLogoutCompletedDelegate = NULL;

    if (!pFnAddLogoutCompletedDelegate)
        pFnAddLogoutCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28199];

    UOnlinePlayerInterface_execAddLogoutCompletedDelegate_Parms
        AddLogoutCompletedDelegate_Parms;

    this->ProcessEvent(pFnAddLogoutCompletedDelegate,
                       &AddLogoutCompletedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnLogoutCompleted
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnLogoutCompleted() {
    static UFunction* pFnOnLogoutCompleted = NULL;

    if (!pFnOnLogoutCompleted)
        pFnOnLogoutCompleted = (UFunction*)UObject::GObjObjects()->Data[28197];

    UOnlinePlayerInterface_execOnLogoutCompleted_Parms OnLogoutCompleted_Parms;

    this->ProcessEvent(pFnOnLogoutCompleted, &OnLogoutCompleted_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.Logout
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::Logout() {
    static UFunction* pFnLogout = NULL;

    if (!pFnLogout) pFnLogout = (UFunction*)UObject::GObjObjects()->Data[28194];

    UOnlinePlayerInterface_execLogout_Parms Logout_Parms;

    this->ProcessEvent(pFnLogout, &Logout_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearLoginFailedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearLoginFailedDelegate() {
    static UFunction* pFnClearLoginFailedDelegate = NULL;

    if (!pFnClearLoginFailedDelegate)
        pFnClearLoginFailedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28191];

    UOnlinePlayerInterface_execClearLoginFailedDelegate_Parms
        ClearLoginFailedDelegate_Parms;

    this->ProcessEvent(pFnClearLoginFailedDelegate,
                       &ClearLoginFailedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddLoginFailedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddLoginFailedDelegate() {
    static UFunction* pFnAddLoginFailedDelegate = NULL;

    if (!pFnAddLoginFailedDelegate)
        pFnAddLoginFailedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28188];

    UOnlinePlayerInterface_execAddLoginFailedDelegate_Parms
        AddLoginFailedDelegate_Parms;

    this->ProcessEvent(pFnAddLoginFailedDelegate, &AddLoginFailedDelegate_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.OnLoginFailed
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnLoginFailed() {
    static UFunction* pFnOnLoginFailed = NULL;

    if (!pFnOnLoginFailed)
        pFnOnLoginFailed = (UFunction*)UObject::GObjObjects()->Data[28185];

    UOnlinePlayerInterface_execOnLoginFailed_Parms OnLoginFailed_Parms;

    this->ProcessEvent(pFnOnLoginFailed, &OnLoginFailed_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AutoLogin
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AutoLogin() {
    static UFunction* pFnAutoLogin = NULL;

    if (!pFnAutoLogin)
        pFnAutoLogin = (UFunction*)UObject::GObjObjects()->Data[21792];

    UOnlinePlayerInterface_execAutoLogin_Parms AutoLogin_Parms;

    this->ProcessEvent(pFnAutoLogin, &AutoLogin_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearLoginCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearLoginCompleteDelegate() {
    static UFunction* pFnClearLoginCompleteDelegate = NULL;

    if (!pFnClearLoginCompleteDelegate)
        pFnClearLoginCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28182];

    UOnlinePlayerInterface_execClearLoginCompleteDelegate_Parms
        ClearLoginCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearLoginCompleteDelegate,
                       &ClearLoginCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddLoginCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddLoginCompleteDelegate() {
    static UFunction* pFnAddLoginCompleteDelegate = NULL;

    if (!pFnAddLoginCompleteDelegate)
        pFnAddLoginCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28179];

    UOnlinePlayerInterface_execAddLoginCompleteDelegate_Parms
        AddLoginCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddLoginCompleteDelegate,
                       &AddLoginCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnLoginComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnLoginComplete() {
    static UFunction* pFnOnLoginComplete = NULL;

    if (!pFnOnLoginComplete)
        pFnOnLoginComplete = (UFunction*)UObject::GObjObjects()->Data[28175];

    UOnlinePlayerInterface_execOnLoginComplete_Parms OnLoginComplete_Parms;

    this->ProcessEvent(pFnOnLoginComplete, &OnLoginComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.Login
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::Login() {
    static UFunction* pFnLogin = NULL;

    if (!pFnLogin) pFnLogin = (UFunction*)UObject::GObjObjects()->Data[28169];

    UOnlinePlayerInterface_execLogin_Parms Login_Parms;

    this->ProcessEvent(pFnLogin, &Login_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ShowLoginUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterface::ShowLoginUI() {
    static UFunction* pFnShowLoginUI = NULL;

    if (!pFnShowLoginUI)
        pFnShowLoginUI = (UFunction*)UObject::GObjObjects()->Data[28165];

    UOnlinePlayerInterface_execShowLoginUI_Parms ShowLoginUI_Parms;

    this->ProcessEvent(pFnShowLoginUI, &ShowLoginUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnFriendsChange
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnFriendsChange() {
    static UFunction* pFnOnFriendsChange = NULL;

    if (!pFnOnFriendsChange)
        pFnOnFriendsChange = (UFunction*)UObject::GObjObjects()->Data[28164];

    UOnlinePlayerInterface_execOnFriendsChange_Parms OnFriendsChange_Parms;

    this->ProcessEvent(pFnOnFriendsChange, &OnFriendsChange_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnMutingChange
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnMutingChange() {
    static UFunction* pFnOnMutingChange = NULL;

    if (!pFnOnMutingChange)
        pFnOnMutingChange = (UFunction*)UObject::GObjObjects()->Data[28163];

    UOnlinePlayerInterface_execOnMutingChange_Parms OnMutingChange_Parms;

    this->ProcessEvent(pFnOnMutingChange, &OnMutingChange_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.ClearURLTokenRetrievedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::ClearURLTokenRetrievedDelegate() {
    static UFunction* pFnClearURLTokenRetrievedDelegate = NULL;

    if (!pFnClearURLTokenRetrievedDelegate)
        pFnClearURLTokenRetrievedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28160];

    UOnlinePlayerInterface_execClearURLTokenRetrievedDelegate_Parms
        ClearURLTokenRetrievedDelegate_Parms;

    this->ProcessEvent(pFnClearURLTokenRetrievedDelegate,
                       &ClearURLTokenRetrievedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.AddURLTokenRetrievedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::AddURLTokenRetrievedDelegate() {
    static UFunction* pFnAddURLTokenRetrievedDelegate = NULL;

    if (!pFnAddURLTokenRetrievedDelegate)
        pFnAddURLTokenRetrievedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28157];

    UOnlinePlayerInterface_execAddURLTokenRetrievedDelegate_Parms
        AddURLTokenRetrievedDelegate_Parms;

    this->ProcessEvent(pFnAddURLTokenRetrievedDelegate,
                       &AddURLTokenRetrievedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.GetTokenAndSignatureForURL
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterface::GetTokenAndSignatureForURL() {
    static UFunction* pFnGetTokenAndSignatureForURL = NULL;

    if (!pFnGetTokenAndSignatureForURL)
        pFnGetTokenAndSignatureForURL =
            (UFunction*)UObject::GObjObjects()->Data[28154];

    UOnlinePlayerInterface_execGetTokenAndSignatureForURL_Parms
        GetTokenAndSignatureForURL_Parms;

    this->ProcessEvent(pFnGetTokenAndSignatureForURL,
                       &GetTokenAndSignatureForURL_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnTokenAndSignatureRetrieved
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnTokenAndSignatureRetrieved() {
    static UFunction* pFnOnTokenAndSignatureRetrieved = NULL;

    if (!pFnOnTokenAndSignatureRetrieved)
        pFnOnTokenAndSignatureRetrieved =
            (UFunction*)UObject::GObjObjects()->Data[28149];

    UOnlinePlayerInterface_execOnTokenAndSignatureRetrieved_Parms
        OnTokenAndSignatureRetrieved_Parms;

    this->ProcessEvent(pFnOnTokenAndSignatureRetrieved,
                       &OnTokenAndSignatureRetrieved_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnCurrentUserChanged
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnCurrentUserChanged() {
    static UFunction* pFnOnCurrentUserChanged = NULL;

    if (!pFnOnCurrentUserChanged)
        pFnOnCurrentUserChanged =
            (UFunction*)UObject::GObjObjects()->Data[28145];

    UOnlinePlayerInterface_execOnCurrentUserChanged_Parms
        OnCurrentUserChanged_Parms;

    this->ProcessEvent(pFnOnCurrentUserChanged, &OnCurrentUserChanged_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterface.OnLoginCancelled
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnLoginCancelled() {
    static UFunction* pFnOnLoginCancelled = NULL;

    if (!pFnOnLoginCancelled)
        pFnOnLoginCancelled = (UFunction*)UObject::GObjObjects()->Data[28144];

    UOnlinePlayerInterface_execOnLoginCancelled_Parms OnLoginCancelled_Parms;

    this->ProcessEvent(pFnOnLoginCancelled, &OnLoginCancelled_Parms, NULL);
};

// Function Engine.OnlinePlayerInterface.OnLoginChange
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterface::OnLoginChange() {
    static UFunction* pFnOnLoginChange = NULL;

    if (!pFnOnLoginChange)
        pFnOnLoginChange = (UFunction*)UObject::GObjObjects()->Data[28142];

    UOnlinePlayerInterface_execOnLoginChange_Parms OnLoginChange_Parms;

    this->ProcessEvent(pFnOnLoginChange, &OnLoginChange_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.RateContent
// [0x00420000]
// Parameters infos:

void UOnlineCommunityContentInterface::RateContent() {
    static UFunction* pFnRateContent = NULL;

    if (!pFnRateContent)
        pFnRateContent = (UFunction*)UObject::GObjObjects()->Data[27209];

    UOnlineCommunityContentInterface_execRateContent_Parms RateContent_Parms;

    this->ProcessEvent(pFnRateContent, &RateContent_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.ClearGetContentPayloadCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::
    ClearGetContentPayloadCompleteDelegate() {
    static UFunction* pFnClearGetContentPayloadCompleteDelegate = NULL;

    if (!pFnClearGetContentPayloadCompleteDelegate)
        pFnClearGetContentPayloadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27207];

    UOnlineCommunityContentInterface_execClearGetContentPayloadCompleteDelegate_Parms
        ClearGetContentPayloadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearGetContentPayloadCompleteDelegate,
                       &ClearGetContentPayloadCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.AddGetContentPayloadCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::AddGetContentPayloadCompleteDelegate() {
    static UFunction* pFnAddGetContentPayloadCompleteDelegate = NULL;

    if (!pFnAddGetContentPayloadCompleteDelegate)
        pFnAddGetContentPayloadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27205];

    UOnlineCommunityContentInterface_execAddGetContentPayloadCompleteDelegate_Parms
        AddGetContentPayloadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddGetContentPayloadCompleteDelegate,
                       &AddGetContentPayloadCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.OnGetContentPayloadComplete
// [0x00520000]
// Parameters infos:

void UOnlineCommunityContentInterface::OnGetContentPayloadComplete() {
    static UFunction* pFnOnGetContentPayloadComplete = NULL;

    if (!pFnOnGetContentPayloadComplete)
        pFnOnGetContentPayloadComplete =
            (UFunction*)UObject::GObjObjects()->Data[27200];

    UOnlineCommunityContentInterface_execOnGetContentPayloadComplete_Parms
        OnGetContentPayloadComplete_Parms;

    this->ProcessEvent(pFnOnGetContentPayloadComplete,
                       &OnGetContentPayloadComplete_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.GetContentPayload
// [0x00420000]
// Parameters infos:

void UOnlineCommunityContentInterface::GetContentPayload() {
    static UFunction* pFnGetContentPayload = NULL;

    if (!pFnGetContentPayload)
        pFnGetContentPayload = (UFunction*)UObject::GObjObjects()->Data[27196];

    UOnlineCommunityContentInterface_execGetContentPayload_Parms
        GetContentPayload_Parms;

    this->ProcessEvent(pFnGetContentPayload, &GetContentPayload_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.ClearDownloadContentCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::ClearDownloadContentCompleteDelegate() {
    static UFunction* pFnClearDownloadContentCompleteDelegate = NULL;

    if (!pFnClearDownloadContentCompleteDelegate)
        pFnClearDownloadContentCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27194];

    UOnlineCommunityContentInterface_execClearDownloadContentCompleteDelegate_Parms
        ClearDownloadContentCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearDownloadContentCompleteDelegate,
                       &ClearDownloadContentCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.AddDownloadContentCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::AddDownloadContentCompleteDelegate() {
    static UFunction* pFnAddDownloadContentCompleteDelegate = NULL;

    if (!pFnAddDownloadContentCompleteDelegate)
        pFnAddDownloadContentCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27192];

    UOnlineCommunityContentInterface_execAddDownloadContentCompleteDelegate_Parms
        AddDownloadContentCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddDownloadContentCompleteDelegate,
                       &AddDownloadContentCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.OnDownloadContentComplete
// [0x00120000]
// Parameters infos:

void UOnlineCommunityContentInterface::OnDownloadContentComplete() {
    static UFunction* pFnOnDownloadContentComplete = NULL;

    if (!pFnOnDownloadContentComplete)
        pFnOnDownloadContentComplete =
            (UFunction*)UObject::GObjObjects()->Data[27187];

    UOnlineCommunityContentInterface_execOnDownloadContentComplete_Parms
        OnDownloadContentComplete_Parms;

    this->ProcessEvent(pFnOnDownloadContentComplete,
                       &OnDownloadContentComplete_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.DownloadContent
// [0x00420000]
// Parameters infos:

void UOnlineCommunityContentInterface::DownloadContent() {
    static UFunction* pFnDownloadContent = NULL;

    if (!pFnDownloadContent)
        pFnDownloadContent = (UFunction*)UObject::GObjObjects()->Data[27183];

    UOnlineCommunityContentInterface_execDownloadContent_Parms
        DownloadContent_Parms;

    this->ProcessEvent(pFnDownloadContent, &DownloadContent_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.ClearUploadContentCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::ClearUploadContentCompleteDelegate() {
    static UFunction* pFnClearUploadContentCompleteDelegate = NULL;

    if (!pFnClearUploadContentCompleteDelegate)
        pFnClearUploadContentCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27181];

    UOnlineCommunityContentInterface_execClearUploadContentCompleteDelegate_Parms
        ClearUploadContentCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUploadContentCompleteDelegate,
                       &ClearUploadContentCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.AddUploadContentCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::AddUploadContentCompleteDelegate() {
    static UFunction* pFnAddUploadContentCompleteDelegate = NULL;

    if (!pFnAddUploadContentCompleteDelegate)
        pFnAddUploadContentCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27179];

    UOnlineCommunityContentInterface_execAddUploadContentCompleteDelegate_Parms
        AddUploadContentCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUploadContentCompleteDelegate,
                       &AddUploadContentCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.OnUploadContentComplete
// [0x00120000]
// Parameters infos:

void UOnlineCommunityContentInterface::OnUploadContentComplete() {
    static UFunction* pFnOnUploadContentComplete = NULL;

    if (!pFnOnUploadContentComplete)
        pFnOnUploadContentComplete =
            (UFunction*)UObject::GObjObjects()->Data[27176];

    UOnlineCommunityContentInterface_execOnUploadContentComplete_Parms
        OnUploadContentComplete_Parms;

    this->ProcessEvent(pFnOnUploadContentComplete,
                       &OnUploadContentComplete_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.UploadContent
// [0x00420000]
// Parameters infos:

void UOnlineCommunityContentInterface::UploadContent() {
    static UFunction* pFnUploadContent = NULL;

    if (!pFnUploadContent)
        pFnUploadContent = (UFunction*)UObject::GObjObjects()->Data[27170];

    UOnlineCommunityContentInterface_execUploadContent_Parms
        UploadContent_Parms;

    this->ProcessEvent(pFnUploadContent, &UploadContent_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.GetFriendsContentList
// [0x00420000]
// Parameters infos:

void UOnlineCommunityContentInterface::GetFriendsContentList() {
    static UFunction* pFnGetFriendsContentList = NULL;

    if (!pFnGetFriendsContentList)
        pFnGetFriendsContentList =
            (UFunction*)UObject::GObjObjects()->Data[27164];

    UOnlineCommunityContentInterface_execGetFriendsContentList_Parms
        GetFriendsContentList_Parms;

    this->ProcessEvent(pFnGetFriendsContentList, &GetFriendsContentList_Parms,
                       NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.ClearReadFriendsContentListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::
    ClearReadFriendsContentListCompleteDelegate() {
    static UFunction* pFnClearReadFriendsContentListCompleteDelegate = NULL;

    if (!pFnClearReadFriendsContentListCompleteDelegate)
        pFnClearReadFriendsContentListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27162];

    UOnlineCommunityContentInterface_execClearReadFriendsContentListCompleteDelegate_Parms
        ClearReadFriendsContentListCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadFriendsContentListCompleteDelegate,
                       &ClearReadFriendsContentListCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.AddReadFriendsContentListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::
    AddReadFriendsContentListCompleteDelegate() {
    static UFunction* pFnAddReadFriendsContentListCompleteDelegate = NULL;

    if (!pFnAddReadFriendsContentListCompleteDelegate)
        pFnAddReadFriendsContentListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27160];

    UOnlineCommunityContentInterface_execAddReadFriendsContentListCompleteDelegate_Parms
        AddReadFriendsContentListCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadFriendsContentListCompleteDelegate,
                       &AddReadFriendsContentListCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.OnReadFriendsContentListComplete
// [0x00120000]
// Parameters infos:

void UOnlineCommunityContentInterface::OnReadFriendsContentListComplete() {
    static UFunction* pFnOnReadFriendsContentListComplete = NULL;

    if (!pFnOnReadFriendsContentListComplete)
        pFnOnReadFriendsContentListComplete =
            (UFunction*)UObject::GObjObjects()->Data[27158];

    UOnlineCommunityContentInterface_execOnReadFriendsContentListComplete_Parms
        OnReadFriendsContentListComplete_Parms;

    this->ProcessEvent(pFnOnReadFriendsContentListComplete,
                       &OnReadFriendsContentListComplete_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.ReadFriendsContentList
// [0x00424000]
// Parameters infos:

void UOnlineCommunityContentInterface::ReadFriendsContentList() {
    static UFunction* pFnReadFriendsContentList = NULL;

    if (!pFnReadFriendsContentList)
        pFnReadFriendsContentList =
            (UFunction*)UObject::GObjObjects()->Data[27151];

    UOnlineCommunityContentInterface_execReadFriendsContentList_Parms
        ReadFriendsContentList_Parms;

    this->ProcessEvent(pFnReadFriendsContentList, &ReadFriendsContentList_Parms,
                       NULL);
};

// Function Engine.OnlineCommunityContentInterface.GetContentList
// [0x00420000]
// Parameters infos:

void UOnlineCommunityContentInterface::GetContentList() {
    static UFunction* pFnGetContentList = NULL;

    if (!pFnGetContentList)
        pFnGetContentList = (UFunction*)UObject::GObjObjects()->Data[27146];

    UOnlineCommunityContentInterface_execGetContentList_Parms
        GetContentList_Parms;

    this->ProcessEvent(pFnGetContentList, &GetContentList_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.ClearReadContentListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::ClearReadContentListCompleteDelegate() {
    static UFunction* pFnClearReadContentListCompleteDelegate = NULL;

    if (!pFnClearReadContentListCompleteDelegate)
        pFnClearReadContentListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27144];

    UOnlineCommunityContentInterface_execClearReadContentListCompleteDelegate_Parms
        ClearReadContentListCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadContentListCompleteDelegate,
                       &ClearReadContentListCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineCommunityContentInterface.AddReadContentListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::AddReadContentListCompleteDelegate() {
    static UFunction* pFnAddReadContentListCompleteDelegate = NULL;

    if (!pFnAddReadContentListCompleteDelegate)
        pFnAddReadContentListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27142];

    UOnlineCommunityContentInterface_execAddReadContentListCompleteDelegate_Parms
        AddReadContentListCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadContentListCompleteDelegate,
                       &AddReadContentListCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.OnReadContentListComplete
// [0x00120000]
// Parameters infos:

void UOnlineCommunityContentInterface::OnReadContentListComplete() {
    static UFunction* pFnOnReadContentListComplete = NULL;

    if (!pFnOnReadContentListComplete)
        pFnOnReadContentListComplete =
            (UFunction*)UObject::GObjObjects()->Data[27138];

    UOnlineCommunityContentInterface_execOnReadContentListComplete_Parms
        OnReadContentListComplete_Parms;

    this->ProcessEvent(pFnOnReadContentListComplete,
                       &OnReadContentListComplete_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.ReadContentList
// [0x00024000]
// Parameters infos:

void UOnlineCommunityContentInterface::ReadContentList() {
    static UFunction* pFnReadContentList = NULL;

    if (!pFnReadContentList)
        pFnReadContentList = (UFunction*)UObject::GObjObjects()->Data[27131];

    UOnlineCommunityContentInterface_execReadContentList_Parms
        ReadContentList_Parms;

    this->ProcessEvent(pFnReadContentList, &ReadContentList_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.Exit
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::Exit() {
    static UFunction* pFnExit = NULL;

    if (!pFnExit) pFnExit = (UFunction*)UObject::GObjObjects()->Data[27130];

    UOnlineCommunityContentInterface_execExit_Parms Exit_Parms;

    this->ProcessEvent(pFnExit, &Exit_Parms, NULL);
};

// Function Engine.OnlineCommunityContentInterface.Init
// [0x00020000]
// Parameters infos:

void UOnlineCommunityContentInterface::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[27128];

    UOnlineCommunityContentInterface_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.CancelRecordingEvent
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::CancelRecordingEvent() {
    static UFunction* pFnCancelRecordingEvent = NULL;

    if (!pFnCancelRecordingEvent)
        pFnCancelRecordingEvent =
            (UFunction*)UObject::GObjObjects()->Data[27497];

    UOnlineGameDVRInterface_execCancelRecordingEvent_Parms
        CancelRecordingEvent_Parms;

    this->ProcessEvent(pFnCancelRecordingEvent, &CancelRecordingEvent_Parms,
                       NULL);
};

// Function Engine.OnlineGameDVRInterface.RecordPreviousTimespan
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::RecordPreviousTimespan() {
    static UFunction* pFnRecordPreviousTimespan = NULL;

    if (!pFnRecordPreviousTimespan)
        pFnRecordPreviousTimespan =
            (UFunction*)UObject::GObjObjects()->Data[27492];

    UOnlineGameDVRInterface_execRecordPreviousTimespan_Parms
        RecordPreviousTimespan_Parms;

    this->ProcessEvent(pFnRecordPreviousTimespan, &RecordPreviousTimespan_Parms,
                       NULL);
};

// Function Engine.OnlineGameDVRInterface.EndRecordingEvent
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::EndRecordingEvent() {
    static UFunction* pFnEndRecordingEvent = NULL;

    if (!pFnEndRecordingEvent)
        pFnEndRecordingEvent = (UFunction*)UObject::GObjObjects()->Data[27488];

    UOnlineGameDVRInterface_execEndRecordingEvent_Parms EndRecordingEvent_Parms;

    this->ProcessEvent(pFnEndRecordingEvent, &EndRecordingEvent_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.ClearRecordEventCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::ClearRecordEventCompleteDelegate() {
    static UFunction* pFnClearRecordEventCompleteDelegate = NULL;

    if (!pFnClearRecordEventCompleteDelegate)
        pFnClearRecordEventCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27485];

    UOnlineGameDVRInterface_execClearRecordEventCompleteDelegate_Parms
        ClearRecordEventCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRecordEventCompleteDelegate,
                       &ClearRecordEventCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.AddRecordEventCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::AddRecordEventCompleteDelegate() {
    static UFunction* pFnAddRecordEventCompleteDelegate = NULL;

    if (!pFnAddRecordEventCompleteDelegate)
        pFnAddRecordEventCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27482];

    UOnlineGameDVRInterface_execAddRecordEventCompleteDelegate_Parms
        AddRecordEventCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRecordEventCompleteDelegate,
                       &AddRecordEventCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.OnRecordEventComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameDVRInterface::OnRecordEventComplete() {
    static UFunction* pFnOnRecordEventComplete = NULL;

    if (!pFnOnRecordEventComplete)
        pFnOnRecordEventComplete =
            (UFunction*)UObject::GObjObjects()->Data[27478];

    UOnlineGameDVRInterface_execOnRecordEventComplete_Parms
        OnRecordEventComplete_Parms;

    this->ProcessEvent(pFnOnRecordEventComplete, &OnRecordEventComplete_Parms,
                       NULL);
};

// Function Engine.OnlineGameDVRInterface.BeginRecordingEvent
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::BeginRecordingEvent() {
    static UFunction* pFnBeginRecordingEvent = NULL;

    if (!pFnBeginRecordingEvent)
        pFnBeginRecordingEvent =
            (UFunction*)UObject::GObjObjects()->Data[27474];

    UOnlineGameDVRInterface_execBeginRecordingEvent_Parms
        BeginRecordingEvent_Parms;

    this->ProcessEvent(pFnBeginRecordingEvent, &BeginRecordingEvent_Parms,
                       NULL);
};

// Function Engine.OnlineGameDVRInterface.ClearReadRecordedClipsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::ClearReadRecordedClipsCompleteDelegate() {
    static UFunction* pFnClearReadRecordedClipsCompleteDelegate = NULL;

    if (!pFnClearReadRecordedClipsCompleteDelegate)
        pFnClearReadRecordedClipsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27471];

    UOnlineGameDVRInterface_execClearReadRecordedClipsCompleteDelegate_Parms
        ClearReadRecordedClipsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadRecordedClipsCompleteDelegate,
                       &ClearReadRecordedClipsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.AddReadRecordedClipsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::AddReadRecordedClipsCompleteDelegate() {
    static UFunction* pFnAddReadRecordedClipsCompleteDelegate = NULL;

    if (!pFnAddReadRecordedClipsCompleteDelegate)
        pFnAddReadRecordedClipsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27468];

    UOnlineGameDVRInterface_execAddReadRecordedClipsCompleteDelegate_Parms
        AddReadRecordedClipsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadRecordedClipsCompleteDelegate,
                       &AddReadRecordedClipsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.ClearCachedRecordedClips
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::ClearCachedRecordedClips() {
    static UFunction* pFnClearCachedRecordedClips = NULL;

    if (!pFnClearCachedRecordedClips)
        pFnClearCachedRecordedClips =
            (UFunction*)UObject::GObjObjects()->Data[27466];

    UOnlineGameDVRInterface_execClearCachedRecordedClips_Parms
        ClearCachedRecordedClips_Parms;

    this->ProcessEvent(pFnClearCachedRecordedClips,
                       &ClearCachedRecordedClips_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.OnReadRecordedClipsComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameDVRInterface::OnReadRecordedClipsComplete() {
    static UFunction* pFnOnReadRecordedClipsComplete = NULL;

    if (!pFnOnReadRecordedClipsComplete)
        pFnOnReadRecordedClipsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27463];

    UOnlineGameDVRInterface_execOnReadRecordedClipsComplete_Parms
        OnReadRecordedClipsComplete_Parms;

    this->ProcessEvent(pFnOnReadRecordedClipsComplete,
                       &OnReadRecordedClipsComplete_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.ReadRecordedClips
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::ReadRecordedClips() {
    static UFunction* pFnReadRecordedClips = NULL;

    if (!pFnReadRecordedClips)
        pFnReadRecordedClips = (UFunction*)UObject::GObjObjects()->Data[27460];

    UOnlineGameDVRInterface_execReadRecordedClips_Parms ReadRecordedClips_Parms;

    this->ProcessEvent(pFnReadRecordedClips, &ReadRecordedClips_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.DisableRecording
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::DisableRecording() {
    static UFunction* pFnDisableRecording = NULL;

    if (!pFnDisableRecording)
        pFnDisableRecording = (UFunction*)UObject::GObjObjects()->Data[27459];

    UOnlineGameDVRInterface_execDisableRecording_Parms DisableRecording_Parms;

    this->ProcessEvent(pFnDisableRecording, &DisableRecording_Parms, NULL);
};

// Function Engine.OnlineGameDVRInterface.EnableRecording
// [0x00020000]
// Parameters infos:

void UOnlineGameDVRInterface::EnableRecording() {
    static UFunction* pFnEnableRecording = NULL;

    if (!pFnEnableRecording)
        pFnEnableRecording = (UFunction*)UObject::GObjObjects()->Data[27458];

    UOnlineGameDVRInterface_execEnableRecording_Parms EnableRecording_Parms;

    this->ProcessEvent(pFnEnableRecording, &EnableRecording_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.ClearWriteSharedFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::ClearWriteSharedFileCompleteDelegate() {
    static UFunction* pFnClearWriteSharedFileCompleteDelegate = NULL;

    if (!pFnClearWriteSharedFileCompleteDelegate)
        pFnClearWriteSharedFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[33572];

    USharedCloudFileInterface_execClearWriteSharedFileCompleteDelegate_Parms
        ClearWriteSharedFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearWriteSharedFileCompleteDelegate,
                       &ClearWriteSharedFileCompleteDelegate_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.AddWriteSharedFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::AddWriteSharedFileCompleteDelegate() {
    static UFunction* pFnAddWriteSharedFileCompleteDelegate = NULL;

    if (!pFnAddWriteSharedFileCompleteDelegate)
        pFnAddWriteSharedFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[33570];

    USharedCloudFileInterface_execAddWriteSharedFileCompleteDelegate_Parms
        AddWriteSharedFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddWriteSharedFileCompleteDelegate,
                       &AddWriteSharedFileCompleteDelegate_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.WriteSharedFile
// [0x00420000]
// Parameters infos:

void USharedCloudFileInterface::WriteSharedFile() {
    static UFunction* pFnWriteSharedFile = NULL;

    if (!pFnWriteSharedFile)
        pFnWriteSharedFile = (UFunction*)UObject::GObjObjects()->Data[33564];

    USharedCloudFileInterface_execWriteSharedFile_Parms WriteSharedFile_Parms;

    this->ProcessEvent(pFnWriteSharedFile, &WriteSharedFile_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.OnWriteSharedFileComplete
// [0x00120000]
// Parameters infos:

void USharedCloudFileInterface::OnWriteSharedFileComplete() {
    static UFunction* pFnOnWriteSharedFileComplete = NULL;

    if (!pFnOnWriteSharedFileComplete)
        pFnOnWriteSharedFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[33559];

    USharedCloudFileInterface_execOnWriteSharedFileComplete_Parms
        OnWriteSharedFileComplete_Parms;

    this->ProcessEvent(pFnOnWriteSharedFileComplete,
                       &OnWriteSharedFileComplete_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.ClearReadSharedFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::ClearReadSharedFileCompleteDelegate() {
    static UFunction* pFnClearReadSharedFileCompleteDelegate = NULL;

    if (!pFnClearReadSharedFileCompleteDelegate)
        pFnClearReadSharedFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[33557];

    USharedCloudFileInterface_execClearReadSharedFileCompleteDelegate_Parms
        ClearReadSharedFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadSharedFileCompleteDelegate,
                       &ClearReadSharedFileCompleteDelegate_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.AddReadSharedFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::AddReadSharedFileCompleteDelegate() {
    static UFunction* pFnAddReadSharedFileCompleteDelegate = NULL;

    if (!pFnAddReadSharedFileCompleteDelegate)
        pFnAddReadSharedFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[33555];

    USharedCloudFileInterface_execAddReadSharedFileCompleteDelegate_Parms
        AddReadSharedFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadSharedFileCompleteDelegate,
                       &AddReadSharedFileCompleteDelegate_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.ReadSharedFile
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::ReadSharedFile() {
    static UFunction* pFnReadSharedFile = NULL;

    if (!pFnReadSharedFile)
        pFnReadSharedFile = (UFunction*)UObject::GObjObjects()->Data[33552];

    USharedCloudFileInterface_execReadSharedFile_Parms ReadSharedFile_Parms;

    this->ProcessEvent(pFnReadSharedFile, &ReadSharedFile_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.OnReadSharedFileComplete
// [0x00120000]
// Parameters infos:

void USharedCloudFileInterface::OnReadSharedFileComplete() {
    static UFunction* pFnOnReadSharedFileComplete = NULL;

    if (!pFnOnReadSharedFileComplete)
        pFnOnReadSharedFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[33549];

    USharedCloudFileInterface_execOnReadSharedFileComplete_Parms
        OnReadSharedFileComplete_Parms;

    this->ProcessEvent(pFnOnReadSharedFileComplete,
                       &OnReadSharedFileComplete_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.ClearSharedFile
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::ClearSharedFile() {
    static UFunction* pFnClearSharedFile = NULL;

    if (!pFnClearSharedFile)
        pFnClearSharedFile = (UFunction*)UObject::GObjObjects()->Data[33546];

    USharedCloudFileInterface_execClearSharedFile_Parms ClearSharedFile_Parms;

    this->ProcessEvent(pFnClearSharedFile, &ClearSharedFile_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.ClearSharedFiles
// [0x00020000]
// Parameters infos:

void USharedCloudFileInterface::ClearSharedFiles() {
    static UFunction* pFnClearSharedFiles = NULL;

    if (!pFnClearSharedFiles)
        pFnClearSharedFiles = (UFunction*)UObject::GObjObjects()->Data[33544];

    USharedCloudFileInterface_execClearSharedFiles_Parms ClearSharedFiles_Parms;

    this->ProcessEvent(pFnClearSharedFiles, &ClearSharedFiles_Parms, NULL);
};

// Function Engine.SharedCloudFileInterface.GetSharedFileContents
// [0x00420000]
// Parameters infos:

void USharedCloudFileInterface::GetSharedFileContents() {
    static UFunction* pFnGetSharedFileContents = NULL;

    if (!pFnGetSharedFileContents)
        pFnGetSharedFileContents =
            (UFunction*)UObject::GObjObjects()->Data[33539];

    USharedCloudFileInterface_execGetSharedFileContents_Parms
        GetSharedFileContents_Parms;

    this->ProcessEvent(pFnGetSharedFileContents, &GetSharedFileContents_Parms,
                       NULL);
};

// Function Engine.UserCloudFileInterface.ClearAllDelegates
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearAllDelegates() {
    static UFunction* pFnClearAllDelegates = NULL;

    if (!pFnClearAllDelegates)
        pFnClearAllDelegates = (UFunction*)UObject::GObjObjects()->Data[36700];

    UUserCloudFileInterface_execClearAllDelegates_Parms ClearAllDelegates_Parms;

    this->ProcessEvent(pFnClearAllDelegates, &ClearAllDelegates_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ClearDeleteUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearDeleteUserFileCompleteDelegate() {
    static UFunction* pFnClearDeleteUserFileCompleteDelegate = NULL;

    if (!pFnClearDeleteUserFileCompleteDelegate)
        pFnClearDeleteUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36698];

    UUserCloudFileInterface_execClearDeleteUserFileCompleteDelegate_Parms
        ClearDeleteUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearDeleteUserFileCompleteDelegate,
                       &ClearDeleteUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.AddDeleteUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::AddDeleteUserFileCompleteDelegate() {
    static UFunction* pFnAddDeleteUserFileCompleteDelegate = NULL;

    if (!pFnAddDeleteUserFileCompleteDelegate)
        pFnAddDeleteUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36696];

    UUserCloudFileInterface_execAddDeleteUserFileCompleteDelegate_Parms
        AddDeleteUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddDeleteUserFileCompleteDelegate,
                       &AddDeleteUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.DeleteUserFile
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::DeleteUserFile() {
    static UFunction* pFnDeleteUserFile = NULL;

    if (!pFnDeleteUserFile)
        pFnDeleteUserFile = (UFunction*)UObject::GObjObjects()->Data[16245];

    UUserCloudFileInterface_execDeleteUserFile_Parms DeleteUserFile_Parms;

    this->ProcessEvent(pFnDeleteUserFile, &DeleteUserFile_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.OnDeleteUserFileComplete
// [0x00120000]
// Parameters infos:

void UUserCloudFileInterface::OnDeleteUserFileComplete() {
    static UFunction* pFnOnDeleteUserFileComplete = NULL;

    if (!pFnOnDeleteUserFileComplete)
        pFnOnDeleteUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[36688];

    UUserCloudFileInterface_execOnDeleteUserFileComplete_Parms
        OnDeleteUserFileComplete_Parms;

    this->ProcessEvent(pFnOnDeleteUserFileComplete,
                       &OnDeleteUserFileComplete_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ClearWriteUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearWriteUserFileCompleteDelegate() {
    static UFunction* pFnClearWriteUserFileCompleteDelegate = NULL;

    if (!pFnClearWriteUserFileCompleteDelegate)
        pFnClearWriteUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36686];

    UUserCloudFileInterface_execClearWriteUserFileCompleteDelegate_Parms
        ClearWriteUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearWriteUserFileCompleteDelegate,
                       &ClearWriteUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.AddWriteUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::AddWriteUserFileCompleteDelegate() {
    static UFunction* pFnAddWriteUserFileCompleteDelegate = NULL;

    if (!pFnAddWriteUserFileCompleteDelegate)
        pFnAddWriteUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36684];

    UUserCloudFileInterface_execAddWriteUserFileCompleteDelegate_Parms
        AddWriteUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddWriteUserFileCompleteDelegate,
                       &AddWriteUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.WriteUserFile
// [0x00420000]
// Parameters infos:

void UUserCloudFileInterface::WriteUserFile() {
    static UFunction* pFnWriteUserFile = NULL;

    if (!pFnWriteUserFile)
        pFnWriteUserFile = (UFunction*)UObject::GObjObjects()->Data[16251];

    UUserCloudFileInterface_execWriteUserFile_Parms WriteUserFile_Parms;

    this->ProcessEvent(pFnWriteUserFile, &WriteUserFile_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.OnWriteUserFileComplete
// [0x00120000]
// Parameters infos:

void UUserCloudFileInterface::OnWriteUserFileComplete() {
    static UFunction* pFnOnWriteUserFileComplete = NULL;

    if (!pFnOnWriteUserFileComplete)
        pFnOnWriteUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[36676];

    UUserCloudFileInterface_execOnWriteUserFileComplete_Parms
        OnWriteUserFileComplete_Parms;

    this->ProcessEvent(pFnOnWriteUserFileComplete,
                       &OnWriteUserFileComplete_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ClearReadUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearReadUserFileCompleteDelegate() {
    static UFunction* pFnClearReadUserFileCompleteDelegate = NULL;

    if (!pFnClearReadUserFileCompleteDelegate)
        pFnClearReadUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36674];

    UUserCloudFileInterface_execClearReadUserFileCompleteDelegate_Parms
        ClearReadUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadUserFileCompleteDelegate,
                       &ClearReadUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.AddReadUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::AddReadUserFileCompleteDelegate() {
    static UFunction* pFnAddReadUserFileCompleteDelegate = NULL;

    if (!pFnAddReadUserFileCompleteDelegate)
        pFnAddReadUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36672];

    UUserCloudFileInterface_execAddReadUserFileCompleteDelegate_Parms
        AddReadUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadUserFileCompleteDelegate,
                       &AddReadUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ReadUserFile
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ReadUserFile() {
    static UFunction* pFnReadUserFile = NULL;

    if (!pFnReadUserFile)
        pFnReadUserFile = (UFunction*)UObject::GObjObjects()->Data[16249];

    UUserCloudFileInterface_execReadUserFile_Parms ReadUserFile_Parms;

    this->ProcessEvent(pFnReadUserFile, &ReadUserFile_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.OnReadUserFileComplete
// [0x00120000]
// Parameters infos:

void UUserCloudFileInterface::OnReadUserFileComplete() {
    static UFunction* pFnOnReadUserFileComplete = NULL;

    if (!pFnOnReadUserFileComplete)
        pFnOnReadUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[36666];

    UUserCloudFileInterface_execOnReadUserFileComplete_Parms
        OnReadUserFileComplete_Parms;

    this->ProcessEvent(pFnOnReadUserFileComplete, &OnReadUserFileComplete_Parms,
                       NULL);
};

// Function Engine.UserCloudFileInterface.GetUserFileList
// [0x00420000]
// Parameters infos:

void UUserCloudFileInterface::GetUserFileList() {
    static UFunction* pFnGetUserFileList = NULL;

    if (!pFnGetUserFileList)
        pFnGetUserFileList = (UFunction*)UObject::GObjObjects()->Data[36662];

    UUserCloudFileInterface_execGetUserFileList_Parms GetUserFileList_Parms;

    this->ProcessEvent(pFnGetUserFileList, &GetUserFileList_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ClearEnumerateUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearEnumerateUserFileCompleteDelegate() {
    static UFunction* pFnClearEnumerateUserFileCompleteDelegate = NULL;

    if (!pFnClearEnumerateUserFileCompleteDelegate)
        pFnClearEnumerateUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36660];

    UUserCloudFileInterface_execClearEnumerateUserFileCompleteDelegate_Parms
        ClearEnumerateUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearEnumerateUserFileCompleteDelegate,
                       &ClearEnumerateUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.AddEnumerateUserFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::AddEnumerateUserFileCompleteDelegate() {
    static UFunction* pFnAddEnumerateUserFileCompleteDelegate = NULL;

    if (!pFnAddEnumerateUserFileCompleteDelegate)
        pFnAddEnumerateUserFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36658];

    UUserCloudFileInterface_execAddEnumerateUserFileCompleteDelegate_Parms
        AddEnumerateUserFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddEnumerateUserFileCompleteDelegate,
                       &AddEnumerateUserFileCompleteDelegate_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.EnumerateUserFiles
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::EnumerateUserFiles() {
    static UFunction* pFnEnumerateUserFiles = NULL;

    if (!pFnEnumerateUserFiles)
        pFnEnumerateUserFiles = (UFunction*)UObject::GObjObjects()->Data[36656];

    UUserCloudFileInterface_execEnumerateUserFiles_Parms
        EnumerateUserFiles_Parms;

    this->ProcessEvent(pFnEnumerateUserFiles, &EnumerateUserFiles_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.OnEnumerateUserFilesComplete
// [0x00120000]
// Parameters infos:

void UUserCloudFileInterface::OnEnumerateUserFilesComplete() {
    static UFunction* pFnOnEnumerateUserFilesComplete = NULL;

    if (!pFnOnEnumerateUserFilesComplete)
        pFnOnEnumerateUserFilesComplete =
            (UFunction*)UObject::GObjObjects()->Data[36653];

    UUserCloudFileInterface_execOnEnumerateUserFilesComplete_Parms
        OnEnumerateUserFilesComplete_Parms;

    this->ProcessEvent(pFnOnEnumerateUserFilesComplete,
                       &OnEnumerateUserFilesComplete_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ClearFile
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearFile() {
    static UFunction* pFnClearFile = NULL;

    if (!pFnClearFile)
        pFnClearFile = (UFunction*)UObject::GObjObjects()->Data[36649];

    UUserCloudFileInterface_execClearFile_Parms ClearFile_Parms;

    this->ProcessEvent(pFnClearFile, &ClearFile_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.ClearFiles
// [0x00020000]
// Parameters infos:

void UUserCloudFileInterface::ClearFiles() {
    static UFunction* pFnClearFiles = NULL;

    if (!pFnClearFiles)
        pFnClearFiles = (UFunction*)UObject::GObjObjects()->Data[36646];

    UUserCloudFileInterface_execClearFiles_Parms ClearFiles_Parms;

    this->ProcessEvent(pFnClearFiles, &ClearFiles_Parms, NULL);
};

// Function Engine.UserCloudFileInterface.GetFileContents
// [0x00420000]
// Parameters infos:

void UUserCloudFileInterface::GetFileContents() {
    static UFunction* pFnGetFileContents = NULL;

    if (!pFnGetFileContents)
        pFnGetFileContents = (UFunction*)UObject::GObjObjects()->Data[16247];

    UUserCloudFileInterface_execGetFileContents_Parms GetFileContents_Parms;

    this->ProcessEvent(pFnGetFileContents, &GetFileContents_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.ClearPostLinkCompleted
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::ClearPostLinkCompleted() {
    static UFunction* pFnClearPostLinkCompleted = NULL;

    if (!pFnClearPostLinkCompleted)
        pFnClearPostLinkCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29218];

    UOnlineSocialInterface_execClearPostLinkCompleted_Parms
        ClearPostLinkCompleted_Parms;

    this->ProcessEvent(pFnClearPostLinkCompleted, &ClearPostLinkCompleted_Parms,
                       NULL);
};

// Function Engine.OnlineSocialInterface.AddPostLinkCompleted
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::AddPostLinkCompleted() {
    static UFunction* pFnAddPostLinkCompleted = NULL;

    if (!pFnAddPostLinkCompleted)
        pFnAddPostLinkCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29215];

    UOnlineSocialInterface_execAddPostLinkCompleted_Parms
        AddPostLinkCompleted_Parms;

    this->ProcessEvent(pFnAddPostLinkCompleted, &AddPostLinkCompleted_Parms,
                       NULL);
};

// Function Engine.OnlineSocialInterface.OnPostLinkCompleted
// [0x00120000]
// Parameters infos:

void UOnlineSocialInterface::OnPostLinkCompleted() {
    static UFunction* pFnOnPostLinkCompleted = NULL;

    if (!pFnOnPostLinkCompleted)
        pFnOnPostLinkCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29212];

    UOnlineSocialInterface_execOnPostLinkCompleted_Parms
        OnPostLinkCompleted_Parms;

    this->ProcessEvent(pFnOnPostLinkCompleted, &OnPostLinkCompleted_Parms,
                       NULL);
};

// Function Engine.OnlineSocialInterface.PostLink
// [0x00420000]
// Parameters infos:

void UOnlineSocialInterface::PostLink() {
    static UFunction* pFnPostLink = NULL;

    if (!pFnPostLink)
        pFnPostLink = (UFunction*)UObject::GObjObjects()->Data[29208];

    UOnlineSocialInterface_execPostLink_Parms PostLink_Parms;

    this->ProcessEvent(pFnPostLink, &PostLink_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.ClearPostImageCompleted
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::ClearPostImageCompleted() {
    static UFunction* pFnClearPostImageCompleted = NULL;

    if (!pFnClearPostImageCompleted)
        pFnClearPostImageCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29205];

    UOnlineSocialInterface_execClearPostImageCompleted_Parms
        ClearPostImageCompleted_Parms;

    this->ProcessEvent(pFnClearPostImageCompleted,
                       &ClearPostImageCompleted_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.AddPostImageCompleted
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::AddPostImageCompleted() {
    static UFunction* pFnAddPostImageCompleted = NULL;

    if (!pFnAddPostImageCompleted)
        pFnAddPostImageCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29202];

    UOnlineSocialInterface_execAddPostImageCompleted_Parms
        AddPostImageCompleted_Parms;

    this->ProcessEvent(pFnAddPostImageCompleted, &AddPostImageCompleted_Parms,
                       NULL);
};

// Function Engine.OnlineSocialInterface.OnPostImageCompleted
// [0x00120000]
// Parameters infos:

void UOnlineSocialInterface::OnPostImageCompleted() {
    static UFunction* pFnOnPostImageCompleted = NULL;

    if (!pFnOnPostImageCompleted)
        pFnOnPostImageCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29199];

    UOnlineSocialInterface_execOnPostImageCompleted_Parms
        OnPostImageCompleted_Parms;

    this->ProcessEvent(pFnOnPostImageCompleted, &OnPostImageCompleted_Parms,
                       NULL);
};

// Function Engine.OnlineSocialInterface.PostImage
// [0x00420000]
// Parameters infos:

void UOnlineSocialInterface::PostImage() {
    static UFunction* pFnPostImage = NULL;

    if (!pFnPostImage)
        pFnPostImage = (UFunction*)UObject::GObjObjects()->Data[29193];

    UOnlineSocialInterface_execPostImage_Parms PostImage_Parms;

    this->ProcessEvent(pFnPostImage, &PostImage_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.ClearQuerySocialPostPrivilegesCompleted
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::ClearQuerySocialPostPrivilegesCompleted() {
    static UFunction* pFnClearQuerySocialPostPrivilegesCompleted = NULL;

    if (!pFnClearQuerySocialPostPrivilegesCompleted)
        pFnClearQuerySocialPostPrivilegesCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29191];

    UOnlineSocialInterface_execClearQuerySocialPostPrivilegesCompleted_Parms
        ClearQuerySocialPostPrivilegesCompleted_Parms;

    this->ProcessEvent(pFnClearQuerySocialPostPrivilegesCompleted,
                       &ClearQuerySocialPostPrivilegesCompleted_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.AddQuerySocialPostPrivilegesCompleted
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::AddQuerySocialPostPrivilegesCompleted() {
    static UFunction* pFnAddQuerySocialPostPrivilegesCompleted = NULL;

    if (!pFnAddQuerySocialPostPrivilegesCompleted)
        pFnAddQuerySocialPostPrivilegesCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29189];

    UOnlineSocialInterface_execAddQuerySocialPostPrivilegesCompleted_Parms
        AddQuerySocialPostPrivilegesCompleted_Parms;

    this->ProcessEvent(pFnAddQuerySocialPostPrivilegesCompleted,
                       &AddQuerySocialPostPrivilegesCompleted_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.OnQuerySocialPostPrivilegesCompleted
// [0x00120000]
// Parameters infos:

void UOnlineSocialInterface::OnQuerySocialPostPrivilegesCompleted() {
    static UFunction* pFnOnQuerySocialPostPrivilegesCompleted = NULL;

    if (!pFnOnQuerySocialPostPrivilegesCompleted)
        pFnOnQuerySocialPostPrivilegesCompleted =
            (UFunction*)UObject::GObjObjects()->Data[29186];

    UOnlineSocialInterface_execOnQuerySocialPostPrivilegesCompleted_Parms
        OnQuerySocialPostPrivilegesCompleted_Parms;

    this->ProcessEvent(pFnOnQuerySocialPostPrivilegesCompleted,
                       &OnQuerySocialPostPrivilegesCompleted_Parms, NULL);
};

// Function Engine.OnlineSocialInterface.QuerySocialPostPrivileges
// [0x00020000]
// Parameters infos:

void UOnlineSocialInterface::QuerySocialPostPrivileges() {
    static UFunction* pFnQuerySocialPostPrivileges = NULL;

    if (!pFnQuerySocialPostPrivileges)
        pFnQuerySocialPostPrivileges =
            (UFunction*)UObject::GObjObjects()->Data[29184];

    UOnlineSocialInterface_execQuerySocialPostPrivileges_Parms
        QuerySocialPostPrivileges_Parms;

    this->ProcessEvent(pFnQuerySocialPostPrivileges,
                       &QuerySocialPostPrivileges_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.DeleteTitleFile
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::DeleteTitleFile() {
    static UFunction* pFnDeleteTitleFile = NULL;

    if (!pFnDeleteTitleFile)
        pFnDeleteTitleFile = (UFunction*)UObject::GObjObjects()->Data[23331];

    UOnlineTitleFileCacheInterface_execDeleteTitleFile_Parms
        DeleteTitleFile_Parms;

    this->ProcessEvent(pFnDeleteTitleFile, &DeleteTitleFile_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.DeleteTitleFiles
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::DeleteTitleFiles() {
    static UFunction* pFnDeleteTitleFiles = NULL;

    if (!pFnDeleteTitleFiles)
        pFnDeleteTitleFiles = (UFunction*)UObject::GObjObjects()->Data[16253];

    UOnlineTitleFileCacheInterface_execDeleteTitleFiles_Parms
        DeleteTitleFiles_Parms;

    this->ProcessEvent(pFnDeleteTitleFiles, &DeleteTitleFiles_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.ClearCachedFile
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::ClearCachedFile() {
    static UFunction* pFnClearCachedFile = NULL;

    if (!pFnClearCachedFile)
        pFnClearCachedFile = (UFunction*)UObject::GObjObjects()->Data[23325];

    UOnlineTitleFileCacheInterface_execClearCachedFile_Parms
        ClearCachedFile_Parms;

    this->ProcessEvent(pFnClearCachedFile, &ClearCachedFile_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.ClearCachedFiles
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::ClearCachedFiles() {
    static UFunction* pFnClearCachedFiles = NULL;

    if (!pFnClearCachedFiles)
        pFnClearCachedFiles = (UFunction*)UObject::GObjObjects()->Data[23323];

    UOnlineTitleFileCacheInterface_execClearCachedFiles_Parms
        ClearCachedFiles_Parms;

    this->ProcessEvent(pFnClearCachedFiles, &ClearCachedFiles_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.GetTitleFileLogicalName
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::GetTitleFileLogicalName() {
    static UFunction* pFnGetTitleFileLogicalName = NULL;

    if (!pFnGetTitleFileLogicalName)
        pFnGetTitleFileLogicalName =
            (UFunction*)UObject::GObjObjects()->Data[29529];

    UOnlineTitleFileCacheInterface_execGetTitleFileLogicalName_Parms
        GetTitleFileLogicalName_Parms;

    this->ProcessEvent(pFnGetTitleFileLogicalName,
                       &GetTitleFileLogicalName_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.GetTitleFileHash
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::GetTitleFileHash() {
    static UFunction* pFnGetTitleFileHash = NULL;

    if (!pFnGetTitleFileHash)
        pFnGetTitleFileHash = (UFunction*)UObject::GObjObjects()->Data[23327];

    UOnlineTitleFileCacheInterface_execGetTitleFileHash_Parms
        GetTitleFileHash_Parms;

    this->ProcessEvent(pFnGetTitleFileHash, &GetTitleFileHash_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.GetTitleFileState
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::GetTitleFileState() {
    static UFunction* pFnGetTitleFileState = NULL;

    if (!pFnGetTitleFileState)
        pFnGetTitleFileState = (UFunction*)UObject::GObjObjects()->Data[29525];

    UOnlineTitleFileCacheInterface_execGetTitleFileState_Parms
        GetTitleFileState_Parms;

    this->ProcessEvent(pFnGetTitleFileState, &GetTitleFileState_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.GetTitleFileContents
// [0x00420000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::GetTitleFileContents() {
    static UFunction* pFnGetTitleFileContents = NULL;

    if (!pFnGetTitleFileContents)
        pFnGetTitleFileContents =
            (UFunction*)UObject::GObjObjects()->Data[23329];

    UOnlineTitleFileCacheInterface_execGetTitleFileContents_Parms
        GetTitleFileContents_Parms;

    this->ProcessEvent(pFnGetTitleFileContents, &GetTitleFileContents_Parms,
                       NULL);
};

// Function
// Engine.OnlineTitleFileCacheInterface.ClearSaveTitleFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::ClearSaveTitleFileCompleteDelegate() {
    static UFunction* pFnClearSaveTitleFileCompleteDelegate = NULL;

    if (!pFnClearSaveTitleFileCompleteDelegate)
        pFnClearSaveTitleFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29520];

    UOnlineTitleFileCacheInterface_execClearSaveTitleFileCompleteDelegate_Parms
        ClearSaveTitleFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearSaveTitleFileCompleteDelegate,
                       &ClearSaveTitleFileCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineTitleFileCacheInterface.AddSaveTitleFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::AddSaveTitleFileCompleteDelegate() {
    static UFunction* pFnAddSaveTitleFileCompleteDelegate = NULL;

    if (!pFnAddSaveTitleFileCompleteDelegate)
        pFnAddSaveTitleFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29518];

    UOnlineTitleFileCacheInterface_execAddSaveTitleFileCompleteDelegate_Parms
        AddSaveTitleFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddSaveTitleFileCompleteDelegate,
                       &AddSaveTitleFileCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.OnSaveTitleFileComplete
// [0x00120000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::OnSaveTitleFileComplete() {
    static UFunction* pFnOnSaveTitleFileComplete = NULL;

    if (!pFnOnSaveTitleFileComplete)
        pFnOnSaveTitleFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[29515];

    UOnlineTitleFileCacheInterface_execOnSaveTitleFileComplete_Parms
        OnSaveTitleFileComplete_Parms;

    this->ProcessEvent(pFnOnSaveTitleFileComplete,
                       &OnSaveTitleFileComplete_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.SaveTitleFile
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::SaveTitleFile() {
    static UFunction* pFnSaveTitleFile = NULL;

    if (!pFnSaveTitleFile)
        pFnSaveTitleFile = (UFunction*)UObject::GObjObjects()->Data[16257];

    UOnlineTitleFileCacheInterface_execSaveTitleFile_Parms SaveTitleFile_Parms;

    this->ProcessEvent(pFnSaveTitleFile, &SaveTitleFile_Parms, NULL);
};

// Function
// Engine.OnlineTitleFileCacheInterface.ClearLoadTitleFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::ClearLoadTitleFileCompleteDelegate() {
    static UFunction* pFnClearLoadTitleFileCompleteDelegate = NULL;

    if (!pFnClearLoadTitleFileCompleteDelegate)
        pFnClearLoadTitleFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29509];

    UOnlineTitleFileCacheInterface_execClearLoadTitleFileCompleteDelegate_Parms
        ClearLoadTitleFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearLoadTitleFileCompleteDelegate,
                       &ClearLoadTitleFileCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineTitleFileCacheInterface.AddLoadTitleFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::AddLoadTitleFileCompleteDelegate() {
    static UFunction* pFnAddLoadTitleFileCompleteDelegate = NULL;

    if (!pFnAddLoadTitleFileCompleteDelegate)
        pFnAddLoadTitleFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29507];

    UOnlineTitleFileCacheInterface_execAddLoadTitleFileCompleteDelegate_Parms
        AddLoadTitleFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddLoadTitleFileCompleteDelegate,
                       &AddLoadTitleFileCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.OnLoadTitleFileComplete
// [0x00120000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::OnLoadTitleFileComplete() {
    static UFunction* pFnOnLoadTitleFileComplete = NULL;

    if (!pFnOnLoadTitleFileComplete)
        pFnOnLoadTitleFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[29504];

    UOnlineTitleFileCacheInterface_execOnLoadTitleFileComplete_Parms
        OnLoadTitleFileComplete_Parms;

    this->ProcessEvent(pFnOnLoadTitleFileComplete,
                       &OnLoadTitleFileComplete_Parms, NULL);
};

// Function Engine.OnlineTitleFileCacheInterface.LoadTitleFile
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileCacheInterface::LoadTitleFile() {
    static UFunction* pFnLoadTitleFile = NULL;

    if (!pFnLoadTitleFile)
        pFnLoadTitleFile = (UFunction*)UObject::GObjObjects()->Data[16259];

    UOnlineTitleFileCacheInterface_execLoadTitleFile_Parms LoadTitleFile_Parms;

    this->ProcessEvent(pFnLoadTitleFile, &LoadTitleFile_Parms, NULL);
};

// Function
// Engine.OnlineTitleFileInterface.ClearRequestTitleFileListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::ClearRequestTitleFileListCompleteDelegate() {
    static UFunction* pFnClearRequestTitleFileListCompleteDelegate = NULL;

    if (!pFnClearRequestTitleFileListCompleteDelegate)
        pFnClearRequestTitleFileListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29558];

    UOnlineTitleFileInterface_execClearRequestTitleFileListCompleteDelegate_Parms
        ClearRequestTitleFileListCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRequestTitleFileListCompleteDelegate,
                       &ClearRequestTitleFileListCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineTitleFileInterface.AddRequestTitleFileListCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::AddRequestTitleFileListCompleteDelegate() {
    static UFunction* pFnAddRequestTitleFileListCompleteDelegate = NULL;

    if (!pFnAddRequestTitleFileListCompleteDelegate)
        pFnAddRequestTitleFileListCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29556];

    UOnlineTitleFileInterface_execAddRequestTitleFileListCompleteDelegate_Parms
        AddRequestTitleFileListCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRequestTitleFileListCompleteDelegate,
                       &AddRequestTitleFileListCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineTitleFileInterface.OnRequestTitleFileListComplete
// [0x00120000]
// Parameters infos:

void UOnlineTitleFileInterface::OnRequestTitleFileListComplete() {
    static UFunction* pFnOnRequestTitleFileListComplete = NULL;

    if (!pFnOnRequestTitleFileListComplete)
        pFnOnRequestTitleFileListComplete =
            (UFunction*)UObject::GObjObjects()->Data[29552];

    UOnlineTitleFileInterface_execOnRequestTitleFileListComplete_Parms
        OnRequestTitleFileListComplete_Parms;

    this->ProcessEvent(pFnOnRequestTitleFileListComplete,
                       &OnRequestTitleFileListComplete_Parms, NULL);
};

// Function Engine.OnlineTitleFileInterface.RequestTitleFileList
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::RequestTitleFileList() {
    static UFunction* pFnRequestTitleFileList = NULL;

    if (!pFnRequestTitleFileList)
        pFnRequestTitleFileList =
            (UFunction*)UObject::GObjObjects()->Data[23340];

    UOnlineTitleFileInterface_execRequestTitleFileList_Parms
        RequestTitleFileList_Parms;

    this->ProcessEvent(pFnRequestTitleFileList, &RequestTitleFileList_Parms,
                       NULL);
};

// Function Engine.OnlineTitleFileInterface.ClearDownloadedFile
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::ClearDownloadedFile() {
    static UFunction* pFnClearDownloadedFile = NULL;

    if (!pFnClearDownloadedFile)
        pFnClearDownloadedFile =
            (UFunction*)UObject::GObjObjects()->Data[23333];

    UOnlineTitleFileInterface_execClearDownloadedFile_Parms
        ClearDownloadedFile_Parms;

    this->ProcessEvent(pFnClearDownloadedFile, &ClearDownloadedFile_Parms,
                       NULL);
};

// Function Engine.OnlineTitleFileInterface.ClearDownloadedFiles
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::ClearDownloadedFiles() {
    static UFunction* pFnClearDownloadedFiles = NULL;

    if (!pFnClearDownloadedFiles)
        pFnClearDownloadedFiles =
            (UFunction*)UObject::GObjObjects()->Data[23321];

    UOnlineTitleFileInterface_execClearDownloadedFiles_Parms
        ClearDownloadedFiles_Parms;

    this->ProcessEvent(pFnClearDownloadedFiles, &ClearDownloadedFiles_Parms,
                       NULL);
};

// Function Engine.OnlineTitleFileInterface.GetTitleFileState
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::GetTitleFileState() {
    static UFunction* pFnGetTitleFileState = NULL;

    if (!pFnGetTitleFileState)
        pFnGetTitleFileState = (UFunction*)UObject::GObjObjects()->Data[29548];

    UOnlineTitleFileInterface_execGetTitleFileState_Parms
        GetTitleFileState_Parms;

    this->ProcessEvent(pFnGetTitleFileState, &GetTitleFileState_Parms, NULL);
};

// Function Engine.OnlineTitleFileInterface.GetTitleFileContents
// [0x00420000]
// Parameters infos:

void UOnlineTitleFileInterface::GetTitleFileContents() {
    static UFunction* pFnGetTitleFileContents = NULL;

    if (!pFnGetTitleFileContents)
        pFnGetTitleFileContents =
            (UFunction*)UObject::GObjObjects()->Data[16255];

    UOnlineTitleFileInterface_execGetTitleFileContents_Parms
        GetTitleFileContents_Parms;

    this->ProcessEvent(pFnGetTitleFileContents, &GetTitleFileContents_Parms,
                       NULL);
};

// Function Engine.OnlineTitleFileInterface.ClearReadTitleFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::ClearReadTitleFileCompleteDelegate() {
    static UFunction* pFnClearReadTitleFileCompleteDelegate = NULL;

    if (!pFnClearReadTitleFileCompleteDelegate)
        pFnClearReadTitleFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29543];

    UOnlineTitleFileInterface_execClearReadTitleFileCompleteDelegate_Parms
        ClearReadTitleFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadTitleFileCompleteDelegate,
                       &ClearReadTitleFileCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineTitleFileInterface.AddReadTitleFileCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineTitleFileInterface::AddReadTitleFileCompleteDelegate() {
    static UFunction* pFnAddReadTitleFileCompleteDelegate = NULL;

    if (!pFnAddReadTitleFileCompleteDelegate)
        pFnAddReadTitleFileCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29541];

    UOnlineTitleFileInterface_execAddReadTitleFileCompleteDelegate_Parms
        AddReadTitleFileCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadTitleFileCompleteDelegate,
                       &AddReadTitleFileCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineTitleFileInterface.ReadTitleFile
// [0x00024000]
// Parameters infos:

void UOnlineTitleFileInterface::ReadTitleFile() {
    static UFunction* pFnReadTitleFile = NULL;

    if (!pFnReadTitleFile)
        pFnReadTitleFile = (UFunction*)UObject::GObjObjects()->Data[16261];

    UOnlineTitleFileInterface_execReadTitleFile_Parms ReadTitleFile_Parms;

    this->ProcessEvent(pFnReadTitleFile, &ReadTitleFile_Parms, NULL);
};

// Function Engine.OnlineTitleFileInterface.OnReadTitleFileComplete
// [0x00120000]
// Parameters infos:

void UOnlineTitleFileInterface::OnReadTitleFileComplete() {
    static UFunction* pFnOnReadTitleFileComplete = NULL;

    if (!pFnOnReadTitleFileComplete)
        pFnOnReadTitleFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[29536];

    UOnlineTitleFileInterface_execOnReadTitleFileComplete_Parms
        OnReadTitleFileComplete_Parms;

    this->ProcessEvent(pFnOnReadTitleFileComplete,
                       &OnReadTitleFileComplete_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.ClearNotifyLeaderChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::ClearNotifyLeaderChangedDelegate() {
    static UFunction* pFnClearNotifyLeaderChangedDelegate = NULL;

    if (!pFnClearNotifyLeaderChangedDelegate)
        pFnClearNotifyLeaderChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28139];

    UOnlinePartyInterface_execClearNotifyLeaderChangedDelegate_Parms
        ClearNotifyLeaderChangedDelegate_Parms;

    this->ProcessEvent(pFnClearNotifyLeaderChangedDelegate,
                       &ClearNotifyLeaderChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.AddNotifyLeaderChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::AddNotifyLeaderChangedDelegate() {
    static UFunction* pFnAddNotifyLeaderChangedDelegate = NULL;

    if (!pFnAddNotifyLeaderChangedDelegate)
        pFnAddNotifyLeaderChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28137];

    UOnlinePartyInterface_execAddNotifyLeaderChangedDelegate_Parms
        AddNotifyLeaderChangedDelegate_Parms;

    this->ProcessEvent(pFnAddNotifyLeaderChangedDelegate,
                       &AddNotifyLeaderChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.OnNotifyLeaderChanged
// [0x00120000]
// Parameters infos:

void UOnlinePartyInterface::OnNotifyLeaderChanged() {
    static UFunction* pFnOnNotifyLeaderChanged = NULL;

    if (!pFnOnNotifyLeaderChanged)
        pFnOnNotifyLeaderChanged =
            (UFunction*)UObject::GObjObjects()->Data[28135];

    UOnlinePartyInterface_execOnNotifyLeaderChanged_Parms
        OnNotifyLeaderChanged_Parms;

    this->ProcessEvent(pFnOnNotifyLeaderChanged, &OnNotifyLeaderChanged_Parms,
                       NULL);
};

// Function Engine.OnlinePartyInterface.ClearNotifyPartyMembersUpdatedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::ClearNotifyPartyMembersUpdatedDelegate() {
    static UFunction* pFnClearNotifyPartyMembersUpdatedDelegate = NULL;

    if (!pFnClearNotifyPartyMembersUpdatedDelegate)
        pFnClearNotifyPartyMembersUpdatedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28133];

    UOnlinePartyInterface_execClearNotifyPartyMembersUpdatedDelegate_Parms
        ClearNotifyPartyMembersUpdatedDelegate_Parms;

    this->ProcessEvent(pFnClearNotifyPartyMembersUpdatedDelegate,
                       &ClearNotifyPartyMembersUpdatedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.AddNotifyPartyMembersUpdatedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::AddNotifyPartyMembersUpdatedDelegate() {
    static UFunction* pFnAddNotifyPartyMembersUpdatedDelegate = NULL;

    if (!pFnAddNotifyPartyMembersUpdatedDelegate)
        pFnAddNotifyPartyMembersUpdatedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28131];

    UOnlinePartyInterface_execAddNotifyPartyMembersUpdatedDelegate_Parms
        AddNotifyPartyMembersUpdatedDelegate_Parms;

    this->ProcessEvent(pFnAddNotifyPartyMembersUpdatedDelegate,
                       &AddNotifyPartyMembersUpdatedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.OnNotifyPartyMembersUpdated
// [0x00120000]
// Parameters infos:

void UOnlinePartyInterface::OnNotifyPartyMembersUpdated() {
    static UFunction* pFnOnNotifyPartyMembersUpdated = NULL;

    if (!pFnOnNotifyPartyMembersUpdated)
        pFnOnNotifyPartyMembersUpdated =
            (UFunction*)UObject::GObjObjects()->Data[28128];

    UOnlinePartyInterface_execOnNotifyPartyMembersUpdated_Parms
        OnNotifyPartyMembersUpdated_Parms;

    this->ProcessEvent(pFnOnNotifyPartyMembersUpdated,
                       &OnNotifyPartyMembersUpdated_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.ClearNotifyMessageReceivedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::ClearNotifyMessageReceivedDelegate() {
    static UFunction* pFnClearNotifyMessageReceivedDelegate = NULL;

    if (!pFnClearNotifyMessageReceivedDelegate)
        pFnClearNotifyMessageReceivedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28126];

    UOnlinePartyInterface_execClearNotifyMessageReceivedDelegate_Parms
        ClearNotifyMessageReceivedDelegate_Parms;

    this->ProcessEvent(pFnClearNotifyMessageReceivedDelegate,
                       &ClearNotifyMessageReceivedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.AddNotifyMessageReceivedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::AddNotifyMessageReceivedDelegate() {
    static UFunction* pFnAddNotifyMessageReceivedDelegate = NULL;

    if (!pFnAddNotifyMessageReceivedDelegate)
        pFnAddNotifyMessageReceivedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28124];

    UOnlinePartyInterface_execAddNotifyMessageReceivedDelegate_Parms
        AddNotifyMessageReceivedDelegate_Parms;

    this->ProcessEvent(pFnAddNotifyMessageReceivedDelegate,
                       &AddNotifyMessageReceivedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.OnNotifyMessageReceived
// [0x00120000]
// Parameters infos:

void UOnlinePartyInterface::OnNotifyMessageReceived() {
    static UFunction* pFnOnNotifyMessageReceived = NULL;

    if (!pFnOnNotifyMessageReceived)
        pFnOnNotifyMessageReceived =
            (UFunction*)UObject::GObjObjects()->Data[28121];

    UOnlinePartyInterface_execOnNotifyMessageReceived_Parms
        OnNotifyMessageReceived_Parms;

    this->ProcessEvent(pFnOnNotifyMessageReceived,
                       &OnNotifyMessageReceived_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.SendMessage
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::SendMessage() {
    static UFunction* pFnSendMessage = NULL;

    if (!pFnSendMessage)
        pFnSendMessage = (UFunction*)UObject::GObjObjects()->Data[28118];

    UOnlinePartyInterface_execSendMessage_Parms SendMessage_Parms;

    this->ProcessEvent(pFnSendMessage, &SendMessage_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.LeaveParty
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::LeaveParty() {
    static UFunction* pFnLeaveParty = NULL;

    if (!pFnLeaveParty)
        pFnLeaveParty = (UFunction*)UObject::GObjObjects()->Data[28116];

    UOnlinePartyInterface_execLeaveParty_Parms LeaveParty_Parms;

    this->ProcessEvent(pFnLeaveParty, &LeaveParty_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.CreateParty
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::CreateParty() {
    static UFunction* pFnCreateParty = NULL;

    if (!pFnCreateParty)
        pFnCreateParty = (UFunction*)UObject::GObjObjects()->Data[28113];

    UOnlinePartyInterface_execCreateParty_Parms CreateParty_Parms;

    this->ProcessEvent(pFnCreateParty, &CreateParty_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.InviteToPartyByUserNames
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::InviteToPartyByUserNames() {
    static UFunction* pFnInviteToPartyByUserNames = NULL;

    if (!pFnInviteToPartyByUserNames)
        pFnInviteToPartyByUserNames =
            (UFunction*)UObject::GObjObjects()->Data[28108];

    UOnlinePartyInterface_execInviteToPartyByUserNames_Parms
        InviteToPartyByUserNames_Parms;

    this->ProcessEvent(pFnInviteToPartyByUserNames,
                       &InviteToPartyByUserNames_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.GetMyMemberId
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::GetMyMemberId() {
    static UFunction* pFnGetMyMemberId = NULL;

    if (!pFnGetMyMemberId)
        pFnGetMyMemberId = (UFunction*)UObject::GObjObjects()->Data[28106];

    UOnlinePartyInterface_execGetMyMemberId_Parms GetMyMemberId_Parms;

    this->ProcessEvent(pFnGetMyMemberId, &GetMyMemberId_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.GetLeaderMemberId
// [0x00020000]
// Parameters infos:

void UOnlinePartyInterface::GetLeaderMemberId() {
    static UFunction* pFnGetLeaderMemberId = NULL;

    if (!pFnGetLeaderMemberId)
        pFnGetLeaderMemberId = (UFunction*)UObject::GObjObjects()->Data[28104];

    UOnlinePartyInterface_execGetLeaderMemberId_Parms GetLeaderMemberId_Parms;

    this->ProcessEvent(pFnGetLeaderMemberId, &GetLeaderMemberId_Parms, NULL);
};

// Function Engine.OnlinePartyInterface.GetPartyMembers
// [0x00420000]
// Parameters infos:

void UOnlinePartyInterface::GetPartyMembers() {
    static UFunction* pFnGetPartyMembers = NULL;

    if (!pFnGetPartyMembers)
        pFnGetPartyMembers = (UFunction*)UObject::GObjObjects()->Data[28101];

    UOnlinePartyInterface_execGetPartyMembers_Parms GetPartyMembers_Parms;

    this->ProcessEvent(pFnGetPartyMembers, &GetPartyMembers_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.IsInPartyChat
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::IsInPartyChat() {
    static UFunction* pFnIsInPartyChat = NULL;

    if (!pFnIsInPartyChat)
        pFnIsInPartyChat = (UFunction*)UObject::GObjObjects()->Data[28097];

    UOnlinePartyChatInterface_execIsInPartyChat_Parms IsInPartyChat_Parms;

    this->ProcessEvent(pFnIsInPartyChat, &IsInPartyChat_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.ShowCommunitySessionsUI
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ShowCommunitySessionsUI() {
    static UFunction* pFnShowCommunitySessionsUI = NULL;

    if (!pFnShowCommunitySessionsUI)
        pFnShowCommunitySessionsUI =
            (UFunction*)UObject::GObjObjects()->Data[28094];

    UOnlinePartyChatInterface_execShowCommunitySessionsUI_Parms
        ShowCommunitySessionsUI_Parms;

    this->ProcessEvent(pFnShowCommunitySessionsUI,
                       &ShowCommunitySessionsUI_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.ShowVoiceChannelUI
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ShowVoiceChannelUI() {
    static UFunction* pFnShowVoiceChannelUI = NULL;

    if (!pFnShowVoiceChannelUI)
        pFnShowVoiceChannelUI = (UFunction*)UObject::GObjObjects()->Data[28091];

    UOnlinePartyChatInterface_execShowVoiceChannelUI_Parms
        ShowVoiceChannelUI_Parms;

    this->ProcessEvent(pFnShowVoiceChannelUI, &ShowVoiceChannelUI_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.ShowPartyUI
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ShowPartyUI() {
    static UFunction* pFnShowPartyUI = NULL;

    if (!pFnShowPartyUI)
        pFnShowPartyUI = (UFunction*)UObject::GObjObjects()->Data[28088];

    UOnlinePartyChatInterface_execShowPartyUI_Parms ShowPartyUI_Parms;

    this->ProcessEvent(pFnShowPartyUI, &ShowPartyUI_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.GetPartyBandwidth
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::GetPartyBandwidth() {
    static UFunction* pFnGetPartyBandwidth = NULL;

    if (!pFnGetPartyBandwidth)
        pFnGetPartyBandwidth = (UFunction*)UObject::GObjObjects()->Data[28086];

    UOnlinePartyChatInterface_execGetPartyBandwidth_Parms
        GetPartyBandwidth_Parms;

    this->ProcessEvent(pFnGetPartyBandwidth, &GetPartyBandwidth_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.SetPartyMemberCustomData
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::SetPartyMemberCustomData() {
    static UFunction* pFnSetPartyMemberCustomData = NULL;

    if (!pFnSetPartyMemberCustomData)
        pFnSetPartyMemberCustomData =
            (UFunction*)UObject::GObjObjects()->Data[28079];

    UOnlinePartyChatInterface_execSetPartyMemberCustomData_Parms
        SetPartyMemberCustomData_Parms;

    this->ProcessEvent(pFnSetPartyMemberCustomData,
                       &SetPartyMemberCustomData_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.ClearPartyMembersInfoChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ClearPartyMembersInfoChangedDelegate() {
    static UFunction* pFnClearPartyMembersInfoChangedDelegate = NULL;

    if (!pFnClearPartyMembersInfoChangedDelegate)
        pFnClearPartyMembersInfoChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28076];

    UOnlinePartyChatInterface_execClearPartyMembersInfoChangedDelegate_Parms
        ClearPartyMembersInfoChangedDelegate_Parms;

    this->ProcessEvent(pFnClearPartyMembersInfoChangedDelegate,
                       &ClearPartyMembersInfoChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.AddPartyMembersInfoChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::AddPartyMembersInfoChangedDelegate() {
    static UFunction* pFnAddPartyMembersInfoChangedDelegate = NULL;

    if (!pFnAddPartyMembersInfoChangedDelegate)
        pFnAddPartyMembersInfoChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28073];

    UOnlinePartyChatInterface_execAddPartyMembersInfoChangedDelegate_Parms
        AddPartyMembersInfoChangedDelegate_Parms;

    this->ProcessEvent(pFnAddPartyMembersInfoChangedDelegate,
                       &AddPartyMembersInfoChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.OnPartyMembersInfoChanged
// [0x00120000]
// Parameters infos:

void UOnlinePartyChatInterface::OnPartyMembersInfoChanged() {
    static UFunction* pFnOnPartyMembersInfoChanged = NULL;

    if (!pFnOnPartyMembersInfoChanged)
        pFnOnPartyMembersInfoChanged =
            (UFunction*)UObject::GObjObjects()->Data[28066];

    UOnlinePartyChatInterface_execOnPartyMembersInfoChanged_Parms
        OnPartyMembersInfoChanged_Parms;

    this->ProcessEvent(pFnOnPartyMembersInfoChanged,
                       &OnPartyMembersInfoChanged_Parms, NULL);
};

// Function
// Engine.OnlinePartyChatInterface.ClearReservedPartyMemberListChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ClearReservedPartyMemberListChangedDelegate() {
    static UFunction* pFnClearReservedPartyMemberListChangedDelegate = NULL;

    if (!pFnClearReservedPartyMemberListChangedDelegate)
        pFnClearReservedPartyMemberListChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28063];

    UOnlinePartyChatInterface_execClearReservedPartyMemberListChangedDelegate_Parms
        ClearReservedPartyMemberListChangedDelegate_Parms;

    this->ProcessEvent(pFnClearReservedPartyMemberListChangedDelegate,
                       &ClearReservedPartyMemberListChangedDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlinePartyChatInterface.AddReservedPartyMemberListChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::AddReservedPartyMemberListChangedDelegate() {
    static UFunction* pFnAddReservedPartyMemberListChangedDelegate = NULL;

    if (!pFnAddReservedPartyMemberListChangedDelegate)
        pFnAddReservedPartyMemberListChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28060];

    UOnlinePartyChatInterface_execAddReservedPartyMemberListChangedDelegate_Parms
        AddReservedPartyMemberListChangedDelegate_Parms;

    this->ProcessEvent(pFnAddReservedPartyMemberListChangedDelegate,
                       &AddReservedPartyMemberListChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.OnReservedPartyMemberListChanged
// [0x00120000]
// Parameters infos:

void UOnlinePartyChatInterface::OnReservedPartyMemberListChanged() {
    static UFunction* pFnOnReservedPartyMemberListChanged = NULL;

    if (!pFnOnReservedPartyMemberListChanged)
        pFnOnReservedPartyMemberListChanged =
            (UFunction*)UObject::GObjObjects()->Data[28056];

    UOnlinePartyChatInterface_execOnReservedPartyMemberListChanged_Parms
        OnReservedPartyMemberListChanged_Parms;

    this->ProcessEvent(pFnOnReservedPartyMemberListChanged,
                       &OnReservedPartyMemberListChanged_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.ClearPartyMemberListChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ClearPartyMemberListChangedDelegate() {
    static UFunction* pFnClearPartyMemberListChangedDelegate = NULL;

    if (!pFnClearPartyMemberListChangedDelegate)
        pFnClearPartyMemberListChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28053];

    UOnlinePartyChatInterface_execClearPartyMemberListChangedDelegate_Parms
        ClearPartyMemberListChangedDelegate_Parms;

    this->ProcessEvent(pFnClearPartyMemberListChangedDelegate,
                       &ClearPartyMemberListChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.AddPartyMemberListChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::AddPartyMemberListChangedDelegate() {
    static UFunction* pFnAddPartyMemberListChangedDelegate = NULL;

    if (!pFnAddPartyMemberListChangedDelegate)
        pFnAddPartyMemberListChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28050];

    UOnlinePartyChatInterface_execAddPartyMemberListChangedDelegate_Parms
        AddPartyMemberListChangedDelegate_Parms;

    this->ProcessEvent(pFnAddPartyMemberListChangedDelegate,
                       &AddPartyMemberListChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.OnPartyMemberListChanged
// [0x00120000]
// Parameters infos:

void UOnlinePartyChatInterface::OnPartyMemberListChanged() {
    static UFunction* pFnOnPartyMemberListChanged = NULL;

    if (!pFnOnPartyMemberListChanged)
        pFnOnPartyMemberListChanged =
            (UFunction*)UObject::GObjObjects()->Data[28046];

    UOnlinePartyChatInterface_execOnPartyMemberListChanged_Parms
        OnPartyMemberListChanged_Parms;

    this->ProcessEvent(pFnOnPartyMemberListChanged,
                       &OnPartyMemberListChanged_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.GetPartyMemberInformation
// [0x00420000]
// Parameters infos:

void UOnlinePartyChatInterface::GetPartyMemberInformation() {
    static UFunction* pFnGetPartyMemberInformation = NULL;

    if (!pFnGetPartyMemberInformation)
        pFnGetPartyMemberInformation =
            (UFunction*)UObject::GObjObjects()->Data[28042];

    UOnlinePartyChatInterface_execGetPartyMemberInformation_Parms
        GetPartyMemberInformation_Parms;

    this->ProcessEvent(pFnGetPartyMemberInformation,
                       &GetPartyMemberInformation_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.GetPartyMembersInformation
// [0x00420000]
// Parameters infos:

void UOnlinePartyChatInterface::GetPartyMembersInformation() {
    static UFunction* pFnGetPartyMembersInformation = NULL;

    if (!pFnGetPartyMembersInformation)
        pFnGetPartyMembersInformation =
            (UFunction*)UObject::GObjObjects()->Data[28038];

    UOnlinePartyChatInterface_execGetPartyMembersInformation_Parms
        GetPartyMembersInformation_Parms;

    this->ProcessEvent(pFnGetPartyMembersInformation,
                       &GetPartyMembersInformation_Parms, NULL);
};

// Function
// Engine.OnlinePartyChatInterface.ClearSendPartyGameInvitesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::ClearSendPartyGameInvitesCompleteDelegate() {
    static UFunction* pFnClearSendPartyGameInvitesCompleteDelegate = NULL;

    if (!pFnClearSendPartyGameInvitesCompleteDelegate)
        pFnClearSendPartyGameInvitesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28035];

    UOnlinePartyChatInterface_execClearSendPartyGameInvitesCompleteDelegate_Parms
        ClearSendPartyGameInvitesCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearSendPartyGameInvitesCompleteDelegate,
                       &ClearSendPartyGameInvitesCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlinePartyChatInterface.AddSendPartyGameInvitesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::AddSendPartyGameInvitesCompleteDelegate() {
    static UFunction* pFnAddSendPartyGameInvitesCompleteDelegate = NULL;

    if (!pFnAddSendPartyGameInvitesCompleteDelegate)
        pFnAddSendPartyGameInvitesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28032];

    UOnlinePartyChatInterface_execAddSendPartyGameInvitesCompleteDelegate_Parms
        AddSendPartyGameInvitesCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddSendPartyGameInvitesCompleteDelegate,
                       &AddSendPartyGameInvitesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.OnSendPartyGameInvitesComplete
// [0x00120000]
// Parameters infos:

void UOnlinePartyChatInterface::OnSendPartyGameInvitesComplete() {
    static UFunction* pFnOnSendPartyGameInvitesComplete = NULL;

    if (!pFnOnSendPartyGameInvitesComplete)
        pFnOnSendPartyGameInvitesComplete =
            (UFunction*)UObject::GObjObjects()->Data[28030];

    UOnlinePartyChatInterface_execOnSendPartyGameInvitesComplete_Parms
        OnSendPartyGameInvitesComplete_Parms;

    this->ProcessEvent(pFnOnSendPartyGameInvitesComplete,
                       &OnSendPartyGameInvitesComplete_Parms, NULL);
};

// Function Engine.OnlinePartyChatInterface.SendPartyGameInvites
// [0x00020000]
// Parameters infos:

void UOnlinePartyChatInterface::SendPartyGameInvites() {
    static UFunction* pFnSendPartyGameInvites = NULL;

    if (!pFnSendPartyGameInvites)
        pFnSendPartyGameInvites =
            (UFunction*)UObject::GObjObjects()->Data[28027];

    UOnlinePartyChatInterface_execSendPartyGameInvites_Parms
        SendPartyGameInvites_Parms;

    this->ProcessEvent(pFnSendPartyGameInvites, &SendPartyGameInvites_Parms,
                       NULL);
};

// Function Engine.OnlineNewsInterface.GetNews
// [0x00020000]
// Parameters infos:

void UOnlineNewsInterface::GetNews() {
    static UFunction* pFnGetNews = NULL;

    if (!pFnGetNews)
        pFnGetNews = (UFunction*)UObject::GObjObjects()->Data[28022];

    UOnlineNewsInterface_execGetNews_Parms GetNews_Parms;

    this->ProcessEvent(pFnGetNews, &GetNews_Parms, NULL);
};

// Function Engine.OnlineNewsInterface.ClearReadNewsCompletedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineNewsInterface::ClearReadNewsCompletedDelegate() {
    static UFunction* pFnClearReadNewsCompletedDelegate = NULL;

    if (!pFnClearReadNewsCompletedDelegate)
        pFnClearReadNewsCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28020];

    UOnlineNewsInterface_execClearReadNewsCompletedDelegate_Parms
        ClearReadNewsCompletedDelegate_Parms;

    this->ProcessEvent(pFnClearReadNewsCompletedDelegate,
                       &ClearReadNewsCompletedDelegate_Parms, NULL);
};

// Function Engine.OnlineNewsInterface.AddReadNewsCompletedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineNewsInterface::AddReadNewsCompletedDelegate() {
    static UFunction* pFnAddReadNewsCompletedDelegate = NULL;

    if (!pFnAddReadNewsCompletedDelegate)
        pFnAddReadNewsCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28018];

    UOnlineNewsInterface_execAddReadNewsCompletedDelegate_Parms
        AddReadNewsCompletedDelegate_Parms;

    this->ProcessEvent(pFnAddReadNewsCompletedDelegate,
                       &AddReadNewsCompletedDelegate_Parms, NULL);
};

// Function Engine.OnlineNewsInterface.OnReadNewsCompleted
// [0x00120000]
// Parameters infos:

void UOnlineNewsInterface::OnReadNewsCompleted() {
    static UFunction* pFnOnReadNewsCompleted = NULL;

    if (!pFnOnReadNewsCompleted)
        pFnOnReadNewsCompleted =
            (UFunction*)UObject::GObjObjects()->Data[28015];

    UOnlineNewsInterface_execOnReadNewsCompleted_Parms
        OnReadNewsCompleted_Parms;

    this->ProcessEvent(pFnOnReadNewsCompleted, &OnReadNewsCompleted_Parms,
                       NULL);
};

// Function Engine.OnlineNewsInterface.ReadNews
// [0x00020000]
// Parameters infos:

void UOnlineNewsInterface::ReadNews() {
    static UFunction* pFnReadNews = NULL;

    if (!pFnReadNews)
        pFnReadNews = (UFunction*)UObject::GObjObjects()->Data[28011];

    UOnlineNewsInterface_execReadNews_Parms ReadNews_Parms;

    this->ProcessEvent(pFnReadNews, &ReadNews_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.SendTestEvent
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::SendTestEvent() {
    static UFunction* pFnSendTestEvent = NULL;

    if (!pFnSendTestEvent)
        pFnSendTestEvent = (UFunction*)UObject::GObjObjects()->Data[29337];

    UOnlineStatsInterface_execSendTestEvent_Parms SendTestEvent_Parms;

    this->ProcessEvent(pFnSendTestEvent, &SendTestEvent_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.SendPlayerSessionResume
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::SendPlayerSessionResume() {
    static UFunction* pFnSendPlayerSessionResume = NULL;

    if (!pFnSendPlayerSessionResume)
        pFnSendPlayerSessionResume =
            (UFunction*)UObject::GObjObjects()->Data[29331];

    UOnlineStatsInterface_execSendPlayerSessionResume_Parms
        SendPlayerSessionResume_Parms;

    this->ProcessEvent(pFnSendPlayerSessionResume,
                       &SendPlayerSessionResume_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.SendPlayerSessionPause
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::SendPlayerSessionPause() {
    static UFunction* pFnSendPlayerSessionPause = NULL;

    if (!pFnSendPlayerSessionPause)
        pFnSendPlayerSessionPause =
            (UFunction*)UObject::GObjObjects()->Data[29327];

    UOnlineStatsInterface_execSendPlayerSessionPause_Parms
        SendPlayerSessionPause_Parms;

    this->ProcessEvent(pFnSendPlayerSessionPause, &SendPlayerSessionPause_Parms,
                       NULL);
};

// Function Engine.OnlineStatsInterface.SendPlayerSessionEnd
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::SendPlayerSessionEnd() {
    static UFunction* pFnSendPlayerSessionEnd = NULL;

    if (!pFnSendPlayerSessionEnd)
        pFnSendPlayerSessionEnd =
            (UFunction*)UObject::GObjObjects()->Data[29320];

    UOnlineStatsInterface_execSendPlayerSessionEnd_Parms
        SendPlayerSessionEnd_Parms;

    this->ProcessEvent(pFnSendPlayerSessionEnd, &SendPlayerSessionEnd_Parms,
                       NULL);
};

// Function Engine.OnlineStatsInterface.SendPlayerSessionStart
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::SendPlayerSessionStart() {
    static UFunction* pFnSendPlayerSessionStart = NULL;

    if (!pFnSendPlayerSessionStart)
        pFnSendPlayerSessionStart =
            (UFunction*)UObject::GObjObjects()->Data[29314];

    UOnlineStatsInterface_execSendPlayerSessionStart_Parms
        SendPlayerSessionStart_Parms;

    this->ProcessEvent(pFnSendPlayerSessionStart, &SendPlayerSessionStart_Parms,
                       NULL);
};

// Function Engine.OnlineStatsInterface.UnsubscribeToStatisticEvent
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::UnsubscribeToStatisticEvent() {
    static UFunction* pFnUnsubscribeToStatisticEvent = NULL;

    if (!pFnUnsubscribeToStatisticEvent)
        pFnUnsubscribeToStatisticEvent =
            (UFunction*)UObject::GObjObjects()->Data[29310];

    UOnlineStatsInterface_execUnsubscribeToStatisticEvent_Parms
        UnsubscribeToStatisticEvent_Parms;

    this->ProcessEvent(pFnUnsubscribeToStatisticEvent,
                       &UnsubscribeToStatisticEvent_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.SubscribeToStatisticEvent
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::SubscribeToStatisticEvent() {
    static UFunction* pFnSubscribeToStatisticEvent = NULL;

    if (!pFnSubscribeToStatisticEvent)
        pFnSubscribeToStatisticEvent =
            (UFunction*)UObject::GObjObjects()->Data[29305];

    UOnlineStatsInterface_execSubscribeToStatisticEvent_Parms
        SubscribeToStatisticEvent_Parms;

    this->ProcessEvent(pFnSubscribeToStatisticEvent,
                       &SubscribeToStatisticEvent_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.OnStatisticChanged
// [0x00120000]
// Parameters infos:

void UOnlineStatsInterface::OnStatisticChanged() {
    static UFunction* pFnOnStatisticChanged = NULL;

    if (!pFnOnStatisticChanged)
        pFnOnStatisticChanged = (UFunction*)UObject::GObjObjects()->Data[29301];

    UOnlineStatsInterface_execOnStatisticChanged_Parms OnStatisticChanged_Parms;

    this->ProcessEvent(pFnOnStatisticChanged, &OnStatisticChanged_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.CalcAggregateSkill
// [0x00420000]
// Parameters infos:

void UOnlineStatsInterface::CalcAggregateSkill() {
    static UFunction* pFnCalcAggregateSkill = NULL;

    if (!pFnCalcAggregateSkill)
        pFnCalcAggregateSkill = (UFunction*)UObject::GObjObjects()->Data[29294];

    UOnlineStatsInterface_execCalcAggregateSkill_Parms CalcAggregateSkill_Parms;

    this->ProcessEvent(pFnCalcAggregateSkill, &CalcAggregateSkill_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.RegisterStatGuid
// [0x00420000]
// Parameters infos:

void UOnlineStatsInterface::RegisterStatGuid() {
    static UFunction* pFnRegisterStatGuid = NULL;

    if (!pFnRegisterStatGuid)
        pFnRegisterStatGuid = (UFunction*)UObject::GObjObjects()->Data[12241];

    UOnlineStatsInterface_execRegisterStatGuid_Parms RegisterStatGuid_Parms;

    this->ProcessEvent(pFnRegisterStatGuid, &RegisterStatGuid_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.GetClientStatGuid
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::GetClientStatGuid() {
    static UFunction* pFnGetClientStatGuid = NULL;

    if (!pFnGetClientStatGuid)
        pFnGetClientStatGuid = (UFunction*)UObject::GObjObjects()->Data[12243];

    UOnlineStatsInterface_execGetClientStatGuid_Parms GetClientStatGuid_Parms;

    this->ProcessEvent(pFnGetClientStatGuid, &GetClientStatGuid_Parms, NULL);
};

// Function
// Engine.OnlineStatsInterface.ClearRegisterHostStatGuidCompleteDelegateDelegate
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::
    ClearRegisterHostStatGuidCompleteDelegateDelegate() {
    static UFunction* pFnClearRegisterHostStatGuidCompleteDelegateDelegate =
        NULL;

    if (!pFnClearRegisterHostStatGuidCompleteDelegateDelegate)
        pFnClearRegisterHostStatGuidCompleteDelegateDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29290];

    UOnlineStatsInterface_execClearRegisterHostStatGuidCompleteDelegateDelegate_Parms
        ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms;

    this->ProcessEvent(pFnClearRegisterHostStatGuidCompleteDelegateDelegate,
                       &ClearRegisterHostStatGuidCompleteDelegateDelegate_Parms,
                       NULL);
};

// Function Engine.OnlineStatsInterface.AddRegisterHostStatGuidCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::AddRegisterHostStatGuidCompleteDelegate() {
    static UFunction* pFnAddRegisterHostStatGuidCompleteDelegate = NULL;

    if (!pFnAddRegisterHostStatGuidCompleteDelegate)
        pFnAddRegisterHostStatGuidCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29288];

    UOnlineStatsInterface_execAddRegisterHostStatGuidCompleteDelegate_Parms
        AddRegisterHostStatGuidCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRegisterHostStatGuidCompleteDelegate,
                       &AddRegisterHostStatGuidCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.OnRegisterHostStatGuidComplete
// [0x00120000]
// Parameters infos:

void UOnlineStatsInterface::OnRegisterHostStatGuidComplete() {
    static UFunction* pFnOnRegisterHostStatGuidComplete = NULL;

    if (!pFnOnRegisterHostStatGuidComplete)
        pFnOnRegisterHostStatGuidComplete =
            (UFunction*)UObject::GObjObjects()->Data[29286];

    UOnlineStatsInterface_execOnRegisterHostStatGuidComplete_Parms
        OnRegisterHostStatGuidComplete_Parms;

    this->ProcessEvent(pFnOnRegisterHostStatGuidComplete,
                       &OnRegisterHostStatGuidComplete_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.RegisterHostStatGuid
// [0x00420000]
// Parameters infos:

void UOnlineStatsInterface::RegisterHostStatGuid() {
    static UFunction* pFnRegisterHostStatGuid = NULL;

    if (!pFnRegisterHostStatGuid)
        pFnRegisterHostStatGuid =
            (UFunction*)UObject::GObjObjects()->Data[12245];

    UOnlineStatsInterface_execRegisterHostStatGuid_Parms
        RegisterHostStatGuid_Parms;

    this->ProcessEvent(pFnRegisterHostStatGuid, &RegisterHostStatGuid_Parms,
                       NULL);
};

// Function Engine.OnlineStatsInterface.GetHostStatGuid
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::GetHostStatGuid() {
    static UFunction* pFnGetHostStatGuid = NULL;

    if (!pFnGetHostStatGuid)
        pFnGetHostStatGuid = (UFunction*)UObject::GObjObjects()->Data[21848];

    UOnlineStatsInterface_execGetHostStatGuid_Parms GetHostStatGuid_Parms;

    this->ProcessEvent(pFnGetHostStatGuid, &GetHostStatGuid_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.WriteOnlinePlayerScores
// [0x00420000]
// Parameters infos:

void UOnlineStatsInterface::WriteOnlinePlayerScores() {
    static UFunction* pFnWriteOnlinePlayerScores = NULL;

    if (!pFnWriteOnlinePlayerScores)
        pFnWriteOnlinePlayerScores =
            (UFunction*)UObject::GObjObjects()->Data[12270];

    UOnlineStatsInterface_execWriteOnlinePlayerScores_Parms
        WriteOnlinePlayerScores_Parms;

    this->ProcessEvent(pFnWriteOnlinePlayerScores,
                       &WriteOnlinePlayerScores_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.ClearFlushOnlineStatsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::ClearFlushOnlineStatsCompleteDelegate() {
    static UFunction* pFnClearFlushOnlineStatsCompleteDelegate = NULL;

    if (!pFnClearFlushOnlineStatsCompleteDelegate)
        pFnClearFlushOnlineStatsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29279];

    UOnlineStatsInterface_execClearFlushOnlineStatsCompleteDelegate_Parms
        ClearFlushOnlineStatsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearFlushOnlineStatsCompleteDelegate,
                       &ClearFlushOnlineStatsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.AddFlushOnlineStatsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::AddFlushOnlineStatsCompleteDelegate() {
    static UFunction* pFnAddFlushOnlineStatsCompleteDelegate = NULL;

    if (!pFnAddFlushOnlineStatsCompleteDelegate)
        pFnAddFlushOnlineStatsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29277];

    UOnlineStatsInterface_execAddFlushOnlineStatsCompleteDelegate_Parms
        AddFlushOnlineStatsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddFlushOnlineStatsCompleteDelegate,
                       &AddFlushOnlineStatsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.OnFlushOnlineStatsComplete
// [0x00120000]
// Parameters infos:

void UOnlineStatsInterface::OnFlushOnlineStatsComplete() {
    static UFunction* pFnOnFlushOnlineStatsComplete = NULL;

    if (!pFnOnFlushOnlineStatsComplete)
        pFnOnFlushOnlineStatsComplete =
            (UFunction*)UObject::GObjObjects()->Data[29274];

    UOnlineStatsInterface_execOnFlushOnlineStatsComplete_Parms
        OnFlushOnlineStatsComplete_Parms;

    this->ProcessEvent(pFnOnFlushOnlineStatsComplete,
                       &OnFlushOnlineStatsComplete_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.FlushOnlineStats
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::FlushOnlineStats() {
    static UFunction* pFnFlushOnlineStats = NULL;

    if (!pFnFlushOnlineStats)
        pFnFlushOnlineStats = (UFunction*)UObject::GObjObjects()->Data[29271];

    UOnlineStatsInterface_execFlushOnlineStats_Parms FlushOnlineStats_Parms;

    this->ProcessEvent(pFnFlushOnlineStats, &FlushOnlineStats_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.WriteOnlineStats
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::WriteOnlineStats() {
    static UFunction* pFnWriteOnlineStats = NULL;

    if (!pFnWriteOnlineStats)
        pFnWriteOnlineStats = (UFunction*)UObject::GObjObjects()->Data[29266];

    UOnlineStatsInterface_execWriteOnlineStats_Parms WriteOnlineStats_Parms;

    this->ProcessEvent(pFnWriteOnlineStats, &WriteOnlineStats_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.FreeStats
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::FreeStats() {
    static UFunction* pFnFreeStats = NULL;

    if (!pFnFreeStats)
        pFnFreeStats = (UFunction*)UObject::GObjObjects()->Data[29264];

    UOnlineStatsInterface_execFreeStats_Parms FreeStats_Parms;

    this->ProcessEvent(pFnFreeStats, &FreeStats_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.ClearReadOnlineStatsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::ClearReadOnlineStatsCompleteDelegate() {
    static UFunction* pFnClearReadOnlineStatsCompleteDelegate = NULL;

    if (!pFnClearReadOnlineStatsCompleteDelegate)
        pFnClearReadOnlineStatsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29262];

    UOnlineStatsInterface_execClearReadOnlineStatsCompleteDelegate_Parms
        ClearReadOnlineStatsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadOnlineStatsCompleteDelegate,
                       &ClearReadOnlineStatsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.AddReadOnlineStatsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::AddReadOnlineStatsCompleteDelegate() {
    static UFunction* pFnAddReadOnlineStatsCompleteDelegate = NULL;

    if (!pFnAddReadOnlineStatsCompleteDelegate)
        pFnAddReadOnlineStatsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29260];

    UOnlineStatsInterface_execAddReadOnlineStatsCompleteDelegate_Parms
        AddReadOnlineStatsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadOnlineStatsCompleteDelegate,
                       &AddReadOnlineStatsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.OnReadOnlineStatsComplete
// [0x00120000]
// Parameters infos:

void UOnlineStatsInterface::OnReadOnlineStatsComplete() {
    static UFunction* pFnOnReadOnlineStatsComplete = NULL;

    if (!pFnOnReadOnlineStatsComplete)
        pFnOnReadOnlineStatsComplete =
            (UFunction*)UObject::GObjObjects()->Data[29258];

    UOnlineStatsInterface_execOnReadOnlineStatsComplete_Parms
        OnReadOnlineStatsComplete_Parms;

    this->ProcessEvent(pFnOnReadOnlineStatsComplete,
                       &OnReadOnlineStatsComplete_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.ReadOnlineStatsByRankAroundPlayer
// [0x00024000]
// Parameters infos:

void UOnlineStatsInterface::ReadOnlineStatsByRankAroundPlayer() {
    static UFunction* pFnReadOnlineStatsByRankAroundPlayer = NULL;

    if (!pFnReadOnlineStatsByRankAroundPlayer)
        pFnReadOnlineStatsByRankAroundPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29253];

    UOnlineStatsInterface_execReadOnlineStatsByRankAroundPlayer_Parms
        ReadOnlineStatsByRankAroundPlayer_Parms;

    this->ProcessEvent(pFnReadOnlineStatsByRankAroundPlayer,
                       &ReadOnlineStatsByRankAroundPlayer_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.ReadOnlineStatsByRank
// [0x00024000]
// Parameters infos:

void UOnlineStatsInterface::ReadOnlineStatsByRank() {
    static UFunction* pFnReadOnlineStatsByRank = NULL;

    if (!pFnReadOnlineStatsByRank)
        pFnReadOnlineStatsByRank =
            (UFunction*)UObject::GObjObjects()->Data[29247];

    UOnlineStatsInterface_execReadOnlineStatsByRank_Parms
        ReadOnlineStatsByRank_Parms;

    this->ProcessEvent(pFnReadOnlineStatsByRank, &ReadOnlineStatsByRank_Parms,
                       NULL);
};

// Function Engine.OnlineStatsInterface.ReadOnlineStatsForFriends
// [0x00024000]
// Parameters infos:

void UOnlineStatsInterface::ReadOnlineStatsForFriends() {
    static UFunction* pFnReadOnlineStatsForFriends = NULL;

    if (!pFnReadOnlineStatsForFriends)
        pFnReadOnlineStatsForFriends =
            (UFunction*)UObject::GObjObjects()->Data[29241];

    UOnlineStatsInterface_execReadOnlineStatsForFriends_Parms
        ReadOnlineStatsForFriends_Parms;

    this->ProcessEvent(pFnReadOnlineStatsForFriends,
                       &ReadOnlineStatsForFriends_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.ReadOnlineStats
// [0x00420000]
// Parameters infos:

void UOnlineStatsInterface::ReadOnlineStats() {
    static UFunction* pFnReadOnlineStats = NULL;

    if (!pFnReadOnlineStats)
        pFnReadOnlineStats = (UFunction*)UObject::GObjObjects()->Data[29235];

    UOnlineStatsInterface_execReadOnlineStats_Parms ReadOnlineStats_Parms;

    this->ProcessEvent(pFnReadOnlineStats, &ReadOnlineStats_Parms, NULL);
};

// Function Engine.OnlineStatsInterface.ReadOnlineStatsForPlayer
// [0x00020000]
// Parameters infos:

void UOnlineStatsInterface::ReadOnlineStatsForPlayer() {
    static UFunction* pFnReadOnlineStatsForPlayer = NULL;

    if (!pFnReadOnlineStatsForPlayer)
        pFnReadOnlineStatsForPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29231];

    UOnlineStatsInterface_execReadOnlineStatsForPlayer_Parms
        ReadOnlineStatsForPlayer_Parms;

    this->ProcessEvent(pFnReadOnlineStatsForPlayer,
                       &ReadOnlineStatsForPlayer_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.UnmuteAll
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::UnmuteAll() {
    static UFunction* pFnUnmuteAll = NULL;

    if (!pFnUnmuteAll)
        pFnUnmuteAll = (UFunction*)UObject::GObjObjects()->Data[29649];

    UOnlineVoiceInterface_execUnmuteAll_Parms UnmuteAll_Parms;

    this->ProcessEvent(pFnUnmuteAll, &UnmuteAll_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.MuteAll
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::MuteAll() {
    static UFunction* pFnMuteAll = NULL;

    if (!pFnMuteAll)
        pFnMuteAll = (UFunction*)UObject::GObjObjects()->Data[29645];

    UOnlineVoiceInterface_execMuteAll_Parms MuteAll_Parms;

    this->ProcessEvent(pFnMuteAll, &MuteAll_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.SetSpeechRecognitionObject
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::SetSpeechRecognitionObject() {
    static UFunction* pFnSetSpeechRecognitionObject = NULL;

    if (!pFnSetSpeechRecognitionObject)
        pFnSetSpeechRecognitionObject =
            (UFunction*)UObject::GObjObjects()->Data[29641];

    UOnlineVoiceInterface_execSetSpeechRecognitionObject_Parms
        SetSpeechRecognitionObject_Parms;

    this->ProcessEvent(pFnSetSpeechRecognitionObject,
                       &SetSpeechRecognitionObject_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.SelectVocabulary
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::SelectVocabulary() {
    static UFunction* pFnSelectVocabulary = NULL;

    if (!pFnSelectVocabulary)
        pFnSelectVocabulary = (UFunction*)UObject::GObjObjects()->Data[29637];

    UOnlineVoiceInterface_execSelectVocabulary_Parms SelectVocabulary_Parms;

    this->ProcessEvent(pFnSelectVocabulary, &SelectVocabulary_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.ClearRecognitionCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::ClearRecognitionCompleteDelegate() {
    static UFunction* pFnClearRecognitionCompleteDelegate = NULL;

    if (!pFnClearRecognitionCompleteDelegate)
        pFnClearRecognitionCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29634];

    UOnlineVoiceInterface_execClearRecognitionCompleteDelegate_Parms
        ClearRecognitionCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRecognitionCompleteDelegate,
                       &ClearRecognitionCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.AddRecognitionCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::AddRecognitionCompleteDelegate() {
    static UFunction* pFnAddRecognitionCompleteDelegate = NULL;

    if (!pFnAddRecognitionCompleteDelegate)
        pFnAddRecognitionCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29631];

    UOnlineVoiceInterface_execAddRecognitionCompleteDelegate_Parms
        AddRecognitionCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRecognitionCompleteDelegate,
                       &AddRecognitionCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.OnRecognitionComplete
// [0x00120000]
// Parameters infos:

void UOnlineVoiceInterface::OnRecognitionComplete() {
    static UFunction* pFnOnRecognitionComplete = NULL;

    if (!pFnOnRecognitionComplete)
        pFnOnRecognitionComplete =
            (UFunction*)UObject::GObjObjects()->Data[29630];

    UOnlineVoiceInterface_execOnRecognitionComplete_Parms
        OnRecognitionComplete_Parms;

    this->ProcessEvent(pFnOnRecognitionComplete, &OnRecognitionComplete_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.GetRecognitionResults
// [0x00420000]
// Parameters infos:

void UOnlineVoiceInterface::GetRecognitionResults() {
    static UFunction* pFnGetRecognitionResults = NULL;

    if (!pFnGetRecognitionResults)
        pFnGetRecognitionResults =
            (UFunction*)UObject::GObjObjects()->Data[29625];

    UOnlineVoiceInterface_execGetRecognitionResults_Parms
        GetRecognitionResults_Parms;

    this->ProcessEvent(pFnGetRecognitionResults, &GetRecognitionResults_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.StopSpeechRecognition
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::StopSpeechRecognition() {
    static UFunction* pFnStopSpeechRecognition = NULL;

    if (!pFnStopSpeechRecognition)
        pFnStopSpeechRecognition =
            (UFunction*)UObject::GObjObjects()->Data[29622];

    UOnlineVoiceInterface_execStopSpeechRecognition_Parms
        StopSpeechRecognition_Parms;

    this->ProcessEvent(pFnStopSpeechRecognition, &StopSpeechRecognition_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.StartSpeechRecognition
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::StartSpeechRecognition() {
    static UFunction* pFnStartSpeechRecognition = NULL;

    if (!pFnStartSpeechRecognition)
        pFnStartSpeechRecognition =
            (UFunction*)UObject::GObjObjects()->Data[29619];

    UOnlineVoiceInterface_execStartSpeechRecognition_Parms
        StartSpeechRecognition_Parms;

    this->ProcessEvent(pFnStartSpeechRecognition, &StartSpeechRecognition_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.StopNetworkedVoice
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::StopNetworkedVoice() {
    static UFunction* pFnStopNetworkedVoice = NULL;

    if (!pFnStopNetworkedVoice)
        pFnStopNetworkedVoice = (UFunction*)UObject::GObjObjects()->Data[29617];

    UOnlineVoiceInterface_execStopNetworkedVoice_Parms StopNetworkedVoice_Parms;

    this->ProcessEvent(pFnStopNetworkedVoice, &StopNetworkedVoice_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.StartNetworkedVoice
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::StartNetworkedVoice() {
    static UFunction* pFnStartNetworkedVoice = NULL;

    if (!pFnStartNetworkedVoice)
        pFnStartNetworkedVoice =
            (UFunction*)UObject::GObjObjects()->Data[29615];

    UOnlineVoiceInterface_execStartNetworkedVoice_Parms
        StartNetworkedVoice_Parms;

    this->ProcessEvent(pFnStartNetworkedVoice, &StartNetworkedVoice_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.ClearPlayerTalkingDelegate
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::ClearPlayerTalkingDelegate() {
    static UFunction* pFnClearPlayerTalkingDelegate = NULL;

    if (!pFnClearPlayerTalkingDelegate)
        pFnClearPlayerTalkingDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29613];

    UOnlineVoiceInterface_execClearPlayerTalkingDelegate_Parms
        ClearPlayerTalkingDelegate_Parms;

    this->ProcessEvent(pFnClearPlayerTalkingDelegate,
                       &ClearPlayerTalkingDelegate_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.AddPlayerTalkingDelegate
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::AddPlayerTalkingDelegate() {
    static UFunction* pFnAddPlayerTalkingDelegate = NULL;

    if (!pFnAddPlayerTalkingDelegate)
        pFnAddPlayerTalkingDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29611];

    UOnlineVoiceInterface_execAddPlayerTalkingDelegate_Parms
        AddPlayerTalkingDelegate_Parms;

    this->ProcessEvent(pFnAddPlayerTalkingDelegate,
                       &AddPlayerTalkingDelegate_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.OnPlayerTalkingStateChange
// [0x00120000]
// Parameters infos:

void UOnlineVoiceInterface::OnPlayerTalkingStateChange() {
    static UFunction* pFnOnPlayerTalkingStateChange = NULL;

    if (!pFnOnPlayerTalkingStateChange)
        pFnOnPlayerTalkingStateChange =
            (UFunction*)UObject::GObjObjects()->Data[29608];

    UOnlineVoiceInterface_execOnPlayerTalkingStateChange_Parms
        OnPlayerTalkingStateChange_Parms;

    this->ProcessEvent(pFnOnPlayerTalkingStateChange,
                       &OnPlayerTalkingStateChange_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.IsTalkerMuted
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::IsTalkerMuted() {
    static UFunction* pFnIsTalkerMuted = NULL;

    if (!pFnIsTalkerMuted)
        pFnIsTalkerMuted = (UFunction*)UObject::GObjObjects()->Data[29605];

    UOnlineVoiceInterface_execIsTalkerMuted_Parms IsTalkerMuted_Parms;

    this->ProcessEvent(pFnIsTalkerMuted, &IsTalkerMuted_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.UnmuteRemoteTalker
// [0x00024000]
// Parameters infos:

void UOnlineVoiceInterface::UnmuteRemoteTalker() {
    static UFunction* pFnUnmuteRemoteTalker = NULL;

    if (!pFnUnmuteRemoteTalker)
        pFnUnmuteRemoteTalker = (UFunction*)UObject::GObjObjects()->Data[12285];

    UOnlineVoiceInterface_execUnmuteRemoteTalker_Parms UnmuteRemoteTalker_Parms;

    this->ProcessEvent(pFnUnmuteRemoteTalker, &UnmuteRemoteTalker_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.MuteRemoteTalker
// [0x00024000]
// Parameters infos:

void UOnlineVoiceInterface::MuteRemoteTalker() {
    static UFunction* pFnMuteRemoteTalker = NULL;

    if (!pFnMuteRemoteTalker)
        pFnMuteRemoteTalker = (UFunction*)UObject::GObjObjects()->Data[12287];

    UOnlineVoiceInterface_execMuteRemoteTalker_Parms MuteRemoteTalker_Parms;

    this->ProcessEvent(pFnMuteRemoteTalker, &MuteRemoteTalker_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.UpdatePlayerMuteSetting
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::UpdatePlayerMuteSetting() {
    static UFunction* pFnUpdatePlayerMuteSetting = NULL;

    if (!pFnUpdatePlayerMuteSetting)
        pFnUpdatePlayerMuteSetting =
            (UFunction*)UObject::GObjObjects()->Data[29596];

    UOnlineVoiceInterface_execUpdatePlayerMuteSetting_Parms
        UpdatePlayerMuteSetting_Parms;

    this->ProcessEvent(pFnUpdatePlayerMuteSetting,
                       &UpdatePlayerMuteSetting_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.SetRemoteTalkerPriority
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::SetRemoteTalkerPriority() {
    static UFunction* pFnSetRemoteTalkerPriority = NULL;

    if (!pFnSetRemoteTalkerPriority)
        pFnSetRemoteTalkerPriority =
            (UFunction*)UObject::GObjObjects()->Data[29591];

    UOnlineVoiceInterface_execSetRemoteTalkerPriority_Parms
        SetRemoteTalkerPriority_Parms;

    this->ProcessEvent(pFnSetRemoteTalkerPriority,
                       &SetRemoteTalkerPriority_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.IsHeadsetPresent
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::IsHeadsetPresent() {
    static UFunction* pFnIsHeadsetPresent = NULL;

    if (!pFnIsHeadsetPresent)
        pFnIsHeadsetPresent = (UFunction*)UObject::GObjObjects()->Data[29588];

    UOnlineVoiceInterface_execIsHeadsetPresent_Parms IsHeadsetPresent_Parms;

    this->ProcessEvent(pFnIsHeadsetPresent, &IsHeadsetPresent_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.IsRemotePlayerTalking
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::IsRemotePlayerTalking() {
    static UFunction* pFnIsRemotePlayerTalking = NULL;

    if (!pFnIsRemotePlayerTalking)
        pFnIsRemotePlayerTalking =
            (UFunction*)UObject::GObjObjects()->Data[29585];

    UOnlineVoiceInterface_execIsRemotePlayerTalking_Parms
        IsRemotePlayerTalking_Parms;

    this->ProcessEvent(pFnIsRemotePlayerTalking, &IsRemotePlayerTalking_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.IsLocalPlayerTalking
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::IsLocalPlayerTalking() {
    static UFunction* pFnIsLocalPlayerTalking = NULL;

    if (!pFnIsLocalPlayerTalking)
        pFnIsLocalPlayerTalking =
            (UFunction*)UObject::GObjObjects()->Data[29582];

    UOnlineVoiceInterface_execIsLocalPlayerTalking_Parms
        IsLocalPlayerTalking_Parms;

    this->ProcessEvent(pFnIsLocalPlayerTalking, &IsLocalPlayerTalking_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.UnregisterRemoteTalker
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::UnregisterRemoteTalker() {
    static UFunction* pFnUnregisterRemoteTalker = NULL;

    if (!pFnUnregisterRemoteTalker)
        pFnUnregisterRemoteTalker =
            (UFunction*)UObject::GObjObjects()->Data[29579];

    UOnlineVoiceInterface_execUnregisterRemoteTalker_Parms
        UnregisterRemoteTalker_Parms;

    this->ProcessEvent(pFnUnregisterRemoteTalker, &UnregisterRemoteTalker_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.RegisterRemoteTalker
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::RegisterRemoteTalker() {
    static UFunction* pFnRegisterRemoteTalker = NULL;

    if (!pFnRegisterRemoteTalker)
        pFnRegisterRemoteTalker =
            (UFunction*)UObject::GObjObjects()->Data[29576];

    UOnlineVoiceInterface_execRegisterRemoteTalker_Parms
        RegisterRemoteTalker_Parms;

    this->ProcessEvent(pFnRegisterRemoteTalker, &RegisterRemoteTalker_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.ReceiveReliableVoicePacket
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::ReceiveReliableVoicePacket() {
    static UFunction* pFnReceiveReliableVoicePacket = NULL;

    if (!pFnReceiveReliableVoicePacket)
        pFnReceiveReliableVoicePacket =
            (UFunction*)UObject::GObjObjects()->Data[29571];

    UOnlineVoiceInterface_execReceiveReliableVoicePacket_Parms
        ReceiveReliableVoicePacket_Parms;

    this->ProcessEvent(pFnReceiveReliableVoicePacket,
                       &ReceiveReliableVoicePacket_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.AreAnyLocalTalkersRegistered
// [0x00020000]
// Parameters infos:

void UOnlineVoiceInterface::AreAnyLocalTalkersRegistered() {
    static UFunction* pFnAreAnyLocalTalkersRegistered = NULL;

    if (!pFnAreAnyLocalTalkersRegistered)
        pFnAreAnyLocalTalkersRegistered =
            (UFunction*)UObject::GObjObjects()->Data[29569];

    UOnlineVoiceInterface_execAreAnyLocalTalkersRegistered_Parms
        AreAnyLocalTalkersRegistered_Parms;

    this->ProcessEvent(pFnAreAnyLocalTalkersRegistered,
                       &AreAnyLocalTalkersRegistered_Parms, NULL);
};

// Function Engine.OnlineVoiceInterface.UnregisterLocalTalker
// [0x00024000]
// Parameters infos:

void UOnlineVoiceInterface::UnregisterLocalTalker() {
    static UFunction* pFnUnregisterLocalTalker = NULL;

    if (!pFnUnregisterLocalTalker)
        pFnUnregisterLocalTalker =
            (UFunction*)UObject::GObjObjects()->Data[29565];

    UOnlineVoiceInterface_execUnregisterLocalTalker_Parms
        UnregisterLocalTalker_Parms;

    this->ProcessEvent(pFnUnregisterLocalTalker, &UnregisterLocalTalker_Parms,
                       NULL);
};

// Function Engine.OnlineVoiceInterface.RegisterLocalTalker
// [0x00024000]
// Parameters infos:

void UOnlineVoiceInterface::RegisterLocalTalker() {
    static UFunction* pFnRegisterLocalTalker = NULL;

    if (!pFnRegisterLocalTalker)
        pFnRegisterLocalTalker =
            (UFunction*)UObject::GObjObjects()->Data[29561];

    UOnlineVoiceInterface_execRegisterLocalTalker_Parms
        RegisterLocalTalker_Parms;

    this->ProcessEvent(pFnRegisterLocalTalker, &RegisterLocalTalker_Parms,
                       NULL);
};

// Function Engine.OnlineContentInterface.GetDownloadableContentList
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::GetDownloadableContentList() {
    static UFunction* pFnGetDownloadableContentList = NULL;

    if (!pFnGetDownloadableContentList)
        pFnGetDownloadableContentList =
            (UFunction*)UObject::GObjObjects()->Data[27388];

    UOnlineContentInterface_execGetDownloadableContentList_Parms
        GetDownloadableContentList_Parms;

    this->ProcessEvent(pFnGetDownloadableContentList,
                       &GetDownloadableContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearDownloadableContentList
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearDownloadableContentList() {
    static UFunction* pFnClearDownloadableContentList = NULL;

    if (!pFnClearDownloadableContentList)
        pFnClearDownloadableContentList =
            (UFunction*)UObject::GObjObjects()->Data[27386];

    UOnlineContentInterface_execClearDownloadableContentList_Parms
        ClearDownloadableContentList_Parms;

    this->ProcessEvent(pFnClearDownloadableContentList,
                       &ClearDownloadableContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ReadDownloadableContentList
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ReadDownloadableContentList() {
    static UFunction* pFnReadDownloadableContentList = NULL;

    if (!pFnReadDownloadableContentList)
        pFnReadDownloadableContentList =
            (UFunction*)UObject::GObjObjects()->Data[27383];

    UOnlineContentInterface_execReadDownloadableContentList_Parms
        ReadDownloadableContentList_Parms;

    this->ProcessEvent(pFnReadDownloadableContentList,
                       &ReadDownloadableContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearSaveGames
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearSaveGames() {
    static UFunction* pFnClearSaveGames = NULL;

    if (!pFnClearSaveGames)
        pFnClearSaveGames = (UFunction*)UObject::GObjObjects()->Data[27380];

    UOnlineContentInterface_execClearSaveGames_Parms ClearSaveGames_Parms;

    this->ProcessEvent(pFnClearSaveGames, &ClearSaveGames_Parms, NULL);
};

// Function Engine.OnlineContentInterface.DeleteSaveGame
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::DeleteSaveGame() {
    static UFunction* pFnDeleteSaveGame = NULL;

    if (!pFnDeleteSaveGame)
        pFnDeleteSaveGame = (UFunction*)UObject::GObjObjects()->Data[27374];

    UOnlineContentInterface_execDeleteSaveGame_Parms DeleteSaveGame_Parms;

    this->ProcessEvent(pFnDeleteSaveGame, &DeleteSaveGame_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearWriteSaveGameDataComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearWriteSaveGameDataComplete() {
    static UFunction* pFnClearWriteSaveGameDataComplete = NULL;

    if (!pFnClearWriteSaveGameDataComplete)
        pFnClearWriteSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27371];

    UOnlineContentInterface_execClearWriteSaveGameDataComplete_Parms
        ClearWriteSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnClearWriteSaveGameDataComplete,
                       &ClearWriteSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.AddWriteSaveGameDataComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::AddWriteSaveGameDataComplete() {
    static UFunction* pFnAddWriteSaveGameDataComplete = NULL;

    if (!pFnAddWriteSaveGameDataComplete)
        pFnAddWriteSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27368];

    UOnlineContentInterface_execAddWriteSaveGameDataComplete_Parms
        AddWriteSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnAddWriteSaveGameDataComplete,
                       &AddWriteSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.OnWriteSaveGameDataComplete
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnWriteSaveGameDataComplete() {
    static UFunction* pFnOnWriteSaveGameDataComplete = NULL;

    if (!pFnOnWriteSaveGameDataComplete)
        pFnOnWriteSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27361];

    UOnlineContentInterface_execOnWriteSaveGameDataComplete_Parms
        OnWriteSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnOnWriteSaveGameDataComplete,
                       &OnWriteSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.WriteSaveGameData
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::WriteSaveGameData() {
    static UFunction* pFnWriteSaveGameData = NULL;

    if (!pFnWriteSaveGameData)
        pFnWriteSaveGameData = (UFunction*)UObject::GObjObjects()->Data[27352];

    UOnlineContentInterface_execWriteSaveGameData_Parms WriteSaveGameData_Parms;

    this->ProcessEvent(pFnWriteSaveGameData, &WriteSaveGameData_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearReadSaveGameDataComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearReadSaveGameDataComplete() {
    static UFunction* pFnClearReadSaveGameDataComplete = NULL;

    if (!pFnClearReadSaveGameDataComplete)
        pFnClearReadSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27349];

    UOnlineContentInterface_execClearReadSaveGameDataComplete_Parms
        ClearReadSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnClearReadSaveGameDataComplete,
                       &ClearReadSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.AddReadSaveGameDataComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::AddReadSaveGameDataComplete() {
    static UFunction* pFnAddReadSaveGameDataComplete = NULL;

    if (!pFnAddReadSaveGameDataComplete)
        pFnAddReadSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27346];

    UOnlineContentInterface_execAddReadSaveGameDataComplete_Parms
        AddReadSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnAddReadSaveGameDataComplete,
                       &AddReadSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.OnReadSaveGameDataComplete
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnReadSaveGameDataComplete() {
    static UFunction* pFnOnReadSaveGameDataComplete = NULL;

    if (!pFnOnReadSaveGameDataComplete)
        pFnOnReadSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27339];

    UOnlineContentInterface_execOnReadSaveGameDataComplete_Parms
        OnReadSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnOnReadSaveGameDataComplete,
                       &OnReadSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.GetSaveGameData
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::GetSaveGameData() {
    static UFunction* pFnGetSaveGameData = NULL;

    if (!pFnGetSaveGameData)
        pFnGetSaveGameData = (UFunction*)UObject::GObjObjects()->Data[27329];

    UOnlineContentInterface_execGetSaveGameData_Parms GetSaveGameData_Parms;

    this->ProcessEvent(pFnGetSaveGameData, &GetSaveGameData_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ReadSaveGameData
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ReadSaveGameData() {
    static UFunction* pFnReadSaveGameData = NULL;

    if (!pFnReadSaveGameData)
        pFnReadSaveGameData = (UFunction*)UObject::GObjObjects()->Data[27322];

    UOnlineContentInterface_execReadSaveGameData_Parms ReadSaveGameData_Parms;

    this->ProcessEvent(pFnReadSaveGameData, &ReadSaveGameData_Parms, NULL);
};

// Function Engine.OnlineContentInterface.GetAvailableDownloadCounts
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::GetAvailableDownloadCounts() {
    static UFunction* pFnGetAvailableDownloadCounts = NULL;

    if (!pFnGetAvailableDownloadCounts)
        pFnGetAvailableDownloadCounts =
            (UFunction*)UObject::GObjObjects()->Data[27318];

    UOnlineContentInterface_execGetAvailableDownloadCounts_Parms
        GetAvailableDownloadCounts_Parms;

    this->ProcessEvent(pFnGetAvailableDownloadCounts,
                       &GetAvailableDownloadCounts_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearQueryAvailableDownloadsComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearQueryAvailableDownloadsComplete() {
    static UFunction* pFnClearQueryAvailableDownloadsComplete = NULL;

    if (!pFnClearQueryAvailableDownloadsComplete)
        pFnClearQueryAvailableDownloadsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27315];

    UOnlineContentInterface_execClearQueryAvailableDownloadsComplete_Parms
        ClearQueryAvailableDownloadsComplete_Parms;

    this->ProcessEvent(pFnClearQueryAvailableDownloadsComplete,
                       &ClearQueryAvailableDownloadsComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.AddQueryAvailableDownloadsComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::AddQueryAvailableDownloadsComplete() {
    static UFunction* pFnAddQueryAvailableDownloadsComplete = NULL;

    if (!pFnAddQueryAvailableDownloadsComplete)
        pFnAddQueryAvailableDownloadsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27312];

    UOnlineContentInterface_execAddQueryAvailableDownloadsComplete_Parms
        AddQueryAvailableDownloadsComplete_Parms;

    this->ProcessEvent(pFnAddQueryAvailableDownloadsComplete,
                       &AddQueryAvailableDownloadsComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.OnQueryAvailableDownloadsComplete
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnQueryAvailableDownloadsComplete() {
    static UFunction* pFnOnQueryAvailableDownloadsComplete = NULL;

    if (!pFnOnQueryAvailableDownloadsComplete)
        pFnOnQueryAvailableDownloadsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27310];

    UOnlineContentInterface_execOnQueryAvailableDownloadsComplete_Parms
        OnQueryAvailableDownloadsComplete_Parms;

    this->ProcessEvent(pFnOnQueryAvailableDownloadsComplete,
                       &OnQueryAvailableDownloadsComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.QueryAvailableDownloads
// [0x00024000]
// Parameters infos:

void UOnlineContentInterface::QueryAvailableDownloads() {
    static UFunction* pFnQueryAvailableDownloads = NULL;

    if (!pFnQueryAvailableDownloads)
        pFnQueryAvailableDownloads =
            (UFunction*)UObject::GObjObjects()->Data[27306];

    UOnlineContentInterface_execQueryAvailableDownloads_Parms
        QueryAvailableDownloads_Parms;

    this->ProcessEvent(pFnQueryAvailableDownloads,
                       &QueryAvailableDownloads_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearCrossTitleSaveGames
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearCrossTitleSaveGames() {
    static UFunction* pFnClearCrossTitleSaveGames = NULL;

    if (!pFnClearCrossTitleSaveGames)
        pFnClearCrossTitleSaveGames =
            (UFunction*)UObject::GObjObjects()->Data[27303];

    UOnlineContentInterface_execClearCrossTitleSaveGames_Parms
        ClearCrossTitleSaveGames_Parms;

    this->ProcessEvent(pFnClearCrossTitleSaveGames,
                       &ClearCrossTitleSaveGames_Parms, NULL);
};

// Function
// Engine.OnlineContentInterface.ClearReadCrossTitleSaveGameDataComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearReadCrossTitleSaveGameDataComplete() {
    static UFunction* pFnClearReadCrossTitleSaveGameDataComplete = NULL;

    if (!pFnClearReadCrossTitleSaveGameDataComplete)
        pFnClearReadCrossTitleSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27300];

    UOnlineContentInterface_execClearReadCrossTitleSaveGameDataComplete_Parms
        ClearReadCrossTitleSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnClearReadCrossTitleSaveGameDataComplete,
                       &ClearReadCrossTitleSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.AddReadCrossTitleSaveGameDataComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::AddReadCrossTitleSaveGameDataComplete() {
    static UFunction* pFnAddReadCrossTitleSaveGameDataComplete = NULL;

    if (!pFnAddReadCrossTitleSaveGameDataComplete)
        pFnAddReadCrossTitleSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27297];

    UOnlineContentInterface_execAddReadCrossTitleSaveGameDataComplete_Parms
        AddReadCrossTitleSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnAddReadCrossTitleSaveGameDataComplete,
                       &AddReadCrossTitleSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.OnReadCrossTitleSaveGameDataComplete
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnReadCrossTitleSaveGameDataComplete() {
    static UFunction* pFnOnReadCrossTitleSaveGameDataComplete = NULL;

    if (!pFnOnReadCrossTitleSaveGameDataComplete)
        pFnOnReadCrossTitleSaveGameDataComplete =
            (UFunction*)UObject::GObjObjects()->Data[27289];

    UOnlineContentInterface_execOnReadCrossTitleSaveGameDataComplete_Parms
        OnReadCrossTitleSaveGameDataComplete_Parms;

    this->ProcessEvent(pFnOnReadCrossTitleSaveGameDataComplete,
                       &OnReadCrossTitleSaveGameDataComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.GetCrossTitleSaveGameData
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::GetCrossTitleSaveGameData() {
    static UFunction* pFnGetCrossTitleSaveGameData = NULL;

    if (!pFnGetCrossTitleSaveGameData)
        pFnGetCrossTitleSaveGameData =
            (UFunction*)UObject::GObjObjects()->Data[27278];

    UOnlineContentInterface_execGetCrossTitleSaveGameData_Parms
        GetCrossTitleSaveGameData_Parms;

    this->ProcessEvent(pFnGetCrossTitleSaveGameData,
                       &GetCrossTitleSaveGameData_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ReadCrossTitleSaveGameData
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ReadCrossTitleSaveGameData() {
    static UFunction* pFnReadCrossTitleSaveGameData = NULL;

    if (!pFnReadCrossTitleSaveGameData)
        pFnReadCrossTitleSaveGameData =
            (UFunction*)UObject::GObjObjects()->Data[27270];

    UOnlineContentInterface_execReadCrossTitleSaveGameData_Parms
        ReadCrossTitleSaveGameData_Parms;

    this->ProcessEvent(pFnReadCrossTitleSaveGameData,
                       &ReadCrossTitleSaveGameData_Parms, NULL);
};

// Function
// Engine.OnlineContentInterface.ClearReadCrossTitleContentCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearReadCrossTitleContentCompleteDelegate() {
    static UFunction* pFnClearReadCrossTitleContentCompleteDelegate = NULL;

    if (!pFnClearReadCrossTitleContentCompleteDelegate)
        pFnClearReadCrossTitleContentCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27266];

    UOnlineContentInterface_execClearReadCrossTitleContentCompleteDelegate_Parms
        ClearReadCrossTitleContentCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadCrossTitleContentCompleteDelegate,
                       &ClearReadCrossTitleContentCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineContentInterface.AddReadCrossTitleContentCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::AddReadCrossTitleContentCompleteDelegate() {
    static UFunction* pFnAddReadCrossTitleContentCompleteDelegate = NULL;

    if (!pFnAddReadCrossTitleContentCompleteDelegate)
        pFnAddReadCrossTitleContentCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27262];

    UOnlineContentInterface_execAddReadCrossTitleContentCompleteDelegate_Parms
        AddReadCrossTitleContentCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadCrossTitleContentCompleteDelegate,
                       &AddReadCrossTitleContentCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineContentInterface.OnReadCrossTitleContentComplete
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnReadCrossTitleContentComplete() {
    static UFunction* pFnOnReadCrossTitleContentComplete = NULL;

    if (!pFnOnReadCrossTitleContentComplete)
        pFnOnReadCrossTitleContentComplete =
            (UFunction*)UObject::GObjObjects()->Data[27260];

    UOnlineContentInterface_execOnReadCrossTitleContentComplete_Parms
        OnReadCrossTitleContentComplete_Parms;

    this->ProcessEvent(pFnOnReadCrossTitleContentComplete,
                       &OnReadCrossTitleContentComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.GetCrossTitleContentList
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::GetCrossTitleContentList() {
    static UFunction* pFnGetCrossTitleContentList = NULL;

    if (!pFnGetCrossTitleContentList)
        pFnGetCrossTitleContentList =
            (UFunction*)UObject::GObjObjects()->Data[27254];

    UOnlineContentInterface_execGetCrossTitleContentList_Parms
        GetCrossTitleContentList_Parms;

    this->ProcessEvent(pFnGetCrossTitleContentList,
                       &GetCrossTitleContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearCrossTitleContentList
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearCrossTitleContentList() {
    static UFunction* pFnClearCrossTitleContentList = NULL;

    if (!pFnClearCrossTitleContentList)
        pFnClearCrossTitleContentList =
            (UFunction*)UObject::GObjObjects()->Data[27251];

    UOnlineContentInterface_execClearCrossTitleContentList_Parms
        ClearCrossTitleContentList_Parms;

    this->ProcessEvent(pFnClearCrossTitleContentList,
                       &ClearCrossTitleContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ReadCrossTitleContentList
// [0x00024000]
// Parameters infos:

void UOnlineContentInterface::ReadCrossTitleContentList() {
    static UFunction* pFnReadCrossTitleContentList = NULL;

    if (!pFnReadCrossTitleContentList)
        pFnReadCrossTitleContentList =
            (UFunction*)UObject::GObjObjects()->Data[27245];

    UOnlineContentInterface_execReadCrossTitleContentList_Parms
        ReadCrossTitleContentList_Parms;

    this->ProcessEvent(pFnReadCrossTitleContentList,
                       &ReadCrossTitleContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.GetContentList
// [0x00420000]
// Parameters infos:

void UOnlineContentInterface::GetContentList() {
    static UFunction* pFnGetContentList = NULL;

    if (!pFnGetContentList)
        pFnGetContentList = (UFunction*)UObject::GObjObjects()->Data[27239];

    UOnlineContentInterface_execGetContentList_Parms GetContentList_Parms;

    this->ProcessEvent(pFnGetContentList, &GetContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearContentList
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearContentList() {
    static UFunction* pFnClearContentList = NULL;

    if (!pFnClearContentList)
        pFnClearContentList = (UFunction*)UObject::GObjObjects()->Data[27236];

    UOnlineContentInterface_execClearContentList_Parms ClearContentList_Parms;

    this->ProcessEvent(pFnClearContentList, &ClearContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ReadContentList
// [0x00024000]
// Parameters infos:

void UOnlineContentInterface::ReadContentList() {
    static UFunction* pFnReadContentList = NULL;

    if (!pFnReadContentList)
        pFnReadContentList = (UFunction*)UObject::GObjObjects()->Data[27231];

    UOnlineContentInterface_execReadContentList_Parms ReadContentList_Parms;

    this->ProcessEvent(pFnReadContentList, &ReadContentList_Parms, NULL);
};

// Function Engine.OnlineContentInterface.ClearReadContentComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::ClearReadContentComplete() {
    static UFunction* pFnClearReadContentComplete = NULL;

    if (!pFnClearReadContentComplete)
        pFnClearReadContentComplete =
            (UFunction*)UObject::GObjObjects()->Data[27227];

    UOnlineContentInterface_execClearReadContentComplete_Parms
        ClearReadContentComplete_Parms;

    this->ProcessEvent(pFnClearReadContentComplete,
                       &ClearReadContentComplete_Parms, NULL);
};

// Function Engine.OnlineContentInterface.AddReadContentComplete
// [0x00020000]
// Parameters infos:

void UOnlineContentInterface::AddReadContentComplete() {
    static UFunction* pFnAddReadContentComplete = NULL;

    if (!pFnAddReadContentComplete)
        pFnAddReadContentComplete =
            (UFunction*)UObject::GObjObjects()->Data[27223];

    UOnlineContentInterface_execAddReadContentComplete_Parms
        AddReadContentComplete_Parms;

    this->ProcessEvent(pFnAddReadContentComplete, &AddReadContentComplete_Parms,
                       NULL);
};

// Function Engine.OnlineContentInterface.OnReadContentComplete
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnReadContentComplete() {
    static UFunction* pFnOnReadContentComplete = NULL;

    if (!pFnOnReadContentComplete)
        pFnOnReadContentComplete =
            (UFunction*)UObject::GObjObjects()->Data[27221];

    UOnlineContentInterface_execOnReadContentComplete_Parms
        OnReadContentComplete_Parms;

    this->ProcessEvent(pFnOnReadContentComplete, &OnReadContentComplete_Parms,
                       NULL);
};

// Function Engine.OnlineContentInterface.ClearContentChangeDelegate
// [0x00024000]
// Parameters infos:

void UOnlineContentInterface::ClearContentChangeDelegate() {
    static UFunction* pFnClearContentChangeDelegate = NULL;

    if (!pFnClearContentChangeDelegate)
        pFnClearContentChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27218];

    UOnlineContentInterface_execClearContentChangeDelegate_Parms
        ClearContentChangeDelegate_Parms;

    this->ProcessEvent(pFnClearContentChangeDelegate,
                       &ClearContentChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineContentInterface.AddContentChangeDelegate
// [0x00024000]
// Parameters infos:

void UOnlineContentInterface::AddContentChangeDelegate() {
    static UFunction* pFnAddContentChangeDelegate = NULL;

    if (!pFnAddContentChangeDelegate)
        pFnAddContentChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27215];

    UOnlineContentInterface_execAddContentChangeDelegate_Parms
        AddContentChangeDelegate_Parms;

    this->ProcessEvent(pFnAddContentChangeDelegate,
                       &AddContentChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineContentInterface.OnContentChange
// [0x00120000]
// Parameters infos:

void UOnlineContentInterface::OnContentChange() {
    static UFunction* pFnOnContentChange = NULL;

    if (!pFnOnContentChange)
        pFnOnContentChange = (UFunction*)UObject::GObjObjects()->Data[27214];

    UOnlineContentInterface_execOnContentChange_Parms OnContentChange_Parms;

    this->ProcessEvent(pFnOnContentChange, &OnContentChange_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.GetLocale
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::GetLocale() {
    static UFunction* pFnGetLocale = NULL;

    if (!pFnGetLocale)
        pFnGetLocale = (UFunction*)UObject::GObjObjects()->Data[29500];

    UOnlineSystemInterface_execGetLocale_Parms GetLocale_Parms;

    this->ProcessEvent(pFnGetLocale, &GetLocale_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.ClearStorageDeviceChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::ClearStorageDeviceChangeDelegate() {
    static UFunction* pFnClearStorageDeviceChangeDelegate = NULL;

    if (!pFnClearStorageDeviceChangeDelegate)
        pFnClearStorageDeviceChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29498];

    UOnlineSystemInterface_execClearStorageDeviceChangeDelegate_Parms
        ClearStorageDeviceChangeDelegate_Parms;

    this->ProcessEvent(pFnClearStorageDeviceChangeDelegate,
                       &ClearStorageDeviceChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.AddStorageDeviceChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::AddStorageDeviceChangeDelegate() {
    static UFunction* pFnAddStorageDeviceChangeDelegate = NULL;

    if (!pFnAddStorageDeviceChangeDelegate)
        pFnAddStorageDeviceChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29496];

    UOnlineSystemInterface_execAddStorageDeviceChangeDelegate_Parms
        AddStorageDeviceChangeDelegate_Parms;

    this->ProcessEvent(pFnAddStorageDeviceChangeDelegate,
                       &AddStorageDeviceChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.OnStorageDeviceChange
// [0x00120000]
// Parameters infos:

void UOnlineSystemInterface::OnStorageDeviceChange() {
    static UFunction* pFnOnStorageDeviceChange = NULL;

    if (!pFnOnStorageDeviceChange)
        pFnOnStorageDeviceChange =
            (UFunction*)UObject::GObjObjects()->Data[29495];

    UOnlineSystemInterface_execOnStorageDeviceChange_Parms
        OnStorageDeviceChange_Parms;

    this->ProcessEvent(pFnOnStorageDeviceChange, &OnStorageDeviceChange_Parms,
                       NULL);
};

// Function Engine.OnlineSystemInterface.GetNATType
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::GetNATType() {
    static UFunction* pFnGetNATType = NULL;

    if (!pFnGetNATType)
        pFnGetNATType = (UFunction*)UObject::GObjObjects()->Data[29493];

    UOnlineSystemInterface_execGetNATType_Parms GetNATType_Parms;

    this->ProcessEvent(pFnGetNATType, &GetNATType_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.ClearConnectionStatusChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::ClearConnectionStatusChangeDelegate() {
    static UFunction* pFnClearConnectionStatusChangeDelegate = NULL;

    if (!pFnClearConnectionStatusChangeDelegate)
        pFnClearConnectionStatusChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29491];

    UOnlineSystemInterface_execClearConnectionStatusChangeDelegate_Parms
        ClearConnectionStatusChangeDelegate_Parms;

    this->ProcessEvent(pFnClearConnectionStatusChangeDelegate,
                       &ClearConnectionStatusChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.AddConnectionStatusChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::AddConnectionStatusChangeDelegate() {
    static UFunction* pFnAddConnectionStatusChangeDelegate = NULL;

    if (!pFnAddConnectionStatusChangeDelegate)
        pFnAddConnectionStatusChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29489];

    UOnlineSystemInterface_execAddConnectionStatusChangeDelegate_Parms
        AddConnectionStatusChangeDelegate_Parms;

    this->ProcessEvent(pFnAddConnectionStatusChangeDelegate,
                       &AddConnectionStatusChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.OnConnectionStatusChange
// [0x00120000]
// Parameters infos:

void UOnlineSystemInterface::OnConnectionStatusChange() {
    static UFunction* pFnOnConnectionStatusChange = NULL;

    if (!pFnOnConnectionStatusChange)
        pFnOnConnectionStatusChange =
            (UFunction*)UObject::GObjObjects()->Data[29487];

    UOnlineSystemInterface_execOnConnectionStatusChange_Parms
        OnConnectionStatusChange_Parms;

    this->ProcessEvent(pFnOnConnectionStatusChange,
                       &OnConnectionStatusChange_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.GetCurrentConnectionStatus
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::GetCurrentConnectionStatus() {
    static UFunction* pFnGetCurrentConnectionStatus = NULL;

    if (!pFnGetCurrentConnectionStatus)
        pFnGetCurrentConnectionStatus =
            (UFunction*)UObject::GObjObjects()->Data[29485];

    UOnlineSystemInterface_execGetCurrentConnectionStatus_Parms
        GetCurrentConnectionStatus_Parms;

    this->ProcessEvent(pFnGetCurrentConnectionStatus,
                       &GetCurrentConnectionStatus_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.IsControllerConnected
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::IsControllerConnected() {
    static UFunction* pFnIsControllerConnected = NULL;

    if (!pFnIsControllerConnected)
        pFnIsControllerConnected =
            (UFunction*)UObject::GObjObjects()->Data[29482];

    UOnlineSystemInterface_execIsControllerConnected_Parms
        IsControllerConnected_Parms;

    this->ProcessEvent(pFnIsControllerConnected, &IsControllerConnected_Parms,
                       NULL);
};

// Function Engine.OnlineSystemInterface.ClearControllerChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::ClearControllerChangeDelegate() {
    static UFunction* pFnClearControllerChangeDelegate = NULL;

    if (!pFnClearControllerChangeDelegate)
        pFnClearControllerChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29480];

    UOnlineSystemInterface_execClearControllerChangeDelegate_Parms
        ClearControllerChangeDelegate_Parms;

    this->ProcessEvent(pFnClearControllerChangeDelegate,
                       &ClearControllerChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.AddControllerChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::AddControllerChangeDelegate() {
    static UFunction* pFnAddControllerChangeDelegate = NULL;

    if (!pFnAddControllerChangeDelegate)
        pFnAddControllerChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29478];

    UOnlineSystemInterface_execAddControllerChangeDelegate_Parms
        AddControllerChangeDelegate_Parms;

    this->ProcessEvent(pFnAddControllerChangeDelegate,
                       &AddControllerChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.OnControllerChange
// [0x00120000]
// Parameters infos:

void UOnlineSystemInterface::OnControllerChange() {
    static UFunction* pFnOnControllerChange = NULL;

    if (!pFnOnControllerChange)
        pFnOnControllerChange = (UFunction*)UObject::GObjObjects()->Data[29474];

    UOnlineSystemInterface_execOnControllerChange_Parms
        OnControllerChange_Parms;

    this->ProcessEvent(pFnOnControllerChange, &OnControllerChange_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.SetNetworkNotificationPosition
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::SetNetworkNotificationPosition() {
    static UFunction* pFnSetNetworkNotificationPosition = NULL;

    if (!pFnSetNetworkNotificationPosition)
        pFnSetNetworkNotificationPosition =
            (UFunction*)UObject::GObjObjects()->Data[29472];

    UOnlineSystemInterface_execSetNetworkNotificationPosition_Parms
        SetNetworkNotificationPosition_Parms;

    this->ProcessEvent(pFnSetNetworkNotificationPosition,
                       &SetNetworkNotificationPosition_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.GetNetworkNotificationPosition
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::GetNetworkNotificationPosition() {
    static UFunction* pFnGetNetworkNotificationPosition = NULL;

    if (!pFnGetNetworkNotificationPosition)
        pFnGetNetworkNotificationPosition =
            (UFunction*)UObject::GObjObjects()->Data[29470];

    UOnlineSystemInterface_execGetNetworkNotificationPosition_Parms
        GetNetworkNotificationPosition_Parms;

    this->ProcessEvent(pFnGetNetworkNotificationPosition,
                       &GetNetworkNotificationPosition_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.ClearExternalUIChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::ClearExternalUIChangeDelegate() {
    static UFunction* pFnClearExternalUIChangeDelegate = NULL;

    if (!pFnClearExternalUIChangeDelegate)
        pFnClearExternalUIChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29468];

    UOnlineSystemInterface_execClearExternalUIChangeDelegate_Parms
        ClearExternalUIChangeDelegate_Parms;

    this->ProcessEvent(pFnClearExternalUIChangeDelegate,
                       &ClearExternalUIChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.AddExternalUIChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::AddExternalUIChangeDelegate() {
    static UFunction* pFnAddExternalUIChangeDelegate = NULL;

    if (!pFnAddExternalUIChangeDelegate)
        pFnAddExternalUIChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29466];

    UOnlineSystemInterface_execAddExternalUIChangeDelegate_Parms
        AddExternalUIChangeDelegate_Parms;

    this->ProcessEvent(pFnAddExternalUIChangeDelegate,
                       &AddExternalUIChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.OnExternalUIChange
// [0x00120000]
// Parameters infos:

void UOnlineSystemInterface::OnExternalUIChange() {
    static UFunction* pFnOnExternalUIChange = NULL;

    if (!pFnOnExternalUIChange)
        pFnOnExternalUIChange = (UFunction*)UObject::GObjObjects()->Data[29464];

    UOnlineSystemInterface_execOnExternalUIChange_Parms
        OnExternalUIChange_Parms;

    this->ProcessEvent(pFnOnExternalUIChange, &OnExternalUIChange_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.ClearLinkStatusChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::ClearLinkStatusChangeDelegate() {
    static UFunction* pFnClearLinkStatusChangeDelegate = NULL;

    if (!pFnClearLinkStatusChangeDelegate)
        pFnClearLinkStatusChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29462];

    UOnlineSystemInterface_execClearLinkStatusChangeDelegate_Parms
        ClearLinkStatusChangeDelegate_Parms;

    this->ProcessEvent(pFnClearLinkStatusChangeDelegate,
                       &ClearLinkStatusChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.AddLinkStatusChangeDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::AddLinkStatusChangeDelegate() {
    static UFunction* pFnAddLinkStatusChangeDelegate = NULL;

    if (!pFnAddLinkStatusChangeDelegate)
        pFnAddLinkStatusChangeDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29460];

    UOnlineSystemInterface_execAddLinkStatusChangeDelegate_Parms
        AddLinkStatusChangeDelegate_Parms;

    this->ProcessEvent(pFnAddLinkStatusChangeDelegate,
                       &AddLinkStatusChangeDelegate_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.OnLinkStatusChange
// [0x00120000]
// Parameters infos:

void UOnlineSystemInterface::OnLinkStatusChange() {
    static UFunction* pFnOnLinkStatusChange = NULL;

    if (!pFnOnLinkStatusChange)
        pFnOnLinkStatusChange = (UFunction*)UObject::GObjObjects()->Data[29458];

    UOnlineSystemInterface_execOnLinkStatusChange_Parms
        OnLinkStatusChange_Parms;

    this->ProcessEvent(pFnOnLinkStatusChange, &OnLinkStatusChange_Parms, NULL);
};

// Function Engine.OnlineSystemInterface.HasLinkConnection
// [0x00020000]
// Parameters infos:

void UOnlineSystemInterface::HasLinkConnection() {
    static UFunction* pFnHasLinkConnection = NULL;

    if (!pFnHasLinkConnection)
        pFnHasLinkConnection = (UFunction*)UObject::GObjObjects()->Data[29456];

    UOnlineSystemInterface_execHasLinkConnection_Parms HasLinkConnection_Parms;

    this->ProcessEvent(pFnHasLinkConnection, &HasLinkConnection_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.ClearMarketplaceItemPurchasedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ClearMarketplaceItemPurchasedDelegate() {
    static UFunction* pFnClearMarketplaceItemPurchasedDelegate = NULL;

    if (!pFnClearMarketplaceItemPurchasedDelegate)
        pFnClearMarketplaceItemPurchasedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28001];

    UOnlineMarketplaceInterface_execClearMarketplaceItemPurchasedDelegate_Parms
        ClearMarketplaceItemPurchasedDelegate_Parms;

    this->ProcessEvent(pFnClearMarketplaceItemPurchasedDelegate,
                       &ClearMarketplaceItemPurchasedDelegate_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.AddMarketplaceItemPurchasedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::AddMarketplaceItemPurchasedDelegate() {
    static UFunction* pFnAddMarketplaceItemPurchasedDelegate = NULL;

    if (!pFnAddMarketplaceItemPurchasedDelegate)
        pFnAddMarketplaceItemPurchasedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27999];

    UOnlineMarketplaceInterface_execAddMarketplaceItemPurchasedDelegate_Parms
        AddMarketplaceItemPurchasedDelegate_Parms;

    this->ProcessEvent(pFnAddMarketplaceItemPurchasedDelegate,
                       &AddMarketplaceItemPurchasedDelegate_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.OnMarketplaceItemPurchased
// [0x00120000]
// Parameters infos:

void UOnlineMarketplaceInterface::OnMarketplaceItemPurchased() {
    static UFunction* pFnOnMarketplaceItemPurchased = NULL;

    if (!pFnOnMarketplaceItemPurchased)
        pFnOnMarketplaceItemPurchased =
            (UFunction*)UObject::GObjObjects()->Data[27998];

    UOnlineMarketplaceInterface_execOnMarketplaceItemPurchased_Parms
        OnMarketplaceItemPurchased_Parms;

    this->ProcessEvent(pFnOnMarketplaceItemPurchased,
                       &OnMarketplaceItemPurchased_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.ClearConsumeInventoryItemCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ClearConsumeInventoryItemCompleteDelegate() {
    static UFunction* pFnClearConsumeInventoryItemCompleteDelegate = NULL;

    if (!pFnClearConsumeInventoryItemCompleteDelegate)
        pFnClearConsumeInventoryItemCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27995];

    UOnlineMarketplaceInterface_execClearConsumeInventoryItemCompleteDelegate_Parms
        ClearConsumeInventoryItemCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearConsumeInventoryItemCompleteDelegate,
                       &ClearConsumeInventoryItemCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.AddConsumeInventoryItemCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::AddConsumeInventoryItemCompleteDelegate() {
    static UFunction* pFnAddConsumeInventoryItemCompleteDelegate = NULL;

    if (!pFnAddConsumeInventoryItemCompleteDelegate)
        pFnAddConsumeInventoryItemCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27992];

    UOnlineMarketplaceInterface_execAddConsumeInventoryItemCompleteDelegate_Parms
        AddConsumeInventoryItemCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddConsumeInventoryItemCompleteDelegate,
                       &AddConsumeInventoryItemCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.OnConsumeInventoryItemComplete
// [0x00120000]
// Parameters infos:

void UOnlineMarketplaceInterface::OnConsumeInventoryItemComplete() {
    static UFunction* pFnOnConsumeInventoryItemComplete = NULL;

    if (!pFnOnConsumeInventoryItemComplete)
        pFnOnConsumeInventoryItemComplete =
            (UFunction*)UObject::GObjObjects()->Data[27988];

    UOnlineMarketplaceInterface_execOnConsumeInventoryItemComplete_Parms
        OnConsumeInventoryItemComplete_Parms;

    this->ProcessEvent(pFnOnConsumeInventoryItemComplete,
                       &OnConsumeInventoryItemComplete_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.ConsumeInventoryItem
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ConsumeInventoryItem() {
    static UFunction* pFnConsumeInventoryItem = NULL;

    if (!pFnConsumeInventoryItem)
        pFnConsumeInventoryItem =
            (UFunction*)UObject::GObjObjects()->Data[27982];

    UOnlineMarketplaceInterface_execConsumeInventoryItem_Parms
        ConsumeInventoryItem_Parms;

    this->ProcessEvent(pFnConsumeInventoryItem, &ConsumeInventoryItem_Parms,
                       NULL);
};

// Function Engine.OnlineMarketplaceInterface.ResetInventoryItems
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ResetInventoryItems() {
    static UFunction* pFnResetInventoryItems = NULL;

    if (!pFnResetInventoryItems)
        pFnResetInventoryItems =
            (UFunction*)UObject::GObjObjects()->Data[27979];

    UOnlineMarketplaceInterface_execResetInventoryItems_Parms
        ResetInventoryItems_Parms;

    this->ProcessEvent(pFnResetInventoryItems, &ResetInventoryItems_Parms,
                       NULL);
};

// Function Engine.OnlineMarketplaceInterface.GetInventoryItems
// [0x00420000]
// Parameters infos:

void UOnlineMarketplaceInterface::GetInventoryItems() {
    static UFunction* pFnGetInventoryItems = NULL;

    if (!pFnGetInventoryItems)
        pFnGetInventoryItems = (UFunction*)UObject::GObjObjects()->Data[27973];

    UOnlineMarketplaceInterface_execGetInventoryItems_Parms
        GetInventoryItems_Parms;

    this->ProcessEvent(pFnGetInventoryItems, &GetInventoryItems_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.ClearReadInventoryItemsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ClearReadInventoryItemsCompleteDelegate() {
    static UFunction* pFnClearReadInventoryItemsCompleteDelegate = NULL;

    if (!pFnClearReadInventoryItemsCompleteDelegate)
        pFnClearReadInventoryItemsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27970];

    UOnlineMarketplaceInterface_execClearReadInventoryItemsCompleteDelegate_Parms
        ClearReadInventoryItemsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadInventoryItemsCompleteDelegate,
                       &ClearReadInventoryItemsCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.AddReadInventoryItemsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::AddReadInventoryItemsCompleteDelegate() {
    static UFunction* pFnAddReadInventoryItemsCompleteDelegate = NULL;

    if (!pFnAddReadInventoryItemsCompleteDelegate)
        pFnAddReadInventoryItemsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27967];

    UOnlineMarketplaceInterface_execAddReadInventoryItemsCompleteDelegate_Parms
        AddReadInventoryItemsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadInventoryItemsCompleteDelegate,
                       &AddReadInventoryItemsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.OnReadInventoryItemsComplete
// [0x00120000]
// Parameters infos:

void UOnlineMarketplaceInterface::OnReadInventoryItemsComplete() {
    static UFunction* pFnOnReadInventoryItemsComplete = NULL;

    if (!pFnOnReadInventoryItemsComplete)
        pFnOnReadInventoryItemsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27965];

    UOnlineMarketplaceInterface_execOnReadInventoryItemsComplete_Parms
        OnReadInventoryItemsComplete_Parms;

    this->ProcessEvent(pFnOnReadInventoryItemsComplete,
                       &OnReadInventoryItemsComplete_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.ReadInventoryItems
// [0x00024000]
// Parameters infos:

void UOnlineMarketplaceInterface::ReadInventoryItems() {
    static UFunction* pFnReadInventoryItems = NULL;

    if (!pFnReadInventoryItems)
        pFnReadInventoryItems = (UFunction*)UObject::GObjObjects()->Data[27961];

    UOnlineMarketplaceInterface_execReadInventoryItems_Parms
        ReadInventoryItems_Parms;

    this->ProcessEvent(pFnReadInventoryItems, &ReadInventoryItems_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.ClearReadAdditionalProductDetailsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::
    ClearReadAdditionalProductDetailsCompleteDelegate() {
    static UFunction* pFnClearReadAdditionalProductDetailsCompleteDelegate =
        NULL;

    if (!pFnClearReadAdditionalProductDetailsCompleteDelegate)
        pFnClearReadAdditionalProductDetailsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27958];

    UOnlineMarketplaceInterface_execClearReadAdditionalProductDetailsCompleteDelegate_Parms
        ClearReadAdditionalProductDetailsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadAdditionalProductDetailsCompleteDelegate,
                       &ClearReadAdditionalProductDetailsCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.AddReadAdditionalProductDetailsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::
    AddReadAdditionalProductDetailsCompleteDelegate() {
    static UFunction* pFnAddReadAdditionalProductDetailsCompleteDelegate = NULL;

    if (!pFnAddReadAdditionalProductDetailsCompleteDelegate)
        pFnAddReadAdditionalProductDetailsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27955];

    UOnlineMarketplaceInterface_execAddReadAdditionalProductDetailsCompleteDelegate_Parms
        AddReadAdditionalProductDetailsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadAdditionalProductDetailsCompleteDelegate,
                       &AddReadAdditionalProductDetailsCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.OnReadAdditionalProductDetailsComplete
// [0x00120000]
// Parameters infos:

void UOnlineMarketplaceInterface::OnReadAdditionalProductDetailsComplete() {
    static UFunction* pFnOnReadAdditionalProductDetailsComplete = NULL;

    if (!pFnOnReadAdditionalProductDetailsComplete)
        pFnOnReadAdditionalProductDetailsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27953];

    UOnlineMarketplaceInterface_execOnReadAdditionalProductDetailsComplete_Parms
        OnReadAdditionalProductDetailsComplete_Parms;

    this->ProcessEvent(pFnOnReadAdditionalProductDetailsComplete,
                       &OnReadAdditionalProductDetailsComplete_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.ReadAdditionalDetailsForProducts
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ReadAdditionalDetailsForProducts() {
    static UFunction* pFnReadAdditionalDetailsForProducts = NULL;

    if (!pFnReadAdditionalDetailsForProducts)
        pFnReadAdditionalDetailsForProducts =
            (UFunction*)UObject::GObjObjects()->Data[27949];

    UOnlineMarketplaceInterface_execReadAdditionalDetailsForProducts_Parms
        ReadAdditionalDetailsForProducts_Parms;

    this->ProcessEvent(pFnReadAdditionalDetailsForProducts,
                       &ReadAdditionalDetailsForProducts_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.ResetAvailableProducts
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ResetAvailableProducts() {
    static UFunction* pFnResetAvailableProducts = NULL;

    if (!pFnResetAvailableProducts)
        pFnResetAvailableProducts =
            (UFunction*)UObject::GObjObjects()->Data[27946];

    UOnlineMarketplaceInterface_execResetAvailableProducts_Parms
        ResetAvailableProducts_Parms;

    this->ProcessEvent(pFnResetAvailableProducts, &ResetAvailableProducts_Parms,
                       NULL);
};

// Function Engine.OnlineMarketplaceInterface.GetAvailableProducts
// [0x00420000]
// Parameters infos:

void UOnlineMarketplaceInterface::GetAvailableProducts() {
    static UFunction* pFnGetAvailableProducts = NULL;

    if (!pFnGetAvailableProducts)
        pFnGetAvailableProducts =
            (UFunction*)UObject::GObjObjects()->Data[27940];

    UOnlineMarketplaceInterface_execGetAvailableProducts_Parms
        GetAvailableProducts_Parms;

    this->ProcessEvent(pFnGetAvailableProducts, &GetAvailableProducts_Parms,
                       NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.ClearReadAvailableProductsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::ClearReadAvailableProductsCompleteDelegate() {
    static UFunction* pFnClearReadAvailableProductsCompleteDelegate = NULL;

    if (!pFnClearReadAvailableProductsCompleteDelegate)
        pFnClearReadAvailableProductsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27937];

    UOnlineMarketplaceInterface_execClearReadAvailableProductsCompleteDelegate_Parms
        ClearReadAvailableProductsCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadAvailableProductsCompleteDelegate,
                       &ClearReadAvailableProductsCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineMarketplaceInterface.AddReadAvailableProductsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineMarketplaceInterface::AddReadAvailableProductsCompleteDelegate() {
    static UFunction* pFnAddReadAvailableProductsCompleteDelegate = NULL;

    if (!pFnAddReadAvailableProductsCompleteDelegate)
        pFnAddReadAvailableProductsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27934];

    UOnlineMarketplaceInterface_execAddReadAvailableProductsCompleteDelegate_Parms
        AddReadAvailableProductsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadAvailableProductsCompleteDelegate,
                       &AddReadAvailableProductsCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.OnReadAvailableProductsComplete
// [0x00120000]
// Parameters infos:

void UOnlineMarketplaceInterface::OnReadAvailableProductsComplete() {
    static UFunction* pFnOnReadAvailableProductsComplete = NULL;

    if (!pFnOnReadAvailableProductsComplete)
        pFnOnReadAvailableProductsComplete =
            (UFunction*)UObject::GObjObjects()->Data[27932];

    UOnlineMarketplaceInterface_execOnReadAvailableProductsComplete_Parms
        OnReadAvailableProductsComplete_Parms;

    this->ProcessEvent(pFnOnReadAvailableProductsComplete,
                       &OnReadAvailableProductsComplete_Parms, NULL);
};

// Function Engine.OnlineMarketplaceInterface.ReadAvailableProducts
// [0x00024000]
// Parameters infos:

void UOnlineMarketplaceInterface::ReadAvailableProducts() {
    static UFunction* pFnReadAvailableProducts = NULL;

    if (!pFnReadAvailableProducts)
        pFnReadAvailableProducts =
            (UFunction*)UObject::GObjObjects()->Data[27925];

    UOnlineMarketplaceInterface_execReadAvailableProducts_Parms
        ReadAvailableProducts_Parms;

    this->ProcessEvent(pFnReadAvailableProducts, &ReadAvailableProducts_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearPlayerTalkingDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearPlayerTalkingDelegate() {
    static UFunction* pFnClearPlayerTalkingDelegate = NULL;

    if (!pFnClearPlayerTalkingDelegate)
        pFnClearPlayerTalkingDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28905];

    UOnlinePlayerInterfaceEx_execClearPlayerTalkingDelegate_Parms
        ClearPlayerTalkingDelegate_Parms;

    this->ProcessEvent(pFnClearPlayerTalkingDelegate,
                       &ClearPlayerTalkingDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddPlayerTalkingDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddPlayerTalkingDelegate() {
    static UFunction* pFnAddPlayerTalkingDelegate = NULL;

    if (!pFnAddPlayerTalkingDelegate)
        pFnAddPlayerTalkingDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28903];

    UOnlinePlayerInterfaceEx_execAddPlayerTalkingDelegate_Parms
        AddPlayerTalkingDelegate_Parms;

    this->ProcessEvent(pFnAddPlayerTalkingDelegate,
                       &AddPlayerTalkingDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnRemoteTalkerStatusChange
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnRemoteTalkerStatusChange() {
    static UFunction* pFnOnRemoteTalkerStatusChange = NULL;

    if (!pFnOnRemoteTalkerStatusChange)
        pFnOnRemoteTalkerStatusChange =
            (UFunction*)UObject::GObjObjects()->Data[28900];

    UOnlinePlayerInterfaceEx_execOnRemoteTalkerStatusChange_Parms
        OnRemoteTalkerStatusChange_Parms;

    this->ProcessEvent(pFnOnRemoteTalkerStatusChange,
                       &OnRemoteTalkerStatusChange_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.ClearUnregisterRemoteTalkerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearUnregisterRemoteTalkerCompleteDelegate() {
    static UFunction* pFnClearUnregisterRemoteTalkerCompleteDelegate = NULL;

    if (!pFnClearUnregisterRemoteTalkerCompleteDelegate)
        pFnClearUnregisterRemoteTalkerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28898];

    UOnlinePlayerInterfaceEx_execClearUnregisterRemoteTalkerCompleteDelegate_Parms
        ClearUnregisterRemoteTalkerCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUnregisterRemoteTalkerCompleteDelegate,
                       &ClearUnregisterRemoteTalkerCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.AddUnregisterRemoteTalkerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddUnregisterRemoteTalkerCompleteDelegate() {
    static UFunction* pFnAddUnregisterRemoteTalkerCompleteDelegate = NULL;

    if (!pFnAddUnregisterRemoteTalkerCompleteDelegate)
        pFnAddUnregisterRemoteTalkerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28896];

    UOnlinePlayerInterfaceEx_execAddUnregisterRemoteTalkerCompleteDelegate_Parms
        AddUnregisterRemoteTalkerCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUnregisterRemoteTalkerCompleteDelegate,
                       &AddUnregisterRemoteTalkerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnUnregisterRemoteTalkerComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnUnregisterRemoteTalkerComplete() {
    static UFunction* pFnOnUnregisterRemoteTalkerComplete = NULL;

    if (!pFnOnUnregisterRemoteTalkerComplete)
        pFnOnUnregisterRemoteTalkerComplete =
            (UFunction*)UObject::GObjObjects()->Data[28893];

    UOnlinePlayerInterfaceEx_execOnUnregisterRemoteTalkerComplete_Parms
        OnUnregisterRemoteTalkerComplete_Parms;

    this->ProcessEvent(pFnOnUnregisterRemoteTalkerComplete,
                       &OnUnregisterRemoteTalkerComplete_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.ClearUnregisterLocalTalkerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearUnregisterLocalTalkerCompleteDelegate() {
    static UFunction* pFnClearUnregisterLocalTalkerCompleteDelegate = NULL;

    if (!pFnClearUnregisterLocalTalkerCompleteDelegate)
        pFnClearUnregisterLocalTalkerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28891];

    UOnlinePlayerInterfaceEx_execClearUnregisterLocalTalkerCompleteDelegate_Parms
        ClearUnregisterLocalTalkerCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearUnregisterLocalTalkerCompleteDelegate,
                       &ClearUnregisterLocalTalkerCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.AddUnregisterLocalTalkerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddUnregisterLocalTalkerCompleteDelegate() {
    static UFunction* pFnAddUnregisterLocalTalkerCompleteDelegate = NULL;

    if (!pFnAddUnregisterLocalTalkerCompleteDelegate)
        pFnAddUnregisterLocalTalkerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28889];

    UOnlinePlayerInterfaceEx_execAddUnregisterLocalTalkerCompleteDelegate_Parms
        AddUnregisterLocalTalkerCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddUnregisterLocalTalkerCompleteDelegate,
                       &AddUnregisterLocalTalkerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnUnregisterLocalTalkerComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnUnregisterLocalTalkerComplete() {
    static UFunction* pFnOnUnregisterLocalTalkerComplete = NULL;

    if (!pFnOnUnregisterLocalTalkerComplete)
        pFnOnUnregisterLocalTalkerComplete =
            (UFunction*)UObject::GObjObjects()->Data[28886];

    UOnlinePlayerInterfaceEx_execOnUnregisterLocalTalkerComplete_Parms
        OnUnregisterLocalTalkerComplete_Parms;

    this->ProcessEvent(pFnOnUnregisterLocalTalkerComplete,
                       &OnUnregisterLocalTalkerComplete_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.ClearRegisterLocalTalkerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearRegisterLocalTalkerCompleteDelegate() {
    static UFunction* pFnClearRegisterLocalTalkerCompleteDelegate = NULL;

    if (!pFnClearRegisterLocalTalkerCompleteDelegate)
        pFnClearRegisterLocalTalkerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28884];

    UOnlinePlayerInterfaceEx_execClearRegisterLocalTalkerCompleteDelegate_Parms
        ClearRegisterLocalTalkerCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearRegisterLocalTalkerCompleteDelegate,
                       &ClearRegisterLocalTalkerCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.AddRegisterLocalTalkerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddRegisterLocalTalkerCompleteDelegate() {
    static UFunction* pFnAddRegisterLocalTalkerCompleteDelegate = NULL;

    if (!pFnAddRegisterLocalTalkerCompleteDelegate)
        pFnAddRegisterLocalTalkerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28882];

    UOnlinePlayerInterfaceEx_execAddRegisterLocalTalkerCompleteDelegate_Parms
        AddRegisterLocalTalkerCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddRegisterLocalTalkerCompleteDelegate,
                       &AddRegisterLocalTalkerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnRegisterLocalTalkerComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnRegisterLocalTalkerComplete() {
    static UFunction* pFnOnRegisterLocalTalkerComplete = NULL;

    if (!pFnOnRegisterLocalTalkerComplete)
        pFnOnRegisterLocalTalkerComplete =
            (UFunction*)UObject::GObjObjects()->Data[28879];

    UOnlinePlayerInterfaceEx_execOnRegisterLocalTalkerComplete_Parms
        OnRegisterLocalTalkerComplete_Parms;

    this->ProcessEvent(pFnOnRegisterLocalTalkerComplete,
                       &OnRegisterLocalTalkerComplete_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.ClearReadOnlineProfilesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearReadOnlineProfilesCompleteDelegate() {
    static UFunction* pFnClearReadOnlineProfilesCompleteDelegate = NULL;

    if (!pFnClearReadOnlineProfilesCompleteDelegate)
        pFnClearReadOnlineProfilesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28877];

    UOnlinePlayerInterfaceEx_execClearReadOnlineProfilesCompleteDelegate_Parms
        ClearReadOnlineProfilesCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearReadOnlineProfilesCompleteDelegate,
                       &ClearReadOnlineProfilesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddReadOnlineProfilesCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddReadOnlineProfilesCompleteDelegate() {
    static UFunction* pFnAddReadOnlineProfilesCompleteDelegate = NULL;

    if (!pFnAddReadOnlineProfilesCompleteDelegate)
        pFnAddReadOnlineProfilesCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28875];

    UOnlinePlayerInterfaceEx_execAddReadOnlineProfilesCompleteDelegate_Parms
        AddReadOnlineProfilesCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadOnlineProfilesCompleteDelegate,
                       &AddReadOnlineProfilesCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnReadOnlineProfilesComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnReadOnlineProfilesComplete() {
    static UFunction* pFnOnReadOnlineProfilesComplete = NULL;

    if (!pFnOnReadOnlineProfilesComplete)
        pFnOnReadOnlineProfilesComplete =
            (UFunction*)UObject::GObjObjects()->Data[28869];

    UOnlinePlayerInterfaceEx_execOnReadOnlineProfilesComplete_Parms
        OnReadOnlineProfilesComplete_Parms;

    this->ProcessEvent(pFnOnReadOnlineProfilesComplete,
                       &OnReadOnlineProfilesComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ReadOnlineProfilesForPlayers
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ReadOnlineProfilesForPlayers() {
    static UFunction* pFnReadOnlineProfilesForPlayers = NULL;

    if (!pFnReadOnlineProfilesForPlayers)
        pFnReadOnlineProfilesForPlayers =
            (UFunction*)UObject::GObjObjects()->Data[28865];

    UOnlinePlayerInterfaceEx_execReadOnlineProfilesForPlayers_Parms
        ReadOnlineProfilesForPlayers_Parms;

    this->ProcessEvent(pFnReadOnlineProfilesForPlayers,
                       &ReadOnlineProfilesForPlayers_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.GetPlayerIDForPlayerNickname
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::GetPlayerIDForPlayerNickname() {
    static UFunction* pFnGetPlayerIDForPlayerNickname = NULL;

    if (!pFnGetPlayerIDForPlayerNickname)
        pFnGetPlayerIDForPlayerNickname =
            (UFunction*)UObject::GObjObjects()->Data[28861];

    UOnlinePlayerInterfaceEx_execGetPlayerIDForPlayerNickname_Parms
        GetPlayerIDForPlayerNickname_Parms;

    this->ProcessEvent(pFnGetPlayerIDForPlayerNickname,
                       &GetPlayerIDForPlayerNickname_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.GetPlayerNicknameForPlayerId
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::GetPlayerNicknameForPlayerId() {
    static UFunction* pFnGetPlayerNicknameForPlayerId = NULL;

    if (!pFnGetPlayerNicknameForPlayerId)
        pFnGetPlayerNicknameForPlayerId =
            (UFunction*)UObject::GObjObjects()->Data[28857];

    UOnlinePlayerInterfaceEx_execGetPlayerNicknameForPlayerId_Parms
        GetPlayerNicknameForPlayerId_Parms;

    this->ProcessEvent(pFnGetPlayerNicknameForPlayerId,
                       &GetPlayerNicknameForPlayerId_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowCustomErrorUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowCustomErrorUI() {
    static UFunction* pFnShowCustomErrorUI = NULL;

    if (!pFnShowCustomErrorUI)
        pFnShowCustomErrorUI = (UFunction*)UObject::GObjObjects()->Data[28851];

    UOnlinePlayerInterfaceEx_execShowCustomErrorUI_Parms
        ShowCustomErrorUI_Parms;

    this->ProcessEvent(pFnShowCustomErrorUI, &ShowCustomErrorUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowSystemErrorUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowSystemErrorUI() {
    static UFunction* pFnShowSystemErrorUI = NULL;

    if (!pFnShowSystemErrorUI)
        pFnShowSystemErrorUI = (UFunction*)UObject::GObjObjects()->Data[28847];

    UOnlinePlayerInterfaceEx_execShowSystemErrorUI_Parms
        ShowSystemErrorUI_Parms;

    this->ProcessEvent(pFnShowSystemErrorUI, &ShowSystemErrorUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.UpsellPremiumOnlineService
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::UpsellPremiumOnlineService() {
    static UFunction* pFnUpsellPremiumOnlineService = NULL;

    if (!pFnUpsellPremiumOnlineService)
        pFnUpsellPremiumOnlineService =
            (UFunction*)UObject::GObjObjects()->Data[28846];

    UOnlinePlayerInterfaceEx_execUpsellPremiumOnlineService_Parms
        UpsellPremiumOnlineService_Parms;

    this->ProcessEvent(pFnUpsellPremiumOnlineService,
                       &UpsellPremiumOnlineService_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearOnEntitlementsReadDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearOnEntitlementsReadDelegate() {
    static UFunction* pFnClearOnEntitlementsReadDelegate = NULL;

    if (!pFnClearOnEntitlementsReadDelegate)
        pFnClearOnEntitlementsReadDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28844];

    UOnlinePlayerInterfaceEx_execClearOnEntitlementsReadDelegate_Parms
        ClearOnEntitlementsReadDelegate_Parms;

    this->ProcessEvent(pFnClearOnEntitlementsReadDelegate,
                       &ClearOnEntitlementsReadDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddOnEntitlementsReadDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddOnEntitlementsReadDelegate() {
    static UFunction* pFnAddOnEntitlementsReadDelegate = NULL;

    if (!pFnAddOnEntitlementsReadDelegate)
        pFnAddOnEntitlementsReadDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28842];

    UOnlinePlayerInterfaceEx_execAddOnEntitlementsReadDelegate_Parms
        AddOnEntitlementsReadDelegate_Parms;

    this->ProcessEvent(pFnAddOnEntitlementsReadDelegate,
                       &AddOnEntitlementsReadDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnEntitlementsRead
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnEntitlementsRead() {
    static UFunction* pFnOnEntitlementsRead = NULL;

    if (!pFnOnEntitlementsRead)
        pFnOnEntitlementsRead = (UFunction*)UObject::GObjObjects()->Data[28840];

    UOnlinePlayerInterfaceEx_execOnEntitlementsRead_Parms
        OnEntitlementsRead_Parms;

    this->ProcessEvent(pFnOnEntitlementsRead, &OnEntitlementsRead_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ReadEntitlements
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ReadEntitlements() {
    static UFunction* pFnReadEntitlements = NULL;

    if (!pFnReadEntitlements)
        pFnReadEntitlements = (UFunction*)UObject::GObjObjects()->Data[28839];

    UOnlinePlayerInterfaceEx_execReadEntitlements_Parms ReadEntitlements_Parms;

    this->ProcessEvent(pFnReadEntitlements, &ReadEntitlements_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearStoreDataReadCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearStoreDataReadCompleteDelegate() {
    static UFunction* pFnClearStoreDataReadCompleteDelegate = NULL;

    if (!pFnClearStoreDataReadCompleteDelegate)
        pFnClearStoreDataReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28837];

    UOnlinePlayerInterfaceEx_execClearStoreDataReadCompleteDelegate_Parms
        ClearStoreDataReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearStoreDataReadCompleteDelegate,
                       &ClearStoreDataReadCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddStoreDataReadCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddStoreDataReadCompleteDelegate() {
    static UFunction* pFnAddStoreDataReadCompleteDelegate = NULL;

    if (!pFnAddStoreDataReadCompleteDelegate)
        pFnAddStoreDataReadCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28835];

    UOnlinePlayerInterfaceEx_execAddStoreDataReadCompleteDelegate_Parms
        AddStoreDataReadCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddStoreDataReadCompleteDelegate,
                       &AddStoreDataReadCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnStoreDataRead
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnStoreDataRead() {
    static UFunction* pFnOnStoreDataRead = NULL;

    if (!pFnOnStoreDataRead)
        pFnOnStoreDataRead = (UFunction*)UObject::GObjObjects()->Data[28833];

    UOnlinePlayerInterfaceEx_execOnStoreDataRead_Parms OnStoreDataRead_Parms;

    this->ProcessEvent(pFnOnStoreDataRead, &OnStoreDataRead_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ReadStoreData
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ReadStoreData() {
    static UFunction* pFnReadStoreData = NULL;

    if (!pFnReadStoreData)
        pFnReadStoreData = (UFunction*)UObject::GObjObjects()->Data[28832];

    UOnlinePlayerInterfaceEx_execReadStoreData_Parms ReadStoreData_Parms;

    this->ProcessEvent(pFnReadStoreData, &ReadStoreData_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.PostActivityFeedPerkLevelUp
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::PostActivityFeedPerkLevelUp() {
    static UFunction* pFnPostActivityFeedPerkLevelUp = NULL;

    if (!pFnPostActivityFeedPerkLevelUp)
        pFnPostActivityFeedPerkLevelUp =
            (UFunction*)UObject::GObjObjects()->Data[28829];

    UOnlinePlayerInterfaceEx_execPostActivityFeedPerkLevelUp_Parms
        PostActivityFeedPerkLevelUp_Parms;

    this->ProcessEvent(pFnPostActivityFeedPerkLevelUp,
                       &PostActivityFeedPerkLevelUp_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.PostActivityFeedTeamAward
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::PostActivityFeedTeamAward() {
    static UFunction* pFnPostActivityFeedTeamAward = NULL;

    if (!pFnPostActivityFeedTeamAward)
        pFnPostActivityFeedTeamAward =
            (UFunction*)UObject::GObjObjects()->Data[28827];

    UOnlinePlayerInterfaceEx_execPostActivityFeedTeamAward_Parms
        PostActivityFeedTeamAward_Parms;

    this->ProcessEvent(pFnPostActivityFeedTeamAward,
                       &PostActivityFeedTeamAward_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.PostActivityFeedBossKill
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::PostActivityFeedBossKill() {
    static UFunction* pFnPostActivityFeedBossKill = NULL;

    if (!pFnPostActivityFeedBossKill)
        pFnPostActivityFeedBossKill =
            (UFunction*)UObject::GObjObjects()->Data[28824];

    UOnlinePlayerInterfaceEx_execPostActivityFeedBossKill_Parms
        PostActivityFeedBossKill_Parms;

    this->ProcessEvent(pFnPostActivityFeedBossKill,
                       &PostActivityFeedBossKill_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowCustomMessageUI
// [0x00424000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowCustomMessageUI() {
    static UFunction* pFnShowCustomMessageUI = NULL;

    if (!pFnShowCustomMessageUI)
        pFnShowCustomMessageUI =
            (UFunction*)UObject::GObjObjects()->Data[28816];

    UOnlinePlayerInterfaceEx_execShowCustomMessageUI_Parms
        ShowCustomMessageUI_Parms;

    this->ProcessEvent(pFnShowCustomMessageUI, &ShowCustomMessageUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearCrossTitleProfileSettings
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearCrossTitleProfileSettings() {
    static UFunction* pFnClearCrossTitleProfileSettings = NULL;

    if (!pFnClearCrossTitleProfileSettings)
        pFnClearCrossTitleProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[28813];

    UOnlinePlayerInterfaceEx_execClearCrossTitleProfileSettings_Parms
        ClearCrossTitleProfileSettings_Parms;

    this->ProcessEvent(pFnClearCrossTitleProfileSettings,
                       &ClearCrossTitleProfileSettings_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.GetCrossTitleProfileSettings
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::GetCrossTitleProfileSettings() {
    static UFunction* pFnGetCrossTitleProfileSettings = NULL;

    if (!pFnGetCrossTitleProfileSettings)
        pFnGetCrossTitleProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[28809];

    UOnlinePlayerInterfaceEx_execGetCrossTitleProfileSettings_Parms
        GetCrossTitleProfileSettings_Parms;

    this->ProcessEvent(pFnGetCrossTitleProfileSettings,
                       &GetCrossTitleProfileSettings_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.ClearReadCrossTitleProfileSettingsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::
    ClearReadCrossTitleProfileSettingsCompleteDelegate() {
    static UFunction* pFnClearReadCrossTitleProfileSettingsCompleteDelegate =
        NULL;

    if (!pFnClearReadCrossTitleProfileSettingsCompleteDelegate)
        pFnClearReadCrossTitleProfileSettingsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28806];

    UOnlinePlayerInterfaceEx_execClearReadCrossTitleProfileSettingsCompleteDelegate_Parms
        ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms;

    this->ProcessEvent(
        pFnClearReadCrossTitleProfileSettingsCompleteDelegate,
        &ClearReadCrossTitleProfileSettingsCompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.AddReadCrossTitleProfileSettingsCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::
    AddReadCrossTitleProfileSettingsCompleteDelegate() {
    static UFunction* pFnAddReadCrossTitleProfileSettingsCompleteDelegate =
        NULL;

    if (!pFnAddReadCrossTitleProfileSettingsCompleteDelegate)
        pFnAddReadCrossTitleProfileSettingsCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28803];

    UOnlinePlayerInterfaceEx_execAddReadCrossTitleProfileSettingsCompleteDelegate_Parms
        AddReadCrossTitleProfileSettingsCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddReadCrossTitleProfileSettingsCompleteDelegate,
                       &AddReadCrossTitleProfileSettingsCompleteDelegate_Parms,
                       NULL);
};

// Function
// Engine.OnlinePlayerInterfaceEx.OnReadCrossTitleProfileSettingsComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnReadCrossTitleProfileSettingsComplete() {
    static UFunction* pFnOnReadCrossTitleProfileSettingsComplete = NULL;

    if (!pFnOnReadCrossTitleProfileSettingsComplete)
        pFnOnReadCrossTitleProfileSettingsComplete =
            (UFunction*)UObject::GObjObjects()->Data[28799];

    UOnlinePlayerInterfaceEx_execOnReadCrossTitleProfileSettingsComplete_Parms
        OnReadCrossTitleProfileSettingsComplete_Parms;

    this->ProcessEvent(pFnOnReadCrossTitleProfileSettingsComplete,
                       &OnReadCrossTitleProfileSettingsComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ReadCrossTitleProfileSettings
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ReadCrossTitleProfileSettings() {
    static UFunction* pFnReadCrossTitleProfileSettings = NULL;

    if (!pFnReadCrossTitleProfileSettings)
        pFnReadCrossTitleProfileSettings =
            (UFunction*)UObject::GObjObjects()->Data[28794];

    UOnlinePlayerInterfaceEx_execReadCrossTitleProfileSettings_Parms
        ReadCrossTitleProfileSettings_Parms;

    this->ProcessEvent(pFnReadCrossTitleProfileSettings,
                       &ReadCrossTitleProfileSettings_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.UnlockAvatarAward
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::UnlockAvatarAward() {
    static UFunction* pFnUnlockAvatarAward = NULL;

    if (!pFnUnlockAvatarAward)
        pFnUnlockAvatarAward = (UFunction*)UObject::GObjObjects()->Data[28790];

    UOnlinePlayerInterfaceEx_execUnlockAvatarAward_Parms
        UnlockAvatarAward_Parms;

    this->ProcessEvent(pFnUnlockAvatarAward, &UnlockAvatarAward_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddInGamePost
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddInGamePost() {
    static UFunction* pFnAddInGamePost = NULL;

    if (!pFnAddInGamePost)
        pFnAddInGamePost = (UFunction*)UObject::GObjObjects()->Data[28786];

    UOnlinePlayerInterfaceEx_execAddInGamePost_Parms AddInGamePost_Parms;

    this->ProcessEvent(pFnAddInGamePost, &AddInGamePost_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.RecordPlayersRecentlyMet
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::RecordPlayersRecentlyMet() {
    static UFunction* pFnRecordPlayersRecentlyMet = NULL;

    if (!pFnRecordPlayersRecentlyMet)
        pFnRecordPlayersRecentlyMet =
            (UFunction*)UObject::GObjObjects()->Data[28780];

    UOnlinePlayerInterfaceEx_execRecordPlayersRecentlyMet_Parms
        RecordPlayersRecentlyMet_Parms;

    this->ProcessEvent(pFnRecordPlayersRecentlyMet,
                       &RecordPlayersRecentlyMet_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowCustomPlayersUI
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowCustomPlayersUI() {
    static UFunction* pFnShowCustomPlayersUI = NULL;

    if (!pFnShowCustomPlayersUI)
        pFnShowCustomPlayersUI =
            (UFunction*)UObject::GObjObjects()->Data[28773];

    UOnlinePlayerInterfaceEx_execShowCustomPlayersUI_Parms
        ShowCustomPlayersUI_Parms;

    this->ProcessEvent(pFnShowCustomPlayersUI, &ShowCustomPlayersUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowPlayersUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowPlayersUI() {
    static UFunction* pFnShowPlayersUI = NULL;

    if (!pFnShowPlayersUI)
        pFnShowPlayersUI = (UFunction*)UObject::GObjObjects()->Data[28770];

    UOnlinePlayerInterfaceEx_execShowPlayersUI_Parms ShowPlayersUI_Parms;

    this->ProcessEvent(pFnShowPlayersUI, &ShowPlayersUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowFriendsInviteUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowFriendsInviteUI() {
    static UFunction* pFnShowFriendsInviteUI = NULL;

    if (!pFnShowFriendsInviteUI)
        pFnShowFriendsInviteUI =
            (UFunction*)UObject::GObjObjects()->Data[28766];

    UOnlinePlayerInterfaceEx_execShowFriendsInviteUI_Parms
        ShowFriendsInviteUI_Parms;

    this->ProcessEvent(pFnShowFriendsInviteUI, &ShowFriendsInviteUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearProfileDataChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearProfileDataChangedDelegate() {
    static UFunction* pFnClearProfileDataChangedDelegate = NULL;

    if (!pFnClearProfileDataChangedDelegate)
        pFnClearProfileDataChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28763];

    UOnlinePlayerInterfaceEx_execClearProfileDataChangedDelegate_Parms
        ClearProfileDataChangedDelegate_Parms;

    this->ProcessEvent(pFnClearProfileDataChangedDelegate,
                       &ClearProfileDataChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddProfileDataChangedDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddProfileDataChangedDelegate() {
    static UFunction* pFnAddProfileDataChangedDelegate = NULL;

    if (!pFnAddProfileDataChangedDelegate)
        pFnAddProfileDataChangedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28760];

    UOnlinePlayerInterfaceEx_execAddProfileDataChangedDelegate_Parms
        AddProfileDataChangedDelegate_Parms;

    this->ProcessEvent(pFnAddProfileDataChangedDelegate,
                       &AddProfileDataChangedDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnProfileDataChanged
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnProfileDataChanged() {
    static UFunction* pFnOnProfileDataChanged = NULL;

    if (!pFnOnProfileDataChanged)
        pFnOnProfileDataChanged =
            (UFunction*)UObject::GObjObjects()->Data[28759];

    UOnlinePlayerInterfaceEx_execOnProfileDataChanged_Parms
        OnProfileDataChanged_Parms;

    this->ProcessEvent(pFnOnProfileDataChanged, &OnProfileDataChanged_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.UnlockGamerPicture
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::UnlockGamerPicture() {
    static UFunction* pFnUnlockGamerPicture = NULL;

    if (!pFnUnlockGamerPicture)
        pFnUnlockGamerPicture = (UFunction*)UObject::GObjObjects()->Data[28755];

    UOnlinePlayerInterfaceEx_execUnlockGamerPicture_Parms
        UnlockGamerPicture_Parms;

    this->ProcessEvent(pFnUnlockGamerPicture, &UnlockGamerPicture_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.IsDeviceValid
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::IsDeviceValid() {
    static UFunction* pFnIsDeviceValid = NULL;

    if (!pFnIsDeviceValid)
        pFnIsDeviceValid = (UFunction*)UObject::GObjObjects()->Data[28751];

    UOnlinePlayerInterfaceEx_execIsDeviceValid_Parms IsDeviceValid_Parms;

    this->ProcessEvent(pFnIsDeviceValid, &IsDeviceValid_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.GetDeviceSelectionResults
// [0x00420000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::GetDeviceSelectionResults() {
    static UFunction* pFnGetDeviceSelectionResults = NULL;

    if (!pFnGetDeviceSelectionResults)
        pFnGetDeviceSelectionResults =
            (UFunction*)UObject::GObjObjects()->Data[28747];

    UOnlinePlayerInterfaceEx_execGetDeviceSelectionResults_Parms
        GetDeviceSelectionResults_Parms;

    this->ProcessEvent(pFnGetDeviceSelectionResults,
                       &GetDeviceSelectionResults_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearDeviceSelectionDoneDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearDeviceSelectionDoneDelegate() {
    static UFunction* pFnClearDeviceSelectionDoneDelegate = NULL;

    if (!pFnClearDeviceSelectionDoneDelegate)
        pFnClearDeviceSelectionDoneDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28744];

    UOnlinePlayerInterfaceEx_execClearDeviceSelectionDoneDelegate_Parms
        ClearDeviceSelectionDoneDelegate_Parms;

    this->ProcessEvent(pFnClearDeviceSelectionDoneDelegate,
                       &ClearDeviceSelectionDoneDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddDeviceSelectionDoneDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddDeviceSelectionDoneDelegate() {
    static UFunction* pFnAddDeviceSelectionDoneDelegate = NULL;

    if (!pFnAddDeviceSelectionDoneDelegate)
        pFnAddDeviceSelectionDoneDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28741];

    UOnlinePlayerInterfaceEx_execAddDeviceSelectionDoneDelegate_Parms
        AddDeviceSelectionDoneDelegate_Parms;

    this->ProcessEvent(pFnAddDeviceSelectionDoneDelegate,
                       &AddDeviceSelectionDoneDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnDeviceSelectionComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnDeviceSelectionComplete() {
    static UFunction* pFnOnDeviceSelectionComplete = NULL;

    if (!pFnOnDeviceSelectionComplete)
        pFnOnDeviceSelectionComplete =
            (UFunction*)UObject::GObjObjects()->Data[28739];

    UOnlinePlayerInterfaceEx_execOnDeviceSelectionComplete_Parms
        OnDeviceSelectionComplete_Parms;

    this->ProcessEvent(pFnOnDeviceSelectionComplete,
                       &OnDeviceSelectionComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowDeviceSelectionUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowDeviceSelectionUI() {
    static UFunction* pFnShowDeviceSelectionUI = NULL;

    if (!pFnShowDeviceSelectionUI)
        pFnShowDeviceSelectionUI =
            (UFunction*)UObject::GObjObjects()->Data[28734];

    UOnlinePlayerInterfaceEx_execShowDeviceSelectionUI_Parms
        ShowDeviceSelectionUI_Parms;

    this->ProcessEvent(pFnShowDeviceSelectionUI, &ShowDeviceSelectionUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowMembershipMarketplaceUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowMembershipMarketplaceUI() {
    static UFunction* pFnShowMembershipMarketplaceUI = NULL;

    if (!pFnShowMembershipMarketplaceUI)
        pFnShowMembershipMarketplaceUI =
            (UFunction*)UObject::GObjObjects()->Data[28731];

    UOnlinePlayerInterfaceEx_execShowMembershipMarketplaceUI_Parms
        ShowMembershipMarketplaceUI_Parms;

    this->ProcessEvent(pFnShowMembershipMarketplaceUI,
                       &ShowMembershipMarketplaceUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.CloseCurrentContentUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::CloseCurrentContentUI() {
    static UFunction* pFnCloseCurrentContentUI = NULL;

    if (!pFnCloseCurrentContentUI)
        pFnCloseCurrentContentUI =
            (UFunction*)UObject::GObjObjects()->Data[28730];

    UOnlinePlayerInterfaceEx_execCloseCurrentContentUI_Parms
        CloseCurrentContentUI_Parms;

    this->ProcessEvent(pFnCloseCurrentContentUI, &CloseCurrentContentUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowContentRedeemCodeUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowContentRedeemCodeUI() {
    static UFunction* pFnShowContentRedeemCodeUI = NULL;

    if (!pFnShowContentRedeemCodeUI)
        pFnShowContentRedeemCodeUI =
            (UFunction*)UObject::GObjObjects()->Data[28726];

    UOnlinePlayerInterfaceEx_execShowContentRedeemCodeUI_Parms
        ShowContentRedeemCodeUI_Parms;

    this->ProcessEvent(pFnShowContentRedeemCodeUI,
                       &ShowContentRedeemCodeUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowContentPurchaseUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowContentPurchaseUI() {
    static UFunction* pFnShowContentPurchaseUI = NULL;

    if (!pFnShowContentPurchaseUI)
        pFnShowContentPurchaseUI =
            (UFunction*)UObject::GObjObjects()->Data[28722];

    UOnlinePlayerInterfaceEx_execShowContentPurchaseUI_Parms
        ShowContentPurchaseUI_Parms;

    this->ProcessEvent(pFnShowContentPurchaseUI, &ShowContentPurchaseUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowContentMarketplaceUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowContentMarketplaceUI() {
    static UFunction* pFnShowContentMarketplaceUI = NULL;

    if (!pFnShowContentMarketplaceUI)
        pFnShowContentMarketplaceUI =
            (UFunction*)UObject::GObjObjects()->Data[28716];

    UOnlinePlayerInterfaceEx_execShowContentMarketplaceUI_Parms
        ShowContentMarketplaceUI_Parms;

    this->ProcessEvent(pFnShowContentMarketplaceUI,
                       &ShowContentMarketplaceUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowProductDetailsUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowProductDetailsUI() {
    static UFunction* pFnShowProductDetailsUI = NULL;

    if (!pFnShowProductDetailsUI)
        pFnShowProductDetailsUI =
            (UFunction*)UObject::GObjObjects()->Data[28712];

    UOnlinePlayerInterfaceEx_execShowProductDetailsUI_Parms
        ShowProductDetailsUI_Parms;

    this->ProcessEvent(pFnShowProductDetailsUI, &ShowProductDetailsUI_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearAcceptReceivedDataDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearAcceptReceivedDataDelegate() {
    static UFunction* pFnClearAcceptReceivedDataDelegate = NULL;

    if (!pFnClearAcceptReceivedDataDelegate)
        pFnClearAcceptReceivedDataDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28709];

    UOnlinePlayerInterfaceEx_execClearAcceptReceivedDataDelegate_Parms
        ClearAcceptReceivedDataDelegate_Parms;

    this->ProcessEvent(pFnClearAcceptReceivedDataDelegate,
                       &ClearAcceptReceivedDataDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddAcceptReceivedDataDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddAcceptReceivedDataDelegate() {
    static UFunction* pFnAddAcceptReceivedDataDelegate = NULL;

    if (!pFnAddAcceptReceivedDataDelegate)
        pFnAddAcceptReceivedDataDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28706];

    UOnlinePlayerInterfaceEx_execAddAcceptReceivedDataDelegate_Parms
        AddAcceptReceivedDataDelegate_Parms;

    this->ProcessEvent(pFnAddAcceptReceivedDataDelegate,
                       &AddAcceptReceivedDataDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnAcceptReceivedData
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnAcceptReceivedData() {
    static UFunction* pFnOnAcceptReceivedData = NULL;

    if (!pFnOnAcceptReceivedData)
        pFnOnAcceptReceivedData =
            (UFunction*)UObject::GObjObjects()->Data[28704];

    UOnlinePlayerInterfaceEx_execOnAcceptReceivedData_Parms
        OnAcceptReceivedData_Parms;

    this->ProcessEvent(pFnOnAcceptReceivedData, &OnAcceptReceivedData_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowDataSendingUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowDataSendingUI() {
    static UFunction* pFnShowDataSendingUI = NULL;

    if (!pFnShowDataSendingUI)
        pFnShowDataSendingUI = (UFunction*)UObject::GObjObjects()->Data[28695];

    UOnlinePlayerInterfaceEx_execShowDataSendingUI_Parms
        ShowDataSendingUI_Parms;

    this->ProcessEvent(pFnShowDataSendingUI, &ShowDataSendingUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearPeoplePickerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearPeoplePickerCompleteDelegate() {
    static UFunction* pFnClearPeoplePickerCompleteDelegate = NULL;

    if (!pFnClearPeoplePickerCompleteDelegate)
        pFnClearPeoplePickerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28692];

    UOnlinePlayerInterfaceEx_execClearPeoplePickerCompleteDelegate_Parms
        ClearPeoplePickerCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearPeoplePickerCompleteDelegate,
                       &ClearPeoplePickerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddPeoplePickerCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddPeoplePickerCompleteDelegate() {
    static UFunction* pFnAddPeoplePickerCompleteDelegate = NULL;

    if (!pFnAddPeoplePickerCompleteDelegate)
        pFnAddPeoplePickerCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28689];

    UOnlinePlayerInterfaceEx_execAddPeoplePickerCompleteDelegate_Parms
        AddPeoplePickerCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddPeoplePickerCompleteDelegate,
                       &AddPeoplePickerCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnPeoplePickerComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnPeoplePickerComplete() {
    static UFunction* pFnOnPeoplePickerComplete = NULL;

    if (!pFnOnPeoplePickerComplete)
        pFnOnPeoplePickerComplete =
            (UFunction*)UObject::GObjObjects()->Data[28685];

    UOnlinePlayerInterfaceEx_execOnPeoplePickerComplete_Parms
        OnPeoplePickerComplete_Parms;

    this->ProcessEvent(pFnOnPeoplePickerComplete, &OnPeoplePickerComplete_Parms,
                       NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowPeoplePickerUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowPeoplePickerUI() {
    static UFunction* pFnShowPeoplePickerUI = NULL;

    if (!pFnShowPeoplePickerUI)
        pFnShowPeoplePickerUI = (UFunction*)UObject::GObjObjects()->Data[28678];

    UOnlinePlayerInterfaceEx_execShowPeoplePickerUI_Parms
        ShowPeoplePickerUI_Parms;

    this->ProcessEvent(pFnShowPeoplePickerUI, &ShowPeoplePickerUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowInviteUI
// [0x00024000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowInviteUI() {
    static UFunction* pFnShowInviteUI = NULL;

    if (!pFnShowInviteUI)
        pFnShowInviteUI = (UFunction*)UObject::GObjObjects()->Data[28674];

    UOnlinePlayerInterfaceEx_execShowInviteUI_Parms ShowInviteUI_Parms;

    this->ProcessEvent(pFnShowInviteUI, &ShowInviteUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowAchievementsUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowAchievementsUI() {
    static UFunction* pFnShowAchievementsUI = NULL;

    if (!pFnShowAchievementsUI)
        pFnShowAchievementsUI = (UFunction*)UObject::GObjObjects()->Data[28671];

    UOnlinePlayerInterfaceEx_execShowAchievementsUI_Parms
        ShowAchievementsUI_Parms;

    this->ProcessEvent(pFnShowAchievementsUI, &ShowAchievementsUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowMessagesUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowMessagesUI() {
    static UFunction* pFnShowMessagesUI = NULL;

    if (!pFnShowMessagesUI)
        pFnShowMessagesUI = (UFunction*)UObject::GObjObjects()->Data[28668];

    UOnlinePlayerInterfaceEx_execShowMessagesUI_Parms ShowMessagesUI_Parms;

    this->ProcessEvent(pFnShowMessagesUI, &ShowMessagesUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowGamerCardUIByUsername
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowGamerCardUIByUsername() {
    static UFunction* pFnShowGamerCardUIByUsername = NULL;

    if (!pFnShowGamerCardUIByUsername)
        pFnShowGamerCardUIByUsername =
            (UFunction*)UObject::GObjObjects()->Data[28664];

    UOnlinePlayerInterfaceEx_execShowGamerCardUIByUsername_Parms
        ShowGamerCardUIByUsername_Parms;

    this->ProcessEvent(pFnShowGamerCardUIByUsername,
                       &ShowGamerCardUIByUsername_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowGamerCardUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowGamerCardUI() {
    static UFunction* pFnShowGamerCardUI = NULL;

    if (!pFnShowGamerCardUI)
        pFnShowGamerCardUI = (UFunction*)UObject::GObjObjects()->Data[28660];

    UOnlinePlayerInterfaceEx_execShowGamerCardUI_Parms ShowGamerCardUI_Parms;

    this->ProcessEvent(pFnShowGamerCardUI, &ShowGamerCardUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearShowGamerCardCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearShowGamerCardCompleteDelegate() {
    static UFunction* pFnClearShowGamerCardCompleteDelegate = NULL;

    if (!pFnClearShowGamerCardCompleteDelegate)
        pFnClearShowGamerCardCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28658];

    UOnlinePlayerInterfaceEx_execClearShowGamerCardCompleteDelegate_Parms
        ClearShowGamerCardCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearShowGamerCardCompleteDelegate,
                       &ClearShowGamerCardCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddShowGamerCardCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddShowGamerCardCompleteDelegate() {
    static UFunction* pFnAddShowGamerCardCompleteDelegate = NULL;

    if (!pFnAddShowGamerCardCompleteDelegate)
        pFnAddShowGamerCardCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28656];

    UOnlinePlayerInterfaceEx_execAddShowGamerCardCompleteDelegate_Parms
        AddShowGamerCardCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddShowGamerCardCompleteDelegate,
                       &AddShowGamerCardCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnShowGamerCardComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnShowGamerCardComplete() {
    static UFunction* pFnOnShowGamerCardComplete = NULL;

    if (!pFnOnShowGamerCardComplete)
        pFnOnShowGamerCardComplete =
            (UFunction*)UObject::GObjObjects()->Data[28654];

    UOnlinePlayerInterfaceEx_execOnShowGamerCardComplete_Parms
        OnShowGamerCardComplete_Parms;

    this->ProcessEvent(pFnOnShowGamerCardComplete,
                       &OnShowGamerCardComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowVideo
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowVideo() {
    static UFunction* pFnShowVideo = NULL;

    if (!pFnShowVideo)
        pFnShowVideo = (UFunction*)UObject::GObjObjects()->Data[28651];

    UOnlinePlayerInterfaceEx_execShowVideo_Parms ShowVideo_Parms;

    this->ProcessEvent(pFnShowVideo, &ShowVideo_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ClearShowHelpCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ClearShowHelpCompleteDelegate() {
    static UFunction* pFnClearShowHelpCompleteDelegate = NULL;

    if (!pFnClearShowHelpCompleteDelegate)
        pFnClearShowHelpCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28649];

    UOnlinePlayerInterfaceEx_execClearShowHelpCompleteDelegate_Parms
        ClearShowHelpCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearShowHelpCompleteDelegate,
                       &ClearShowHelpCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.AddShowHelpCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::AddShowHelpCompleteDelegate() {
    static UFunction* pFnAddShowHelpCompleteDelegate = NULL;

    if (!pFnAddShowHelpCompleteDelegate)
        pFnAddShowHelpCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[28647];

    UOnlinePlayerInterfaceEx_execAddShowHelpCompleteDelegate_Parms
        AddShowHelpCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddShowHelpCompleteDelegate,
                       &AddShowHelpCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.OnShowHelpComplete
// [0x00120000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::OnShowHelpComplete() {
    static UFunction* pFnOnShowHelpComplete = NULL;

    if (!pFnOnShowHelpComplete)
        pFnOnShowHelpComplete = (UFunction*)UObject::GObjObjects()->Data[28645];

    UOnlinePlayerInterfaceEx_execOnShowHelpComplete_Parms
        OnShowHelpComplete_Parms;

    this->ProcessEvent(pFnOnShowHelpComplete, &OnShowHelpComplete_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowHelpForErrorUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowHelpForErrorUI() {
    static UFunction* pFnShowHelpForErrorUI = NULL;

    if (!pFnShowHelpForErrorUI)
        pFnShowHelpForErrorUI = (UFunction*)UObject::GObjObjects()->Data[28641];

    UOnlinePlayerInterfaceEx_execShowHelpForErrorUI_Parms
        ShowHelpForErrorUI_Parms;

    this->ProcessEvent(pFnShowHelpForErrorUI, &ShowHelpForErrorUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowHelpUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowHelpUI() {
    static UFunction* pFnShowHelpUI = NULL;

    if (!pFnShowHelpUI)
        pFnShowHelpUI = (UFunction*)UObject::GObjObjects()->Data[28638];

    UOnlinePlayerInterfaceEx_execShowHelpUI_Parms ShowHelpUI_Parms;

    this->ProcessEvent(pFnShowHelpUI, &ShowHelpUI_Parms, NULL);
};

// Function Engine.OnlinePlayerInterfaceEx.ShowFeedbackUI
// [0x00020000]
// Parameters infos:

void UOnlinePlayerInterfaceEx::ShowFeedbackUI() {
    static UFunction* pFnShowFeedbackUI = NULL;

    if (!pFnShowFeedbackUI)
        pFnShowFeedbackUI = (UFunction*)UObject::GObjObjects()->Data[28634];

    UOnlinePlayerInterfaceEx_execShowFeedbackUI_Parms ShowFeedbackUI_Parms;

    this->ProcessEvent(pFnShowFeedbackUI, &ShowFeedbackUI_Parms, NULL);
};

// Function Engine.OnlineAccountInterface.GetLocalAccountNames
// [0x00420000]
// Parameters infos:

void UOnlineAccountInterface::GetLocalAccountNames() {
    static UFunction* pFnGetLocalAccountNames = NULL;

    if (!pFnGetLocalAccountNames)
        pFnGetLocalAccountNames =
            (UFunction*)UObject::GObjObjects()->Data[26981];

    UOnlineAccountInterface_execGetLocalAccountNames_Parms
        GetLocalAccountNames_Parms;

    this->ProcessEvent(pFnGetLocalAccountNames, &GetLocalAccountNames_Parms,
                       NULL);
};

// Function Engine.OnlineAccountInterface.DeleteLocalAccount
// [0x00024000]
// Parameters infos:

void UOnlineAccountInterface::DeleteLocalAccount() {
    static UFunction* pFnDeleteLocalAccount = NULL;

    if (!pFnDeleteLocalAccount)
        pFnDeleteLocalAccount = (UFunction*)UObject::GObjObjects()->Data[26977];

    UOnlineAccountInterface_execDeleteLocalAccount_Parms
        DeleteLocalAccount_Parms;

    this->ProcessEvent(pFnDeleteLocalAccount, &DeleteLocalAccount_Parms, NULL);
};

// Function Engine.OnlineAccountInterface.RenameLocalAccount
// [0x00024000]
// Parameters infos:

void UOnlineAccountInterface::RenameLocalAccount() {
    static UFunction* pFnRenameLocalAccount = NULL;

    if (!pFnRenameLocalAccount)
        pFnRenameLocalAccount = (UFunction*)UObject::GObjObjects()->Data[26972];

    UOnlineAccountInterface_execRenameLocalAccount_Parms
        RenameLocalAccount_Parms;

    this->ProcessEvent(pFnRenameLocalAccount, &RenameLocalAccount_Parms, NULL);
};

// Function Engine.OnlineAccountInterface.CreateLocalAccount
// [0x00024000]
// Parameters infos:

void UOnlineAccountInterface::CreateLocalAccount() {
    static UFunction* pFnCreateLocalAccount = NULL;

    if (!pFnCreateLocalAccount)
        pFnCreateLocalAccount = (UFunction*)UObject::GObjObjects()->Data[26968];

    UOnlineAccountInterface_execCreateLocalAccount_Parms
        CreateLocalAccount_Parms;

    this->ProcessEvent(pFnCreateLocalAccount, &CreateLocalAccount_Parms, NULL);
};

// Function
// Engine.OnlineAccountInterface.ClearCreateOnlineAccountCompletedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAccountInterface::ClearCreateOnlineAccountCompletedDelegate() {
    static UFunction* pFnClearCreateOnlineAccountCompletedDelegate = NULL;

    if (!pFnClearCreateOnlineAccountCompletedDelegate)
        pFnClearCreateOnlineAccountCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[26966];

    UOnlineAccountInterface_execClearCreateOnlineAccountCompletedDelegate_Parms
        ClearCreateOnlineAccountCompletedDelegate_Parms;

    this->ProcessEvent(pFnClearCreateOnlineAccountCompletedDelegate,
                       &ClearCreateOnlineAccountCompletedDelegate_Parms, NULL);
};

// Function
// Engine.OnlineAccountInterface.AddCreateOnlineAccountCompletedDelegate
// [0x00020000]
// Parameters infos:

void UOnlineAccountInterface::AddCreateOnlineAccountCompletedDelegate() {
    static UFunction* pFnAddCreateOnlineAccountCompletedDelegate = NULL;

    if (!pFnAddCreateOnlineAccountCompletedDelegate)
        pFnAddCreateOnlineAccountCompletedDelegate =
            (UFunction*)UObject::GObjObjects()->Data[26964];

    UOnlineAccountInterface_execAddCreateOnlineAccountCompletedDelegate_Parms
        AddCreateOnlineAccountCompletedDelegate_Parms;

    this->ProcessEvent(pFnAddCreateOnlineAccountCompletedDelegate,
                       &AddCreateOnlineAccountCompletedDelegate_Parms, NULL);
};

// Function Engine.OnlineAccountInterface.OnCreateOnlineAccountCompleted
// [0x00120000]
// Parameters infos:

void UOnlineAccountInterface::OnCreateOnlineAccountCompleted() {
    static UFunction* pFnOnCreateOnlineAccountCompleted = NULL;

    if (!pFnOnCreateOnlineAccountCompleted)
        pFnOnCreateOnlineAccountCompleted =
            (UFunction*)UObject::GObjObjects()->Data[26962];

    UOnlineAccountInterface_execOnCreateOnlineAccountCompleted_Parms
        OnCreateOnlineAccountCompleted_Parms;

    this->ProcessEvent(pFnOnCreateOnlineAccountCompleted,
                       &OnCreateOnlineAccountCompleted_Parms, NULL);
};

// Function Engine.OnlineAccountInterface.CreateOnlineAccount
// [0x00024000]
// Parameters infos:

void UOnlineAccountInterface::CreateOnlineAccount() {
    static UFunction* pFnCreateOnlineAccount = NULL;

    if (!pFnCreateOnlineAccount)
        pFnCreateOnlineAccount =
            (UFunction*)UObject::GObjObjects()->Data[26956];

    UOnlineAccountInterface_execCreateOnlineAccount_Parms
        CreateOnlineAccount_Parms;

    this->ProcessEvent(pFnCreateOnlineAccount, &CreateOnlineAccount_Parms,
                       NULL);
};

// Function Engine.AccessControl.IsPendingAuth
// [0x00020002]
// Parameters infos:

void AAccessControl::IsPendingAuth() {
    static UFunction* pFnIsPendingAuth = NULL;

    if (!pFnIsPendingAuth)
        pFnIsPendingAuth = (UFunction*)UObject::GObjObjects()->Data[7946];

    AAccessControl_execIsPendingAuth_Parms IsPendingAuth_Parms;

    this->ProcessEvent(pFnIsPendingAuth, &IsPendingAuth_Parms, NULL);
};

// Function Engine.AccessControl.Cleanup
// [0x00024002]
// Parameters infos:

void AAccessControl::Cleanup() {
    static UFunction* pFnCleanup = NULL;

    if (!pFnCleanup)
        pFnCleanup = (UFunction*)UObject::GObjObjects()->Data[7944];

    AAccessControl_execCleanup_Parms Cleanup_Parms;

    this->ProcessEvent(pFnCleanup, &Cleanup_Parms, NULL);
};

// Function Engine.AccessControl.NotifyExit
// [0x00020002]
// Parameters infos:

void AAccessControl::NotifyExit() {
    static UFunction* pFnNotifyExit = NULL;

    if (!pFnNotifyExit)
        pFnNotifyExit = (UFunction*)UObject::GObjObjects()->Data[7943];

    AAccessControl_execNotifyExit_Parms NotifyExit_Parms;

    this->ProcessEvent(pFnNotifyExit, &NotifyExit_Parms, NULL);
};

// Function Engine.AccessControl.NotifyGameEnding
// [0x00020002]
// Parameters infos:

void AAccessControl::NotifyGameEnding() {
    static UFunction* pFnNotifyGameEnding = NULL;

    if (!pFnNotifyGameEnding)
        pFnNotifyGameEnding = (UFunction*)UObject::GObjObjects()->Data[7941];

    AAccessControl_execNotifyGameEnding_Parms NotifyGameEnding_Parms;

    this->ProcessEvent(pFnNotifyGameEnding, &NotifyGameEnding_Parms, NULL);
};

// Function Engine.AccessControl.NotifyServerTravel
// [0x00020002]
// Parameters infos:

void AAccessControl::NotifyServerTravel() {
    static UFunction* pFnNotifyServerTravel = NULL;

    if (!pFnNotifyServerTravel)
        pFnNotifyServerTravel = (UFunction*)UObject::GObjObjects()->Data[7939];

    AAccessControl_execNotifyServerTravel_Parms NotifyServerTravel_Parms;

    this->ProcessEvent(pFnNotifyServerTravel, &NotifyServerTravel_Parms, NULL);
};

// Function Engine.AccessControl.OnDestroyOnlineGameComplete
// [0x00820002]
// Parameters infos:

void AAccessControl::OnDestroyOnlineGameComplete() {
    static UFunction* pFnOnDestroyOnlineGameComplete = NULL;

    if (!pFnOnDestroyOnlineGameComplete)
        pFnOnDestroyOnlineGameComplete =
            (UFunction*)UObject::GObjObjects()->Data[7931];

    AAccessControl_execOnDestroyOnlineGameComplete_Parms
        OnDestroyOnlineGameComplete_Parms;

    this->ProcessEvent(pFnOnDestroyOnlineGameComplete,
                       &OnDestroyOnlineGameComplete_Parms, NULL);
};

// Function Engine.AccessControl.StaticOnClientConnectionClose
// [0x00822003] ( FUNC_Final )
// Parameters infos:

void AAccessControl::StaticOnClientConnectionClose() {
    static UFunction* pFnStaticOnClientConnectionClose = NULL;

    if (!pFnStaticOnClientConnectionClose)
        pFnStaticOnClientConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[7918];

    AAccessControl_execStaticOnClientConnectionClose_Parms
        StaticOnClientConnectionClose_Parms;

    this->ProcessEvent(pFnStaticOnClientConnectionClose,
                       &StaticOnClientConnectionClose_Parms, NULL);
};

// Function Engine.AccessControl.OnClientConnectionClose
// [0x00020002]
// Parameters infos:

void AAccessControl::OnClientConnectionClose() {
    static UFunction* pFnOnClientConnectionClose = NULL;

    if (!pFnOnClientConnectionClose)
        pFnOnClientConnectionClose =
            (UFunction*)UObject::GObjObjects()->Data[7915];

    AAccessControl_execOnClientConnectionClose_Parms
        OnClientConnectionClose_Parms;

    this->ProcessEvent(pFnOnClientConnectionClose,
                       &OnClientConnectionClose_Parms, NULL);
};

// Function Engine.AccessControl.ListenHostAuthTimeout
// [0x00820002]
// Parameters infos:

void AAccessControl::ListenHostAuthTimeout() {
    static UFunction* pFnListenHostAuthTimeout = NULL;

    if (!pFnListenHostAuthTimeout)
        pFnListenHostAuthTimeout =
            (UFunction*)UObject::GObjObjects()->Data[7913];

    AAccessControl_execListenHostAuthTimeout_Parms ListenHostAuthTimeout_Parms;

    this->ProcessEvent(pFnListenHostAuthTimeout, &ListenHostAuthTimeout_Parms,
                       NULL);
};

// Function Engine.AccessControl.EndListenHostAuth
// [0x00820002]
// Parameters infos:

void AAccessControl::EndListenHostAuth() {
    static UFunction* pFnEndListenHostAuth = NULL;

    if (!pFnEndListenHostAuth)
        pFnEndListenHostAuth = (UFunction*)UObject::GObjObjects()->Data[7907];

    AAccessControl_execEndListenHostAuth_Parms EndListenHostAuth_Parms;

    this->ProcessEvent(pFnEndListenHostAuth, &EndListenHostAuth_Parms, NULL);
};

// Function Engine.AccessControl.ContinueListenHostAuth
// [0x00820002]
// Parameters infos:

void AAccessControl::ContinueListenHostAuth() {
    static UFunction* pFnContinueListenHostAuth = NULL;

    if (!pFnContinueListenHostAuth)
        pFnContinueListenHostAuth =
            (UFunction*)UObject::GObjObjects()->Data[7902];

    AAccessControl_execContinueListenHostAuth_Parms
        ContinueListenHostAuth_Parms;

    this->ProcessEvent(pFnContinueListenHostAuth, &ContinueListenHostAuth_Parms,
                       NULL);
};

// Function Engine.AccessControl.BeginListenHostAuth
// [0x00824002]
// Parameters infos:

void AAccessControl::BeginListenHostAuth() {
    static UFunction* pFnBeginListenHostAuth = NULL;

    if (!pFnBeginListenHostAuth)
        pFnBeginListenHostAuth = (UFunction*)UObject::GObjObjects()->Data[7890];

    AAccessControl_execBeginListenHostAuth_Parms BeginListenHostAuth_Parms;

    this->ProcessEvent(pFnBeginListenHostAuth, &BeginListenHostAuth_Parms,
                       NULL);
};

// Function Engine.AccessControl.ProcessServerAuthRetryRequest
// [0x00820002]
// Parameters infos:

void AAccessControl::ProcessServerAuthRetryRequest() {
    static UFunction* pFnProcessServerAuthRetryRequest = NULL;

    if (!pFnProcessServerAuthRetryRequest)
        pFnProcessServerAuthRetryRequest =
            (UFunction*)UObject::GObjObjects()->Data[7880];

    AAccessControl_execProcessServerAuthRetryRequest_Parms
        ProcessServerAuthRetryRequest_Parms;

    this->ProcessEvent(pFnProcessServerAuthRetryRequest,
                       &ProcessServerAuthRetryRequest_Parms, NULL);
};

// Function Engine.AccessControl.ProcessServerAuthRequest
// [0x00820002]
// Parameters infos:

void AAccessControl::ProcessServerAuthRequest() {
    static UFunction* pFnProcessServerAuthRequest = NULL;

    if (!pFnProcessServerAuthRequest)
        pFnProcessServerAuthRequest =
            (UFunction*)UObject::GObjObjects()->Data[7872];

    AAccessControl_execProcessServerAuthRequest_Parms
        ProcessServerAuthRequest_Parms;

    this->ProcessEvent(pFnProcessServerAuthRequest,
                       &ProcessServerAuthRequest_Parms, NULL);
};

// Function Engine.AccessControl.OnClientAuthComplete
// [0x00820002]
// Parameters infos:

void AAccessControl::OnClientAuthComplete() {
    static UFunction* pFnOnClientAuthComplete = NULL;

    if (!pFnOnClientAuthComplete)
        pFnOnClientAuthComplete =
            (UFunction*)UObject::GObjObjects()->Data[7859];

    AAccessControl_execOnClientAuthComplete_Parms OnClientAuthComplete_Parms;

    this->ProcessEvent(pFnOnClientAuthComplete, &OnClientAuthComplete_Parms,
                       NULL);
};

// Function Engine.AccessControl.ProcessClientAuthResponse
// [0x00020002]
// Parameters infos:

void AAccessControl::ProcessClientAuthResponse() {
    static UFunction* pFnProcessClientAuthResponse = NULL;

    if (!pFnProcessClientAuthResponse)
        pFnProcessClientAuthResponse =
            (UFunction*)UObject::GObjObjects()->Data[7851];

    AAccessControl_execProcessClientAuthResponse_Parms
        ProcessClientAuthResponse_Parms;

    this->ProcessEvent(pFnProcessClientAuthResponse,
                       &ProcessClientAuthResponse_Parms, NULL);
};

// Function Engine.AccessControl.OnAuthReady
// [0x00020002]
// Parameters infos:

void AAccessControl::OnAuthReady() {
    static UFunction* pFnOnAuthReady = NULL;

    if (!pFnOnAuthReady)
        pFnOnAuthReady = (UFunction*)UObject::GObjObjects()->Data[7848];

    AAccessControl_execOnAuthReady_Parms OnAuthReady_Parms;

    this->ProcessEvent(pFnOnAuthReady, &OnAuthReady_Parms, NULL);
};

// Function Engine.AccessControl.PendingAuthTimer
// [0x00820002]
// Parameters infos:

void AAccessControl::PendingAuthTimer() {
    static UFunction* pFnPendingAuthTimer = NULL;

    if (!pFnPendingAuthTimer)
        pFnPendingAuthTimer = (UFunction*)UObject::GObjObjects()->Data[7843];

    AAccessControl_execPendingAuthTimer_Parms PendingAuthTimer_Parms;

    this->ProcessEvent(pFnPendingAuthTimer, &PendingAuthTimer_Parms, NULL);
};

// Function Engine.AccessControl.PostLogin
// [0x00020002]
// Parameters infos:

void AAccessControl::PostLogin() {
    static UFunction* pFnPostLogin = NULL;

    if (!pFnPostLogin)
        pFnPostLogin = (UFunction*)UObject::GObjObjects()->Data[7841];

    AAccessControl_execPostLogin_Parms PostLogin_Parms;

    this->ProcessEvent(pFnPostLogin, &PostLogin_Parms, NULL);
};

// Function Engine.AccessControl.PreLogin
// [0x00C20802] ( FUNC_Event )
// Parameters infos:

void AAccessControl::eventPreLogin() {
    static UFunction* pFnPreLogin = NULL;

    if (!pFnPreLogin)
        pFnPreLogin = (UFunction*)UObject::GObjObjects()->Data[7818];

    AAccessControl_eventPreLogin_Parms PreLogin_Parms;

    this->ProcessEvent(pFnPreLogin, &PreLogin_Parms, NULL);
};

// Function Engine.AccessControl.ClearAuthDelegates
// [0x00020002]
// Parameters infos:

void AAccessControl::ClearAuthDelegates() {
    static UFunction* pFnClearAuthDelegates = NULL;

    if (!pFnClearAuthDelegates)
        pFnClearAuthDelegates = (UFunction*)UObject::GObjObjects()->Data[7816];

    AAccessControl_execClearAuthDelegates_Parms ClearAuthDelegates_Parms;

    this->ProcessEvent(pFnClearAuthDelegates, &ClearAuthDelegates_Parms, NULL);
};

// Function Engine.AccessControl.RegisterAuthDelegates
// [0x00020002]
// Parameters infos:

void AAccessControl::RegisterAuthDelegates() {
    static UFunction* pFnRegisterAuthDelegates = NULL;

    if (!pFnRegisterAuthDelegates)
        pFnRegisterAuthDelegates =
            (UFunction*)UObject::GObjObjects()->Data[7815];

    AAccessControl_execRegisterAuthDelegates_Parms RegisterAuthDelegates_Parms;

    this->ProcessEvent(pFnRegisterAuthDelegates, &RegisterAuthDelegates_Parms,
                       NULL);
};

// Function Engine.AccessControl.InitAuthHooks
// [0x00020002]
// Parameters infos:

void AAccessControl::InitAuthHooks() {
    static UFunction* pFnInitAuthHooks = NULL;

    if (!pFnInitAuthHooks)
        pFnInitAuthHooks = (UFunction*)UObject::GObjObjects()->Data[7812];

    AAccessControl_execInitAuthHooks_Parms InitAuthHooks_Parms;

    this->ProcessEvent(pFnInitAuthHooks, &InitAuthHooks_Parms, NULL);
};

// Function Engine.AccessControl.IsIDBanned
// [0x00420002]
// Parameters infos:

void AAccessControl::IsIDBanned() {
    static UFunction* pFnIsIDBanned = NULL;

    if (!pFnIsIDBanned)
        pFnIsIDBanned = (UFunction*)UObject::GObjObjects()->Data[7808];

    AAccessControl_execIsIDBanned_Parms IsIDBanned_Parms;

    this->ProcessEvent(pFnIsIDBanned, &IsIDBanned_Parms, NULL);
};

// Function Engine.AccessControl.CheckIPPolicy
// [0x00020002]
// Parameters infos:

void AAccessControl::CheckIPPolicy() {
    static UFunction* pFnCheckIPPolicy = NULL;

    if (!pFnCheckIPPolicy)
        pFnCheckIPPolicy = (UFunction*)UObject::GObjObjects()->Data[7798];

    AAccessControl_execCheckIPPolicy_Parms CheckIPPolicy_Parms;

    this->ProcessEvent(pFnCheckIPPolicy, &CheckIPPolicy_Parms, NULL);
};

// Function Engine.AccessControl.ValidLogin
// [0x00020002]
// Parameters infos:

void AAccessControl::ValidLogin() {
    static UFunction* pFnValidLogin = NULL;

    if (!pFnValidLogin)
        pFnValidLogin = (UFunction*)UObject::GObjObjects()->Data[7794];

    AAccessControl_execValidLogin_Parms ValidLogin_Parms;

    this->ProcessEvent(pFnValidLogin, &ValidLogin_Parms, NULL);
};

// Function Engine.AccessControl.ParseAdminOptions
// [0x00020002]
// Parameters infos:

void AAccessControl::ParseAdminOptions() {
    static UFunction* pFnParseAdminOptions = NULL;

    if (!pFnParseAdminOptions)
        pFnParseAdminOptions = (UFunction*)UObject::GObjObjects()->Data[7789];

    AAccessControl_execParseAdminOptions_Parms ParseAdminOptions_Parms;

    this->ProcessEvent(pFnParseAdminOptions, &ParseAdminOptions_Parms, NULL);
};

// Function Engine.AccessControl.AdminExited
// [0x00020002]
// Parameters infos:

void AAccessControl::AdminExited() {
    static UFunction* pFnAdminExited = NULL;

    if (!pFnAdminExited)
        pFnAdminExited = (UFunction*)UObject::GObjObjects()->Data[7786];

    AAccessControl_execAdminExited_Parms AdminExited_Parms;

    this->ProcessEvent(pFnAdminExited, &AdminExited_Parms, NULL);
};

// Function Engine.AccessControl.AdminEntered
// [0x00020002]
// Parameters infos:

void AAccessControl::AdminEntered() {
    static UFunction* pFnAdminEntered = NULL;

    if (!pFnAdminEntered)
        pFnAdminEntered = (UFunction*)UObject::GObjObjects()->Data[7783];

    AAccessControl_execAdminEntered_Parms AdminEntered_Parms;

    this->ProcessEvent(pFnAdminEntered, &AdminEntered_Parms, NULL);
};

// Function Engine.AccessControl.AdminLogout
// [0x00020002]
// Parameters infos:

void AAccessControl::AdminLogout() {
    static UFunction* pFnAdminLogout = NULL;

    if (!pFnAdminLogout)
        pFnAdminLogout = (UFunction*)UObject::GObjObjects()->Data[7780];

    AAccessControl_execAdminLogout_Parms AdminLogout_Parms;

    this->ProcessEvent(pFnAdminLogout, &AdminLogout_Parms, NULL);
};

// Function Engine.AccessControl.AdminLogin
// [0x00020002]
// Parameters infos:

void AAccessControl::AdminLogin() {
    static UFunction* pFnAdminLogin = NULL;

    if (!pFnAdminLogin)
        pFnAdminLogin = (UFunction*)UObject::GObjObjects()->Data[7776];

    AAccessControl_execAdminLogin_Parms AdminLogin_Parms;

    this->ProcessEvent(pFnAdminLogin, &AdminLogin_Parms, NULL);
};

// Function Engine.AccessControl.KickPlayer
// [0x00020002]
// Parameters infos:

void AAccessControl::KickPlayer() {
    static UFunction* pFnKickPlayer = NULL;

    if (!pFnKickPlayer)
        pFnKickPlayer = (UFunction*)UObject::GObjObjects()->Data[7772];

    AAccessControl_execKickPlayer_Parms KickPlayer_Parms;

    this->ProcessEvent(pFnKickPlayer, &KickPlayer_Parms, NULL);
};

// Function Engine.AccessControl.ForceKickPlayer
// [0x00020002]
// Parameters infos:

void AAccessControl::ForceKickPlayer() {
    static UFunction* pFnForceKickPlayer = NULL;

    if (!pFnForceKickPlayer)
        pFnForceKickPlayer = (UFunction*)UObject::GObjObjects()->Data[7768];

    AAccessControl_execForceKickPlayer_Parms ForceKickPlayer_Parms;

    this->ProcessEvent(pFnForceKickPlayer, &ForceKickPlayer_Parms, NULL);
};

// Function Engine.AccessControl.KickBan
// [0x00020002]
// Parameters infos:

void AAccessControl::KickBan() {
    static UFunction* pFnKickBan = NULL;

    if (!pFnKickBan)
        pFnKickBan = (UFunction*)UObject::GObjObjects()->Data[7764];

    AAccessControl_execKickBan_Parms KickBan_Parms;

    this->ProcessEvent(pFnKickBan, &KickBan_Parms, NULL);
};

// Function Engine.AccessControl.Kick
// [0x00020002]
// Parameters infos:

void AAccessControl::Kick() {
    static UFunction* pFnKick = NULL;

    if (!pFnKick) pFnKick = (UFunction*)UObject::GObjObjects()->Data[7761];

    AAccessControl_execKick_Parms Kick_Parms;

    this->ProcessEvent(pFnKick, &Kick_Parms, NULL);
};

// Function Engine.AccessControl.GetControllerFromString
// [0x00020002]
// Parameters infos:

void AAccessControl::GetControllerFromString() {
    static UFunction* pFnGetControllerFromString = NULL;

    if (!pFnGetControllerFromString)
        pFnGetControllerFromString =
            (UFunction*)UObject::GObjObjects()->Data[7755];

    AAccessControl_execGetControllerFromString_Parms
        GetControllerFromString_Parms;

    this->ProcessEvent(pFnGetControllerFromString,
                       &GetControllerFromString_Parms, NULL);
};

// Function Engine.AccessControl.RequiresPassword
// [0x00020002]
// Parameters infos:

void AAccessControl::RequiresPassword() {
    static UFunction* pFnRequiresPassword = NULL;

    if (!pFnRequiresPassword)
        pFnRequiresPassword = (UFunction*)UObject::GObjObjects()->Data[7753];

    AAccessControl_execRequiresPassword_Parms RequiresPassword_Parms;

    this->ProcessEvent(pFnRequiresPassword, &RequiresPassword_Parms, NULL);
};

// Function Engine.AccessControl.SetGamePassword
// [0x00020002]
// Parameters infos:

void AAccessControl::SetGamePassword() {
    static UFunction* pFnSetGamePassword = NULL;

    if (!pFnSetGamePassword)
        pFnSetGamePassword = (UFunction*)UObject::GObjObjects()->Data[7751];

    AAccessControl_execSetGamePassword_Parms SetGamePassword_Parms;

    this->ProcessEvent(pFnSetGamePassword, &SetGamePassword_Parms, NULL);
};

// Function Engine.AccessControl.SetAdminPassword
// [0x00020002]
// Parameters infos:

void AAccessControl::SetAdminPassword() {
    static UFunction* pFnSetAdminPassword = NULL;

    if (!pFnSetAdminPassword)
        pFnSetAdminPassword = (UFunction*)UObject::GObjObjects()->Data[7748];

    AAccessControl_execSetAdminPassword_Parms SetAdminPassword_Parms;

    this->ProcessEvent(pFnSetAdminPassword, &SetAdminPassword_Parms, NULL);
};

// Function Engine.AccessControl.IsAdmin
// [0x00020002]
// Parameters infos:

void AAccessControl::IsAdmin() {
    static UFunction* pFnIsAdmin = NULL;

    if (!pFnIsAdmin)
        pFnIsAdmin = (UFunction*)UObject::GObjObjects()->Data[7745];

    AAccessControl_execIsAdmin_Parms IsAdmin_Parms;

    this->ProcessEvent(pFnIsAdmin, &IsAdmin_Parms, NULL);
};

// Function Engine.AccessControl.Destroyed
// [0x00020002]
// Parameters infos:

void AAccessControl::Destroyed() {
    static UFunction* pFnDestroyed = NULL;

    if (!pFnDestroyed)
        pFnDestroyed = (UFunction*)UObject::GObjObjects()->Data[7744];

    AAccessControl_execDestroyed_Parms Destroyed_Parms;

    this->ProcessEvent(pFnDestroyed, &Destroyed_Parms, NULL);
};

// Function Engine.AccessControl.PostBeginPlay
// [0x00020002]
// Parameters infos:

void AAccessControl::PostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[7743];

    AAccessControl_execPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.Admin.ServerSwitch
// [0x002200C2]
// Parameters infos:

void AAdmin::ServerSwitch() {
    static UFunction* pFnServerSwitch = NULL;

    if (!pFnServerSwitch)
        pFnServerSwitch = (UFunction*)UObject::GObjObjects()->Data[12684];

    AAdmin_execServerSwitch_Parms ServerSwitch_Parms;

    this->ProcessEvent(pFnServerSwitch, &ServerSwitch_Parms, NULL);
};

// Function Engine.Admin.Switch
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AAdmin::Switch() {
    static UFunction* pFnSwitch = NULL;

    if (!pFnSwitch) pFnSwitch = (UFunction*)UObject::GObjObjects()->Data[12682];

    AAdmin_execSwitch_Parms Switch_Parms;

    this->ProcessEvent(pFnSwitch, &Switch_Parms, NULL);
};

// Function Engine.Admin.ServerRestartMap
// [0x002200C2]
// Parameters infos:

void AAdmin::ServerRestartMap() {
    static UFunction* pFnServerRestartMap = NULL;

    if (!pFnServerRestartMap)
        pFnServerRestartMap = (UFunction*)UObject::GObjObjects()->Data[12681];

    AAdmin_execServerRestartMap_Parms ServerRestartMap_Parms;

    this->ProcessEvent(pFnServerRestartMap, &ServerRestartMap_Parms, NULL);
};

// Function Engine.Admin.RestartMap
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AAdmin::RestartMap() {
    static UFunction* pFnRestartMap = NULL;

    if (!pFnRestartMap)
        pFnRestartMap = (UFunction*)UObject::GObjObjects()->Data[12680];

    AAdmin_execRestartMap_Parms RestartMap_Parms;

    this->ProcessEvent(pFnRestartMap, &RestartMap_Parms, NULL);
};

// Function Engine.Admin.PlayerList
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AAdmin::PlayerList() {
    static UFunction* pFnPlayerList = NULL;

    if (!pFnPlayerList)
        pFnPlayerList = (UFunction*)UObject::GObjObjects()->Data[12678];

    AAdmin_execPlayerList_Parms PlayerList_Parms;

    this->ProcessEvent(pFnPlayerList, &PlayerList_Parms, NULL);
};

// Function Engine.Admin.ServerKick
// [0x002200C2]
// Parameters infos:

void AAdmin::ServerKick() {
    static UFunction* pFnServerKick = NULL;

    if (!pFnServerKick)
        pFnServerKick = (UFunction*)UObject::GObjObjects()->Data[12676];

    AAdmin_execServerKick_Parms ServerKick_Parms;

    this->ProcessEvent(pFnServerKick, &ServerKick_Parms, NULL);
};

// Function Engine.Admin.Kick
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AAdmin::Kick() {
    static UFunction* pFnKick = NULL;

    if (!pFnKick) pFnKick = (UFunction*)UObject::GObjObjects()->Data[12674];

    AAdmin_execKick_Parms Kick_Parms;

    this->ProcessEvent(pFnKick, &Kick_Parms, NULL);
};

// Function Engine.Admin.ServerKickBan
// [0x002200C2]
// Parameters infos:

void AAdmin::ServerKickBan() {
    static UFunction* pFnServerKickBan = NULL;

    if (!pFnServerKickBan)
        pFnServerKickBan = (UFunction*)UObject::GObjObjects()->Data[12672];

    AAdmin_execServerKickBan_Parms ServerKickBan_Parms;

    this->ProcessEvent(pFnServerKickBan, &ServerKickBan_Parms, NULL);
};

// Function Engine.Admin.KickBan
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AAdmin::KickBan() {
    static UFunction* pFnKickBan = NULL;

    if (!pFnKickBan)
        pFnKickBan = (UFunction*)UObject::GObjObjects()->Data[12670];

    AAdmin_execKickBan_Parms KickBan_Parms;

    this->ProcessEvent(pFnKickBan, &KickBan_Parms, NULL);
};

// Function Engine.Admin.ServerAdmin
// [0x002200C2]
// Parameters infos:

void AAdmin::ServerAdmin() {
    static UFunction* pFnServerAdmin = NULL;

    if (!pFnServerAdmin)
        pFnServerAdmin = (UFunction*)UObject::GObjObjects()->Data[12667];

    AAdmin_execServerAdmin_Parms ServerAdmin_Parms;

    this->ProcessEvent(pFnServerAdmin, &ServerAdmin_Parms, NULL);
};

// Function Engine.Admin.Admin
// [0x00020202] ( FUNC_Exec )
// Parameters infos:

void AAdmin::Admin() {
    static UFunction* pFnAdmin = NULL;

    if (!pFnAdmin) pFnAdmin = (UFunction*)UObject::GObjObjects()->Data[12665];

    AAdmin_execAdmin_Parms Admin_Parms;

    this->ProcessEvent(pFnAdmin, &Admin_Parms, NULL);
};

// Function Engine.Admin.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AAdmin::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[12664];

    AAdmin_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.EmitterSpawnable.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AEmitterSpawnable::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[19080];

    AEmitterSpawnable_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.EmitterSpawnable.SetTemplate
// [0x00024902] ( FUNC_Event )
// Parameters infos:

void AEmitterSpawnable::eventSetTemplate() {
    static UFunction* pFnSetTemplate = NULL;

    if (!pFnSetTemplate)
        pFnSetTemplate = (UFunction*)UObject::GObjObjects()->Data[19077];

    AEmitterSpawnable_eventSetTemplate_Parms SetTemplate_Parms;

    this->ProcessEvent(pFnSetTemplate, &SetTemplate_Parms, NULL);
};

// Function Engine.SeqAct_ControlMovieTexture.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ControlMovieTexture::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[9248];

    USeqAct_ControlMovieTexture_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_SetSoundMode.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetSoundMode::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33139];

    USeqAct_SetSoundMode_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetSoundMode.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetSoundMode::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[33137];

    USeqAct_SetSoundMode_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_ConsoleCommand.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ConsoleCommand::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32823];

    USeqAct_ConsoleCommand_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_ConsoleCommand.VersionUpdated
// [0x00020002]
// Parameters infos:

void USeqAct_ConsoleCommand::VersionUpdated() {
    static UFunction* pFnVersionUpdated = NULL;

    if (!pFnVersionUpdated)
        pFnVersionUpdated = (UFunction*)UObject::GObjObjects()->Data[32820];

    USeqAct_ConsoleCommand_execVersionUpdated_Parms VersionUpdated_Parms;

    this->ProcessEvent(pFnVersionUpdated, &VersionUpdated_Parms, NULL);
};

// Function Engine.SeqAct_ToggleCinematicMode.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ToggleCinematicMode::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[33240];

    USeqAct_ToggleCinematicMode_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_ToggleHUD.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_ToggleHUD::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33247];

    USeqAct_ToggleHUD_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.GameMessage.GetString
// [0x00026002]
// Parameters infos:

void UGameMessage::GetString() {
    static UFunction* pFnGetString = NULL;

    if (!pFnGetString)
        pFnGetString = (UFunction*)UObject::GObjObjects()->Data[21940];

    UGameMessage_execGetString_Parms GetString_Parms;

    this->ProcessEvent(pFnGetString, &GetString_Parms, NULL);
};

// Function Engine.CoverReplicator.ClientReceiveLinkDisabledState
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientReceiveLinkDisabledState() {
    static UFunction* pFnClientReceiveLinkDisabledState = NULL;

    if (!pFnClientReceiveLinkDisabledState)
        pFnClientReceiveLinkDisabledState =
            (UFunction*)UObject::GObjObjects()->Data[17485];

    ACoverReplicator_execClientReceiveLinkDisabledState_Parms
        ClientReceiveLinkDisabledState_Parms;

    this->ProcessEvent(pFnClientReceiveLinkDisabledState,
                       &ClientReceiveLinkDisabledState_Parms, NULL);
};

// Function Engine.CoverReplicator.ServerSendLinkDisabledState
// [0x002200C2]
// Parameters infos:

void ACoverReplicator::ServerSendLinkDisabledState() {
    static UFunction* pFnServerSendLinkDisabledState = NULL;

    if (!pFnServerSendLinkDisabledState)
        pFnServerSendLinkDisabledState =
            (UFunction*)UObject::GObjObjects()->Data[17483];

    ACoverReplicator_execServerSendLinkDisabledState_Parms
        ServerSendLinkDisabledState_Parms;

    this->ProcessEvent(pFnServerSendLinkDisabledState,
                       &ServerSendLinkDisabledState_Parms, NULL);
};

// Function Engine.CoverReplicator.NotifyLinkDisabledStateChange
// [0x00020002]
// Parameters infos:

void ACoverReplicator::NotifyLinkDisabledStateChange() {
    static UFunction* pFnNotifyLinkDisabledStateChange = NULL;

    if (!pFnNotifyLinkDisabledStateChange)
        pFnNotifyLinkDisabledStateChange =
            (UFunction*)UObject::GObjObjects()->Data[17479];

    ACoverReplicator_execNotifyLinkDisabledStateChange_Parms
        NotifyLinkDisabledStateChange_Parms;

    this->ProcessEvent(pFnNotifyLinkDisabledStateChange,
                       &NotifyLinkDisabledStateChange_Parms, NULL);
};

// Function Engine.CoverReplicator.ClientReceiveManualCoverTypeSlots
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientReceiveManualCoverTypeSlots() {
    static UFunction* pFnClientReceiveManualCoverTypeSlots = NULL;

    if (!pFnClientReceiveManualCoverTypeSlots)
        pFnClientReceiveManualCoverTypeSlots =
            (UFunction*)UObject::GObjObjects()->Data[17472];

    ACoverReplicator_execClientReceiveManualCoverTypeSlots_Parms
        ClientReceiveManualCoverTypeSlots_Parms;

    this->ProcessEvent(pFnClientReceiveManualCoverTypeSlots,
                       &ClientReceiveManualCoverTypeSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.ServerSendManualCoverTypeSlots
// [0x00A200C2]
// Parameters infos:

void ACoverReplicator::ServerSendManualCoverTypeSlots() {
    static UFunction* pFnServerSendManualCoverTypeSlots = NULL;

    if (!pFnServerSendManualCoverTypeSlots)
        pFnServerSendManualCoverTypeSlots =
            (UFunction*)UObject::GObjObjects()->Data[17465];

    ACoverReplicator_execServerSendManualCoverTypeSlots_Parms
        ServerSendManualCoverTypeSlots_Parms;

    this->ProcessEvent(pFnServerSendManualCoverTypeSlots,
                       &ServerSendManualCoverTypeSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.NotifySetManualCoverTypeForSlots
// [0x00420002]
// Parameters infos:

void ACoverReplicator::NotifySetManualCoverTypeForSlots() {
    static UFunction* pFnNotifySetManualCoverTypeForSlots = NULL;

    if (!pFnNotifySetManualCoverTypeForSlots)
        pFnNotifySetManualCoverTypeForSlots =
            (UFunction*)UObject::GObjObjects()->Data[17456];

    ACoverReplicator_execNotifySetManualCoverTypeForSlots_Parms
        NotifySetManualCoverTypeForSlots_Parms;

    this->ProcessEvent(pFnNotifySetManualCoverTypeForSlots,
                       &NotifySetManualCoverTypeForSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.ClientReceiveAdjustedSlots
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientReceiveAdjustedSlots() {
    static UFunction* pFnClientReceiveAdjustedSlots = NULL;

    if (!pFnClientReceiveAdjustedSlots)
        pFnClientReceiveAdjustedSlots =
            (UFunction*)UObject::GObjObjects()->Data[17449];

    ACoverReplicator_execClientReceiveAdjustedSlots_Parms
        ClientReceiveAdjustedSlots_Parms;

    this->ProcessEvent(pFnClientReceiveAdjustedSlots,
                       &ClientReceiveAdjustedSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.ServerSendAdjustedSlots
// [0x002200C2]
// Parameters infos:

void ACoverReplicator::ServerSendAdjustedSlots() {
    static UFunction* pFnServerSendAdjustedSlots = NULL;

    if (!pFnServerSendAdjustedSlots)
        pFnServerSendAdjustedSlots =
            (UFunction*)UObject::GObjObjects()->Data[17442];

    ACoverReplicator_execServerSendAdjustedSlots_Parms
        ServerSendAdjustedSlots_Parms;

    this->ProcessEvent(pFnServerSendAdjustedSlots,
                       &ServerSendAdjustedSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.NotifyAutoAdjustSlots
// [0x00420002]
// Parameters infos:

void ACoverReplicator::NotifyAutoAdjustSlots() {
    static UFunction* pFnNotifyAutoAdjustSlots = NULL;

    if (!pFnNotifyAutoAdjustSlots)
        pFnNotifyAutoAdjustSlots =
            (UFunction*)UObject::GObjObjects()->Data[17434];

    ACoverReplicator_execNotifyAutoAdjustSlots_Parms
        NotifyAutoAdjustSlots_Parms;

    this->ProcessEvent(pFnNotifyAutoAdjustSlots, &NotifyAutoAdjustSlots_Parms,
                       NULL);
};

// Function Engine.CoverReplicator.ClientReceiveDisabledSlots
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientReceiveDisabledSlots() {
    static UFunction* pFnClientReceiveDisabledSlots = NULL;

    if (!pFnClientReceiveDisabledSlots)
        pFnClientReceiveDisabledSlots =
            (UFunction*)UObject::GObjObjects()->Data[17427];

    ACoverReplicator_execClientReceiveDisabledSlots_Parms
        ClientReceiveDisabledSlots_Parms;

    this->ProcessEvent(pFnClientReceiveDisabledSlots,
                       &ClientReceiveDisabledSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.ServerSendDisabledSlots
// [0x002200C2]
// Parameters infos:

void ACoverReplicator::ServerSendDisabledSlots() {
    static UFunction* pFnServerSendDisabledSlots = NULL;

    if (!pFnServerSendDisabledSlots)
        pFnServerSendDisabledSlots =
            (UFunction*)UObject::GObjObjects()->Data[17420];

    ACoverReplicator_execServerSendDisabledSlots_Parms
        ServerSendDisabledSlots_Parms;

    this->ProcessEvent(pFnServerSendDisabledSlots,
                       &ServerSendDisabledSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.NotifyDisabledSlots
// [0x00420002]
// Parameters infos:

void ACoverReplicator::NotifyDisabledSlots() {
    static UFunction* pFnNotifyDisabledSlots = NULL;

    if (!pFnNotifyDisabledSlots)
        pFnNotifyDisabledSlots =
            (UFunction*)UObject::GObjObjects()->Data[17412];

    ACoverReplicator_execNotifyDisabledSlots_Parms NotifyDisabledSlots_Parms;

    this->ProcessEvent(pFnNotifyDisabledSlots, &NotifyDisabledSlots_Parms,
                       NULL);
};

// Function Engine.CoverReplicator.ClientReceiveEnabledSlots
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientReceiveEnabledSlots() {
    static UFunction* pFnClientReceiveEnabledSlots = NULL;

    if (!pFnClientReceiveEnabledSlots)
        pFnClientReceiveEnabledSlots =
            (UFunction*)UObject::GObjObjects()->Data[17405];

    ACoverReplicator_execClientReceiveEnabledSlots_Parms
        ClientReceiveEnabledSlots_Parms;

    this->ProcessEvent(pFnClientReceiveEnabledSlots,
                       &ClientReceiveEnabledSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.ServerSendEnabledSlots
// [0x002200C2]
// Parameters infos:

void ACoverReplicator::ServerSendEnabledSlots() {
    static UFunction* pFnServerSendEnabledSlots = NULL;

    if (!pFnServerSendEnabledSlots)
        pFnServerSendEnabledSlots =
            (UFunction*)UObject::GObjObjects()->Data[17398];

    ACoverReplicator_execServerSendEnabledSlots_Parms
        ServerSendEnabledSlots_Parms;

    this->ProcessEvent(pFnServerSendEnabledSlots, &ServerSendEnabledSlots_Parms,
                       NULL);
};

// Function Engine.CoverReplicator.NotifyEnabledSlots
// [0x00420002]
// Parameters infos:

void ACoverReplicator::NotifyEnabledSlots() {
    static UFunction* pFnNotifyEnabledSlots = NULL;

    if (!pFnNotifyEnabledSlots)
        pFnNotifyEnabledSlots = (UFunction*)UObject::GObjObjects()->Data[17390];

    ACoverReplicator_execNotifyEnabledSlots_Parms NotifyEnabledSlots_Parms;

    this->ProcessEvent(pFnNotifyEnabledSlots, &NotifyEnabledSlots_Parms, NULL);
};

// Function Engine.CoverReplicator.ClientReceiveInitialCoverReplicationInfo
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientReceiveInitialCoverReplicationInfo() {
    static UFunction* pFnClientReceiveInitialCoverReplicationInfo = NULL;

    if (!pFnClientReceiveInitialCoverReplicationInfo)
        pFnClientReceiveInitialCoverReplicationInfo =
            (UFunction*)UObject::GObjObjects()->Data[17376];

    ACoverReplicator_execClientReceiveInitialCoverReplicationInfo_Parms
        ClientReceiveInitialCoverReplicationInfo_Parms;

    this->ProcessEvent(pFnClientReceiveInitialCoverReplicationInfo,
                       &ClientReceiveInitialCoverReplicationInfo_Parms, NULL);
};

// Function Engine.CoverReplicator.ServerSendInitialCoverReplicationInfo
// [0x00A200C2]
// Parameters infos:

void ACoverReplicator::ServerSendInitialCoverReplicationInfo() {
    static UFunction* pFnServerSendInitialCoverReplicationInfo = NULL;

    if (!pFnServerSendInitialCoverReplicationInfo)
        pFnServerSendInitialCoverReplicationInfo =
            (UFunction*)UObject::GObjObjects()->Data[17363];

    ACoverReplicator_execServerSendInitialCoverReplicationInfo_Parms
        ServerSendInitialCoverReplicationInfo_Parms;

    this->ProcessEvent(pFnServerSendInitialCoverReplicationInfo,
                       &ServerSendInitialCoverReplicationInfo_Parms, NULL);
};

// Function Engine.CoverReplicator.ClientSetOwner
// [0x010201C2]
// Parameters infos:

void ACoverReplicator::ClientSetOwner() {
    static UFunction* pFnClientSetOwner = NULL;

    if (!pFnClientSetOwner)
        pFnClientSetOwner = (UFunction*)UObject::GObjObjects()->Data[17361];

    ACoverReplicator_execClientSetOwner_Parms ClientSetOwner_Parms;

    this->ProcessEvent(pFnClientSetOwner, &ClientSetOwner_Parms, NULL);
};

// Function Engine.CoverReplicator.ReplicateInitialCoverInfo
// [0x00020002]
// Parameters infos:

void ACoverReplicator::ReplicateInitialCoverInfo() {
    static UFunction* pFnReplicateInitialCoverInfo = NULL;

    if (!pFnReplicateInitialCoverInfo)
        pFnReplicateInitialCoverInfo =
            (UFunction*)UObject::GObjObjects()->Data[17359];

    ACoverReplicator_execReplicateInitialCoverInfo_Parms
        ReplicateInitialCoverInfo_Parms;

    this->ProcessEvent(pFnReplicateInitialCoverInfo,
                       &ReplicateInitialCoverInfo_Parms, NULL);
};

// Function Engine.CoverReplicator.PurgeOldEntries
// [0x00020002]
// Parameters infos:

void ACoverReplicator::PurgeOldEntries() {
    static UFunction* pFnPurgeOldEntries = NULL;

    if (!pFnPurgeOldEntries)
        pFnPurgeOldEntries = (UFunction*)UObject::GObjObjects()->Data[17357];

    ACoverReplicator_execPurgeOldEntries_Parms PurgeOldEntries_Parms;

    this->ProcessEvent(pFnPurgeOldEntries, &PurgeOldEntries_Parms, NULL);
};

// Function Engine.AnimNotify_PlayFaceFXAnim.Notify
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void UAnimNotify_PlayFaceFXAnim::eventNotify() {
    static UFunction* pFnNotify = NULL;

    if (!pFnNotify) pFnNotify = (UFunction*)UObject::GObjObjects()->Data[14700];

    UAnimNotify_PlayFaceFXAnim_eventNotify_Parms Notify_Parms;

    this->ProcessEvent(pFnNotify, &Notify_Parms, NULL);
};

// Function Engine.BroadcastHandler.AllowBroadcastLocalizedTeam
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void ABroadcastHandler::eventAllowBroadcastLocalizedTeam() {
    static UFunction* pFnAllowBroadcastLocalizedTeam = NULL;

    if (!pFnAllowBroadcastLocalizedTeam)
        pFnAllowBroadcastLocalizedTeam =
            (UFunction*)UObject::GObjObjects()->Data[15354];

    ABroadcastHandler_eventAllowBroadcastLocalizedTeam_Parms
        AllowBroadcastLocalizedTeam_Parms;

    this->ProcessEvent(pFnAllowBroadcastLocalizedTeam,
                       &AllowBroadcastLocalizedTeam_Parms, NULL);
};

// Function Engine.BroadcastHandler.AllowBroadcastLocalized
// [0x00024802] ( FUNC_Event )
// Parameters infos:

void ABroadcastHandler::eventAllowBroadcastLocalized() {
    static UFunction* pFnAllowBroadcastLocalized = NULL;

    if (!pFnAllowBroadcastLocalized)
        pFnAllowBroadcastLocalized =
            (UFunction*)UObject::GObjObjects()->Data[15346];

    ABroadcastHandler_eventAllowBroadcastLocalized_Parms
        AllowBroadcastLocalized_Parms;

    this->ProcessEvent(pFnAllowBroadcastLocalized,
                       &AllowBroadcastLocalized_Parms, NULL);
};

// Function Engine.BroadcastHandler.BroadcastTeam
// [0x00024002]
// Parameters infos:

void ABroadcastHandler::BroadcastTeam() {
    static UFunction* pFnBroadcastTeam = NULL;

    if (!pFnBroadcastTeam)
        pFnBroadcastTeam = (UFunction*)UObject::GObjObjects()->Data[15341];

    ABroadcastHandler_execBroadcastTeam_Parms BroadcastTeam_Parms;

    this->ProcessEvent(pFnBroadcastTeam, &BroadcastTeam_Parms, NULL);
};

// Function Engine.BroadcastHandler.Broadcast
// [0x00024002]
// Parameters infos:

void ABroadcastHandler::Broadcast() {
    static UFunction* pFnBroadcast = NULL;

    if (!pFnBroadcast)
        pFnBroadcast = (UFunction*)UObject::GObjObjects()->Data[15335];

    ABroadcastHandler_execBroadcast_Parms Broadcast_Parms;

    this->ProcessEvent(pFnBroadcast, &Broadcast_Parms, NULL);
};

// Function Engine.BroadcastHandler.BroadcastLocalized
// [0x00024002]
// Parameters infos:

void ABroadcastHandler::BroadcastLocalized() {
    static UFunction* pFnBroadcastLocalized = NULL;

    if (!pFnBroadcastLocalized)
        pFnBroadcastLocalized = (UFunction*)UObject::GObjObjects()->Data[15327];

    ABroadcastHandler_execBroadcastLocalized_Parms BroadcastLocalized_Parms;

    this->ProcessEvent(pFnBroadcastLocalized, &BroadcastLocalized_Parms, NULL);
};

// Function Engine.BroadcastHandler.BroadcastText
// [0x00024002]
// Parameters infos:

void ABroadcastHandler::BroadcastText() {
    static UFunction* pFnBroadcastText = NULL;

    if (!pFnBroadcastText)
        pFnBroadcastText = (UFunction*)UObject::GObjObjects()->Data[15322];

    ABroadcastHandler_execBroadcastText_Parms BroadcastText_Parms;

    this->ProcessEvent(pFnBroadcastText, &BroadcastText_Parms, NULL);
};

// Function Engine.BroadcastHandler.AllowsBroadcast
// [0x00020002]
// Parameters infos:

void ABroadcastHandler::AllowsBroadcast() {
    static UFunction* pFnAllowsBroadcast = NULL;

    if (!pFnAllowsBroadcast)
        pFnAllowsBroadcast = (UFunction*)UObject::GObjObjects()->Data[15318];

    ABroadcastHandler_execAllowsBroadcast_Parms AllowsBroadcast_Parms;

    this->ProcessEvent(pFnAllowsBroadcast, &AllowsBroadcast_Parms, NULL);
};

// Function Engine.BroadcastHandler.UpdateSentText
// [0x00020002]
// Parameters infos:

void ABroadcastHandler::UpdateSentText() {
    static UFunction* pFnUpdateSentText = NULL;

    if (!pFnUpdateSentText)
        pFnUpdateSentText = (UFunction*)UObject::GObjObjects()->Data[15317];

    ABroadcastHandler_execUpdateSentText_Parms UpdateSentText_Parms;

    this->ProcessEvent(pFnUpdateSentText, &UpdateSentText_Parms, NULL);
};

// Function Engine.HttpFactory.CreateRequest
// [0x00022002]
// Parameters infos:

void UHttpFactory::CreateRequest() {
    static UFunction* pFnCreateRequest = NULL;

    if (!pFnCreateRequest)
        pFnCreateRequest = (UFunction*)UObject::GObjObjects()->Data[16220];

    UHttpFactory_execCreateRequest_Parms CreateRequest_Parms;

    this->ProcessEvent(pFnCreateRequest, &CreateRequest_Parms, NULL);
};

// Function Engine.CloudSaveSystemKVSInterface.WriteKeyValue
// [0x00420000]
// Parameters infos:

void UCloudSaveSystemKVSInterface::WriteKeyValue() {
    static UFunction* pFnWriteKeyValue = NULL;

    if (!pFnWriteKeyValue)
        pFnWriteKeyValue = (UFunction*)UObject::GObjObjects()->Data[16463];

    UCloudSaveSystemKVSInterface_execWriteKeyValue_Parms WriteKeyValue_Parms;

    this->ProcessEvent(pFnWriteKeyValue, &WriteKeyValue_Parms, NULL);
};

// Function Engine.CloudSaveSystemKVSInterface.ReadKeyValue
// [0x00420000]
// Parameters infos:

void UCloudSaveSystemKVSInterface::ReadKeyValue() {
    static UFunction* pFnReadKeyValue = NULL;

    if (!pFnReadKeyValue)
        pFnReadKeyValue = (UFunction*)UObject::GObjObjects()->Data[16459];

    UCloudSaveSystemKVSInterface_execReadKeyValue_Parms ReadKeyValue_Parms;

    this->ProcessEvent(pFnReadKeyValue, &ReadKeyValue_Parms, NULL);
};

// Function Engine.CloudSaveSystemDataBlobStoreInterface.DeleteDataBlob
// [0x00020000]
// Parameters infos:

void UCloudSaveSystemDataBlobStoreInterface::DeleteDataBlob() {
    static UFunction* pFnDeleteDataBlob = NULL;

    if (!pFnDeleteDataBlob)
        pFnDeleteDataBlob = (UFunction*)UObject::GObjObjects()->Data[16468];

    UCloudSaveSystemDataBlobStoreInterface_execDeleteDataBlob_Parms
        DeleteDataBlob_Parms;

    this->ProcessEvent(pFnDeleteDataBlob, &DeleteDataBlob_Parms, NULL);
};

// Function
// Engine.CloudSaveSystemDataBlobStoreInterface.DeleteDataBlobCallbackDelegate
// [0x00140001] ( FUNC_Final )
// Parameters infos:

void UCloudSaveSystemDataBlobStoreInterface::DeleteDataBlobCallbackDelegate() {
    static UFunction* pFnDeleteDataBlobCallbackDelegate = NULL;

    if (!pFnDeleteDataBlobCallbackDelegate)
        pFnDeleteDataBlobCallbackDelegate =
            (UFunction*)UObject::GObjObjects()->Data[16512];

    UCloudSaveSystemDataBlobStoreInterface_execDeleteDataBlobCallbackDelegate_Parms
        DeleteDataBlobCallbackDelegate_Parms;

    this->ProcessEvent(pFnDeleteDataBlobCallbackDelegate,
                       &DeleteDataBlobCallbackDelegate_Parms, NULL);
};

// Function Engine.CloudSaveSystemDataBlobStoreInterface.SetDataBlob
// [0x00420000]
// Parameters infos:

void UCloudSaveSystemDataBlobStoreInterface::SetDataBlob() {
    static UFunction* pFnSetDataBlob = NULL;

    if (!pFnSetDataBlob)
        pFnSetDataBlob = (UFunction*)UObject::GObjObjects()->Data[16506];

    UCloudSaveSystemDataBlobStoreInterface_execSetDataBlob_Parms
        SetDataBlob_Parms;

    this->ProcessEvent(pFnSetDataBlob, &SetDataBlob_Parms, NULL);
};

// Function
// Engine.CloudSaveSystemDataBlobStoreInterface.SetDataBlobCallbackDelegate
// [0x00120000]
// Parameters infos:

void UCloudSaveSystemDataBlobStoreInterface::SetDataBlobCallbackDelegate() {
    static UFunction* pFnSetDataBlobCallbackDelegate = NULL;

    if (!pFnSetDataBlobCallbackDelegate)
        pFnSetDataBlobCallbackDelegate =
            (UFunction*)UObject::GObjObjects()->Data[16501];

    UCloudSaveSystemDataBlobStoreInterface_execSetDataBlobCallbackDelegate_Parms
        SetDataBlobCallbackDelegate_Parms;

    this->ProcessEvent(pFnSetDataBlobCallbackDelegate,
                       &SetDataBlobCallbackDelegate_Parms, NULL);
};

// Function Engine.CloudSaveSystemDataBlobStoreInterface.GetDataBlob
// [0x00020000]
// Parameters infos:

void UCloudSaveSystemDataBlobStoreInterface::GetDataBlob() {
    static UFunction* pFnGetDataBlob = NULL;

    if (!pFnGetDataBlob)
        pFnGetDataBlob = (UFunction*)UObject::GObjObjects()->Data[16497];

    UCloudSaveSystemDataBlobStoreInterface_execGetDataBlob_Parms
        GetDataBlob_Parms;

    this->ProcessEvent(pFnGetDataBlob, &GetDataBlob_Parms, NULL);
};

// Function
// Engine.CloudSaveSystemDataBlobStoreInterface.GetDataBlobCallbackDelegate
// [0x00520000]
// Parameters infos:

void UCloudSaveSystemDataBlobStoreInterface::GetDataBlobCallbackDelegate() {
    static UFunction* pFnGetDataBlobCallbackDelegate = NULL;

    if (!pFnGetDataBlobCallbackDelegate)
        pFnGetDataBlobCallbackDelegate =
            (UFunction*)UObject::GObjObjects()->Data[16490];

    UCloudSaveSystemDataBlobStoreInterface_execGetDataBlobCallbackDelegate_Parms
        GetDataBlobCallbackDelegate_Parms;

    this->ProcessEvent(pFnGetDataBlobCallbackDelegate,
                       &GetDataBlobCallbackDelegate_Parms, NULL);
};

// Function Engine.CloudStorageBaseCloudSaveSystemKVS.GenerateKeyNameForSaveSlot
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UCloudStorageBaseCloudSaveSystemKVS::GenerateKeyNameForSaveSlot() {
    static UFunction* pFnGenerateKeyNameForSaveSlot = NULL;

    if (!pFnGenerateKeyNameForSaveSlot)
        pFnGenerateKeyNameForSaveSlot =
            (UFunction*)UObject::GObjObjects()->Data[16629];

    UCloudStorageBaseCloudSaveSystemKVS_execGenerateKeyNameForSaveSlot_Parms
        GenerateKeyNameForSaveSlot_Parms;

    this->ProcessEvent(pFnGenerateKeyNameForSaveSlot,
                       &GenerateKeyNameForSaveSlot_Parms, NULL);
};

// Function Engine.CloudStorageBaseCloudSaveSystemKVS.WriteKeyValue
// [0x00420002]
// Parameters infos:

void UCloudStorageBaseCloudSaveSystemKVS::WriteKeyValue() {
    static UFunction* pFnWriteKeyValue = NULL;

    if (!pFnWriteKeyValue)
        pFnWriteKeyValue = (UFunction*)UObject::GObjObjects()->Data[16623];

    UCloudStorageBaseCloudSaveSystemKVS_execWriteKeyValue_Parms
        WriteKeyValue_Parms;

    this->ProcessEvent(pFnWriteKeyValue, &WriteKeyValue_Parms, NULL);
};

// Function Engine.CloudStorageBaseCloudSaveSystemKVS.ReadKeyValue
// [0x00420002]
// Parameters infos:

void UCloudStorageBaseCloudSaveSystemKVS::ReadKeyValue() {
    static UFunction* pFnReadKeyValue = NULL;

    if (!pFnReadKeyValue)
        pFnReadKeyValue = (UFunction*)UObject::GObjObjects()->Data[16616];

    UCloudStorageBaseCloudSaveSystemKVS_execReadKeyValue_Parms
        ReadKeyValue_Parms;

    this->ProcessEvent(pFnReadKeyValue, &ReadKeyValue_Parms, NULL);
};

// Function Engine.CloudStorageBaseCloudSaveSystemKVS.Init
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UCloudStorageBaseCloudSaveSystemKVS::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[16614];

    UCloudStorageBaseCloudSaveSystemKVS_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function Engine.ColorScaleVolume.UnTouch
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void AColorScaleVolume::eventUnTouch() {
    static UFunction* pFnUnTouch = NULL;

    if (!pFnUnTouch)
        pFnUnTouch = (UFunction*)UObject::GObjObjects()->Data[16658];

    AColorScaleVolume_eventUnTouch_Parms UnTouch_Parms;

    this->ProcessEvent(pFnUnTouch, &UnTouch_Parms, NULL);
};

// Function Engine.ColorScaleVolume.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AColorScaleVolume::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[16651];

    AColorScaleVolume_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function Engine.VolumeTimer.Timer
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AVolumeTimer::eventTimer() {
    static UFunction* pFnTimer = NULL;

    if (!pFnTimer) pFnTimer = (UFunction*)UObject::GObjObjects()->Data[36707];

    AVolumeTimer_eventTimer_Parms Timer_Parms;

    this->ProcessEvent(pFnTimer, &Timer_Parms, NULL);
};

// Function Engine.VolumeTimer.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AVolumeTimer::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[36706];

    AVolumeTimer_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.DynamicPhysicsVolume.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADynamicPhysicsVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18611];

    ADynamicPhysicsVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.DynamicTriggerVolume.PostBeginPlay
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void ADynamicTriggerVolume::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[18675];

    ADynamicTriggerVolume_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.ExponentialHeightFog.OnToggle
// [0x00020102]
// Parameters infos:

void AExponentialHeightFog::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[19491];

    AExponentialHeightFog_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.ExponentialHeightFog.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AExponentialHeightFog::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[19489];

    AExponentialHeightFog_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.ExponentialHeightFog.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AExponentialHeightFog::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[19488];

    AExponentialHeightFog_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.FailedConnect.GetString
// [0x00026002]
// Parameters infos:

void UFailedConnect::GetString() {
    static UFunction* pFnGetString = NULL;

    if (!pFnGetString)
        pFnGetString = (UFunction*)UObject::GObjObjects()->Data[19611];

    UFailedConnect_execGetString_Parms GetString_Parms;

    this->ProcessEvent(pFnGetString, &GetString_Parms, NULL);
};

// Function Engine.FailedConnect.GetFailSwitch
// [0x00022002]
// Parameters infos:

void UFailedConnect::GetFailSwitch() {
    static UFunction* pFnGetFailSwitch = NULL;

    if (!pFnGetFailSwitch)
        pFnGetFailSwitch = (UFunction*)UObject::GObjObjects()->Data[19608];

    UFailedConnect_execGetFailSwitch_Parms GetFailSwitch_Parms;

    this->ProcessEvent(pFnGetFailSwitch, &GetFailSwitch_Parms, NULL);
};

// Function Engine.HeightFog.OnToggle
// [0x00020102]
// Parameters infos:

void AHeightFog::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[22996];

    AHeightFog_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.HeightFog.ReplicatedEvent
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AHeightFog::eventReplicatedEvent() {
    static UFunction* pFnReplicatedEvent = NULL;

    if (!pFnReplicatedEvent)
        pFnReplicatedEvent = (UFunction*)UObject::GObjObjects()->Data[22994];

    AHeightFog_eventReplicatedEvent_Parms ReplicatedEvent_Parms;

    this->ProcessEvent(pFnReplicatedEvent, &ReplicatedEvent_Parms, NULL);
};

// Function Engine.HeightFog.PostBeginPlay
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AHeightFog::eventPostBeginPlay() {
    static UFunction* pFnPostBeginPlay = NULL;

    if (!pFnPostBeginPlay)
        pFnPostBeginPlay = (UFunction*)UObject::GObjObjects()->Data[22993];

    AHeightFog_eventPostBeginPlay_Parms PostBeginPlay_Parms;

    this->ProcessEvent(pFnPostBeginPlay, &PostBeginPlay_Parms, NULL);
};

// Function Engine.OnlineEventsInterface.UpdatePlaylistPopulation
// [0x00020000]
// Parameters infos:

void UOnlineEventsInterface::UpdatePlaylistPopulation() {
    static UFunction* pFnUpdatePlaylistPopulation = NULL;

    if (!pFnUpdatePlaylistPopulation)
        pFnUpdatePlaylistPopulation =
            (UFunction*)UObject::GObjObjects()->Data[27406];

    UOnlineEventsInterface_execUpdatePlaylistPopulation_Parms
        UpdatePlaylistPopulation_Parms;

    this->ProcessEvent(pFnUpdatePlaylistPopulation,
                       &UpdatePlaylistPopulation_Parms, NULL);
};

// Function Engine.OnlineEventsInterface.UploadGameplayEventsData
// [0x00420000]
// Parameters infos:

void UOnlineEventsInterface::UploadGameplayEventsData() {
    static UFunction* pFnUploadGameplayEventsData = NULL;

    if (!pFnUploadGameplayEventsData)
        pFnUploadGameplayEventsData =
            (UFunction*)UObject::GObjObjects()->Data[27401];

    UOnlineEventsInterface_execUploadGameplayEventsData_Parms
        UploadGameplayEventsData_Parms;

    this->ProcessEvent(pFnUploadGameplayEventsData,
                       &UploadGameplayEventsData_Parms, NULL);
};

// Function Engine.OnlineEventsInterface.UploadPlayerData
// [0x00020000]
// Parameters infos:

void UOnlineEventsInterface::UploadPlayerData() {
    static UFunction* pFnUploadPlayerData = NULL;

    if (!pFnUploadPlayerData)
        pFnUploadPlayerData = (UFunction*)UObject::GObjObjects()->Data[27395];

    UOnlineEventsInterface_execUploadPlayerData_Parms UploadPlayerData_Parms;

    this->ProcessEvent(pFnUploadPlayerData, &UploadPlayerData_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.ClearOnChunkCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::ClearOnChunkCompleteDelegate() {
    static UFunction* pFnClearOnChunkCompleteDelegate = NULL;

    if (!pFnClearOnChunkCompleteDelegate)
        pFnClearOnChunkCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27455];

    UOnlineGameDownloadInterface_execClearOnChunkCompleteDelegate_Parms
        ClearOnChunkCompleteDelegate_Parms;

    this->ProcessEvent(pFnClearOnChunkCompleteDelegate,
                       &ClearOnChunkCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.AddOnChunkCompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::AddOnChunkCompleteDelegate() {
    static UFunction* pFnAddOnChunkCompleteDelegate = NULL;

    if (!pFnAddOnChunkCompleteDelegate)
        pFnAddOnChunkCompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[27453];

    UOnlineGameDownloadInterface_execAddOnChunkCompleteDelegate_Parms
        AddOnChunkCompleteDelegate_Parms;

    this->ProcessEvent(pFnAddOnChunkCompleteDelegate,
                       &AddOnChunkCompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.OnChunkComplete
// [0x00120000]
// Parameters infos:

void UOnlineGameDownloadInterface::OnChunkComplete() {
    static UFunction* pFnOnChunkComplete = NULL;

    if (!pFnOnChunkComplete)
        pFnOnChunkComplete = (UFunction*)UObject::GObjObjects()->Data[27451];

    UOnlineGameDownloadInterface_execOnChunkComplete_Parms
        OnChunkComplete_Parms;

    this->ProcessEvent(pFnOnChunkComplete, &OnChunkComplete_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.SetDownloadSpeed
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::SetDownloadSpeed() {
    static UFunction* pFnSetDownloadSpeed = NULL;

    if (!pFnSetDownloadSpeed)
        pFnSetDownloadSpeed = (UFunction*)UObject::GObjObjects()->Data[27449];

    UOnlineGameDownloadInterface_execSetDownloadSpeed_Parms
        SetDownloadSpeed_Parms;

    this->ProcessEvent(pFnSetDownloadSpeed, &SetDownloadSpeed_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.SetChunksHighPriority
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::SetChunksHighPriority() {
    static UFunction* pFnSetChunksHighPriority = NULL;

    if (!pFnSetChunksHighPriority)
        pFnSetChunksHighPriority =
            (UFunction*)UObject::GObjObjects()->Data[27446];

    UOnlineGameDownloadInterface_execSetChunksHighPriority_Parms
        SetChunksHighPriority_Parms;

    this->ProcessEvent(pFnSetChunksHighPriority, &SetChunksHighPriority_Parms,
                       NULL);
};

// Function Engine.OnlineGameDownloadInterface.GetTodoList
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::GetTodoList() {
    static UFunction* pFnGetTodoList = NULL;

    if (!pFnGetTodoList)
        pFnGetTodoList = (UFunction*)UObject::GObjObjects()->Data[27443];

    UOnlineGameDownloadInterface_execGetTodoList_Parms GetTodoList_Parms;

    this->ProcessEvent(pFnGetTodoList, &GetTodoList_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.GetOverallProgress
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::GetOverallProgress() {
    static UFunction* pFnGetOverallProgress = NULL;

    if (!pFnGetOverallProgress)
        pFnGetOverallProgress = (UFunction*)UObject::GObjObjects()->Data[27441];

    UOnlineGameDownloadInterface_execGetOverallProgress_Parms
        GetOverallProgress_Parms;

    this->ProcessEvent(pFnGetOverallProgress, &GetOverallProgress_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.GetChunksProgress
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::GetChunksProgress() {
    static UFunction* pFnGetChunksProgress = NULL;

    if (!pFnGetChunksProgress)
        pFnGetChunksProgress = (UFunction*)UObject::GObjObjects()->Data[27437];

    UOnlineGameDownloadInterface_execGetChunksProgress_Parms
        GetChunksProgress_Parms;

    this->ProcessEvent(pFnGetChunksProgress, &GetChunksProgress_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.GetChunkProgress
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::GetChunkProgress() {
    static UFunction* pFnGetChunkProgress = NULL;

    if (!pFnGetChunkProgress)
        pFnGetChunkProgress = (UFunction*)UObject::GObjObjects()->Data[27434];

    UOnlineGameDownloadInterface_execGetChunkProgress_Parms
        GetChunkProgress_Parms;

    this->ProcessEvent(pFnGetChunkProgress, &GetChunkProgress_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.GetChunksETA
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::GetChunksETA() {
    static UFunction* pFnGetChunksETA = NULL;

    if (!pFnGetChunksETA)
        pFnGetChunksETA = (UFunction*)UObject::GObjObjects()->Data[27430];

    UOnlineGameDownloadInterface_execGetChunksETA_Parms GetChunksETA_Parms;

    this->ProcessEvent(pFnGetChunksETA, &GetChunksETA_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.GetChunkETA
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::GetChunkETA() {
    static UFunction* pFnGetChunkETA = NULL;

    if (!pFnGetChunkETA)
        pFnGetChunkETA = (UFunction*)UObject::GObjObjects()->Data[27427];

    UOnlineGameDownloadInterface_execGetChunkETA_Parms GetChunkETA_Parms;

    this->ProcessEvent(pFnGetChunkETA, &GetChunkETA_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.RefreshGame
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::RefreshGame() {
    static UFunction* pFnRefreshGame = NULL;

    if (!pFnRefreshGame)
        pFnRefreshGame = (UFunction*)UObject::GObjObjects()->Data[27426];

    UOnlineGameDownloadInterface_execRefreshGame_Parms RefreshGame_Parms;

    this->ProcessEvent(pFnRefreshGame, &RefreshGame_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.DoesGameNeedRefresh
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::DoesGameNeedRefresh() {
    static UFunction* pFnDoesGameNeedRefresh = NULL;

    if (!pFnDoesGameNeedRefresh)
        pFnDoesGameNeedRefresh =
            (UFunction*)UObject::GObjObjects()->Data[27424];

    UOnlineGameDownloadInterface_execDoesGameNeedRefresh_Parms
        DoesGameNeedRefresh_Parms;

    this->ProcessEvent(pFnDoesGameNeedRefresh, &DoesGameNeedRefresh_Parms,
                       NULL);
};

// Function Engine.OnlineGameDownloadInterface.AreChunksComplete
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::AreChunksComplete() {
    static UFunction* pFnAreChunksComplete = NULL;

    if (!pFnAreChunksComplete)
        pFnAreChunksComplete = (UFunction*)UObject::GObjObjects()->Data[27419];

    UOnlineGameDownloadInterface_execAreChunksComplete_Parms
        AreChunksComplete_Parms;

    this->ProcessEvent(pFnAreChunksComplete, &AreChunksComplete_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.IsChunkComplete
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::IsChunkComplete() {
    static UFunction* pFnIsChunkComplete = NULL;

    if (!pFnIsChunkComplete)
        pFnIsChunkComplete = (UFunction*)UObject::GObjObjects()->Data[27415];

    UOnlineGameDownloadInterface_execIsChunkComplete_Parms
        IsChunkComplete_Parms;

    this->ProcessEvent(pFnIsChunkComplete, &IsChunkComplete_Parms, NULL);
};

// Function Engine.OnlineGameDownloadInterface.IsGameComplete
// [0x00020000]
// Parameters infos:

void UOnlineGameDownloadInterface::IsGameComplete() {
    static UFunction* pFnIsGameComplete = NULL;

    if (!pFnIsGameComplete)
        pFnIsGameComplete = (UFunction*)UObject::GObjObjects()->Data[27413];

    UOnlineGameDownloadInterface_execIsGameComplete_Parms IsGameComplete_Parms;

    this->ProcessEvent(pFnIsGameComplete, &IsGameComplete_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.GetCurrentPlayersListCount
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::GetCurrentPlayersListCount() {
    static UFunction* pFnGetCurrentPlayersListCount = NULL;

    if (!pFnGetCurrentPlayersListCount)
        pFnGetCurrentPlayersListCount =
            (UFunction*)UObject::GObjObjects()->Data[29181];

    UOnlineRecentPlayersList_execGetCurrentPlayersListCount_Parms
        GetCurrentPlayersListCount_Parms;

    this->ProcessEvent(pFnGetCurrentPlayersListCount,
                       &GetCurrentPlayersListCount_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.SetCurrentPlayersList
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::SetCurrentPlayersList() {
    static UFunction* pFnSetCurrentPlayersList = NULL;

    if (!pFnSetCurrentPlayersList)
        pFnSetCurrentPlayersList =
            (UFunction*)UObject::GObjObjects()->Data[29178];

    UOnlineRecentPlayersList_execSetCurrentPlayersList_Parms
        SetCurrentPlayersList_Parms;

    this->ProcessEvent(pFnSetCurrentPlayersList, &SetCurrentPlayersList_Parms,
                       NULL);
};

// Function Engine.OnlineRecentPlayersList.DumpCurrentPlayers
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::DumpCurrentPlayers() {
    static UFunction* pFnDumpCurrentPlayers = NULL;

    if (!pFnDumpCurrentPlayers)
        pFnDumpCurrentPlayers = (UFunction*)UObject::GObjObjects()->Data[29177];

    UOnlineRecentPlayersList_execDumpCurrentPlayers_Parms
        DumpCurrentPlayers_Parms;

    this->ProcessEvent(pFnDumpCurrentPlayers, &DumpCurrentPlayers_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.DumpPlayersList
// [0x00C20002]
// Parameters infos:

void UOnlineRecentPlayersList::DumpPlayersList() {
    static UFunction* pFnDumpPlayersList = NULL;

    if (!pFnDumpPlayersList)
        pFnDumpPlayersList = (UFunction*)UObject::GObjObjects()->Data[29170];

    UOnlineRecentPlayersList_execDumpPlayersList_Parms DumpPlayersList_Parms;

    this->ProcessEvent(pFnDumpPlayersList, &DumpPlayersList_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.ShowCurrentPlayersList
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::ShowCurrentPlayersList() {
    static UFunction* pFnShowCurrentPlayersList = NULL;

    if (!pFnShowCurrentPlayersList)
        pFnShowCurrentPlayersList =
            (UFunction*)UObject::GObjObjects()->Data[29162];

    UOnlineRecentPlayersList_execShowCurrentPlayersList_Parms
        ShowCurrentPlayersList_Parms;

    this->ProcessEvent(pFnShowCurrentPlayersList, &ShowCurrentPlayersList_Parms,
                       NULL);
};

// Function Engine.OnlineRecentPlayersList.ShowLastPartyPlayerList
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::ShowLastPartyPlayerList() {
    static UFunction* pFnShowLastPartyPlayerList = NULL;

    if (!pFnShowLastPartyPlayerList)
        pFnShowLastPartyPlayerList =
            (UFunction*)UObject::GObjObjects()->Data[29156];

    UOnlineRecentPlayersList_execShowLastPartyPlayerList_Parms
        ShowLastPartyPlayerList_Parms;

    this->ProcessEvent(pFnShowLastPartyPlayerList,
                       &ShowLastPartyPlayerList_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.ShowRecentPartiesPlayerList
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::ShowRecentPartiesPlayerList() {
    static UFunction* pFnShowRecentPartiesPlayerList = NULL;

    if (!pFnShowRecentPartiesPlayerList)
        pFnShowRecentPartiesPlayerList =
            (UFunction*)UObject::GObjObjects()->Data[29148];

    UOnlineRecentPlayersList_execShowRecentPartiesPlayerList_Parms
        ShowRecentPartiesPlayerList_Parms;

    this->ProcessEvent(pFnShowRecentPartiesPlayerList,
                       &ShowRecentPartiesPlayerList_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.ShowRecentPlayerList
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::ShowRecentPlayerList() {
    static UFunction* pFnShowRecentPlayerList = NULL;

    if (!pFnShowRecentPlayerList)
        pFnShowRecentPlayerList =
            (UFunction*)UObject::GObjObjects()->Data[29142];

    UOnlineRecentPlayersList_execShowRecentPlayerList_Parms
        ShowRecentPlayerList_Parms;

    this->ProcessEvent(pFnShowRecentPlayerList, &ShowRecentPlayerList_Parms,
                       NULL);
};

// Function Engine.OnlineRecentPlayersList.SetLastParty
// [0x00420002]
// Parameters infos:

void UOnlineRecentPlayersList::SetLastParty() {
    static UFunction* pFnSetLastParty = NULL;

    if (!pFnSetLastParty)
        pFnSetLastParty = (UFunction*)UObject::GObjObjects()->Data[29138];

    UOnlineRecentPlayersList_execSetLastParty_Parms SetLastParty_Parms;

    this->ProcessEvent(pFnSetLastParty, &SetLastParty_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.GetTeamForCurrentPlayer
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::GetTeamForCurrentPlayer() {
    static UFunction* pFnGetTeamForCurrentPlayer = NULL;

    if (!pFnGetTeamForCurrentPlayer)
        pFnGetTeamForCurrentPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29134];

    UOnlineRecentPlayersList_execGetTeamForCurrentPlayer_Parms
        GetTeamForCurrentPlayer_Parms;

    this->ProcessEvent(pFnGetTeamForCurrentPlayer,
                       &GetTeamForCurrentPlayer_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.GetSkillForCurrentPlayer
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::GetSkillForCurrentPlayer() {
    static UFunction* pFnGetSkillForCurrentPlayer = NULL;

    if (!pFnGetSkillForCurrentPlayer)
        pFnGetSkillForCurrentPlayer =
            (UFunction*)UObject::GObjObjects()->Data[29130];

    UOnlineRecentPlayersList_execGetSkillForCurrentPlayer_Parms
        GetSkillForCurrentPlayer_Parms;

    this->ProcessEvent(pFnGetSkillForCurrentPlayer,
                       &GetSkillForCurrentPlayer_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.GetPlayersFromCurrentPlayers
// [0x00420002]
// Parameters infos:

void UOnlineRecentPlayersList::GetPlayersFromCurrentPlayers() {
    static UFunction* pFnGetPlayersFromCurrentPlayers = NULL;

    if (!pFnGetPlayersFromCurrentPlayers)
        pFnGetPlayersFromCurrentPlayers =
            (UFunction*)UObject::GObjObjects()->Data[29126];

    UOnlineRecentPlayersList_execGetPlayersFromCurrentPlayers_Parms
        GetPlayersFromCurrentPlayers_Parms;

    this->ProcessEvent(pFnGetPlayersFromCurrentPlayers,
                       &GetPlayersFromCurrentPlayers_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.GetPlayersFromRecentParties
// [0x00420002]
// Parameters infos:

void UOnlineRecentPlayersList::GetPlayersFromRecentParties() {
    static UFunction* pFnGetPlayersFromRecentParties = NULL;

    if (!pFnGetPlayersFromRecentParties)
        pFnGetPlayersFromRecentParties =
            (UFunction*)UObject::GObjObjects()->Data[29120];

    UOnlineRecentPlayersList_execGetPlayersFromRecentParties_Parms
        GetPlayersFromRecentParties_Parms;

    this->ProcessEvent(pFnGetPlayersFromRecentParties,
                       &GetPlayersFromRecentParties_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.ClearRecentParties
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::ClearRecentParties() {
    static UFunction* pFnClearRecentParties = NULL;

    if (!pFnClearRecentParties)
        pFnClearRecentParties = (UFunction*)UObject::GObjObjects()->Data[29119];

    UOnlineRecentPlayersList_execClearRecentParties_Parms
        ClearRecentParties_Parms;

    this->ProcessEvent(pFnClearRecentParties, &ClearRecentParties_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.AddPartyToRecentParties
// [0x00420002]
// Parameters infos:

void UOnlineRecentPlayersList::AddPartyToRecentParties() {
    static UFunction* pFnAddPartyToRecentParties = NULL;

    if (!pFnAddPartyToRecentParties)
        pFnAddPartyToRecentParties =
            (UFunction*)UObject::GObjObjects()->Data[29114];

    UOnlineRecentPlayersList_execAddPartyToRecentParties_Parms
        AddPartyToRecentParties_Parms;

    this->ProcessEvent(pFnAddPartyToRecentParties,
                       &AddPartyToRecentParties_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.ClearRecentPlayers
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::ClearRecentPlayers() {
    static UFunction* pFnClearRecentPlayers = NULL;

    if (!pFnClearRecentPlayers)
        pFnClearRecentPlayers = (UFunction*)UObject::GObjObjects()->Data[29113];

    UOnlineRecentPlayersList_execClearRecentPlayers_Parms
        ClearRecentPlayers_Parms;

    this->ProcessEvent(pFnClearRecentPlayers, &ClearRecentPlayers_Parms, NULL);
};

// Function Engine.OnlineRecentPlayersList.AddPlayerToRecentPlayers
// [0x00020002]
// Parameters infos:

void UOnlineRecentPlayersList::AddPlayerToRecentPlayers() {
    static UFunction* pFnAddPlayerToRecentPlayers = NULL;

    if (!pFnAddPlayerToRecentPlayers)
        pFnAddPlayerToRecentPlayers =
            (UFunction*)UObject::GObjObjects()->Data[29110];

    UOnlineRecentPlayersList_execAddPlayerToRecentPlayers_Parms
        AddPlayerToRecentPlayers_Parms;

    this->ProcessEvent(pFnAddPlayerToRecentPlayers,
                       &AddPlayerToRecentPlayers_Parms, NULL);
};

// Function Engine.OnlineSuppliedUIInterface.ShowMatchmakingUI
// [0x00020000]
// Parameters infos:

void UOnlineSuppliedUIInterface::ShowMatchmakingUI() {
    static UFunction* pFnShowMatchmakingUI = NULL;

    if (!pFnShowMatchmakingUI)
        pFnShowMatchmakingUI = (UFunction*)UObject::GObjObjects()->Data[29450];

    UOnlineSuppliedUIInterface_execShowMatchmakingUI_Parms
        ShowMatchmakingUI_Parms;

    this->ProcessEvent(pFnShowMatchmakingUI, &ShowMatchmakingUI_Parms, NULL);
};

// Function
// Engine.OnlineSuppliedUIInterface.ClearShowOnlineStatsUICompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSuppliedUIInterface::ClearShowOnlineStatsUICompleteDelegate() {
    static UFunction* pFnClearShowOnlineStatsUICompleteDelegate = NULL;

    if (!pFnClearShowOnlineStatsUICompleteDelegate)
        pFnClearShowOnlineStatsUICompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29448];

    UOnlineSuppliedUIInterface_execClearShowOnlineStatsUICompleteDelegate_Parms
        ClearShowOnlineStatsUICompleteDelegate_Parms;

    this->ProcessEvent(pFnClearShowOnlineStatsUICompleteDelegate,
                       &ClearShowOnlineStatsUICompleteDelegate_Parms, NULL);
};

// Function
// Engine.OnlineSuppliedUIInterface.AddShowOnlineStatsUICompleteDelegate
// [0x00020000]
// Parameters infos:

void UOnlineSuppliedUIInterface::AddShowOnlineStatsUICompleteDelegate() {
    static UFunction* pFnAddShowOnlineStatsUICompleteDelegate = NULL;

    if (!pFnAddShowOnlineStatsUICompleteDelegate)
        pFnAddShowOnlineStatsUICompleteDelegate =
            (UFunction*)UObject::GObjObjects()->Data[29446];

    UOnlineSuppliedUIInterface_execAddShowOnlineStatsUICompleteDelegate_Parms
        AddShowOnlineStatsUICompleteDelegate_Parms;

    this->ProcessEvent(pFnAddShowOnlineStatsUICompleteDelegate,
                       &AddShowOnlineStatsUICompleteDelegate_Parms, NULL);
};

// Function Engine.OnlineSuppliedUIInterface.ShowOnlineStatsUI
// [0x00420000]
// Parameters infos:

void UOnlineSuppliedUIInterface::ShowOnlineStatsUI() {
    static UFunction* pFnShowOnlineStatsUI = NULL;

    if (!pFnShowOnlineStatsUI)
        pFnShowOnlineStatsUI = (UFunction*)UObject::GObjObjects()->Data[29441];

    UOnlineSuppliedUIInterface_execShowOnlineStatsUI_Parms
        ShowOnlineStatsUI_Parms;

    this->ProcessEvent(pFnShowOnlineStatsUI, &ShowOnlineStatsUI_Parms, NULL);
};

// Function Engine.OnlineSuppliedUIInterface.OnShowOnlineStatsUIComplete
// [0x00120000]
// Parameters infos:

void UOnlineSuppliedUIInterface::OnShowOnlineStatsUIComplete() {
    static UFunction* pFnOnShowOnlineStatsUIComplete = NULL;

    if (!pFnOnShowOnlineStatsUIComplete)
        pFnOnShowOnlineStatsUIComplete =
            (UFunction*)UObject::GObjObjects()->Data[29440];

    UOnlineSuppliedUIInterface_execOnShowOnlineStatsUIComplete_Parms
        OnShowOnlineStatsUIComplete_Parms;

    this->ProcessEvent(pFnOnShowOnlineStatsUIComplete,
                       &OnShowOnlineStatsUIComplete_Parms, NULL);
};

// Function Engine.PathNode_Dynamic.GetDebugAbbrev
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void APathNode_Dynamic::eventGetDebugAbbrev() {
    static UFunction* pFnGetDebugAbbrev = NULL;

    if (!pFnGetDebugAbbrev)
        pFnGetDebugAbbrev = (UFunction*)UObject::GObjObjects()->Data[30820];

    APathNode_Dynamic_eventGetDebugAbbrev_Parms GetDebugAbbrev_Parms;

    this->ProcessEvent(pFnGetDebugAbbrev, &GetDebugAbbrev_Parms, NULL);
};

// Function Engine.ReverbVolumeToggleable.OnToggle
// [0x00020102]
// Parameters infos:

void AReverbVolumeToggleable::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[32534];

    AReverbVolumeToggleable_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.SeqAct_MITV_Activate.Activated
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void USeqAct_MITV_Activate::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[32973];

    USeqAct_MITV_Activate_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_MITV_Activate.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_MITV_Activate::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[32971];

    USeqAct_MITV_Activate_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetMatInstVectorParam.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetMatInstVectorParam::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33116];

    USeqAct_SetMatInstVectorParam_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqAct_SetVector.Activated
// [0x00820802] ( FUNC_Event )
// Parameters infos:

void USeqAct_SetVector::eventActivated() {
    static UFunction* pFnActivated = NULL;

    if (!pFnActivated)
        pFnActivated = (UFunction*)UObject::GObjObjects()->Data[33148];

    USeqAct_SetVector_eventActivated_Parms Activated_Parms;

    this->ProcessEvent(pFnActivated, &Activated_Parms, NULL);
};

// Function Engine.SeqAct_UpdatePhysBonesFromAnim.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqAct_UpdatePhysBonesFromAnim::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33262];

    USeqAct_UpdatePhysBonesFromAnim_eventGetObjClassVersion_Parms
        GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.SeqEvent_LOS.GetObjClassVersion
// [0x00022802] ( FUNC_Event )
// Parameters infos:

void USeqEvent_LOS::eventGetObjClassVersion() {
    static UFunction* pFnGetObjClassVersion = NULL;

    if (!pFnGetObjClassVersion)
        pFnGetObjClassVersion = (UFunction*)UObject::GObjObjects()->Data[33371];

    USeqEvent_LOS_eventGetObjClassVersion_Parms GetObjClassVersion_Parms;

    this->ProcessEvent(pFnGetObjClassVersion, &GetObjClassVersion_Parms, NULL);
};

// Function Engine.Trigger_LOS.Tick
// [0x00820902] ( FUNC_Event )
// Parameters infos:

void ATrigger_LOS::eventTick() {
    static UFunction* pFnTick = NULL;

    if (!pFnTick) pFnTick = (UFunction*)UObject::GObjObjects()->Data[35475];

    ATrigger_LOS_eventTick_Parms Tick_Parms;

    this->ProcessEvent(pFnTick, &Tick_Parms, NULL);
};

// Function Engine.TriggeredPath.SuggestMovePreparation
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATriggeredPath::eventSuggestMovePreparation() {
    static UFunction* pFnSuggestMovePreparation = NULL;

    if (!pFnSuggestMovePreparation)
        pFnSuggestMovePreparation =
            (UFunction*)UObject::GObjObjects()->Data[35501];

    ATriggeredPath_eventSuggestMovePreparation_Parms
        SuggestMovePreparation_Parms;

    this->ProcessEvent(pFnSuggestMovePreparation, &SuggestMovePreparation_Parms,
                       NULL);
};

// Function Engine.TriggeredPath.SpecialHandling
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATriggeredPath::eventSpecialHandling() {
    static UFunction* pFnSpecialHandling = NULL;

    if (!pFnSpecialHandling)
        pFnSpecialHandling = (UFunction*)UObject::GObjObjects()->Data[35497];

    ATriggeredPath_eventSpecialHandling_Parms SpecialHandling_Parms;

    this->ProcessEvent(pFnSpecialHandling, &SpecialHandling_Parms, NULL);
};

// Function Engine.TriggeredPath.OnToggle
// [0x00020002]
// Parameters infos:

void ATriggeredPath::OnToggle() {
    static UFunction* pFnOnToggle = NULL;

    if (!pFnOnToggle)
        pFnOnToggle = (UFunction*)UObject::GObjObjects()->Data[35495];

    ATriggeredPath_execOnToggle_Parms OnToggle_Parms;

    this->ProcessEvent(pFnOnToggle, &OnToggle_Parms, NULL);
};

// Function Engine.TriggerStreamingLevel.Touch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void ATriggerStreamingLevel::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[35514];

    ATriggerStreamingLevel_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

// Function
// Engine.UserCloudFileCloudSaveSystemDataBlobStore.OnDeleteUserFileComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::OnDeleteUserFileComplete() {
    static UFunction* pFnOnDeleteUserFileComplete = NULL;

    if (!pFnOnDeleteUserFileComplete)
        pFnOnDeleteUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[36636];

    UUserCloudFileCloudSaveSystemDataBlobStore_execOnDeleteUserFileComplete_Parms
        OnDeleteUserFileComplete_Parms;

    this->ProcessEvent(pFnOnDeleteUserFileComplete,
                       &OnDeleteUserFileComplete_Parms, NULL);
};

// Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.DeleteDataBlob
// [0x00020002]
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::DeleteDataBlob() {
    static UFunction* pFnDeleteDataBlob = NULL;

    if (!pFnDeleteDataBlob)
        pFnDeleteDataBlob = (UFunction*)UObject::GObjObjects()->Data[36630];

    UUserCloudFileCloudSaveSystemDataBlobStore_execDeleteDataBlob_Parms
        DeleteDataBlob_Parms;

    this->ProcessEvent(pFnDeleteDataBlob, &DeleteDataBlob_Parms, NULL);
};

// Function
// Engine.UserCloudFileCloudSaveSystemDataBlobStore.OnWriteUserFileComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::OnWriteUserFileComplete() {
    static UFunction* pFnOnWriteUserFileComplete = NULL;

    if (!pFnOnWriteUserFileComplete)
        pFnOnWriteUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[36625];

    UUserCloudFileCloudSaveSystemDataBlobStore_execOnWriteUserFileComplete_Parms
        OnWriteUserFileComplete_Parms;

    this->ProcessEvent(pFnOnWriteUserFileComplete,
                       &OnWriteUserFileComplete_Parms, NULL);
};

// Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.SetDataBlob
// [0x00420002]
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::SetDataBlob() {
    static UFunction* pFnSetDataBlob = NULL;

    if (!pFnSetDataBlob)
        pFnSetDataBlob = (UFunction*)UObject::GObjObjects()->Data[36617];

    UUserCloudFileCloudSaveSystemDataBlobStore_execSetDataBlob_Parms
        SetDataBlob_Parms;

    this->ProcessEvent(pFnSetDataBlob, &SetDataBlob_Parms, NULL);
};

// Function
// Engine.UserCloudFileCloudSaveSystemDataBlobStore.OnReadUserFileComplete
// [0x00040003] ( FUNC_Final )
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::OnReadUserFileComplete() {
    static UFunction* pFnOnReadUserFileComplete = NULL;

    if (!pFnOnReadUserFileComplete)
        pFnOnReadUserFileComplete =
            (UFunction*)UObject::GObjObjects()->Data[36609];

    UUserCloudFileCloudSaveSystemDataBlobStore_execOnReadUserFileComplete_Parms
        OnReadUserFileComplete_Parms;

    this->ProcessEvent(pFnOnReadUserFileComplete, &OnReadUserFileComplete_Parms,
                       NULL);
};

// Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.GetDataBlob
// [0x00020002]
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::GetDataBlob() {
    static UFunction* pFnGetDataBlob = NULL;

    if (!pFnGetDataBlob)
        pFnGetDataBlob = (UFunction*)UObject::GObjObjects()->Data[36601];

    UUserCloudFileCloudSaveSystemDataBlobStore_execGetDataBlob_Parms
        GetDataBlob_Parms;

    this->ProcessEvent(pFnGetDataBlob, &GetDataBlob_Parms, NULL);
};

// Function Engine.UserCloudFileCloudSaveSystemDataBlobStore.Init
// [0x00020003] ( FUNC_Final )
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::Init() {
    static UFunction* pFnInit = NULL;

    if (!pFnInit) pFnInit = (UFunction*)UObject::GObjObjects()->Data[36599];

    UUserCloudFileCloudSaveSystemDataBlobStore_execInit_Parms Init_Parms;

    this->ProcessEvent(pFnInit, &Init_Parms, NULL);
};

// Function
// Engine.UserCloudFileCloudSaveSystemDataBlobStore.DeleteDataBlobCallbackDelegate
// [0x00140001] ( FUNC_Final )
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::
    DeleteDataBlobCallbackDelegate() {
    static UFunction* pFnDeleteDataBlobCallbackDelegate = NULL;

    if (!pFnDeleteDataBlobCallbackDelegate)
        pFnDeleteDataBlobCallbackDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36594];

    UUserCloudFileCloudSaveSystemDataBlobStore_execDeleteDataBlobCallbackDelegate_Parms
        DeleteDataBlobCallbackDelegate_Parms;

    this->ProcessEvent(pFnDeleteDataBlobCallbackDelegate,
                       &DeleteDataBlobCallbackDelegate_Parms, NULL);
};

// Function
// Engine.UserCloudFileCloudSaveSystemDataBlobStore.SetDataBlobCallbackDelegate
// [0x00120000]
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::SetDataBlobCallbackDelegate() {
    static UFunction* pFnSetDataBlobCallbackDelegate = NULL;

    if (!pFnSetDataBlobCallbackDelegate)
        pFnSetDataBlobCallbackDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36589];

    UUserCloudFileCloudSaveSystemDataBlobStore_execSetDataBlobCallbackDelegate_Parms
        SetDataBlobCallbackDelegate_Parms;

    this->ProcessEvent(pFnSetDataBlobCallbackDelegate,
                       &SetDataBlobCallbackDelegate_Parms, NULL);
};

// Function
// Engine.UserCloudFileCloudSaveSystemDataBlobStore.GetDataBlobCallbackDelegate
// [0x00520000]
// Parameters infos:

void UUserCloudFileCloudSaveSystemDataBlobStore::GetDataBlobCallbackDelegate() {
    static UFunction* pFnGetDataBlobCallbackDelegate = NULL;

    if (!pFnGetDataBlobCallbackDelegate)
        pFnGetDataBlobCallbackDelegate =
            (UFunction*)UObject::GObjObjects()->Data[36582];

    UUserCloudFileCloudSaveSystemDataBlobStore_execGetDataBlobCallbackDelegate_Parms
        GetDataBlobCallbackDelegate_Parms;

    this->ProcessEvent(pFnGetDataBlobCallbackDelegate,
                       &GetDataBlobCallbackDelegate_Parms, NULL);
};

// Function Engine.WaterVolume.PlayExitSplash
// [0x00020002]
// Parameters infos:

void AWaterVolume::PlayExitSplash() {
    static UFunction* pFnPlayExitSplash = NULL;

    if (!pFnPlayExitSplash)
        pFnPlayExitSplash = (UFunction*)UObject::GObjObjects()->Data[36723];

    AWaterVolume_execPlayExitSplash_Parms PlayExitSplash_Parms;

    this->ProcessEvent(pFnPlayExitSplash, &PlayExitSplash_Parms, NULL);
};

// Function Engine.WaterVolume.UnTouch
// [0x00020802] ( FUNC_Event )
// Parameters infos:

void AWaterVolume::eventUnTouch() {
    static UFunction* pFnUnTouch = NULL;

    if (!pFnUnTouch)
        pFnUnTouch = (UFunction*)UObject::GObjObjects()->Data[36721];

    AWaterVolume_eventUnTouch_Parms UnTouch_Parms;

    this->ProcessEvent(pFnUnTouch, &UnTouch_Parms, NULL);
};

// Function Engine.WaterVolume.PlayEntrySplash
// [0x00020002]
// Parameters infos:

void AWaterVolume::PlayEntrySplash() {
    static UFunction* pFnPlayEntrySplash = NULL;

    if (!pFnPlayEntrySplash)
        pFnPlayEntrySplash = (UFunction*)UObject::GObjObjects()->Data[36719];

    AWaterVolume_execPlayEntrySplash_Parms PlayEntrySplash_Parms;

    this->ProcessEvent(pFnPlayEntrySplash, &PlayEntrySplash_Parms, NULL);
};

// Function Engine.WaterVolume.Touch
// [0x00020902] ( FUNC_Event )
// Parameters infos:

void AWaterVolume::eventTouch() {
    static UFunction* pFnTouch = NULL;

    if (!pFnTouch) pFnTouch = (UFunction*)UObject::GObjObjects()->Data[36714];

    AWaterVolume_eventTouch_Parms Touch_Parms;

    this->ProcessEvent(pFnTouch, &Touch_Parms, NULL);
};

#ifdef _MSC_VER
#pragma pack(pop)
#endif